2023-08-18 14:20:56+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-18 14:20:56+0530 - sLogger - DEBUG - process_main_pages started
2023-08-18 14:20:57+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-18 14:20:57+0530 - sLogger - DEBUG - start_refactoring started
2023-08-18 14:20:57+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-18 14:20:57+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-18 14:20:57+0530 - sLogger - DEBUG - start_refactoring started
2023-08-18 14:20:57+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-18 14:20:57+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-18 14:20:57+0530 - sLogger - DEBUG - start_refactoring started
2023-08-18 14:20:57+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-18 14:20:57+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-18 14:20:57+0530 - sLogger - DEBUG - set_section_details started
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equityandliabilities', 38), ('equity liabilities', 35), ('equityliabilities', 34), ('noncurrentassets', 33), ('assets', 31), ('currentassets', 30), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrentliabilities', 24), ('noncurrent liabilities', 23), ('liabilities', 22), ('currentliabilities', 20)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentassets | score 37
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentliabilities | score 35
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equityandliabilities | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Other investments including derivatives | [('noncurrent liabilities', 36), ('current assets', 32), ('noncurrent assets', 32), ('noncurrentassets', 30), ('equity and liabilities', 29), ('equityandliabilities', 28), ('currentassets', 27), ('noncurrentliabilities', 27), ('equity', 26), ('current liabilities', 26), ('equity liabilities', 26), ('currentliabilities', 24), ('equityliabilities', 24), ('liabilities', 19), ('assets', 13)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD current assets | score 37
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD currentassets | score 34
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD current liabilities | score 48
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD currentliabilities | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrent assets | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrentassets | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrent liabilities | score 45
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD non current assets | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD non current liabilities | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrentliabilities | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrentassets | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrentliabilities | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD equity and liabilities | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD equity | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD equityandliabilities | score 45
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Tax related receivables | [('current liabilities', 40), ('currentassets', 36), ('current assets', 34), ('equity liabilities', 34), ('noncurrentassets', 32), ('currentliabilities', 32), ('equity and liabilities', 30), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equityliabilities', 25), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('assets', 19), ('liabilities', 18)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD current assets | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD currentassets | score 34
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD current liabilities | score 48
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD currentliabilities | score 44
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD noncurrent assets | score 35
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD noncurrentassets | score 31
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD noncurrent liabilities | score 44
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD non current assets | score 39
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD non current liabilities | score 48
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD noncurrentliabilities | score 41
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD noncurrentassets | score 31
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD noncurrentliabilities | score 41
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD equity and liabilities | score 49
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD equity | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD equityandliabilities | score 42
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Prepayment | [('currentassets', 33), ('current liabilities', 30), ('noncurrentassets', 29), ('equityliabilities', 29), ('currentliabilities', 27), ('equityandliabilities', 24), ('noncurrentliabilities', 22), ('current assets', 21), ('equity liabilities', 21), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equity and liabilities', 17), ('noncurrent assets', 11), ('noncurrent liabilities', 10)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD current assets | score 42
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD currentassets | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD current liabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD currentliabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD noncurrent assets | score 37
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD noncurrentassets | score 45
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD non current assets | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD non current liabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD noncurrentliabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD noncurrentassets | score 45
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD noncurrentliabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD equity and liabilities | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD equity | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD equityandliabilities | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('currentliabilities', 57), ('currentassets', 52), ('noncurrentliabilities', 52), ('noncurrentassets', 47), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentassets | score 83
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentliabilities | score 53
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equityandliabilities | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Other investments including derivatives | [('noncurrent liabilities', 36), ('current assets', 32), ('noncurrent assets', 32), ('noncurrentassets', 30), ('equity and liabilities', 29), ('equityandliabilities', 28), ('currentassets', 27), ('noncurrentliabilities', 27), ('equity', 26), ('current liabilities', 26), ('equity liabilities', 26), ('currentliabilities', 24), ('equityliabilities', 24), ('liabilities', 19), ('assets', 13)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD current assets | score 37
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD currentassets | score 34
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD current liabilities | score 48
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD currentliabilities | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrent assets | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrentassets | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrent liabilities | score 45
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD non current assets | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD non current liabilities | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrentliabilities | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrentassets | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrentliabilities | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD equity and liabilities | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD equity | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD equityandliabilities | score 45
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Investments in equity accounted investees | [('equity and liabilities', 52), ('equity liabilities', 43), ('equityandliabilities', 35), ('currentassets', 34), ('equity', 34), ('current assets', 33), ('current liabilities', 33), ('noncurrentassets', 32), ('currentliabilities', 32), ('equityliabilities', 32), ('noncurrent assets', 29), ('noncurrentliabilities', 29), ('assets', 24), ('noncurrent liabilities', 23), ('liabilities', 11)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD current assets | score 39
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD currentassets | score 34
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD current liabilities | score 42
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD currentliabilities | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD noncurrent assets | score 42
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD noncurrentassets | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD noncurrent liabilities | score 37
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD non current assets | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD non current liabilities | score 39
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD noncurrentliabilities | score 34
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD noncurrentassets | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD noncurrentliabilities | score 34
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD equity and liabilities | score 86
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD equity | score 90
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD equityandliabilities | score 47
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('equityandliabilities', 23), ('noncurrent liabilities', 21), ('equity', 19), ('currentliabilities', 17), ('equityliabilities', 17), ('noncurrentliabilities', 15), ('liabilities', 10)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentassets | score 62
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentliabilities | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equityandliabilities | score 31
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Intangible assets | [('current assets', 64), ('noncurrent assets', 64), ('assets', 59), ('equityandliabilities', 43), ('currentassets', 42), ('equity and liabilities', 41), ('equity liabilities', 40), ('current liabilities', 38), ('noncurrentassets', 37), ('equity', 33), ('noncurrent liabilities', 31), ('equityliabilities', 30), ('currentliabilities', 29), ('noncurrentliabilities', 25), ('liabilities', 22)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current assets | score 58
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD currentassets | score 53
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current liabilities | score 42
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD currentliabilities | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent assets | score 59
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentassets | score 55
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current assets | score 57
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current liabilities | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentliabilities | score 37
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentassets | score 55
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentliabilities | score 37
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity and liabilities | score 46
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equityandliabilities | score 49
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrentliabilities', 58), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('currentliabilities', 43), ('assets', 42), ('current liabilities', 42), ('currentassets', 39), ('equity and liabilities', 33), ('equityandliabilities', 33), ('equity liabilities', 31), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentassets | score 83
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('currentassets', 43), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equityliabilities', 32), ('currentliabilities', 30), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentassets | score 56
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentliabilities | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equityandliabilities | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equityandliabilities', 35), ('equity', 33), ('equityliabilities', 29), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11), ('currentassets', 11), ('noncurrentassets', 10)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentassets | score 25
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentliabilities | score 90
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equityandliabilities | score 90
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Borrowings | [('noncurrent liabilities', 40), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrentassets', 29), ('currentliabilities', 27), ('currentassets', 22), ('current assets', 21), ('current liabilities', 20), ('liabilities', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('assets', 0), ('equity', 0), ('equityandliabilities', 0), ('equityliabilities', 0)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current assets | score 33
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD currentassets | score 35
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current liabilities | score 28
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD currentliabilities | score 29
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent assets | score 37
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentassets | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current assets | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current liabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentliabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentassets | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentliabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity and liabilities | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity | score 15
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equityandliabilities | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Tax related payables | [('equity and liabilities', 36), ('current assets', 34), ('current liabilities', 33), ('noncurrent liabilities', 33), ('assets', 29), ('currentassets', 29), ('noncurrent assets', 28), ('equity liabilities', 28), ('liabilities', 27), ('noncurrentassets', 26), ('currentliabilities', 24), ('equityandliabilities', 22), ('noncurrentliabilities', 21), ('equity', 18), ('equityliabilities', 17)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD current assets | score 41
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD currentassets | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD current liabilities | score 46
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD currentliabilities | score 42
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD noncurrent assets | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD noncurrentassets | score 33
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD noncurrent liabilities | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD non current assets | score 42
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD non current liabilities | score 47
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD noncurrentliabilities | score 39
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD noncurrentassets | score 33
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD noncurrentliabilities | score 39
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD equity and liabilities | score 48
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD equity | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD equityandliabilities | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('currentliabilities', 62), ('currentassets', 56), ('noncurrentliabilities', 56), ('equity liabilities', 55), ('noncurrentassets', 51), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('equityandliabilities', 32), ('equityliabilities', 29), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentassets | score 56
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentliabilities | score 84
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equityandliabilities | score 62
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Borrowings | [('noncurrent liabilities', 40), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrentassets', 29), ('currentliabilities', 27), ('currentassets', 22), ('current assets', 21), ('current liabilities', 20), ('liabilities', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('assets', 0), ('equity', 0), ('equityandliabilities', 0), ('equityliabilities', 0)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current assets | score 33
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD currentassets | score 35
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current liabilities | score 28
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD currentliabilities | score 29
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent assets | score 37
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentassets | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current assets | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current liabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentliabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentassets | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentliabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity and liabilities | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity | score 15
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equityandliabilities | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrentliabilities', 56), ('noncurrent assets', 55), ('noncurrentassets', 51), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('currentliabilities', 41), ('currentassets', 38), ('equity liabilities', 36), ('equity and liabilities', 32), ('equityandliabilities', 26), ('equityliabilities', 21), ('assets', 16), ('equity', 15)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentassets | score 56
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentliabilities | score 85
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equityandliabilities | score 58
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('currentassets', 48), ('noncurrentassets', 42), ('currentliabilities', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equityliabilities', 24), ('liabilities', 13)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentassets | score 70
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentliabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equityandliabilities | score 33
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentassets | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentliabilities | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equityandliabilities | score 90
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Share capital | [('current assets', 42), ('assets', 38), ('equity and liabilities', 36), ('currentassets', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('current liabilities', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('equityandliabilities', 27), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('equityliabilities', 21)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD current assets | score 37
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD currentassets | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD current liabilities | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD currentliabilities | score 32
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD noncurrent assets | score 33
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD noncurrentassets | score 32
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD noncurrent liabilities | score 41
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD non current assets | score 32
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD non current liabilities | score 41
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD noncurrentliabilities | score 34
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD noncurrentassets | score 32
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD noncurrentliabilities | score 34
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD equity and liabilities | score 34
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD equity | score 32
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD equityandliabilities | score 32
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Retained earnings | [('equity and liabilities', 50), ('currentliabilities', 50), ('current liabilities', 48), ('currentassets', 43), ('noncurrentliabilities', 43), ('current assets', 42), ('assets', 38), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equity', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('equityliabilities', 32), ('liabilities', 24), ('noncurrent liabilities', 24)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentassets | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 39
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentliabilities | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 35
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 46
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equityandliabilities | score 43
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Reserves | [('currentassets', 44), ('noncurrentassets', 38), ('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD currentassets | score 48
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD currentliabilities | score 31
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentassets | score 45
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentliabilities | score 28
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentassets | score 45
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentliabilities | score 28
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equityandliabilities | score 22
2023-08-18 14:20:57+0530 - sLogger - DEBUG - Total Equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD current assets | score 31
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD currentassets | score 32
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD current liabilities | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD currentliabilities | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD noncurrent assets | score 34
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD noncurrentassets | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD noncurrent liabilities | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD non current assets | score 33
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD non current liabilities | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD noncurrentliabilities | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD noncurrentassets | score 36
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD noncurrentliabilities | score 38
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD equity and liabilities | score 86
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD equity | score 90
2023-08-18 14:20:57+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD equityandliabilities | score 57
2023-08-18 14:20:57+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-18 14:20:57+0530 - sLogger - DEBUG - set_section_details started
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash Flows From Operating Activities | operating cash flow before working capital changes
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income tax refunded/(paid) | adiustments for movements in working capital
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from operating activities | adjustments for increase decrease in operating assets
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash Flows From Investing Activities | operating cash flow before working capital changes
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments for property, plant and equipment | operating profit before changes in assets and liabilities
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment for intangibles | operating profit before working capital changes
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividends received | movements in working capital
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from investing activities | adjustments for increase decrease in operating assets
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash Flows From Financing Activities | operating cash flow before working capital changes
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment of loan by related parties | changes in operating assets and liabilities
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment of loan to related party | changes in operating assets and liabilities
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from loan with related parties | operating profit before working capital changes
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment of lease liabilities | changes in operating assets and liabilities
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividends paid | changes in assets liabilities
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from/(used in) financing activities | operating cash flow before working capital changes
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase//decrease) in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the beginning of the financial year | changes in operating assets and liabilities
2023-08-18 14:20:57+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the end of the financial year | changes in operating assets and liabilities
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '13.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '13.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '14.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '14.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '15.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '18.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '18.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '25.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '25.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '16.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '19.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '21.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '20.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '22.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '22.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '23.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '23.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '24.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '24.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '26.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '8.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '9.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '9.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '10.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '11.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '12.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:20:58+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '12.'
2023-08-18 14:20:58+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-18 14:44:33+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-18 14:44:33+0530 - sLogger - DEBUG - process_main_pages started
2023-08-18 14:44:33+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-18 14:44:33+0530 - sLogger - DEBUG - start_refactoring started
2023-08-18 14:44:33+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-18 14:44:33+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-18 14:44:33+0530 - sLogger - DEBUG - start_refactoring started
2023-08-18 14:44:33+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-18 14:44:33+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-18 14:44:33+0530 - sLogger - DEBUG - start_refactoring started
2023-08-18 14:44:33+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-18 14:44:33+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-18 14:44:33+0530 - sLogger - DEBUG - set_section_details started
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equityandliabilities', 38), ('equity liabilities', 35), ('equityliabilities', 34), ('noncurrentassets', 33), ('assets', 31), ('currentassets', 30), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrentliabilities', 24), ('noncurrent liabilities', 23), ('liabilities', 22), ('currentliabilities', 20)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentassets | score 37
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentliabilities | score 35
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equityandliabilities | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Other investments including derivatives | [('noncurrent liabilities', 36), ('current assets', 32), ('noncurrent assets', 32), ('noncurrentassets', 30), ('equity and liabilities', 29), ('equityandliabilities', 28), ('currentassets', 27), ('noncurrentliabilities', 27), ('equity', 26), ('current liabilities', 26), ('equity liabilities', 26), ('currentliabilities', 24), ('equityliabilities', 24), ('liabilities', 19), ('assets', 13)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD current assets | score 37
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD currentassets | score 34
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD current liabilities | score 48
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD currentliabilities | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrent assets | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrentassets | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrent liabilities | score 45
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD non current assets | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD non current liabilities | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrentliabilities | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrentassets | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrentliabilities | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD equity and liabilities | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD equity | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD equityandliabilities | score 45
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Tax related receivables | [('current liabilities', 40), ('currentassets', 36), ('current assets', 34), ('equity liabilities', 34), ('noncurrentassets', 32), ('currentliabilities', 32), ('equity and liabilities', 30), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equityliabilities', 25), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('assets', 19), ('liabilities', 18)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD current assets | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD currentassets | score 34
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD current liabilities | score 48
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD currentliabilities | score 44
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD noncurrent assets | score 35
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD noncurrentassets | score 31
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD noncurrent liabilities | score 44
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD non current assets | score 39
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD non current liabilities | score 48
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD noncurrentliabilities | score 41
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD noncurrentassets | score 31
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD noncurrentliabilities | score 41
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD equity and liabilities | score 49
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD equity | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related receivables | MATCH WORD equityandliabilities | score 42
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Prepayment | [('currentassets', 33), ('current liabilities', 30), ('noncurrentassets', 29), ('equityliabilities', 29), ('currentliabilities', 27), ('equityandliabilities', 24), ('noncurrentliabilities', 22), ('current assets', 21), ('equity liabilities', 21), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equity and liabilities', 17), ('noncurrent assets', 11), ('noncurrent liabilities', 10)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD current assets | score 42
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD currentassets | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD current liabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD currentliabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD noncurrent assets | score 37
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD noncurrentassets | score 45
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD non current assets | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD non current liabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD noncurrentliabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD noncurrentassets | score 45
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD noncurrentliabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD equity and liabilities | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD equity | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Prepayment | MATCH WORD equityandliabilities | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('currentliabilities', 57), ('currentassets', 52), ('noncurrentliabilities', 52), ('noncurrentassets', 47), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentassets | score 83
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentliabilities | score 53
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equityandliabilities | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Other investments including derivatives | [('noncurrent liabilities', 36), ('current assets', 32), ('noncurrent assets', 32), ('noncurrentassets', 30), ('equity and liabilities', 29), ('equityandliabilities', 28), ('currentassets', 27), ('noncurrentliabilities', 27), ('equity', 26), ('current liabilities', 26), ('equity liabilities', 26), ('currentliabilities', 24), ('equityliabilities', 24), ('liabilities', 19), ('assets', 13)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD current assets | score 37
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD currentassets | score 34
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD current liabilities | score 48
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD currentliabilities | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrent assets | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrentassets | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrent liabilities | score 45
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD non current assets | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD non current liabilities | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrentliabilities | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrentassets | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD noncurrentliabilities | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD equity and liabilities | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD equity | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Other investments including derivatives | MATCH WORD equityandliabilities | score 45
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Investments in equity accounted investees | [('equity and liabilities', 52), ('equity liabilities', 43), ('equityandliabilities', 35), ('currentassets', 34), ('equity', 34), ('current assets', 33), ('current liabilities', 33), ('noncurrentassets', 32), ('currentliabilities', 32), ('equityliabilities', 32), ('noncurrent assets', 29), ('noncurrentliabilities', 29), ('assets', 24), ('noncurrent liabilities', 23), ('liabilities', 11)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD current assets | score 39
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD currentassets | score 34
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD current liabilities | score 42
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD currentliabilities | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD noncurrent assets | score 42
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD noncurrentassets | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD noncurrent liabilities | score 37
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD non current assets | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD non current liabilities | score 39
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD noncurrentliabilities | score 34
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD noncurrentassets | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD noncurrentliabilities | score 34
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD equity and liabilities | score 86
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD equity | score 90
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Investments in equity accounted investees | MATCH WORD equityandliabilities | score 47
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('equityandliabilities', 23), ('noncurrent liabilities', 21), ('equity', 19), ('currentliabilities', 17), ('equityliabilities', 17), ('noncurrentliabilities', 15), ('liabilities', 10)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentassets | score 62
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentliabilities | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equityandliabilities | score 31
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Intangible assets | [('current assets', 64), ('noncurrent assets', 64), ('assets', 59), ('equityandliabilities', 43), ('currentassets', 42), ('equity and liabilities', 41), ('equity liabilities', 40), ('current liabilities', 38), ('noncurrentassets', 37), ('equity', 33), ('noncurrent liabilities', 31), ('equityliabilities', 30), ('currentliabilities', 29), ('noncurrentliabilities', 25), ('liabilities', 22)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current assets | score 58
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD currentassets | score 53
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current liabilities | score 42
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD currentliabilities | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent assets | score 59
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentassets | score 55
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current assets | score 57
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current liabilities | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentliabilities | score 37
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentassets | score 55
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentliabilities | score 37
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity and liabilities | score 46
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equityandliabilities | score 49
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrentliabilities', 58), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('currentliabilities', 43), ('assets', 42), ('current liabilities', 42), ('currentassets', 39), ('equity and liabilities', 33), ('equityandliabilities', 33), ('equity liabilities', 31), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentassets | score 83
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('currentassets', 43), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equityliabilities', 32), ('currentliabilities', 30), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentassets | score 56
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentliabilities | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equityandliabilities | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equityandliabilities', 35), ('equity', 33), ('equityliabilities', 29), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11), ('currentassets', 11), ('noncurrentassets', 10)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentassets | score 25
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentliabilities | score 90
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equityandliabilities | score 90
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Borrowings | [('noncurrent liabilities', 40), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrentassets', 29), ('currentliabilities', 27), ('currentassets', 22), ('current assets', 21), ('current liabilities', 20), ('liabilities', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('assets', 0), ('equity', 0), ('equityandliabilities', 0), ('equityliabilities', 0)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current assets | score 33
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD currentassets | score 35
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current liabilities | score 28
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD currentliabilities | score 29
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent assets | score 37
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentassets | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current assets | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current liabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentliabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentassets | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentliabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity and liabilities | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity | score 15
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equityandliabilities | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Tax related payables | [('equity and liabilities', 36), ('current assets', 34), ('current liabilities', 33), ('noncurrent liabilities', 33), ('assets', 29), ('currentassets', 29), ('noncurrent assets', 28), ('equity liabilities', 28), ('liabilities', 27), ('noncurrentassets', 26), ('currentliabilities', 24), ('equityandliabilities', 22), ('noncurrentliabilities', 21), ('equity', 18), ('equityliabilities', 17)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD current assets | score 41
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD currentassets | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD current liabilities | score 46
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD currentliabilities | score 42
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD noncurrent assets | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD noncurrentassets | score 33
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD noncurrent liabilities | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD non current assets | score 42
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD non current liabilities | score 47
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD noncurrentliabilities | score 39
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD noncurrentassets | score 33
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD noncurrentliabilities | score 39
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD equity and liabilities | score 48
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD equity | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Tax related payables | MATCH WORD equityandliabilities | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('currentliabilities', 62), ('currentassets', 56), ('noncurrentliabilities', 56), ('equity liabilities', 55), ('noncurrentassets', 51), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('equityandliabilities', 32), ('equityliabilities', 29), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentassets | score 56
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentliabilities | score 84
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equityandliabilities | score 62
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Borrowings | [('noncurrent liabilities', 40), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrentassets', 29), ('currentliabilities', 27), ('currentassets', 22), ('current assets', 21), ('current liabilities', 20), ('liabilities', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('assets', 0), ('equity', 0), ('equityandliabilities', 0), ('equityliabilities', 0)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current assets | score 33
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD currentassets | score 35
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD current liabilities | score 28
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD currentliabilities | score 29
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent assets | score 37
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentassets | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current assets | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD non current liabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentliabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentassets | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD noncurrentliabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity and liabilities | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equity | score 15
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Borrowings | MATCH WORD equityandliabilities | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrentliabilities', 56), ('noncurrent assets', 55), ('noncurrentassets', 51), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('currentliabilities', 41), ('currentassets', 38), ('equity liabilities', 36), ('equity and liabilities', 32), ('equityandliabilities', 26), ('equityliabilities', 21), ('assets', 16), ('equity', 15)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentassets | score 56
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentliabilities | score 85
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equityandliabilities | score 58
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('currentassets', 48), ('noncurrentassets', 42), ('currentliabilities', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equityliabilities', 24), ('liabilities', 13)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentassets | score 70
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentliabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equityandliabilities | score 33
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentassets | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentliabilities | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equityandliabilities | score 90
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Share capital | [('current assets', 42), ('assets', 38), ('equity and liabilities', 36), ('currentassets', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('current liabilities', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('equityandliabilities', 27), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('equityliabilities', 21)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD current assets | score 37
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD currentassets | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD current liabilities | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD currentliabilities | score 32
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD noncurrent assets | score 33
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD noncurrentassets | score 32
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD noncurrent liabilities | score 41
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD non current assets | score 32
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD non current liabilities | score 41
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD noncurrentliabilities | score 34
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD noncurrentassets | score 32
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD noncurrentliabilities | score 34
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD equity and liabilities | score 34
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD equity | score 32
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD equityandliabilities | score 32
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Retained earnings | [('equity and liabilities', 50), ('currentliabilities', 50), ('current liabilities', 48), ('currentassets', 43), ('noncurrentliabilities', 43), ('current assets', 42), ('assets', 38), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equity', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('equityliabilities', 32), ('liabilities', 24), ('noncurrent liabilities', 24)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentassets | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 39
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentliabilities | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 35
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 46
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equityandliabilities | score 43
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Reserves | [('currentassets', 44), ('noncurrentassets', 38), ('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD currentassets | score 48
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD currentliabilities | score 31
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentassets | score 45
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentliabilities | score 28
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentassets | score 45
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentliabilities | score 28
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equityandliabilities | score 22
2023-08-18 14:44:33+0530 - sLogger - DEBUG - Total Equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD current assets | score 31
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD currentassets | score 32
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD current liabilities | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD currentliabilities | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD noncurrent assets | score 34
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD noncurrentassets | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD noncurrent liabilities | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD non current assets | score 33
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD non current liabilities | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD noncurrentliabilities | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD noncurrentassets | score 36
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD noncurrentliabilities | score 38
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD equity and liabilities | score 86
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD equity | score 90
2023-08-18 14:44:33+0530 - sLogger - DEBUG - particular_text Total Equity | MATCH WORD equityandliabilities | score 57
2023-08-18 14:44:33+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-18 14:44:33+0530 - sLogger - DEBUG - set_section_details started
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash Flows From Operating Activities | operating cash flow before working capital changes
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income tax refunded/(paid) | adiustments for movements in working capital
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from operating activities | adjustments for increase decrease in operating assets
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash Flows From Investing Activities | operating cash flow before working capital changes
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments for property, plant and equipment | operating profit before changes in assets and liabilities
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment for intangibles | operating profit before working capital changes
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividends received | movements in working capital
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from investing activities | adjustments for increase decrease in operating assets
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash Flows From Financing Activities | operating cash flow before working capital changes
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment of loan by related parties | changes in operating assets and liabilities
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment of loan to related party | changes in operating assets and liabilities
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from loan with related parties | operating profit before working capital changes
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment of lease liabilities | changes in operating assets and liabilities
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividends paid | changes in assets liabilities
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from/(used in) financing activities | operating cash flow before working capital changes
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase//decrease) in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the beginning of the financial year | changes in operating assets and liabilities
2023-08-18 14:44:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the end of the financial year | changes in operating assets and liabilities
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '13.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '13.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '14.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '14.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '15.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '18.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '18.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '25.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '25.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '16.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '19.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '21.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '20.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '22.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '22.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '23.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '23.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '24.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '24.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '26.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '8.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '9.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '9.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '10.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '11.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '12.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:44:35+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '12.'
2023-08-18 14:44:35+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('other bank balances', 48), ('bank balances other than above', 46), ('cash and short term deposits', 46), ('Cash and short term deposits', 46), ('bank balances other than cash and cash equivalents', 38), ('cash and bank balances', 36), ('cash and cash equivalents', 30), ('cash asset', 29)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related receivables , res_fuzz_match = [('bank balances other than above', 37), ('cash and short term deposits', 37), ('Cash and short term deposits', 37), ('cash asset', 31), ('bank balances other than cash and cash equivalents', 30), ('other bank balances', 30), ('cash and bank balances', 28), ('cash and cash equivalents', 27)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = prepayment , res_fuzz_match = [('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 218214.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['13.'], 'line_item_value': [218214.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('other bank balances', 48), ('bank balances other than above', 46), ('cash and short term deposits', 46), ('Cash and short term deposits', 46), ('bank balances other than cash and cash equivalents', 38), ('cash and bank balances', 36), ('cash and cash equivalents', 30), ('cash asset', 29)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related receivables , res_fuzz_match = [('bank balances other than above', 37), ('cash and short term deposits', 37), ('Cash and short term deposits', 37), ('cash asset', 31), ('bank balances other than cash and cash equivalents', 30), ('other bank balances', 30), ('cash and bank balances', 28), ('cash and cash equivalents', 27)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = prepayment , res_fuzz_match = [('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 403580.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['13.'], 'line_item_value': [403580.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit ', ' Vehicles ', ' Demonstrator units ', ' Training Vehicles']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('inventories', 67)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related receivables , res_fuzz_match = [('inventories', 33)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = prepayment , res_fuzz_match = [('inventories', 17)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 17606.0, 'line_item_label': ['Inventories'], 'note_numbers': ['15.'], 'line_item_value': [17606.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('inventories', 67)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related receivables , res_fuzz_match = [('inventories', 33)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = prepayment , res_fuzz_match = [('inventories', 17)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 45155.0, 'line_item_label': ['Inventories'], 'note_numbers': ['15.'], 'line_item_value': [45155.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' other current assets ', 55), (' other financial assets ', 55), (' other current financial assets ', 50), ('other assets ', 44), (' trade and other receivables', 43), (' prepayments ', 13)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related receivables , res_fuzz_match = [(' trade and other receivables', 47), (' other current assets ', 40), (' other current financial assets ', 33), ('other assets ', 30), (' other financial assets ', 29), (' prepayments ', 27)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = prepayment , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 100, 'value': 222603.0, 'line_item_label': ['Trade and other receivables', 'Prepayment'], 'note_numbers': ['14.', nan], 'line_item_value': [222363.0, 240.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' other current assets ', 55), (' other financial assets ', 55), (' other current financial assets ', 50), ('other assets ', 44), (' trade and other receivables', 43), (' prepayments ', 13)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related receivables , res_fuzz_match = [(' trade and other receivables', 47), (' other current assets ', 40), (' other current financial assets ', 33), ('other assets ', 30), (' other financial assets ', 29), (' prepayments ', 27)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = prepayment , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 100, 'value': 247826.0, 'line_item_label': ['Trade and other receivables', 'Prepayment'], 'note_numbers': ['14.', nan], 'line_item_value': [247644.0, 182.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('other current assets ', 55), (' other financial assets ', 55), (' deferred operating expenditure ', 52), (' other assets ', 44), (' trade and other receivables', 43), (' income tax receivable from related parties ', 41), (' financial assets ', 32), (' biological assets ', 27)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related receivables , res_fuzz_match = [(' income tax receivable from related parties ', 65), (' trade and other receivables', 47), ('other current assets ', 40), (' deferred operating expenditure ', 32), (' other assets ', 30), (' other financial assets ', 29), (' financial assets ', 28), (' biological assets ', 21)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = prepayment , res_fuzz_match = [(' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' other financial assets ', 16), (' other assets ', 12), (' biological assets ', 11)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 222363.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['14.'], 'line_item_value': [222363.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('other current assets ', 55), (' other financial assets ', 55), (' deferred operating expenditure ', 52), (' other assets ', 44), (' trade and other receivables', 43), (' income tax receivable from related parties ', 41), (' financial assets ', 32), (' biological assets ', 27)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related receivables , res_fuzz_match = [(' income tax receivable from related parties ', 65), (' trade and other receivables', 47), ('other current assets ', 40), (' deferred operating expenditure ', 32), (' other assets ', 30), (' other financial assets ', 29), (' financial assets ', 28), (' biological assets ', 21)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = prepayment , res_fuzz_match = [(' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' other financial assets ', 16), (' other assets ', 12), (' biological assets ', 11)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 247644.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['14.'], 'line_item_value': [247644.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment ']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant and equipment ', 43), (' plant and equipment ', 43), ('plant property equipment', 33), ('property plant equipment', 33), (' Property ', 27)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('plant property equipment', 44), ('property plant equipment', 44), ('plant and equipment ', 35), (' plant and equipment ', 35), (' Property ', 24)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('plant and equipment ', 45), (' plant and equipment ', 45), ('plant property equipment', 41), ('property plant equipment', 41), (' Property ', 22)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment ', 77), (' plant and equipment ', 77), (' Property ', 50)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment ', 33), (' plant and equipment ', 33), (' Property ', 26)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant and equipment ', 37), (' plant and equipment ', 37), (' Property ', 30), ('plant property equipment', 25), ('property plant equipment', 25)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 91, 'value': 2885.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['19.'], 'line_item_value': [2885.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant and equipment ', 43), (' plant and equipment ', 43), ('plant property equipment', 33), ('property plant equipment', 33), (' Property ', 27)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('plant property equipment', 44), ('property plant equipment', 44), ('plant and equipment ', 35), (' plant and equipment ', 35), (' Property ', 24)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('plant and equipment ', 45), (' plant and equipment ', 45), ('plant property equipment', 41), ('property plant equipment', 41), (' Property ', 22)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment ', 77), (' plant and equipment ', 77), (' Property ', 50)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment ', 33), (' plant and equipment ', 33), (' Property ', 26)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant and equipment ', 37), (' plant and equipment ', 37), (' Property ', 30), ('plant property equipment', 25), ('property plant equipment', 25)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 91, 'value': 1613.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['19.'], 'line_item_value': [1613.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('plant property equipment', 44), ('property plant equipment', 44)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('plant property equipment', 41), ('property plant equipment', 41)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 91, 'value': 2885.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['19.'], 'line_item_value': [2885.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('plant property equipment', 44), ('property plant equipment', 44)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('plant property equipment', 41), ('property plant equipment', 41)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 91, 'value': 1613.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['19.'], 'line_item_value': [1613.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['construction in progress ', ' work in progress ', ' capital works in progress ', ' WIP']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' plant and equipment ', 47), (' plant property equipment ', 46), (' property plant equipment ', 45), (' investment property', 40), ('Work in progress ', 38)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' investment property', 53), (' plant and equipment ', 47), (' property plant equipment ', 36), (' plant property equipment ', 35), ('Work in progress ', 31)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [(' investment property', 67), (' plant and equipment ', 47), (' property plant equipment ', 45), (' plant property equipment ', 40), ('Work in progress ', 31)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' plant and equipment ', 100), (' property plant equipment ', 80), (' plant property equipment ', 60), (' investment property', 47), ('Work in progress ', 31)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' property plant equipment ', 40), (' investment property', 34), (' plant property equipment ', 33), ('Work in progress ', 31), (' plant and equipment ', 27)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' plant and equipment ', 50), (' plant property equipment ', 42), (' property plant equipment ', 42), (' investment property', 42), ('Work in progress ', 25)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 2885.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['19.'], 'line_item_value': [2885.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' plant and equipment ', 47), (' plant property equipment ', 46), (' property plant equipment ', 45), (' investment property', 40), ('Work in progress ', 38)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' investment property', 53), (' plant and equipment ', 47), (' property plant equipment ', 36), (' plant property equipment ', 35), ('Work in progress ', 31)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [(' investment property', 67), (' plant and equipment ', 47), (' property plant equipment ', 45), (' plant property equipment ', 40), ('Work in progress ', 31)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' plant and equipment ', 100), (' property plant equipment ', 80), (' plant property equipment ', 60), (' investment property', 47), ('Work in progress ', 31)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' property plant equipment ', 40), (' investment property', 34), (' plant property equipment ', 33), ('Work in progress ', 31), (' plant and equipment ', 27)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' plant and equipment ', 50), (' plant property equipment ', 42), (' property plant equipment ', 42), (' investment property', 42), ('Work in progress ', 25)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 1613.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['19.'], 'line_item_value': [1613.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('tangible assets', 29)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('tangible assets', 21)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('tangible assets', 29)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible assets', 80)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 80, 'value': 26.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['20.'], 'line_item_value': [26.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('tangible assets', 29)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('tangible assets', 21)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('tangible assets', 29)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible assets', 80)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 80, 'value': 3.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['20.'], 'line_item_value': [3.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' intangible asset', 33), (' goodwill on consolidation ', 25), ('goodwill ', 14)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' intangible asset', 33), (' goodwill on consolidation ', 31), ('goodwill ', 29)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' intangible asset', 70), (' goodwill on consolidation ', 20), ('goodwill ', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' intangible asset', 100), (' goodwill on consolidation ', 25), ('goodwill ', 14)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 26.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['20.'], 'line_item_value': [26.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' intangible asset', 33), (' goodwill on consolidation ', 25), ('goodwill ', 14)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' intangible asset', 33), (' goodwill on consolidation ', 31), ('goodwill ', 29)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' intangible asset', 70), (' goodwill on consolidation ', 20), ('goodwill ', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' intangible asset', 100), (' goodwill on consolidation ', 25), ('goodwill ', 14)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 3.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['20.'], 'line_item_value': [3.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['Other intangibles ', ' development and software ', ' software ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' intangible assets under development ', 50), (' plant property equipment', 46), (' intangible under development ', 45), ('property plant equipment', 45), ('intangible assets ', 33)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' intangible under development ', 50), (' intangible assets under development ', 44), ('property plant equipment', 36), (' plant property equipment', 35), ('intangible assets ', 33)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('intangible assets ', 50), (' intangible assets under development ', 46), ('property plant equipment', 45), (' intangible under development ', 40), (' plant property equipment', 40)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('property plant equipment', 80), (' plant property equipment', 60), ('intangible assets ', 50), (' intangible under development ', 49), (' intangible assets under development ', 42)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets ', 70), ('property plant equipment', 40), (' intangible under development ', 33), (' intangible assets under development ', 33), (' plant property equipment', 33)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('intangible assets ', 100), (' intangible assets under development ', 100), (' intangible under development ', 67), (' plant property equipment', 42), ('property plant equipment', 42)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 5], 'score': 100, 'value': 2911.0, 'line_item_label': ['Property, plant and equipment', 'Intangible assets'], 'note_numbers': ['19.', '20.'], 'line_item_value': [2885.0, 26.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' intangible assets under development ', 50), (' plant property equipment', 46), (' intangible under development ', 45), ('property plant equipment', 45), ('intangible assets ', 33)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' intangible under development ', 50), (' intangible assets under development ', 44), ('property plant equipment', 36), (' plant property equipment', 35), ('intangible assets ', 33)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('intangible assets ', 50), (' intangible assets under development ', 46), ('property plant equipment', 45), (' intangible under development ', 40), (' plant property equipment', 40)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('property plant equipment', 80), (' plant property equipment', 60), ('intangible assets ', 50), (' intangible under development ', 49), (' intangible assets under development ', 42)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets ', 70), ('property plant equipment', 40), (' intangible under development ', 33), (' intangible assets under development ', 33), (' plant property equipment', 33)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('intangible assets ', 100), (' intangible assets under development ', 100), (' intangible under development ', 67), (' plant property equipment', 42), ('property plant equipment', 42)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 5], 'score': 100, 'value': 1616.0, 'line_item_label': ['Property, plant and equipment', 'Intangible assets'], 'note_numbers': ['19.', '20.'], 'line_item_value': [1613.0, 3.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('donations', 22)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('donations', 20)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('donations', 18)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('donations', 24)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('donations', 22)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('donations', 20)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('donations', 18)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('donations', 24)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('joint ventures and associates', 45), (' investments accounted for using the equity method', 45), ('derivative financial instruments', 36), ('investment', 33), (' investment in joint venture', 32), (' investment in associate', 31)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('investment', 100), (' investment in joint venture', 63), (' investment in associate', 62), ('joint ventures and associates', 44), ('derivative financial instruments', 42), (' investments accounted for using the equity method', 40)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('investment', 100), (' investment in associate', 62), (' investments accounted for using the equity method', 62), (' investment in joint venture', 58), ('derivative financial instruments', 46), ('joint ventures and associates', 43)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method', 40), ('investment', 33)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('derivative financial instruments', 58), (' investment in associate', 58), ('investment', 50), ('joint ventures and associates', 50), (' investment in joint venture', 50), (' investments accounted for using the equity method', 50)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2], 'score': 100, 'value': 47350.0, 'line_item_label': ['Other investments, including derivatives', 'Investments in equity accounted investees'], 'note_numbers': ['18.', '16.'], 'line_item_value': [166.0, 47184.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('joint ventures and associates', 45), (' investments accounted for using the equity method', 45), ('derivative financial instruments', 36), ('investment', 33), (' investment in joint venture', 32), (' investment in associate', 31)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('investment', 100), (' investment in joint venture', 63), (' investment in associate', 62), ('joint ventures and associates', 44), ('derivative financial instruments', 42), (' investments accounted for using the equity method', 40)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('investment', 100), (' investment in associate', 62), (' investments accounted for using the equity method', 62), (' investment in joint venture', 58), ('derivative financial instruments', 46), ('joint ventures and associates', 43)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method', 40), ('investment', 33)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('derivative financial instruments', 58), (' investment in associate', 58), ('investment', 50), ('joint ventures and associates', 50), (' investment in joint venture', 50), (' investments accounted for using the equity method', 50)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2], 'score': 100, 'value': 47906.0, 'line_item_label': ['Other investments, including derivatives', 'Investments in equity accounted investees'], 'note_numbers': ['18.', '16.'], 'line_item_value': [122.0, 47784.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('deferred tax assets', 43), ('deferred tax', 39), ('deferred charges', 36)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('deferred charges', 33), ('deferred tax assets', 30), ('deferred tax', 29)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('deferred tax assets', 32), ('deferred tax', 21), ('deferred charges', 20)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 38), ('deferred charges', 17)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 2801.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['21.'], 'line_item_value': [2801.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('deferred tax assets', 43), ('deferred tax', 39), ('deferred charges', 36)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('deferred charges', 33), ('deferred tax assets', 30), ('deferred tax', 29)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('deferred tax assets', 32), ('deferred tax', 21), ('deferred charges', 20)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 38), ('deferred charges', 17)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 2874.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['21.'], 'line_item_value': [2874.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' loan receivables', 55), (' exploration and evaluation expenditure', 49), (' other assets', 42), (' other non-current assets', 39), (' other non-current assets', 39), (' leased assets', 31), (' financial assets', 29), ('non-current', 28), (' leases', 15)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' other non-current assets', 50), (' other non-current assets', 50), (' other assets', 44), (' exploration and evaluation expenditure', 42), (' financial assets', 32), (' leased assets', 29), ('non-current', 25), (' loan receivables', 22), (' leases', 21)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [(' exploration and evaluation expenditure', 36), (' loan receivables', 35), (' financial assets', 33), (' other non-current assets', 33), (' other non-current assets', 33), (' leased assets', 31), (' other assets', 30), ('non-current', 17), (' leases', 12)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets', 80), (' leased assets', 64), (' other assets', 61), (' other non-current assets', 52), (' other non-current assets', 52), (' exploration and evaluation expenditure', 26), (' loan receivables', 26), (' leases', 25), ('non-current', 21)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 80, 'value': 26.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['20.'], 'line_item_value': [26.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' loan receivables', 55), (' exploration and evaluation expenditure', 49), (' other assets', 42), (' other non-current assets', 39), (' other non-current assets', 39), (' leased assets', 31), (' financial assets', 29), ('non-current', 28), (' leases', 15)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' other non-current assets', 50), (' other non-current assets', 50), (' other assets', 44), (' exploration and evaluation expenditure', 42), (' financial assets', 32), (' leased assets', 29), ('non-current', 25), (' loan receivables', 22), (' leases', 21)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [(' exploration and evaluation expenditure', 36), (' loan receivables', 35), (' financial assets', 33), (' other non-current assets', 33), (' other non-current assets', 33), (' leased assets', 31), (' other assets', 30), ('non-current', 17), (' leases', 12)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets', 80), (' leased assets', 64), (' other assets', 61), (' other non-current assets', 52), (' other non-current assets', 52), (' exploration and evaluation expenditure', 26), (' loan receivables', 26), (' leases', 25), ('non-current', 21)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 80, 'value': 3.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['20.'], 'line_item_value': [3.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft ']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [(' borrowings ', 100), (' loans and borrowings ', 57), (' shortterm borrowings ', 55), (' short-term debt ', 40), (' shortterm debt ', 40), (' bank overdraft ', 40), ('short term debt ', 38), (' cash overdraft ', 30), (' interest bearing liabilites ', 21), (' lease liabilities ', 12), ('  leases ', 0), (' cash and cash equivalents ', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [('short term debt ', 39), (' lease liabilities ', 37), (' interest bearing liabilites ', 37), (' short-term debt ', 33), (' shortterm debt ', 33), (' bank overdraft ', 33), (' cash overdraft ', 33), (' loans and borrowings ', 32), (' cash and cash equivalents ', 32), (' shortterm borrowings ', 31), ('  leases ', 30), (' borrowings ', 18)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 302805.0, 'line_item_label': ['Borrowings'], 'note_numbers': ['23.'], 'line_item_value': [302805.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [(' borrowings ', 100), (' loans and borrowings ', 57), (' shortterm borrowings ', 55), (' short-term debt ', 40), (' shortterm debt ', 40), (' bank overdraft ', 40), ('short term debt ', 38), (' cash overdraft ', 30), (' interest bearing liabilites ', 21), (' lease liabilities ', 12), ('  leases ', 0), (' cash and cash equivalents ', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [('short term debt ', 39), (' lease liabilities ', 37), (' interest bearing liabilites ', 37), (' short-term debt ', 33), (' shortterm debt ', 33), (' bank overdraft ', 33), (' cash overdraft ', 33), (' loans and borrowings ', 32), (' cash and cash equivalents ', 32), (' shortterm borrowings ', 31), ('  leases ', 30), (' borrowings ', 18)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 504362.0, 'line_item_label': ['Borrowings'], 'note_numbers': ['23.'], 'line_item_value': [504362.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'trade payable', 'other trade payables']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other trade payables', 25), ('trade payable', 22), ('trade and other payables', 21)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [('trade payable', 64), ('other trade payables', 53), ('trade and other payables', 47)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 58928.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['22.'], 'line_item_value': [58928.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other trade payables', 25), ('trade payable', 22), ('trade and other payables', 21)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [('trade payable', 64), ('other trade payables', 53), ('trade and other payables', 47)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 43736.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['22.'], 'line_item_value': [43736.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses ', ' interest accrued']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('trade and other payables', 21)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [('trade and other payables', 47)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 58928.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['22.'], 'line_item_value': [58928.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('trade and other payables', 21)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [('trade and other payables', 47)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 43736.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['22.'], 'line_item_value': [43736.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current tax liabilities ', 33), (' provision', 33), (' income tax payable ', 17), (' tax ', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [(' tax ', 100), (' income tax payable ', 62), ('current tax liabilities ', 50), (' provision', 17)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3, 4], 'score': 100, 'value': 18178.0, 'line_item_label': ['Liabilities', 'Tax related payables', 'Provisions'], 'note_numbers': [nan, '25.', '24.'], 'line_item_value': [0.0, 17136.0, 1042.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current tax liabilities ', 33), (' provision', 33), (' income tax payable ', 17), (' tax ', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [(' tax ', 100), (' income tax payable ', 62), ('current tax liabilities ', 50), (' provision', 17)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3, 4], 'score': 100, 'value': 67133.0, 'line_item_label': ['Liabilities', 'Tax related payables', 'Provisions'], 'note_numbers': [nan, '25.', '24.'], 'line_item_value': [0.0, 66071.0, 1062.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('provisions', 33), ('other current liabilities', 23), (' other current liabilities', 23), (' other financial liabilities', 23), (' deferred revenue', 22), (' trade and other payables', 21), (' customer deposits', 20), (' employee benefits', 19), (' foreign exchange contract liability', 16), (' financial liabilities', 10)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [(' trade and other payables', 47), ('other current liabilities', 33), (' other current liabilities', 33), (' other financial liabilities', 33), (' foreign exchange contract liability', 30), (' financial liabilities', 27), (' employee benefits', 26), (' deferred revenue', 21), (' customer deposits', 20), ('provisions', 18)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4], 'score': 100, 'value': 59970.0, 'line_item_label': ['Trade and other payables', 'Provisions'], 'note_numbers': ['22.', '24.'], 'line_item_value': [58928.0, 1042.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('provisions', 33), ('other current liabilities', 23), (' other current liabilities', 23), (' other financial liabilities', 23), (' deferred revenue', 22), (' trade and other payables', 21), (' customer deposits', 20), (' employee benefits', 19), (' foreign exchange contract liability', 16), (' financial liabilities', 10)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [(' trade and other payables', 47), ('other current liabilities', 33), (' other current liabilities', 33), (' other financial liabilities', 33), (' foreign exchange contract liability', 30), (' financial liabilities', 27), (' employee benefits', 26), (' deferred revenue', 21), (' customer deposits', 20), ('provisions', 18)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4], 'score': 100, 'value': 44798.0, 'line_item_label': ['Trade and other payables', 'Provisions'], 'note_numbers': ['22.', '24.'], 'line_item_value': [43736.0, 1062.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term debt', 30)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term debt', 30)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['leases ', ' secured finance debt ', ' bank loan ', ' lease liabilities ', ' lease liability ', ' lease liabilities - non-current ', ' later than 1 year ', ' not later than 5 years']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 53), ('interest bearing loans and borrowings ', 45), (' lease liabilities ', 45), (' lease liability', 45), (' borrowings ', 33)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('interest bearing loans and borrowings ', 100), (' borrowings ', 100), (' loans and borrowings', 100), (' lease liabilities ', 17), (' lease liability', 17)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings ', 33), (' borrowings ', 33), (' loans and borrowings', 33), (' lease liabilities ', 17), (' lease liability', 17)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 1444.0, 'line_item_label': ['Borrowings'], 'note_numbers': ['23.'], 'line_item_value': [1444.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 53), ('interest bearing loans and borrowings ', 45), (' lease liabilities ', 45), (' lease liability', 45), (' borrowings ', 33)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('interest bearing loans and borrowings ', 100), (' borrowings ', 100), (' loans and borrowings', 100), (' lease liabilities ', 17), (' lease liability', 17)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings ', 33), (' borrowings ', 33), (' loans and borrowings', 33), (' lease liabilities ', 17), (' lease liability', 17)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 518.0, 'line_item_label': ['Borrowings'], 'note_numbers': ['23.'], 'line_item_value': [518.0]}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('interest bearing loans and borrowings', 47), ('(bond)', 15)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('(bond)', 40), ('interest bearing loans and borrowings', 34)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('(bond)', 20)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('interest bearing loans and borrowings', 47), ('(bond)', 15)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('(bond)', 40), ('interest bearing loans and borrowings', 34)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('(bond)', 20)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes ', ' deferred tax liabilities']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities ', ' total deferred tax (assets) / liabilities']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' deferred tax liabilities', 52), ('deferred taxes ', 44)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('deferred taxes ', 17), (' deferred tax liabilities', 17)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes ', 17), (' deferred tax liabilities', 17)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' deferred tax liabilities', 52), ('deferred taxes ', 44)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('deferred taxes ', 17), (' deferred tax liabilities', 17)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes ', 17), (' deferred tax liabilities', 17)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-18 14:45:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-18 14:45:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables ', 100), ('other long term liabilities ', 50), (' other financial liabilities ', 43), (' other non-current liabilities ', 38), (' deferred revenue', 35), (' financial liabilities ', 33), (' employee benefits ', 32), (' provision for associate funding ', 32), (' provisions ', 14)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [(' other non-current liabilities ', 38), (' provisions ', 33), ('other long term liabilities ', 29), (' provision for associate funding ', 29), (' other financial liabilities ', 23), (' deferred revenue', 22), (' trade and other payables ', 21), (' employee benefits ', 19), (' financial liabilities ', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provisions ', 100), (' provision for associate funding ', 43), (' deferred revenue', 22), (' employee benefits ', 19), (' other non-current liabilities ', 15), (' trade and other payables ', 14), (' financial liabilities ', 10), (' other financial liabilities ', 8), ('other long term liabilities ', 7)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2], 'score': 100, 'value': 2669.0, 'line_item_label': ['Trade and other payables', 'Provisions'], 'note_numbers': ['22.', '24.'], 'line_item_value': [0.0, 2669.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables ', 100), ('other long term liabilities ', 50), (' other financial liabilities ', 43), (' other non-current liabilities ', 38), (' deferred revenue', 35), (' financial liabilities ', 33), (' employee benefits ', 32), (' provision for associate funding ', 32), (' provisions ', 14)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [(' other non-current liabilities ', 38), (' provisions ', 33), ('other long term liabilities ', 29), (' provision for associate funding ', 29), (' other financial liabilities ', 23), (' deferred revenue', 22), (' trade and other payables ', 21), (' employee benefits ', 19), (' financial liabilities ', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provisions ', 100), (' provision for associate funding ', 43), (' deferred revenue', 22), (' employee benefits ', 19), (' other non-current liabilities ', 15), (' trade and other payables ', 14), (' financial liabilities ', 10), (' other financial liabilities ', 8), ('other long term liabilities ', 7)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2], 'score': 100, 'value': 2792.0, 'line_item_label': ['Trade and other payables', 'Provisions'], 'note_numbers': ['22.', '24.'], 'line_item_value': [0.0, 2792.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares ', ' fully paid ordinary shares ', ' issued and paid-up share capital ', ' retained profits ', ' ordinary shares fully paid ', ' total issued capital ', ' on issue, fully paid ', ' Fully paid Preference shares ', ' Profits captialised on redemption of preference shares']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' share capital ', 40), (' share capital ', 40), (' equity share capital ', 37), (' perpetual equity instrument ', 35), (' contributed equity ', 32), (' issued capital ', 32), (' contributed equity', 32), ('common stock ', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [(' share capital ', 100), (' share capital ', 100), (' equity share capital ', 76), (' issued capital ', 67), (' contributed equity ', 37), (' contributed equity', 37), (' perpetual equity instrument ', 33), ('common stock ', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' perpetual equity instrument ', 26), (' equity share capital ', 25), (' share capital ', 24), (' share capital ', 24), (' contributed equity ', 18), (' contributed equity', 18), (' issued capital ', 12), ('common stock ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 152000.0, 'line_item_label': ['Share capital'], 'note_numbers': ['26.'], 'line_item_value': [152000.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' share capital ', 40), (' share capital ', 40), (' equity share capital ', 37), (' perpetual equity instrument ', 35), (' contributed equity ', 32), (' issued capital ', 32), (' contributed equity', 32), ('common stock ', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [(' share capital ', 100), (' share capital ', 100), (' equity share capital ', 76), (' issued capital ', 67), (' contributed equity ', 37), (' contributed equity', 37), (' perpetual equity instrument ', 33), ('common stock ', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' perpetual equity instrument ', 26), (' equity share capital ', 25), (' share capital ', 24), (' share capital ', 24), (' contributed equity ', 18), (' contributed equity', 18), (' issued capital ', 12), ('common stock ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 152000.0, 'line_item_label': ['Share capital'], 'note_numbers': ['26.'], 'line_item_value': [152000.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('Share premium', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('Share premium', 67)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('Share premium', 42)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('Share premium', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('Share premium', 67)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('Share premium', 42)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings ', ' general reserves ', ' accumulated losses ', ' retained earnings and dividends on equity instruments']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' retained earnings ', 40), ('other equity ', 38), (' retained profits', 36), (' accumulated losses ', 29), (' reserves surplus ', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [(' retained profits', 50), ('other equity ', 43), (' retained earnings ', 36), (' accumulated losses ', 26), (' reserves surplus ', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves surplus ', 63), ('other equity ', 33), (' retained earnings ', 24), (' retained profits', 21), (' accumulated losses ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 37340.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [37340.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' retained earnings ', 40), ('other equity ', 38), (' retained profits', 36), (' accumulated losses ', 29), (' reserves surplus ', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [(' retained profits', 50), ('other equity ', 43), (' retained earnings ', 36), (' accumulated losses ', 26), (' reserves surplus ', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves surplus ', 63), ('other equity ', 33), (' retained earnings ', 24), (' retained profits', 21), (' accumulated losses ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 42658.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [42658.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' noncontrolling interest ', 36), (' non-controlling interest', 36), ('minority interest ', 35), (' minority interest ', 35), (' non controlling interest ', 34)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('minority interest ', 32), (' non controlling interest ', 32), (' minority interest ', 32), (' noncontrolling interest ', 27), (' non-controlling interest', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest ', 40), (' minority interest ', 40), (' noncontrolling interest ', 32), (' non-controlling interest', 32), (' non controlling interest ', 23)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' noncontrolling interest ', 36), (' non-controlling interest', 36), ('minority interest ', 35), (' minority interest ', 35), (' non controlling interest ', 34)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('minority interest ', 32), (' non controlling interest ', 32), (' minority interest ', 32), (' noncontrolling interest ', 27), (' non-controlling interest', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest ', 40), (' minority interest ', 40), (' noncontrolling interest ', 32), (' non-controlling interest', 32), (' non controlling interest ', 23)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('shareholders equity(a)', 31)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('shareholders equity(a)', 57)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('shareholders equity(a)', 31)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('shareholders equity(a)', 57)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve ', ' cash flow hedge reserve ', ' reserve in joint venture ', ' other reserve ', ' total other reserves ', ' tax reserve ', ' other  components of equity']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other reserves ', 29), (' reserves ', 27), (' foreign currency translation reserve', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('other reserves ', 35), (' reserves ', 24), (' foreign currency translation reserve', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves ', 100), ('other reserves ', 67), (' foreign currency translation reserve', 32)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 503.0, 'line_item_label': ['Reserves'], 'note_numbers': [nan], 'line_item_value': [503.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other reserves ', 29), (' reserves ', 27), (' foreign currency translation reserve', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('other reserves ', 35), (' reserves ', 24), (' foreign currency translation reserve', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves ', 100), ('other reserves ', 67), (' foreign currency translation reserve', 32)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 5064.0, 'line_item_label': ['Reserves'], 'note_numbers': [nan], 'line_item_value': [5064.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['cost ', ' gross ', ' investment property ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction ', ' Mine infrastructure ', ' Assets under construction ', ' Capitalised pre stripping costs ', ' Other assets in progress ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Freehold land ', ' Buildings ', ' Subsea ', ' Marine  Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings ', '']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' Exploration and evaluation assets', 45), (' oil and gas properties ', 44), (' plant and equipment ', 43), ('plant property equipment ', 33), (' property plant equipment ', 33), (' investment property ', 32), (' property ', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' investment property ', 50), ('plant property equipment ', 44), (' property plant equipment ', 44), (' Exploration and evaluation assets', 38), (' oil and gas properties ', 36), (' plant and equipment ', 35), (' property ', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [(' plant and equipment ', 45), ('plant property equipment ', 41), (' property plant equipment ', 41), (' investment property ', 41), (' Exploration and evaluation assets', 35), (' oil and gas properties ', 33), (' property ', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment ', 91), (' property plant equipment ', 91), (' plant and equipment ', 77), (' oil and gas properties ', 70), (' investment property ', 62), (' property ', 50), (' Exploration and evaluation assets', 48)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' Exploration and evaluation assets', 49), (' investment property ', 40), ('plant property equipment ', 34), (' property plant equipment ', 34), (' plant and equipment ', 33), (' oil and gas properties ', 29), (' property ', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' Exploration and evaluation assets', 41), (' plant and equipment ', 37), (' investment property ', 30), (' property ', 30), (' oil and gas properties ', 26), ('plant property equipment ', 25), (' property plant equipment ', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 91, 'value': 2885.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['19.'], 'line_item_value': [2885.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' Exploration and evaluation assets', 45), (' oil and gas properties ', 44), (' plant and equipment ', 43), ('plant property equipment ', 33), (' property plant equipment ', 33), (' investment property ', 32), (' property ', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' investment property ', 50), ('plant property equipment ', 44), (' property plant equipment ', 44), (' Exploration and evaluation assets', 38), (' oil and gas properties ', 36), (' plant and equipment ', 35), (' property ', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [(' plant and equipment ', 45), ('plant property equipment ', 41), (' property plant equipment ', 41), (' investment property ', 41), (' Exploration and evaluation assets', 35), (' oil and gas properties ', 33), (' property ', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment ', 91), (' property plant equipment ', 91), (' plant and equipment ', 77), (' oil and gas properties ', 70), (' investment property ', 62), (' property ', 50), (' Exploration and evaluation assets', 48)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' Exploration and evaluation assets', 49), (' investment property ', 40), ('plant property equipment ', 34), (' property plant equipment ', 34), (' plant and equipment ', 33), (' oil and gas properties ', 29), (' property ', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' Exploration and evaluation assets', 41), (' plant and equipment ', 37), (' investment property ', 30), (' property ', 30), (' oil and gas properties ', 26), ('plant property equipment ', 25), (' property plant equipment ', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 91, 'value': 1613.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['19.'], 'line_item_value': [1613.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' receivable ', 50), (' trade and other receivables', 47), (' government subsidies receivable ', 44), ('account receivables ', 43), (' trade receivables ', 42), (' unbilled ', 40), (' billed ', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = tax related receivables , res_fuzz_match = [(' receivable ', 100), (' trade receivables ', 75), ('account receivables ', 64), (' trade and other receivables', 62), (' government subsidies receivable ', 50), (' billed ', 25), (' unbilled ', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = prepayment , res_fuzz_match = [(' receivable ', 36), ('account receivables ', 33), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4], 'score': 100, 'value': 277553.0, 'line_item_label': ['Trade and other receivables', 'Tax related receivables'], 'note_numbers': ['14.', '25.'], 'line_item_value': [222363.0, 55190.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' receivable ', 50), (' trade and other receivables', 47), (' government subsidies receivable ', 44), ('account receivables ', 43), (' trade receivables ', 42), (' unbilled ', 40), (' billed ', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = tax related receivables , res_fuzz_match = [(' receivable ', 100), (' trade receivables ', 75), ('account receivables ', 64), (' trade and other receivables', 62), (' government subsidies receivable ', 50), (' billed ', 25), (' unbilled ', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = prepayment , res_fuzz_match = [(' receivable ', 36), ('account receivables ', 33), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4], 'score': 100, 'value': 313270.0, 'line_item_label': ['Trade and other receivables', 'Tax related receivables'], 'note_numbers': ['14.', '25.'], 'line_item_value': [247644.0, 65626.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' revenue from continuing activities', 54), ('revenue from operations ', 43), (' net sales ', 40), (' Sale of coal ', 38), (' revenue from contracts with customers ', 36), (' Sales revenue ', 35), (' sale of products ', 33), (' transmission and distribution business ', 30), (' from trading business ', 30), (' Revenue ', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue ', 100), (' Sales revenue ', 71), ('revenue from operations ', 55), (' revenue from continuing activities', 39), (' revenue from contracts with customers ', 32), (' net sales ', 29), (' sale of products ', 22), (' from trading business ', 19), (' Sale of coal ', 13), (' transmission and distribution business ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal ', 78), (' net sales ', 71), (' sale of products ', 67), (' Sales revenue ', 50), (' from trading business ', 33), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), ('revenue from operations ', 24), (' transmission and distribution business ', 22), (' Revenue ', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' from trading business ', 37), ('revenue from operations ', 36), (' sale of products ', 33), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19), (' Sales revenue ', 17), (' Revenue ', 11), (' net sales ', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' from trading business ', 46), ('revenue from operations ', 44), (' Sale of coal ', 40), (' revenue from contracts with customers ', 37), (' revenue from continuing activities', 33), (' net sales ', 32), (' Sales revenue ', 27), (' sale of products ', 26), (' transmission and distribution business ', 21), (' Revenue ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Revenue ', 44), (' Sales revenue ', 35), ('revenue from operations ', 29), (' sale of products ', 25), (' revenue from contracts with customers ', 23), (' from trading business ', 22), (' revenue from continuing activities', 22), (' net sales ', 20), (' transmission and distribution business ', 20), (' Sale of coal ', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' transmission and distribution business ', 45), (' revenue from continuing activities', 44), ('revenue from operations ', 38), (' Sales revenue ', 37), (' Revenue ', 36), (' net sales ', 33), (' revenue from contracts with customers ', 33), (' sale of products ', 29), (' from trading business ', 26), (' Sale of coal ', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue ', 43), (' from trading business ', 37), (' sale of products ', 33), (' Revenue ', 33), (' net sales ', 30), ('revenue from operations ', 29), (' revenue from contracts with customers ', 27), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('revenue from operations ', 50), (' revenue from contracts with customers ', 33), (' from trading business ', 32), (' sale of products ', 29), (' transmission and distribution business ', 27), (' Sale of coal ', 24), (' revenue from continuing activities', 24), (' net sales ', 17), (' Sales revenue ', 15), (' Revenue ', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' revenue from continuing activities', 38), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 30), (' from trading business ', 30), ('revenue from operations ', 21), (' net sales ', 20), (' Sale of coal ', 19), (' sale of products ', 17), (' Sales revenue ', 17), (' Revenue ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Sale of coal ', 40), (' sale of products ', 35), (' revenue from contracts with customers ', 33), (' revenue from continuing activities', 33), (' net sales ', 32), (' from trading business ', 31), (' transmission and distribution business ', 26), ('revenue from operations ', 22), (' Sales revenue ', 18), (' Revenue ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [(' revenue from continuing activities', 44), (' revenue from contracts with customers ', 42), (' from trading business ', 39), (' Sale of coal ', 32), ('revenue from operations ', 31), (' transmission and distribution business ', 27), (' net sales ', 25), (' Sales revenue ', 22), (' sale of products ', 21), (' Revenue ', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [(' revenue from contracts with customers ', 42), (' revenue from continuing activities', 41), (' transmission and distribution business ', 37), (' from trading business ', 32), (' sale of products ', 27), (' Sales revenue ', 27), ('revenue from operations ', 25), (' net sales ', 25), (' Sale of coal ', 21), (' Revenue ', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' from trading business ', 38), (' transmission and distribution business ', 36), (' sale of products ', 31), (' Sale of coal ', 28), (' revenue from continuing activities', 27), (' Sales revenue ', 26), (' net sales ', 23), (' Revenue ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [(' from trading business ', 50), (' net sales ', 40), (' Sales revenue ', 36), (' revenue from contracts with customers ', 33), (' revenue from continuing activities', 33), (' transmission and distribution business ', 31), (' Sale of coal ', 31), (' Revenue ', 26), ('revenue from operations ', 24), (' sale of products ', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [('revenue from operations ', 45), (' revenue from contracts with customers ', 36), (' from trading business ', 36), (' transmission and distribution business ', 35), (' sale of products ', 33), (' revenue from continuing activities', 33), (' Sale of coal ', 24), (' Sales revenue ', 23), (' Revenue ', 20), (' net sales ', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' from trading business ', 38), (' revenue from continuing activities', 38), ('revenue from operations ', 37), (' Sales revenue ', 36), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' Sale of coal ', 26), (' net sales ', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [(' revenue from contracts with customers ', 39), (' transmission and distribution business ', 39), ('revenue from operations ', 33), (' revenue from continuing activities', 31), (' from trading business ', 30), (' Sales revenue ', 28), (' sale of products ', 27), (' net sales ', 26), (' Sale of coal ', 21), (' Revenue ', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [(' revenue from continuing activities', 37), (' revenue from contracts with customers ', 36), ('revenue from operations ', 30), (' transmission and distribution business ', 27), (' from trading business ', 27), (' net sales ', 26), (' sale of products ', 25), (' Sale of coal ', 22), (' Sales revenue ', 21), (' Revenue ', 16)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [(' Sales revenue ', 46), (' from trading business ', 40), ('revenue from operations ', 39), (' Revenue ', 38), (' transmission and distribution business ', 37), (' net sales ', 35), (' sale of products ', 30), (' revenue from contracts with customers ', 30), (' Sale of coal ', 25), (' revenue from continuing activities', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' revenue from continuing activities', 40), (' transmission and distribution business ', 36), (' from trading business ', 34), ('revenue from operations ', 30), (' Sales revenue ', 30), (' sale of products ', 29), (' net sales ', 24), (' Sale of coal ', 20), (' Revenue ', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 44), (' from trading business ', 38), (' revenue from continuing activities', 35), ('revenue from operations ', 33), (' transmission and distribution business ', 33), (' sale of products ', 32), (' Sales revenue ', 28), (' Revenue ', 21), (' net sales ', 20), (' Sale of coal ', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [(' revenue from contracts with customers ', 42), ('revenue from operations ', 34), (' from trading business ', 34), (' revenue from continuing activities', 32), (' transmission and distribution business ', 29), (' sale of products ', 26), (' Sales revenue ', 23), (' net sales ', 21), (' Sale of coal ', 17), (' Revenue ', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [(' revenue from contracts with customers ', 36), (' transmission and distribution business ', 35), (' revenue from continuing activities', 34), ('revenue from operations ', 33), (' from trading business ', 31), (' sale of products ', 26), (' Sales revenue ', 26), (' net sales ', 22), (' Sale of coal ', 21), (' Revenue ', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 198973.0, 'line_item_label': ['Revenue'], 'note_numbers': ['8.'], 'line_item_value': [198973.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' revenue from continuing activities', 54), ('revenue from operations ', 43), (' net sales ', 40), (' Sale of coal ', 38), (' revenue from contracts with customers ', 36), (' Sales revenue ', 35), (' sale of products ', 33), (' transmission and distribution business ', 30), (' from trading business ', 30), (' Revenue ', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue ', 100), (' Sales revenue ', 71), ('revenue from operations ', 55), (' revenue from continuing activities', 39), (' revenue from contracts with customers ', 32), (' net sales ', 29), (' sale of products ', 22), (' from trading business ', 19), (' Sale of coal ', 13), (' transmission and distribution business ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal ', 78), (' net sales ', 71), (' sale of products ', 67), (' Sales revenue ', 50), (' from trading business ', 33), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), ('revenue from operations ', 24), (' transmission and distribution business ', 22), (' Revenue ', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' from trading business ', 37), ('revenue from operations ', 36), (' sale of products ', 33), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19), (' Sales revenue ', 17), (' Revenue ', 11), (' net sales ', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' from trading business ', 46), ('revenue from operations ', 44), (' Sale of coal ', 40), (' revenue from contracts with customers ', 37), (' revenue from continuing activities', 33), (' net sales ', 32), (' Sales revenue ', 27), (' sale of products ', 26), (' transmission and distribution business ', 21), (' Revenue ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Revenue ', 44), (' Sales revenue ', 35), ('revenue from operations ', 29), (' sale of products ', 25), (' revenue from contracts with customers ', 23), (' from trading business ', 22), (' revenue from continuing activities', 22), (' net sales ', 20), (' transmission and distribution business ', 20), (' Sale of coal ', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' transmission and distribution business ', 45), (' revenue from continuing activities', 44), ('revenue from operations ', 38), (' Sales revenue ', 37), (' Revenue ', 36), (' net sales ', 33), (' revenue from contracts with customers ', 33), (' sale of products ', 29), (' from trading business ', 26), (' Sale of coal ', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue ', 43), (' from trading business ', 37), (' sale of products ', 33), (' Revenue ', 33), (' net sales ', 30), ('revenue from operations ', 29), (' revenue from contracts with customers ', 27), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('revenue from operations ', 50), (' revenue from contracts with customers ', 33), (' from trading business ', 32), (' sale of products ', 29), (' transmission and distribution business ', 27), (' Sale of coal ', 24), (' revenue from continuing activities', 24), (' net sales ', 17), (' Sales revenue ', 15), (' Revenue ', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' revenue from continuing activities', 38), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 30), (' from trading business ', 30), ('revenue from operations ', 21), (' net sales ', 20), (' Sale of coal ', 19), (' sale of products ', 17), (' Sales revenue ', 17), (' Revenue ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Sale of coal ', 40), (' sale of products ', 35), (' revenue from contracts with customers ', 33), (' revenue from continuing activities', 33), (' net sales ', 32), (' from trading business ', 31), (' transmission and distribution business ', 26), ('revenue from operations ', 22), (' Sales revenue ', 18), (' Revenue ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [(' revenue from continuing activities', 44), (' revenue from contracts with customers ', 42), (' from trading business ', 39), (' Sale of coal ', 32), ('revenue from operations ', 31), (' transmission and distribution business ', 27), (' net sales ', 25), (' Sales revenue ', 22), (' sale of products ', 21), (' Revenue ', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [(' revenue from contracts with customers ', 42), (' revenue from continuing activities', 41), (' transmission and distribution business ', 37), (' from trading business ', 32), (' sale of products ', 27), (' Sales revenue ', 27), ('revenue from operations ', 25), (' net sales ', 25), (' Sale of coal ', 21), (' Revenue ', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' from trading business ', 38), (' transmission and distribution business ', 36), (' sale of products ', 31), (' Sale of coal ', 28), (' revenue from continuing activities', 27), (' Sales revenue ', 26), (' net sales ', 23), (' Revenue ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [(' from trading business ', 50), (' net sales ', 40), (' Sales revenue ', 36), (' revenue from contracts with customers ', 33), (' revenue from continuing activities', 33), (' transmission and distribution business ', 31), (' Sale of coal ', 31), (' Revenue ', 26), ('revenue from operations ', 24), (' sale of products ', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [('revenue from operations ', 45), (' revenue from contracts with customers ', 36), (' from trading business ', 36), (' transmission and distribution business ', 35), (' sale of products ', 33), (' revenue from continuing activities', 33), (' Sale of coal ', 24), (' Sales revenue ', 23), (' Revenue ', 20), (' net sales ', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' from trading business ', 38), (' revenue from continuing activities', 38), ('revenue from operations ', 37), (' Sales revenue ', 36), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' Sale of coal ', 26), (' net sales ', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [(' revenue from contracts with customers ', 39), (' transmission and distribution business ', 39), ('revenue from operations ', 33), (' revenue from continuing activities', 31), (' from trading business ', 30), (' Sales revenue ', 28), (' sale of products ', 27), (' net sales ', 26), (' Sale of coal ', 21), (' Revenue ', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [(' revenue from continuing activities', 37), (' revenue from contracts with customers ', 36), ('revenue from operations ', 30), (' transmission and distribution business ', 27), (' from trading business ', 27), (' net sales ', 26), (' sale of products ', 25), (' Sale of coal ', 22), (' Sales revenue ', 21), (' Revenue ', 16)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [(' Sales revenue ', 46), (' from trading business ', 40), ('revenue from operations ', 39), (' Revenue ', 38), (' transmission and distribution business ', 37), (' net sales ', 35), (' sale of products ', 30), (' revenue from contracts with customers ', 30), (' Sale of coal ', 25), (' revenue from continuing activities', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' revenue from continuing activities', 40), (' transmission and distribution business ', 36), (' from trading business ', 34), ('revenue from operations ', 30), (' Sales revenue ', 30), (' sale of products ', 29), (' net sales ', 24), (' Sale of coal ', 20), (' Revenue ', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 44), (' from trading business ', 38), (' revenue from continuing activities', 35), ('revenue from operations ', 33), (' transmission and distribution business ', 33), (' sale of products ', 32), (' Sales revenue ', 28), (' Revenue ', 21), (' net sales ', 20), (' Sale of coal ', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [(' revenue from contracts with customers ', 42), ('revenue from operations ', 34), (' from trading business ', 34), (' revenue from continuing activities', 32), (' transmission and distribution business ', 29), (' sale of products ', 26), (' Sales revenue ', 23), (' net sales ', 21), (' Sale of coal ', 17), (' Revenue ', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [(' revenue from contracts with customers ', 36), (' transmission and distribution business ', 35), (' revenue from continuing activities', 34), ('revenue from operations ', 33), (' from trading business ', 31), (' sale of products ', 26), (' Sales revenue ', 26), (' net sales ', 22), (' Sale of coal ', 21), (' Revenue ', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 103500.0, 'line_item_label': ['Revenue'], 'note_numbers': ['8.'], 'line_item_value': [103500.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['Included in cost of sales ', ' cost of goods']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Personnel costs', 54), ('cost of sales', 48), ('Cost of sales', 48), (' Cost of inventory sold', 45), (' change in inventory', 44), (' Cost of product sold', 41), (' cost of coal sold', 38), (' Cost of goods and services sold', 38), (' cost of goods sold ', 38), ('expenditure', 36), ('total expenditure', 36), ('purchase of stock-in-trade', 32), ('total expenses', 25), ('expense', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' change in inventory', 29), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0), (' cost of goods sold ', 0)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' cost of goods sold ', 61), (' Cost of product sold', 54), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), (' change in inventory', 25), ('expense', 13), ('expenditure', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' cost of goods sold ', 31), (' change in inventory', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), ('total expenses', 35), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' cost of goods sold ', 32), (' change in inventory', 31), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('expense', 67), ('total expenses', 67), ('expenditure', 55), ('total expenditure', 50), ('purchase of stock-in-trade', 32), (' Personnel costs', 31), (' Cost of product sold', 28), (' Cost of goods and services sold', 27), (' Cost of inventory sold', 26), (' cost of coal sold', 23), (' cost of goods sold ', 23), (' change in inventory', 22), ('cost of sales', 19), ('Cost of sales', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), (' Personnel costs', 40), ('expenditure', 38), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), ('total expenditure', 31), (' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' cost of goods sold ', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), (' Personnel costs', 38), (' Cost of goods and services sold', 32), (' change in inventory', 30), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of product sold', 28), (' Cost of inventory sold', 26), (' cost of coal sold', 23), (' cost of goods sold ', 23)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Personnel costs', 47), (' Cost of product sold', 42), (' Cost of inventory sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), ('total expenditure', 38), ('total expenses', 36), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), ('expenditure', 31), (' change in inventory', 26), ('expense', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' change in inventory', 44), (' Cost of goods and services sold', 38), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Cost of product sold', 28), ('purchase of stock-in-trade', 26), ('total expenses', 25), (' Personnel costs', 23), (' cost of goods sold ', 23), ('total expenditure', 21), ('cost of sales', 19), ('Cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Cost of inventory sold', 53), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), (' change in inventory', 38), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [(' change in inventory', 45), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), ('purchase of stock-in-trade', 29), ('total expenses', 29), (' cost of goods sold ', 27), ('total expenditure', 25), (' Cost of product sold', 24), ('expenditure', 23), ('expense', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [(' Cost of inventory sold', 42), (' Cost of goods and services sold', 36), (' change in inventory', 35), (' Cost of product sold', 34), ('purchase of stock-in-trade', 30), (' cost of coal sold', 29), (' Personnel costs', 29), ('total expenditure', 28), ('cost of sales', 28), ('Cost of sales', 28), ('total expenses', 27), (' cost of goods sold ', 26), ('expenditure', 21), ('expense', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [(' Cost of product sold', 41), ('total expenses', 36), ('purchase of stock-in-trade', 35), (' Cost of goods and services sold', 35), (' Cost of inventory sold', 35), (' cost of coal sold', 34), (' Personnel costs', 34), ('total expenditure', 33), ('cost of sales', 33), ('Cost of sales', 33), (' cost of goods sold ', 29), (' change in inventory', 29), ('expenditure', 22), ('expense', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [('total expenditure', 48), ('total expenses', 41), (' Cost of inventory sold', 33), ('cost of sales', 31), ('Cost of sales', 31), (' change in inventory', 31), ('expenditure', 30), (' Cost of goods and services sold', 29), ('purchase of stock-in-trade', 28), ('expense', 26), (' cost of coal sold', 26), (' cost of goods sold ', 26), (' Cost of product sold', 24), (' Personnel costs', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 37), ('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 33), (' cost of coal sold', 32), ('total expenditure', 30), ('cost of sales', 30), ('Cost of sales', 30), ('total expenses', 28), (' Cost of inventory sold', 28), (' cost of goods sold ', 26), ('expenditure', 24), (' change in inventory', 21), ('expense', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' change in inventory', 43), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), (' cost of goods sold ', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [(' Cost of product sold', 32), ('purchase of stock-in-trade', 31), (' Cost of goods and services sold', 31), (' Personnel costs', 30), ('total expenditure', 29), (' Cost of inventory sold', 28), ('total expenses', 27), (' cost of coal sold', 26), (' change in inventory', 26), ('cost of sales', 25), ('Cost of sales', 25), (' cost of goods sold ', 23), ('expenditure', 20), ('expense', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [(' Cost of goods and services sold', 37), (' change in inventory', 37), (' Cost of inventory sold', 34), (' Cost of product sold', 32), (' Personnel costs', 31), (' cost of goods sold ', 31), ('total expenditure', 30), ('purchase of stock-in-trade', 28), (' cost of coal sold', 27), ('cost of sales', 26), ('Cost of sales', 26), ('total expenses', 25), ('expenditure', 18), ('expense', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [('total expenditure', 45), ('total expenses', 44), ('expense', 38), ('purchase of stock-in-trade', 35), (' Cost of goods and services sold', 35), (' Cost of inventory sold', 35), (' Personnel costs', 34), ('cost of sales', 33), ('Cost of sales', 33), ('expenditure', 32), (' Cost of product sold', 31), (' cost of coal sold', 28), (' cost of goods sold ', 28), (' change in inventory', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [(' Cost of inventory sold', 41), (' Cost of goods and services sold', 40), ('purchase of stock-in-trade', 35), (' change in inventory', 34), (' Cost of product sold', 33), (' cost of coal sold', 31), (' Personnel costs', 31), ('total expenditure', 30), ('total expenses', 29), (' cost of goods sold ', 28), ('cost of sales', 27), ('Cost of sales', 27), ('expenditure', 20), ('expense', 14)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 43), (' Cost of inventory sold', 39), ('total expenditure', 38), (' change in inventory', 38), ('total expenses', 36), (' Cost of goods and services sold', 35), (' Personnel costs', 35), (' cost of goods sold ', 35), (' Cost of product sold', 33), (' cost of coal sold', 30), ('expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expense', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [('purchase of stock-in-trade', 35), (' Cost of inventory sold', 32), ('total expenditure', 31), (' change in inventory', 31), ('total expenses', 30), (' Cost of product sold', 30), (' Cost of goods and services sold', 30), (' Personnel costs', 29), (' cost of coal sold', 25), (' cost of goods sold ', 25), ('cost of sales', 24), ('Cost of sales', 24), ('expenditure', 20), ('expense', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [(' Cost of goods and services sold', 44), ('total expenditure', 33), (' Cost of product sold', 32), (' Cost of inventory sold', 32), ('purchase of stock-in-trade', 29), ('total expenses', 29), (' cost of coal sold', 28), (' Personnel costs', 28), (' cost of goods sold ', 28), (' change in inventory', 28), ('cost of sales', 24), ('Cost of sales', 24), ('expenditure', 18), ('expense', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': -176390.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-176390.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Personnel costs', 54), ('cost of sales', 48), ('Cost of sales', 48), (' Cost of inventory sold', 45), (' change in inventory', 44), (' Cost of product sold', 41), (' cost of coal sold', 38), (' Cost of goods and services sold', 38), (' cost of goods sold ', 38), ('expenditure', 36), ('total expenditure', 36), ('purchase of stock-in-trade', 32), ('total expenses', 25), ('expense', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' change in inventory', 29), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0), (' cost of goods sold ', 0)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' cost of goods sold ', 61), (' Cost of product sold', 54), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), (' change in inventory', 25), ('expense', 13), ('expenditure', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' cost of goods sold ', 31), (' change in inventory', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), ('total expenses', 35), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' cost of goods sold ', 32), (' change in inventory', 31), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('expense', 67), ('total expenses', 67), ('expenditure', 55), ('total expenditure', 50), ('purchase of stock-in-trade', 32), (' Personnel costs', 31), (' Cost of product sold', 28), (' Cost of goods and services sold', 27), (' Cost of inventory sold', 26), (' cost of coal sold', 23), (' cost of goods sold ', 23), (' change in inventory', 22), ('cost of sales', 19), ('Cost of sales', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), (' Personnel costs', 40), ('expenditure', 38), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), ('total expenditure', 31), (' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' cost of goods sold ', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), (' Personnel costs', 38), (' Cost of goods and services sold', 32), (' change in inventory', 30), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of product sold', 28), (' Cost of inventory sold', 26), (' cost of coal sold', 23), (' cost of goods sold ', 23)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Personnel costs', 47), (' Cost of product sold', 42), (' Cost of inventory sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), ('total expenditure', 38), ('total expenses', 36), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), ('expenditure', 31), (' change in inventory', 26), ('expense', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' change in inventory', 44), (' Cost of goods and services sold', 38), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Cost of product sold', 28), ('purchase of stock-in-trade', 26), ('total expenses', 25), (' Personnel costs', 23), (' cost of goods sold ', 23), ('total expenditure', 21), ('cost of sales', 19), ('Cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Cost of inventory sold', 53), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), (' change in inventory', 38), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [(' change in inventory', 45), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), ('purchase of stock-in-trade', 29), ('total expenses', 29), (' cost of goods sold ', 27), ('total expenditure', 25), (' Cost of product sold', 24), ('expenditure', 23), ('expense', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [(' Cost of inventory sold', 42), (' Cost of goods and services sold', 36), (' change in inventory', 35), (' Cost of product sold', 34), ('purchase of stock-in-trade', 30), (' cost of coal sold', 29), (' Personnel costs', 29), ('total expenditure', 28), ('cost of sales', 28), ('Cost of sales', 28), ('total expenses', 27), (' cost of goods sold ', 26), ('expenditure', 21), ('expense', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [(' Cost of product sold', 41), ('total expenses', 36), ('purchase of stock-in-trade', 35), (' Cost of goods and services sold', 35), (' Cost of inventory sold', 35), (' cost of coal sold', 34), (' Personnel costs', 34), ('total expenditure', 33), ('cost of sales', 33), ('Cost of sales', 33), (' cost of goods sold ', 29), (' change in inventory', 29), ('expenditure', 22), ('expense', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [('total expenditure', 48), ('total expenses', 41), (' Cost of inventory sold', 33), ('cost of sales', 31), ('Cost of sales', 31), (' change in inventory', 31), ('expenditure', 30), (' Cost of goods and services sold', 29), ('purchase of stock-in-trade', 28), ('expense', 26), (' cost of coal sold', 26), (' cost of goods sold ', 26), (' Cost of product sold', 24), (' Personnel costs', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 37), ('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 33), (' cost of coal sold', 32), ('total expenditure', 30), ('cost of sales', 30), ('Cost of sales', 30), ('total expenses', 28), (' Cost of inventory sold', 28), (' cost of goods sold ', 26), ('expenditure', 24), (' change in inventory', 21), ('expense', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' change in inventory', 43), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), (' cost of goods sold ', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [(' Cost of product sold', 32), ('purchase of stock-in-trade', 31), (' Cost of goods and services sold', 31), (' Personnel costs', 30), ('total expenditure', 29), (' Cost of inventory sold', 28), ('total expenses', 27), (' cost of coal sold', 26), (' change in inventory', 26), ('cost of sales', 25), ('Cost of sales', 25), (' cost of goods sold ', 23), ('expenditure', 20), ('expense', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [(' Cost of goods and services sold', 37), (' change in inventory', 37), (' Cost of inventory sold', 34), (' Cost of product sold', 32), (' Personnel costs', 31), (' cost of goods sold ', 31), ('total expenditure', 30), ('purchase of stock-in-trade', 28), (' cost of coal sold', 27), ('cost of sales', 26), ('Cost of sales', 26), ('total expenses', 25), ('expenditure', 18), ('expense', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [('total expenditure', 45), ('total expenses', 44), ('expense', 38), ('purchase of stock-in-trade', 35), (' Cost of goods and services sold', 35), (' Cost of inventory sold', 35), (' Personnel costs', 34), ('cost of sales', 33), ('Cost of sales', 33), ('expenditure', 32), (' Cost of product sold', 31), (' cost of coal sold', 28), (' cost of goods sold ', 28), (' change in inventory', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [(' Cost of inventory sold', 41), (' Cost of goods and services sold', 40), ('purchase of stock-in-trade', 35), (' change in inventory', 34), (' Cost of product sold', 33), (' cost of coal sold', 31), (' Personnel costs', 31), ('total expenditure', 30), ('total expenses', 29), (' cost of goods sold ', 28), ('cost of sales', 27), ('Cost of sales', 27), ('expenditure', 20), ('expense', 14)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 43), (' Cost of inventory sold', 39), ('total expenditure', 38), (' change in inventory', 38), ('total expenses', 36), (' Cost of goods and services sold', 35), (' Personnel costs', 35), (' cost of goods sold ', 35), (' Cost of product sold', 33), (' cost of coal sold', 30), ('expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expense', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [('purchase of stock-in-trade', 35), (' Cost of inventory sold', 32), ('total expenditure', 31), (' change in inventory', 31), ('total expenses', 30), (' Cost of product sold', 30), (' Cost of goods and services sold', 30), (' Personnel costs', 29), (' cost of coal sold', 25), (' cost of goods sold ', 25), ('cost of sales', 24), ('Cost of sales', 24), ('expenditure', 20), ('expense', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [(' Cost of goods and services sold', 44), ('total expenditure', 33), (' Cost of product sold', 32), (' Cost of inventory sold', 32), ('purchase of stock-in-trade', 29), ('total expenses', 29), (' cost of coal sold', 28), (' Personnel costs', 28), (' cost of goods sold ', 28), (' change in inventory', 28), ('cost of sales', 24), ('Cost of sales', 24), ('expenditure', 18), ('expense', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': -83050.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-83050.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['consum ', ' power ', ' machinery ', ' charges ', ' research ', ' analytical ', ' equipment ', ' exchange ', ' loss on ', ' donation ', ' csr ', ' social ', ' miscellaneous ', ' loss allowance ', ' Included in administrative expenses ', ' Depreciation property ', ' plant and equipment ', ' Depreciation right-of-use assets ', ' Administrative expenses ', ' Wages and salaries ', ' Compulsory superannuation contributions ', ' Payroll on-costs (excluding employee benefit provision) ', ' Staff welfare ', ' Contractors, subcontractors and employee related expenses ', ' Facilities Expense ', ' Rental equipment expenses ', ' Depreciation expense right-of-use asset ', ' Depreciation expense ', ' Amortisation expense ', ' Other expenses ', ' Research and development expenses ', ' employee benefits expenses ', ' depreciation and amortisation expenses ', ' Employee expenses ', ' Distribution Expenses ', ' Depreciation and Amortisation Expenses ', ' Other Expenses from Ordinary Activities ', '  ', ' Defined contribution plans ', ' Other employement costs']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Amortisation expenses ', 46), (' property espense ', 44), (' Distribution expenses ', 43), (' other expenses ', 42), (' Other expenses ', 42), (' Other expenses ', 42), (' Depreciation expenses ', 38), (' Logistics and distribution ', 38), (' Administrative and other expenses ', 37), (' Advertising expenses ', 37), (' Depreciation and amortisation expenses ', 37), (' Administrative expenses ', 36), (' Selling & distribution expenses ', 36), (' Administration expenses ', 36), (' Occupancy ', 35), (' employee benefits expense ', 35), (' employee benefit espense ', 35), (' Occupancy expenses ', 33), (' Royalties ', 32), (' Sales and marketing ', 30), (' Administration ', 29), (' Lease expenses ', 26), (' Selling Expenses ', 26), (' Marketing expenses ', 24), ('expenses ', 22), (' depreciation ', 21), (' Management expenses ', 17), (' levies', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expenses ', 50), (' Occupancy expenses ', 44), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' levies', 40), (' Advertising expenses ', 38), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Selling Expenses ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' depreciation ', 31), (' Selling & distribution expenses ', 30), (' Sales and marketing ', 29), (' property espense ', 29), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' employee benefits expense ', 21), (' employee benefit espense ', 21), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 15), (' Administration ', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing ', 50), (' Lease expenses ', 40), (' Selling Expenses ', 40), (' Royalties ', 38), (' Marketing expenses ', 36), (' Amortisation expenses ', 35), (' Selling & distribution expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' levies', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Logistics and distribution ', 28), (' Depreciation expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Advertising expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' Occupancy expenses ', 19), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' depreciation ', 32), (' Marketing expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Royalties ', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Advertising expenses ', 30), (' Distribution expenses ', 29), (' Administrative and other expenses ', 26), (' Occupancy expenses ', 25), (' Selling & distribution expenses ', 24), (' Occupancy ', 24), (' Depreciation expenses ', 23), (' Sales and marketing ', 22), (' Administrative expenses ', 21), (' Administration expenses ', 21), (' Administration ', 19), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' Management expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other expenses ', 61), (' Other expenses ', 61), (' Other expenses ', 61), (' Administrative and other expenses ', 43), (' Administration ', 40), (' property espense ', 38), (' Amortisation expenses ', 32), (' Sales and marketing ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Lease expenses ', 27), (' Selling Expenses ', 27), (' Depreciation and amortisation expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Depreciation expenses ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Advertising expenses ', 23), (' depreciation ', 22), (' Distribution expenses ', 22), (' Royalties ', 22), (' Management expenses ', 17), (' levies', 13), ('expenses ', 12), (' Occupancy ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses ', 100), ('expenses ', 67), (' other expenses ', 67), (' Other expenses ', 67), (' Other expenses ', 67), (' Lease expenses ', 61), (' Selling Expenses ', 61), (' Occupancy ', 59), (' property espense ', 59), (' Management expenses ', 58), (' Marketing expenses ', 56), (' Depreciation expenses ', 46), (' Amortisation expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Administrative expenses ', 43), (' Administration expenses ', 43), (' depreciation ', 42), (' Selling & distribution expenses ', 42), (' Administrative and other expenses ', 42), (' employee benefits expense ', 35), (' Depreciation and amortisation expenses ', 32), (' employee benefit espense ', 29), (' Logistics and distribution ', 25), (' Administration ', 19), (' Sales and marketing ', 15), (' levies', 12), (' Royalties ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Administrative expenses ', 100), (' Administration expenses ', 100), (' Administrative and other expenses ', 76), (' Distribution expenses ', 75), (' Amortisation expenses ', 73), (' Administration ', 72), (' Advertising expenses ', 71), (' Selling & distribution expenses ', 65), (' Depreciation expenses ', 60), (' Depreciation and amortisation expenses ', 57), ('expenses ', 55), (' employee benefits expense ', 53), (' employee benefit espense ', 47), (' Lease expenses ', 44), (' Selling Expenses ', 44), (' Logistics and distribution ', 44), (' other expenses ', 43), (' Occupancy expenses ', 43), (' Other expenses ', 43), (' Management expenses ', 43), (' Other expenses ', 43), (' Marketing expenses ', 41), (' Sales and marketing ', 39), (' depreciation ', 35), (' property espense ', 32), (' Royalties ', 17), (' Occupancy ', 10), (' levies', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' other expenses ', 100), (' Other expenses ', 100), (' Other expenses ', 100), (' Lease expenses ', 70), (' Selling Expenses ', 70), ('expenses ', 67), (' Occupancy expenses ', 67), (' property espense ', 67), (' Marketing expenses ', 64), (' Administrative and other expenses ', 63), (' Management expenses ', 58), (' Selling & distribution expenses ', 48), (' Depreciation expenses ', 46), (' Amortisation expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Administrative expenses ', 43), (' Administration expenses ', 43), (' Administration ', 38), (' employee benefits expense ', 35), (' depreciation ', 32), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' employee benefit espense ', 29), (' Royalties ', 21), (' Occupancy ', 12), (' levies', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 36), (' Other expenses ', 36), (' Other expenses ', 36), (' depreciation ', 35), (' Marketing expenses ', 34), (' Administrative and other expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Logistics and distribution ', 33), (' levies', 30), (' Occupancy expenses ', 29), (' Depreciation expenses ', 27), (' Selling & distribution expenses ', 27), (' Advertising expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Royalties ', 26), (' Distribution expenses ', 25), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Lease expenses ', 22), (' Selling Expenses ', 22), (' Management expenses ', 21), (' Occupancy ', 19), (' Sales and marketing ', 19), ('expenses ', 18), (' Administration ', 16)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administrative and other expenses ', 37), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Administration ', 29), (' other expenses ', 25), (' Occupancy expenses ', 25), (' Other expenses ', 25), (' Management expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Occupancy ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Depreciation expenses ', 23), (' Amortisation expenses ', 23), (' Advertising expenses ', 22), (' property espense ', 22), (' depreciation ', 21), (' Distribution expenses ', 21), (' Royalties ', 21), (' Selling & distribution expenses ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Management expenses ', 35), (' Royalties ', 33), (' Depreciation and amortisation expenses ', 32), (' Amortisation expenses ', 32), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Administrative and other expenses ', 27), (' Lease expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Occupancy ', 25), (' Depreciation expenses ', 24), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' property espense ', 23), (' depreciation ', 22), (' Administration ', 20), (' Selling Expenses ', 18), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' other expenses ', 17), (' Other expenses ', 17), (' Other expenses ', 17), (' levies', 13), ('expenses ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [(' Sales and marketing ', 39), (' Administrative and other expenses ', 38), (' Marketing expenses ', 34), (' Depreciation and amortisation expenses ', 33), (' Logistics and distribution ', 33), (' employee benefits expense ', 32), (' property espense ', 32), (' employee benefit espense ', 32), (' Administration ', 32), (' Administrative expenses ', 31), (' Administration expenses ', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Depreciation expenses ', 27), (' Selling & distribution expenses ', 27), (' Amortisation expenses ', 27), (' Advertising expenses ', 26), (' Distribution expenses ', 25), (' Lease expenses ', 22), (' Selling Expenses ', 22), (' Occupancy expenses ', 21), (' Occupancy ', 19), (' depreciation ', 17), (' Royalties ', 17), (' levies', 10), ('expenses ', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [(' Administrative and other expenses ', 38), (' Depreciation and amortisation expenses ', 38), (' Logistics and distribution ', 35), (' Selling & distribution expenses ', 32), (' Sales and marketing ', 32), (' property espense ', 32), (' Administrative expenses ', 31), (' Administration expenses ', 31), (' employee benefits expense ', 31), (' employee benefit espense ', 31), (' Amortisation expenses ', 29), (' Distribution expenses ', 28), (' other expenses ', 27), (' Other expenses ', 27), (' Other expenses ', 27), (' Marketing expenses ', 26), (' Depreciation expenses ', 26), (' Advertising expenses ', 25), (' Administration ', 25), (' Lease expenses ', 20), (' Selling Expenses ', 20), (' Management expenses ', 20), (' Occupancy expenses ', 17), ('expenses ', 15), (' depreciation ', 15), (' Occupancy ', 15), (' Royalties ', 15), (' levies', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 38), (' property espense ', 38), (' employee benefits expense ', 37), (' employee benefit espense ', 37), (' Logistics and distribution ', 34), (' Distribution expenses ', 33), (' other expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), (' Marketing expenses ', 30), (' Administrative and other expenses ', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Advertising expenses ', 29), (' Amortisation expenses ', 29), (' Sales and marketing ', 29), (' Administrative expenses ', 28), (' Administration expenses ', 28), (' Occupancy expenses ', 26), (' Lease expenses ', 26), (' Management expenses ', 26), (' depreciation ', 24), (' Royalties ', 24), (' Administration ', 22), (' Selling Expenses ', 21), (' Occupancy ', 19), ('expenses ', 18), (' levies', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [(' employee benefits expense ', 56), (' employee benefit espense ', 51), (' Lease expenses ', 36), (' other expenses ', 34), (' Other expenses ', 34), (' Management expenses ', 34), (' Other expenses ', 34), (' Marketing expenses ', 33), (' Administrative and other expenses ', 33), (' Depreciation expenses ', 32), (' Logistics and distribution ', 32), (' Advertising expenses ', 31), (' Sales and marketing ', 31), (' property espense ', 31), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Selling Expenses ', 29), (' Occupancy expenses ', 28), (' Depreciation and amortisation expenses ', 28), ('expenses ', 26), (' Selling & distribution expenses ', 26), (' Amortisation expenses ', 26), (' depreciation ', 25), (' Administration ', 23), (' levies', 19), (' Royalties ', 17), (' Occupancy ', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [(' property espense ', 41), (' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Selling & distribution expenses ', 36), (' Administrative and other expenses ', 36), (' Distribution expenses ', 35), (' Depreciation expenses ', 32), (' Amortisation expenses ', 32), (' Logistics and distribution ', 32), (' employee benefits expense ', 30), (' employee benefit espense ', 30), (' Lease expenses ', 29), (' Marketing expenses ', 27), (' Advertising expenses ', 26), (' Sales and marketing ', 26), (' Royalties ', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Selling Expenses ', 23), (' Management expenses ', 22), (' depreciation ', 19), (' Administration ', 18), (' Occupancy expenses ', 17), (' Occupancy ', 14), (' levies', 14), ('expenses ', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other expenses ', 59), (' Other expenses ', 59), (' Other expenses ', 59), (' Administrative and other expenses ', 50), (' property espense ', 43), (' Marketing expenses ', 40), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Occupancy expenses ', 35), (' Management expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Administration ', 32), ('expenses ', 29), (' Logistics and distribution ', 29), (' depreciation ', 28), (' Advertising expenses ', 27), (' Sales and marketing ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Royalties ', 21), (' Occupancy ', 15), (' levies', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [(' Depreciation and amortisation expenses ', 40), (' employee benefits expense ', 39), (' employee benefit espense ', 39), (' Administrative and other expenses ', 37), (' Logistics and distribution ', 37), (' Marketing expenses ', 35), (' Sales and marketing ', 33), (' property espense ', 33), (' Selling & distribution expenses ', 30), (' Advertising expenses ', 30), (' Amortisation expenses ', 30), (' Distribution expenses ', 29), (' Lease expenses ', 28), (' other expenses ', 27), (' Other expenses ', 27), (' Management expenses ', 27), (' Other expenses ', 27), (' depreciation ', 26), (' Depreciation expenses ', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Occupancy expenses ', 24), (' Selling Expenses ', 24), (' Royalties ', 22), (' Administration ', 21), ('expenses ', 18), (' levies', 14), (' Occupancy ', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [(' Depreciation and amortisation expenses ', 39), (' Administrative and other expenses ', 37), (' Sales and marketing ', 33), (' employee benefits expense ', 33), (' employee benefit espense ', 33), (' Logistics and distribution ', 31), (' property espense ', 30), (' Depreciation expenses ', 27), (' Selling & distribution expenses ', 27), (' Advertising expenses ', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' other expenses ', 25), (' Other expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Amortisation expenses ', 24), (' Distribution expenses ', 23), (' Lease expenses ', 21), (' Management expenses ', 21), (' Occupancy expenses ', 18), (' Selling Expenses ', 18), (' depreciation ', 15), (' Administration ', 15), (' Royalties ', 15), ('expenses ', 12), (' Occupancy ', 12), (' levies', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [(' Lease expenses ', 46), (' Management expenses ', 44), (' Marketing expenses ', 43), (' property espense ', 40), ('expenses ', 38), (' Selling Expenses ', 38), (' other expenses ', 37), (' Other expenses ', 37), (' Other expenses ', 37), (' Royalties ', 36), (' Depreciation expenses ', 34), (' Administrative and other expenses ', 34), (' Depreciation and amortisation expenses ', 34), (' Amortisation expenses ', 34), (' Selling & distribution expenses ', 33), (' Advertising expenses ', 33), (' Sales and marketing ', 33), (' Administration ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Occupancy expenses ', 30), (' Logistics and distribution ', 29), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' levies', 21), (' depreciation ', 18), (' Occupancy ', 0)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [(' Administrative and other expenses ', 42), (' Sales and marketing ', 34), (' employee benefit espense ', 33), (' other expenses ', 32), (' Other expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Other expenses ', 32), (' Logistics and distribution ', 31), (' employee benefits expense ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Marketing expenses ', 29), (' Selling & distribution expenses ', 28), (' Amortisation expenses ', 28), (' property espense ', 28), (' Administration ', 27), (' Management expenses ', 26), (' Depreciation expenses ', 25), (' Advertising expenses ', 25), (' Distribution expenses ', 24), (' Lease expenses ', 23), (' Selling Expenses ', 23), (' Occupancy expenses ', 19), (' depreciation ', 18), (' Occupancy ', 15), ('expenses ', 14), (' Royalties ', 11), (' levies', 7)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' other expenses ', 45), (' Other expenses ', 45), (' Administrative and other expenses ', 45), (' Other expenses ', 45), (' property espense ', 38), (' Marketing expenses ', 36), (' Management expenses ', 36), (' Depreciation expenses ', 35), (' Depreciation and amortisation expenses ', 34), (' Administrative expenses ', 33), (' Lease expenses ', 33), (' Administration expenses ', 33), (' employee benefits expense ', 33), (' Occupancy expenses ', 32), (' employee benefit espense ', 30), (' Administration ', 29), (' Selling Expenses ', 28), (' Logistics and distribution ', 27), (' depreciation ', 26), (' Selling & distribution expenses ', 26), (' Amortisation expenses ', 26), (' Sales and marketing ', 26), ('expenses ', 21), (' Distribution expenses ', 21), (' Advertising expenses ', 21), (' Occupancy ', 16), (' Royalties ', 15), (' levies', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [(' Administrative and other expenses ', 37), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' Depreciation and amortisation expenses ', 32), (' employee benefits expense ', 31), (' property espense ', 31), (' employee benefit espense ', 31), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Administrative expenses ', 28), (' Administration expenses ', 28), (' Marketing expenses ', 26), (' Occupancy expenses ', 26), (' Management expenses ', 26), (' Distribution expenses ', 25), (' Amortisation expenses ', 25), (' Sales and marketing ', 25), (' Lease expenses ', 23), (' Logistics and distribution ', 23), (' Advertising expenses ', 22), (' Administration ', 21), (' Selling Expenses ', 20), (' depreciation ', 18), ('expenses ', 15), (' Royalties ', 14), (' Occupancy ', 11), (' levies', 8)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [(' Administrative and other expenses ', 41), (' Depreciation and amortisation expenses ', 34), (' Logistics and distribution ', 34), (' Sales and marketing ', 33), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' other expenses ', 29), (' Other expenses ', 29), (' Other expenses ', 29), (' Selling & distribution expenses ', 28), (' Advertising expenses ', 28), (' Amortisation expenses ', 28), (' employee benefits expense ', 28), (' property espense ', 28), (' employee benefit espense ', 28), (' Distribution expenses ', 27), (' Marketing expenses ', 26), (' Depreciation expenses ', 25), (' Lease expenses ', 24), (' Selling Expenses ', 24), (' Administration ', 24), (' Occupancy expenses ', 23), (' Management expenses ', 23), (' depreciation ', 19), (' Royalties ', 16), ('expenses ', 13), (' Occupancy ', 10), (' levies', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 7], 'score': 100, 'value': -21725.0, 'line_item_label': ['Occupancy expenses', 'Administration expenses', 'Other expenses'], 'note_numbers': [nan, '10.', '9.'], 'line_item_value': [-817.0, -20903.0, -5.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Amortisation expenses ', 46), (' property espense ', 44), (' Distribution expenses ', 43), (' other expenses ', 42), (' Other expenses ', 42), (' Other expenses ', 42), (' Depreciation expenses ', 38), (' Logistics and distribution ', 38), (' Administrative and other expenses ', 37), (' Advertising expenses ', 37), (' Depreciation and amortisation expenses ', 37), (' Administrative expenses ', 36), (' Selling & distribution expenses ', 36), (' Administration expenses ', 36), (' Occupancy ', 35), (' employee benefits expense ', 35), (' employee benefit espense ', 35), (' Occupancy expenses ', 33), (' Royalties ', 32), (' Sales and marketing ', 30), (' Administration ', 29), (' Lease expenses ', 26), (' Selling Expenses ', 26), (' Marketing expenses ', 24), ('expenses ', 22), (' depreciation ', 21), (' Management expenses ', 17), (' levies', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expenses ', 50), (' Occupancy expenses ', 44), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' levies', 40), (' Advertising expenses ', 38), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Selling Expenses ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' depreciation ', 31), (' Selling & distribution expenses ', 30), (' Sales and marketing ', 29), (' property espense ', 29), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' employee benefits expense ', 21), (' employee benefit espense ', 21), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 15), (' Administration ', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing ', 50), (' Lease expenses ', 40), (' Selling Expenses ', 40), (' Royalties ', 38), (' Marketing expenses ', 36), (' Amortisation expenses ', 35), (' Selling & distribution expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' levies', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Logistics and distribution ', 28), (' Depreciation expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Advertising expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' Occupancy expenses ', 19), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' depreciation ', 32), (' Marketing expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Royalties ', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Advertising expenses ', 30), (' Distribution expenses ', 29), (' Administrative and other expenses ', 26), (' Occupancy expenses ', 25), (' Selling & distribution expenses ', 24), (' Occupancy ', 24), (' Depreciation expenses ', 23), (' Sales and marketing ', 22), (' Administrative expenses ', 21), (' Administration expenses ', 21), (' Administration ', 19), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' Management expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other expenses ', 61), (' Other expenses ', 61), (' Other expenses ', 61), (' Administrative and other expenses ', 43), (' Administration ', 40), (' property espense ', 38), (' Amortisation expenses ', 32), (' Sales and marketing ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Lease expenses ', 27), (' Selling Expenses ', 27), (' Depreciation and amortisation expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Depreciation expenses ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Advertising expenses ', 23), (' depreciation ', 22), (' Distribution expenses ', 22), (' Royalties ', 22), (' Management expenses ', 17), (' levies', 13), ('expenses ', 12), (' Occupancy ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses ', 100), ('expenses ', 67), (' other expenses ', 67), (' Other expenses ', 67), (' Other expenses ', 67), (' Lease expenses ', 61), (' Selling Expenses ', 61), (' Occupancy ', 59), (' property espense ', 59), (' Management expenses ', 58), (' Marketing expenses ', 56), (' Depreciation expenses ', 46), (' Amortisation expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Administrative expenses ', 43), (' Administration expenses ', 43), (' depreciation ', 42), (' Selling & distribution expenses ', 42), (' Administrative and other expenses ', 42), (' employee benefits expense ', 35), (' Depreciation and amortisation expenses ', 32), (' employee benefit espense ', 29), (' Logistics and distribution ', 25), (' Administration ', 19), (' Sales and marketing ', 15), (' levies', 12), (' Royalties ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Administrative expenses ', 100), (' Administration expenses ', 100), (' Administrative and other expenses ', 76), (' Distribution expenses ', 75), (' Amortisation expenses ', 73), (' Administration ', 72), (' Advertising expenses ', 71), (' Selling & distribution expenses ', 65), (' Depreciation expenses ', 60), (' Depreciation and amortisation expenses ', 57), ('expenses ', 55), (' employee benefits expense ', 53), (' employee benefit espense ', 47), (' Lease expenses ', 44), (' Selling Expenses ', 44), (' Logistics and distribution ', 44), (' other expenses ', 43), (' Occupancy expenses ', 43), (' Other expenses ', 43), (' Management expenses ', 43), (' Other expenses ', 43), (' Marketing expenses ', 41), (' Sales and marketing ', 39), (' depreciation ', 35), (' property espense ', 32), (' Royalties ', 17), (' Occupancy ', 10), (' levies', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' other expenses ', 100), (' Other expenses ', 100), (' Other expenses ', 100), (' Lease expenses ', 70), (' Selling Expenses ', 70), ('expenses ', 67), (' Occupancy expenses ', 67), (' property espense ', 67), (' Marketing expenses ', 64), (' Administrative and other expenses ', 63), (' Management expenses ', 58), (' Selling & distribution expenses ', 48), (' Depreciation expenses ', 46), (' Amortisation expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Administrative expenses ', 43), (' Administration expenses ', 43), (' Administration ', 38), (' employee benefits expense ', 35), (' depreciation ', 32), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' employee benefit espense ', 29), (' Royalties ', 21), (' Occupancy ', 12), (' levies', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 36), (' Other expenses ', 36), (' Other expenses ', 36), (' depreciation ', 35), (' Marketing expenses ', 34), (' Administrative and other expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Logistics and distribution ', 33), (' levies', 30), (' Occupancy expenses ', 29), (' Depreciation expenses ', 27), (' Selling & distribution expenses ', 27), (' Advertising expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Royalties ', 26), (' Distribution expenses ', 25), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Lease expenses ', 22), (' Selling Expenses ', 22), (' Management expenses ', 21), (' Occupancy ', 19), (' Sales and marketing ', 19), ('expenses ', 18), (' Administration ', 16)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administrative and other expenses ', 37), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Administration ', 29), (' other expenses ', 25), (' Occupancy expenses ', 25), (' Other expenses ', 25), (' Management expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Occupancy ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Depreciation expenses ', 23), (' Amortisation expenses ', 23), (' Advertising expenses ', 22), (' property espense ', 22), (' depreciation ', 21), (' Distribution expenses ', 21), (' Royalties ', 21), (' Selling & distribution expenses ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Management expenses ', 35), (' Royalties ', 33), (' Depreciation and amortisation expenses ', 32), (' Amortisation expenses ', 32), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Administrative and other expenses ', 27), (' Lease expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Occupancy ', 25), (' Depreciation expenses ', 24), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' property espense ', 23), (' depreciation ', 22), (' Administration ', 20), (' Selling Expenses ', 18), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' other expenses ', 17), (' Other expenses ', 17), (' Other expenses ', 17), (' levies', 13), ('expenses ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [(' Sales and marketing ', 39), (' Administrative and other expenses ', 38), (' Marketing expenses ', 34), (' Depreciation and amortisation expenses ', 33), (' Logistics and distribution ', 33), (' employee benefits expense ', 32), (' property espense ', 32), (' employee benefit espense ', 32), (' Administration ', 32), (' Administrative expenses ', 31), (' Administration expenses ', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Depreciation expenses ', 27), (' Selling & distribution expenses ', 27), (' Amortisation expenses ', 27), (' Advertising expenses ', 26), (' Distribution expenses ', 25), (' Lease expenses ', 22), (' Selling Expenses ', 22), (' Occupancy expenses ', 21), (' Occupancy ', 19), (' depreciation ', 17), (' Royalties ', 17), (' levies', 10), ('expenses ', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [(' Administrative and other expenses ', 38), (' Depreciation and amortisation expenses ', 38), (' Logistics and distribution ', 35), (' Selling & distribution expenses ', 32), (' Sales and marketing ', 32), (' property espense ', 32), (' Administrative expenses ', 31), (' Administration expenses ', 31), (' employee benefits expense ', 31), (' employee benefit espense ', 31), (' Amortisation expenses ', 29), (' Distribution expenses ', 28), (' other expenses ', 27), (' Other expenses ', 27), (' Other expenses ', 27), (' Marketing expenses ', 26), (' Depreciation expenses ', 26), (' Advertising expenses ', 25), (' Administration ', 25), (' Lease expenses ', 20), (' Selling Expenses ', 20), (' Management expenses ', 20), (' Occupancy expenses ', 17), ('expenses ', 15), (' depreciation ', 15), (' Occupancy ', 15), (' Royalties ', 15), (' levies', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 38), (' property espense ', 38), (' employee benefits expense ', 37), (' employee benefit espense ', 37), (' Logistics and distribution ', 34), (' Distribution expenses ', 33), (' other expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), (' Marketing expenses ', 30), (' Administrative and other expenses ', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Advertising expenses ', 29), (' Amortisation expenses ', 29), (' Sales and marketing ', 29), (' Administrative expenses ', 28), (' Administration expenses ', 28), (' Occupancy expenses ', 26), (' Lease expenses ', 26), (' Management expenses ', 26), (' depreciation ', 24), (' Royalties ', 24), (' Administration ', 22), (' Selling Expenses ', 21), (' Occupancy ', 19), ('expenses ', 18), (' levies', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [(' employee benefits expense ', 56), (' employee benefit espense ', 51), (' Lease expenses ', 36), (' other expenses ', 34), (' Other expenses ', 34), (' Management expenses ', 34), (' Other expenses ', 34), (' Marketing expenses ', 33), (' Administrative and other expenses ', 33), (' Depreciation expenses ', 32), (' Logistics and distribution ', 32), (' Advertising expenses ', 31), (' Sales and marketing ', 31), (' property espense ', 31), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Selling Expenses ', 29), (' Occupancy expenses ', 28), (' Depreciation and amortisation expenses ', 28), ('expenses ', 26), (' Selling & distribution expenses ', 26), (' Amortisation expenses ', 26), (' depreciation ', 25), (' Administration ', 23), (' levies', 19), (' Royalties ', 17), (' Occupancy ', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [(' property espense ', 41), (' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Selling & distribution expenses ', 36), (' Administrative and other expenses ', 36), (' Distribution expenses ', 35), (' Depreciation expenses ', 32), (' Amortisation expenses ', 32), (' Logistics and distribution ', 32), (' employee benefits expense ', 30), (' employee benefit espense ', 30), (' Lease expenses ', 29), (' Marketing expenses ', 27), (' Advertising expenses ', 26), (' Sales and marketing ', 26), (' Royalties ', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Selling Expenses ', 23), (' Management expenses ', 22), (' depreciation ', 19), (' Administration ', 18), (' Occupancy expenses ', 17), (' Occupancy ', 14), (' levies', 14), ('expenses ', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other expenses ', 59), (' Other expenses ', 59), (' Other expenses ', 59), (' Administrative and other expenses ', 50), (' property espense ', 43), (' Marketing expenses ', 40), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Occupancy expenses ', 35), (' Management expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Administration ', 32), ('expenses ', 29), (' Logistics and distribution ', 29), (' depreciation ', 28), (' Advertising expenses ', 27), (' Sales and marketing ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Royalties ', 21), (' Occupancy ', 15), (' levies', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [(' Depreciation and amortisation expenses ', 40), (' employee benefits expense ', 39), (' employee benefit espense ', 39), (' Administrative and other expenses ', 37), (' Logistics and distribution ', 37), (' Marketing expenses ', 35), (' Sales and marketing ', 33), (' property espense ', 33), (' Selling & distribution expenses ', 30), (' Advertising expenses ', 30), (' Amortisation expenses ', 30), (' Distribution expenses ', 29), (' Lease expenses ', 28), (' other expenses ', 27), (' Other expenses ', 27), (' Management expenses ', 27), (' Other expenses ', 27), (' depreciation ', 26), (' Depreciation expenses ', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Occupancy expenses ', 24), (' Selling Expenses ', 24), (' Royalties ', 22), (' Administration ', 21), ('expenses ', 18), (' levies', 14), (' Occupancy ', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [(' Depreciation and amortisation expenses ', 39), (' Administrative and other expenses ', 37), (' Sales and marketing ', 33), (' employee benefits expense ', 33), (' employee benefit espense ', 33), (' Logistics and distribution ', 31), (' property espense ', 30), (' Depreciation expenses ', 27), (' Selling & distribution expenses ', 27), (' Advertising expenses ', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' other expenses ', 25), (' Other expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Amortisation expenses ', 24), (' Distribution expenses ', 23), (' Lease expenses ', 21), (' Management expenses ', 21), (' Occupancy expenses ', 18), (' Selling Expenses ', 18), (' depreciation ', 15), (' Administration ', 15), (' Royalties ', 15), ('expenses ', 12), (' Occupancy ', 12), (' levies', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [(' Lease expenses ', 46), (' Management expenses ', 44), (' Marketing expenses ', 43), (' property espense ', 40), ('expenses ', 38), (' Selling Expenses ', 38), (' other expenses ', 37), (' Other expenses ', 37), (' Other expenses ', 37), (' Royalties ', 36), (' Depreciation expenses ', 34), (' Administrative and other expenses ', 34), (' Depreciation and amortisation expenses ', 34), (' Amortisation expenses ', 34), (' Selling & distribution expenses ', 33), (' Advertising expenses ', 33), (' Sales and marketing ', 33), (' Administration ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Occupancy expenses ', 30), (' Logistics and distribution ', 29), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' levies', 21), (' depreciation ', 18), (' Occupancy ', 0)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [(' Administrative and other expenses ', 42), (' Sales and marketing ', 34), (' employee benefit espense ', 33), (' other expenses ', 32), (' Other expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Other expenses ', 32), (' Logistics and distribution ', 31), (' employee benefits expense ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Marketing expenses ', 29), (' Selling & distribution expenses ', 28), (' Amortisation expenses ', 28), (' property espense ', 28), (' Administration ', 27), (' Management expenses ', 26), (' Depreciation expenses ', 25), (' Advertising expenses ', 25), (' Distribution expenses ', 24), (' Lease expenses ', 23), (' Selling Expenses ', 23), (' Occupancy expenses ', 19), (' depreciation ', 18), (' Occupancy ', 15), ('expenses ', 14), (' Royalties ', 11), (' levies', 7)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' other expenses ', 45), (' Other expenses ', 45), (' Administrative and other expenses ', 45), (' Other expenses ', 45), (' property espense ', 38), (' Marketing expenses ', 36), (' Management expenses ', 36), (' Depreciation expenses ', 35), (' Depreciation and amortisation expenses ', 34), (' Administrative expenses ', 33), (' Lease expenses ', 33), (' Administration expenses ', 33), (' employee benefits expense ', 33), (' Occupancy expenses ', 32), (' employee benefit espense ', 30), (' Administration ', 29), (' Selling Expenses ', 28), (' Logistics and distribution ', 27), (' depreciation ', 26), (' Selling & distribution expenses ', 26), (' Amortisation expenses ', 26), (' Sales and marketing ', 26), ('expenses ', 21), (' Distribution expenses ', 21), (' Advertising expenses ', 21), (' Occupancy ', 16), (' Royalties ', 15), (' levies', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [(' Administrative and other expenses ', 37), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' Depreciation and amortisation expenses ', 32), (' employee benefits expense ', 31), (' property espense ', 31), (' employee benefit espense ', 31), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Administrative expenses ', 28), (' Administration expenses ', 28), (' Marketing expenses ', 26), (' Occupancy expenses ', 26), (' Management expenses ', 26), (' Distribution expenses ', 25), (' Amortisation expenses ', 25), (' Sales and marketing ', 25), (' Lease expenses ', 23), (' Logistics and distribution ', 23), (' Advertising expenses ', 22), (' Administration ', 21), (' Selling Expenses ', 20), (' depreciation ', 18), ('expenses ', 15), (' Royalties ', 14), (' Occupancy ', 11), (' levies', 8)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [(' Administrative and other expenses ', 41), (' Depreciation and amortisation expenses ', 34), (' Logistics and distribution ', 34), (' Sales and marketing ', 33), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' other expenses ', 29), (' Other expenses ', 29), (' Other expenses ', 29), (' Selling & distribution expenses ', 28), (' Advertising expenses ', 28), (' Amortisation expenses ', 28), (' employee benefits expense ', 28), (' property espense ', 28), (' employee benefit espense ', 28), (' Distribution expenses ', 27), (' Marketing expenses ', 26), (' Depreciation expenses ', 25), (' Lease expenses ', 24), (' Selling Expenses ', 24), (' Administration ', 24), (' Occupancy expenses ', 23), (' Management expenses ', 23), (' depreciation ', 19), (' Royalties ', 16), ('expenses ', 13), (' Occupancy ', 10), (' levies', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 7], 'score': 100, 'value': -21808.0, 'line_item_label': ['Occupancy expenses', 'Administration expenses', 'Other expenses'], 'note_numbers': [nan, '10.', '9.'], 'line_item_value': [-828.0, -20918.0, -62.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses', ' Occupancy', ' Occupancy expenses']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Administration expenses ', 36), (' Occupancy ', 35), (' Occupancy expenses', 33), ('Rent ', 25), (' Rental expenses ', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent ', 60), (' Occupancy expenses', 44), (' Administration expenses ', 36), (' Rental expenses ', 32), (' Occupancy ', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 32), (' Occupancy expenses', 19), ('Rent ', 15), (' Occupancy ', 14)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 24), (' Administration expenses ', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses ', 30), ('Rent ', 27), (' Occupancy expenses', 26), (' Rental expenses ', 25), (' Occupancy ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses', 100), (' Occupancy ', 59), (' Rental expenses ', 56), (' Administration expenses ', 43), ('Rent ', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Administration expenses ', 100), (' Occupancy expenses', 43), (' Rental expenses ', 41), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses ', 64), (' Administration expenses ', 43), ('Rent ', 38), (' Occupancy ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Rental expenses ', 34), (' Occupancy expenses', 29), (' Administration expenses ', 25), ('Rent ', 20), (' Occupancy ', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administration expenses ', 29), (' Occupancy expenses', 25), (' Rental expenses ', 24), (' Occupancy ', 24), ('Rent ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Rental expenses ', 33), (' Administration expenses ', 30), (' Occupancy expenses', 26), (' Occupancy ', 25), ('Rent ', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [(' Administration expenses ', 31), (' Rental expenses ', 28), (' Occupancy expenses', 21), ('Rent ', 20), (' Occupancy ', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [(' Administration expenses ', 31), (' Rental expenses ', 26), (' Occupancy expenses', 17), (' Occupancy ', 15), ('Rent ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [(' Rental expenses ', 35), (' Administration expenses ', 28), (' Occupancy expenses', 26), ('Rent ', 19), (' Occupancy ', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [(' Rental expenses ', 40), (' Administration expenses ', 30), ('Rent ', 29), (' Occupancy expenses', 28), (' Occupancy ', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [(' Rental expenses ', 27), (' Administration expenses ', 25), (' Occupancy expenses', 17), ('Rent ', 14), (' Occupancy ', 14)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Rental expenses ', 40), (' Occupancy expenses', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [(' Rental expenses ', 31), (' Administration expenses ', 25), (' Occupancy expenses', 24), ('Rent ', 14), (' Occupancy ', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [(' Rental expenses ', 28), (' Administration expenses ', 26), (' Occupancy expenses', 18), ('Rent ', 12), (' Occupancy ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [(' Rental expenses ', 43), ('Rent ', 42), (' Administration expenses ', 32), (' Occupancy expenses', 30), (' Occupancy ', 0)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [(' Administration expenses ', 30), (' Rental expenses ', 29), (' Occupancy expenses', 19), ('Rent ', 15), (' Occupancy ', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 33), (' Occupancy expenses', 32), ('Rent ', 22), (' Occupancy ', 16)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [(' Rental expenses ', 29), (' Administration expenses ', 28), (' Occupancy expenses', 26), ('Rent ', 15), (' Occupancy ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [(' Administration expenses ', 30), (' Rental expenses ', 29), (' Occupancy expenses', 23), ('Rent ', 13), (' Occupancy ', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6], 'score': 100, 'value': -21720.0, 'line_item_label': ['Occupancy expenses', 'Administration expenses'], 'note_numbers': [nan, '10.'], 'line_item_value': [-817.0, -20903.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Administration expenses ', 36), (' Occupancy ', 35), (' Occupancy expenses', 33), ('Rent ', 25), (' Rental expenses ', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent ', 60), (' Occupancy expenses', 44), (' Administration expenses ', 36), (' Rental expenses ', 32), (' Occupancy ', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 32), (' Occupancy expenses', 19), ('Rent ', 15), (' Occupancy ', 14)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 24), (' Administration expenses ', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses ', 30), ('Rent ', 27), (' Occupancy expenses', 26), (' Rental expenses ', 25), (' Occupancy ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Occupancy expenses', 100), (' Occupancy ', 59), (' Rental expenses ', 56), (' Administration expenses ', 43), ('Rent ', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Administration expenses ', 100), (' Occupancy expenses', 43), (' Rental expenses ', 41), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses ', 64), (' Administration expenses ', 43), ('Rent ', 38), (' Occupancy ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Rental expenses ', 34), (' Occupancy expenses', 29), (' Administration expenses ', 25), ('Rent ', 20), (' Occupancy ', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administration expenses ', 29), (' Occupancy expenses', 25), (' Rental expenses ', 24), (' Occupancy ', 24), ('Rent ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Rental expenses ', 33), (' Administration expenses ', 30), (' Occupancy expenses', 26), (' Occupancy ', 25), ('Rent ', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [(' Administration expenses ', 31), (' Rental expenses ', 28), (' Occupancy expenses', 21), ('Rent ', 20), (' Occupancy ', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [(' Administration expenses ', 31), (' Rental expenses ', 26), (' Occupancy expenses', 17), (' Occupancy ', 15), ('Rent ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [(' Rental expenses ', 35), (' Administration expenses ', 28), (' Occupancy expenses', 26), ('Rent ', 19), (' Occupancy ', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [(' Rental expenses ', 40), (' Administration expenses ', 30), ('Rent ', 29), (' Occupancy expenses', 28), (' Occupancy ', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [(' Rental expenses ', 27), (' Administration expenses ', 25), (' Occupancy expenses', 17), ('Rent ', 14), (' Occupancy ', 14)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Rental expenses ', 40), (' Occupancy expenses', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [(' Rental expenses ', 31), (' Administration expenses ', 25), (' Occupancy expenses', 24), ('Rent ', 14), (' Occupancy ', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [(' Rental expenses ', 28), (' Administration expenses ', 26), (' Occupancy expenses', 18), ('Rent ', 12), (' Occupancy ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [(' Rental expenses ', 43), ('Rent ', 42), (' Administration expenses ', 32), (' Occupancy expenses', 30), (' Occupancy ', 0)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [(' Administration expenses ', 30), (' Rental expenses ', 29), (' Occupancy expenses', 19), ('Rent ', 15), (' Occupancy ', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 33), (' Occupancy expenses', 32), ('Rent ', 22), (' Occupancy ', 16)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [(' Rental expenses ', 29), (' Administration expenses ', 28), (' Occupancy expenses', 26), ('Rent ', 15), (' Occupancy ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [(' Administration expenses ', 30), (' Rental expenses ', 29), (' Occupancy expenses', 23), ('Rent ', 13), (' Occupancy ', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6], 'score': 100, 'value': -21746.0, 'line_item_label': ['Occupancy expenses', 'Administration expenses'], 'note_numbers': [nan, '10.'], 'line_item_value': [-828.0, -20918.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['other operating', 'Other revenue', ' Other income']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['Other income ', ' Commission revenue ', ' Rent ', ' rental revenue']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Other income', 52), ('other operating', 45), ('Other revenue', 33)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 38), ('other operating', 32)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('other operating', 36), ('Other revenue', 33), (' Other income', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('Other revenue', 43), (' Other income', 30), ('other operating', 23)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue', 42)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('other operating', 54), (' Other income', 37), ('Other revenue', 36)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Other income', 43), ('other operating', 18), ('Other revenue', 17)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue', 35), (' Other income', 27), ('other operating', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [(' Other income', 52), ('other operating', 23), ('Other revenue', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [(' Other income', 34), ('other operating', 24), ('Other revenue', 23)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [(' Other income', 42), ('other operating', 27), ('Other revenue', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [(' Other income', 50), ('other operating', 30), ('Other revenue', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [('other operating', 47), (' Other income', 40), ('Other revenue', 33)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [(' Other income', 28), ('other operating', 24), ('Other revenue', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [('other operating', 25), ('Other revenue', 25), (' Other income', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [('other operating', 40), ('Other revenue', 37), (' Other income', 23)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [(' Other income', 36), ('other operating', 30), ('Other revenue', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' Other income', 51), ('other operating', 43), ('Other revenue', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [(' Other income', 37), ('other operating', 34), ('Other revenue', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [(' Other income', 32), ('other operating', 30), ('Other revenue', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 723.0, 'line_item_label': ['Other income'], 'note_numbers': ['9.'], 'line_item_value': [723.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Other income', 52), ('other operating', 45), ('Other revenue', 33)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 38), ('other operating', 32)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('other operating', 36), ('Other revenue', 33), (' Other income', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('Other revenue', 43), (' Other income', 30), ('other operating', 23)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue', 42)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('other operating', 54), (' Other income', 37), ('Other revenue', 36)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Other income', 43), ('other operating', 18), ('Other revenue', 17)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue', 35), (' Other income', 27), ('other operating', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [(' Other income', 52), ('other operating', 23), ('Other revenue', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [(' Other income', 34), ('other operating', 24), ('Other revenue', 23)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [(' Other income', 42), ('other operating', 27), ('Other revenue', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [(' Other income', 50), ('other operating', 30), ('Other revenue', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [('other operating', 47), (' Other income', 40), ('Other revenue', 33)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [(' Other income', 28), ('other operating', 24), ('Other revenue', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [('other operating', 25), ('Other revenue', 25), (' Other income', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [('other operating', 40), ('Other revenue', 37), (' Other income', 23)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [(' Other income', 36), ('other operating', 30), ('Other revenue', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' Other income', 51), ('other operating', 43), ('Other revenue', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [(' Other income', 37), ('other operating', 34), ('Other revenue', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [(' Other income', 32), ('other operating', 30), ('Other revenue', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 129.0, 'line_item_label': ['Other income'], 'note_numbers': ['9.'], 'line_item_value': [129.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['Interest expense', 'interest expense']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other income', 52), (' Net finance costs', 52), ('Finance income and costs', 42), (' Finance income and finance costs', 35), ('finance income', 33), (' Interest revenue', 30)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), (' Net finance costs', 10), ('Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), ('Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), ('Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), (' Interest revenue', 38), (' Net finance costs', 38), ('Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Interest revenue', 37), ('Finance income and costs', 30), ('other income', 26), ('finance income', 25), (' Finance income and finance costs', 25), (' Net finance costs', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Interest revenue', 52), ('Finance income and costs', 32), (' Finance income and finance costs', 32), ('other income', 30), ('finance income', 29), (' Net finance costs', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Interest revenue', 37), ('finance income', 25), ('Finance income and costs', 24), (' Net finance costs', 22), (' Finance income and finance costs', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Net finance costs', 39), ('other income', 37), ('Finance income and costs', 27), (' Finance income and finance costs', 27), (' Interest revenue', 26), ('finance income', 14)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('Finance income and costs', 73), (' Finance income and finance costs', 60), (' Net finance costs', 59), ('other income', 43), (' Interest revenue', 30)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs', 85), ('Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), (' Interest revenue', 31), ('other income', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [('finance income', 86), ('Finance income and costs', 65), (' Net finance costs', 65), (' Finance income and finance costs', 55), ('other income', 52), (' Interest revenue', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [(' Finance income and finance costs', 37), ('Finance income and costs', 35), (' Net finance costs', 35), ('other income', 34), ('finance income', 30), (' Interest revenue', 29)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [('other income', 42), (' Net finance costs', 38), ('finance income', 36), ('Finance income and costs', 33), (' Finance income and finance costs', 33), (' Interest revenue', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [('finance income', 55), ('other income', 50), ('Finance income and costs', 47), (' Net finance costs', 44), (' Finance income and finance costs', 40), (' Interest revenue', 31)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [('other income', 40), (' Net finance costs', 36), ('Finance income and costs', 31), (' Interest revenue', 31), (' Finance income and finance costs', 31), ('finance income', 17)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [(' Finance income and finance costs', 33), ('Finance income and costs', 30), (' Interest revenue', 30), (' Net finance costs', 30), ('other income', 28), ('finance income', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [(' Finance income and finance costs', 36), ('Finance income and costs', 33), (' Interest revenue', 30), (' Net finance costs', 30), ('other income', 25), ('finance income', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [(' Interest revenue', 40), (' Net finance costs', 33), ('other income', 23), (' Finance income and finance costs', 23), ('Finance income and costs', 22), ('finance income', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [('Finance income and costs', 42), (' Finance income and finance costs', 41), (' Net finance costs', 37), ('other income', 36), ('finance income', 29), (' Interest revenue', 28)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('other income', 51), ('Finance income and costs', 49), (' Net finance costs', 47), (' Finance income and finance costs', 43), ('finance income', 41), (' Interest revenue', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [(' Net finance costs', 41), ('Finance income and costs', 40), (' Finance income and finance costs', 39), ('other income', 37), ('finance income', 33), (' Interest revenue', 28)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [(' Finance income and finance costs', 40), ('Finance income and costs', 38), ('other income', 32), (' Net finance costs', 31), ('finance income', 26), (' Interest revenue', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 9, 10, 11], 'score': 86, 'value': 4269.0, 'line_item_label': ['Other income', 'Finance income', 'Finance costs', 'Net finance income'], 'note_numbers': ['9.', nan, nan, '11.'], 'line_item_value': [723.0, 2069.0, -296.0, 1773.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other income', 52), (' Net finance costs', 52), ('Finance income and costs', 42), (' Finance income and finance costs', 35), ('finance income', 33), (' Interest revenue', 30)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), (' Net finance costs', 10), ('Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), ('Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), ('Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), (' Interest revenue', 38), (' Net finance costs', 38), ('Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' Interest revenue', 37), ('Finance income and costs', 30), ('other income', 26), ('finance income', 25), (' Finance income and finance costs', 25), (' Net finance costs', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Interest revenue', 52), ('Finance income and costs', 32), (' Finance income and finance costs', 32), ('other income', 30), ('finance income', 29), (' Net finance costs', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Interest revenue', 37), ('finance income', 25), ('Finance income and costs', 24), (' Net finance costs', 22), (' Finance income and finance costs', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Net finance costs', 39), ('other income', 37), ('Finance income and costs', 27), (' Finance income and finance costs', 27), (' Interest revenue', 26), ('finance income', 14)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('Finance income and costs', 73), (' Finance income and finance costs', 60), (' Net finance costs', 59), ('other income', 43), (' Interest revenue', 30)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs', 85), ('Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), (' Interest revenue', 31), ('other income', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [('finance income', 86), ('Finance income and costs', 65), (' Net finance costs', 65), (' Finance income and finance costs', 55), ('other income', 52), (' Interest revenue', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [(' Finance income and finance costs', 37), ('Finance income and costs', 35), (' Net finance costs', 35), ('other income', 34), ('finance income', 30), (' Interest revenue', 29)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [('other income', 42), (' Net finance costs', 38), ('finance income', 36), ('Finance income and costs', 33), (' Finance income and finance costs', 33), (' Interest revenue', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [('finance income', 55), ('other income', 50), ('Finance income and costs', 47), (' Net finance costs', 44), (' Finance income and finance costs', 40), (' Interest revenue', 31)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [('other income', 40), (' Net finance costs', 36), ('Finance income and costs', 31), (' Interest revenue', 31), (' Finance income and finance costs', 31), ('finance income', 17)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [(' Finance income and finance costs', 33), ('Finance income and costs', 30), (' Interest revenue', 30), (' Net finance costs', 30), ('other income', 28), ('finance income', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [(' Finance income and finance costs', 36), ('Finance income and costs', 33), (' Interest revenue', 30), (' Net finance costs', 30), ('other income', 25), ('finance income', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [(' Interest revenue', 40), (' Net finance costs', 33), ('other income', 23), (' Finance income and finance costs', 23), ('Finance income and costs', 22), ('finance income', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [('Finance income and costs', 42), (' Finance income and finance costs', 41), (' Net finance costs', 37), ('other income', 36), ('finance income', 29), (' Interest revenue', 28)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('other income', 51), ('Finance income and costs', 49), (' Net finance costs', 47), (' Finance income and finance costs', 43), ('finance income', 41), (' Interest revenue', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [(' Net finance costs', 41), ('Finance income and costs', 40), (' Finance income and finance costs', 39), ('other income', 37), ('finance income', 33), (' Interest revenue', 28)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [(' Finance income and finance costs', 40), ('Finance income and costs', 38), ('other income', 32), (' Net finance costs', 31), ('finance income', 26), (' Interest revenue', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 9, 10, 11], 'score': 86, 'value': 7937.0, 'line_item_label': ['Other income', 'Finance income', 'Finance costs', 'Net finance income'], 'note_numbers': ['9.', nan, nan, '11.'], 'line_item_value': [129.0, 12685.0, -8781.0, 3904.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['interest income']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' net finance costs ', 52), ('finance cost ', 43), (' interest expense', 37), (' finance expenses ', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses ', 32), (' interest expense', 29), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' finance expenses ', 27), (' interest expense', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost ', 43), (' finance expenses ', 32), (' interest expense', 30)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 38), ('finance cost ', 27), (' finance expenses ', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' finance expenses ', 64), (' interest expense', 52), ('finance cost ', 26), (' net finance costs ', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' finance expenses ', 41), (' interest expense', 39), ('finance cost ', 30), (' net finance costs ', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' interest expense', 74), (' finance expenses ', 56), (' net finance costs ', 22), ('finance cost ', 17)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' net finance costs ', 39), ('finance cost ', 37), (' finance expenses ', 34), (' interest expense', 32)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' net finance costs ', 59), ('finance cost ', 52), (' finance expenses ', 48), (' interest expense', 30)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance expenses ', 67), (' interest expense', 31)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [(' net finance costs ', 65), ('finance cost ', 44), (' finance expenses ', 41), (' interest expense', 39)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [(' net finance costs ', 35), (' interest expense', 32), ('finance cost ', 27), (' finance expenses ', 23)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 37), (' finance expenses ', 35), (' interest expense', 33)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [(' net finance costs ', 44), (' finance expenses ', 40), (' interest expense', 38), ('finance cost ', 36)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [(' net finance costs ', 36), ('finance cost ', 34), (' interest expense', 31), (' finance expenses ', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' interest expense', 54), (' net finance costs ', 49), (' finance expenses ', 46), ('finance cost ', 42)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [(' interest expense', 37), (' net finance costs ', 30), ('finance cost ', 28), (' finance expenses ', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [(' net finance costs ', 30), ('finance cost ', 29), (' finance expenses ', 24), (' interest expense', 23)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [(' interest expense', 47), (' finance expenses ', 36), (' net finance costs ', 33), ('finance cost ', 31)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [(' net finance costs ', 37), (' interest expense', 34), ('finance cost ', 26), (' finance expenses ', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' net finance costs ', 47), (' interest expense', 47), (' finance expenses ', 40), ('finance cost ', 37)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [(' net finance costs ', 41), (' interest expense', 34), (' finance expenses ', 32), ('finance cost ', 30)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [(' interest expense', 33), (' net finance costs ', 31), (' finance expenses ', 26), ('finance cost ', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': -296.0, 'line_item_label': ['Finance costs'], 'note_numbers': [nan], 'line_item_value': [-296.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' net finance costs ', 52), ('finance cost ', 43), (' interest expense', 37), (' finance expenses ', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses ', 32), (' interest expense', 29), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' finance expenses ', 27), (' interest expense', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost ', 43), (' finance expenses ', 32), (' interest expense', 30)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 38), ('finance cost ', 27), (' finance expenses ', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' finance expenses ', 64), (' interest expense', 52), ('finance cost ', 26), (' net finance costs ', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' finance expenses ', 41), (' interest expense', 39), ('finance cost ', 30), (' net finance costs ', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' interest expense', 74), (' finance expenses ', 56), (' net finance costs ', 22), ('finance cost ', 17)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' net finance costs ', 39), ('finance cost ', 37), (' finance expenses ', 34), (' interest expense', 32)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' net finance costs ', 59), ('finance cost ', 52), (' finance expenses ', 48), (' interest expense', 30)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance expenses ', 67), (' interest expense', 31)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [(' net finance costs ', 65), ('finance cost ', 44), (' finance expenses ', 41), (' interest expense', 39)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [(' net finance costs ', 35), (' interest expense', 32), ('finance cost ', 27), (' finance expenses ', 23)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 37), (' finance expenses ', 35), (' interest expense', 33)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [(' net finance costs ', 44), (' finance expenses ', 40), (' interest expense', 38), ('finance cost ', 36)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [(' net finance costs ', 36), ('finance cost ', 34), (' interest expense', 31), (' finance expenses ', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' interest expense', 54), (' net finance costs ', 49), (' finance expenses ', 46), ('finance cost ', 42)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [(' interest expense', 37), (' net finance costs ', 30), ('finance cost ', 28), (' finance expenses ', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [(' net finance costs ', 30), ('finance cost ', 29), (' finance expenses ', 24), (' interest expense', 23)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [(' interest expense', 47), (' finance expenses ', 36), (' net finance costs ', 33), ('finance cost ', 31)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [(' net finance costs ', 37), (' interest expense', 34), ('finance cost ', 26), (' finance expenses ', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' net finance costs ', 47), (' interest expense', 47), (' finance expenses ', 40), ('finance cost ', 37)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [(' net finance costs ', 41), (' interest expense', 34), (' finance expenses ', 32), ('finance cost ', 30)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [(' interest expense', 33), (' net finance costs ', 31), (' finance expenses ', 26), ('finance cost ', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': -8781.0, 'line_item_label': ['Finance costs'], 'note_numbers': [nan], 'line_item_value': [-8781.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['Accretion expense ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Asset impairment ', ' commission revenue ', ' dividend from other parties ', ' effective portion of changes in fair value of cash flow ', ' foreign exchange gain ', ' government grants ', ' Impairment loss ', ' insurance proceeds ', ' Interest on unwinding of discount in provisions ', ' Investment in joint venture ', ' japan recoveries ', ' Loss on loan refinancing ', ' Loss on sale of disposal of assets ', ' margin charge income ', ' net (loss)/profit on disposal of non-current assets ', ' net foreign exchange (loss)/gain ', ' net foreign exchange gain ', ' net foreign exchange gains/(losses) ', ' net gain / loss on disposal of property plant and equipment ', ' Net loss on disposal of property ', ' net of tax ', ' Net other foreign exchange (losses)/gains ', ' net ppe disposal (loss)/gain ', ' other ', ' other income ', ' other miscellaneous - net (loss)/gain ', ' paid by customers - at amortised cost ', ' plant and equipment ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' profit from discontinued operation ', ' Profit on sale of assets ', ' quota lease income ', ' Remuneration from services linked to newly acquired entities ', ' secondment income (tw recovery) ', ' Share of gain/(loss) of joint venture ', ' share of jv income ', ' Sub-lease rental income ', ' sundry income ', ' other revenue']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Profit from discontinued operation ', 62), (' net finance costs ', 52), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' other gains/losses ', 44), ('finance cost ', 43), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' other income and revenue ', 41), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' finance income and finance cost ', 35), (' interest gains and losses ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Finance income and finance costs ', 35), (' net of tax ', 32), (' net of tax ', 32), (' Impairement (expenses)/reversal ', 31), (' interest revenue ', 30), (' Impairment loss ', 26), (' finance expenses', 24), (' expenses ', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' interest revenue ', 57), (' expenses ', 50), (' other income and revenue ', 43), (' Share of gain/(loss) of joint venture ', 35), (' finance expenses', 32), (' Impairement (expenses)/reversal ', 31), (' Loss on revaluation of inventories', 30), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' net of tax ', 15), (' net of tax ', 15), (' interest gains and losses ', 14), ('finance cost ', 12), (' other income ', 12), (' Other income ', 12), (' Impairment loss ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10), (' other gains/losses ', 10), (' finance income and costs ', 7), (' Finance income and costs ', 7), (' finance income and finance cost ', 6), (' Finance income and finance costs ', 6)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' net of tax ', 38), (' net of tax ', 38), (' other opertaing income ', 37), (' share of profit of equity accounted investees ', 36), (' other gains/losses ', 33), (' interest revenue ', 33), (' Loss on revaluation of inventories', 33), (' finance income and finance cost ', 32), (' other income and revenue ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Finance income and finance costs ', 32), (' Impairment loss ', 30), (' Impairement (expenses)/reversal ', 28), (' Profit from discontinued operation ', 28), (' finance expenses', 27), (' interest gains and losses ', 26), (' expenses ', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' other gains/losses ', 52), (' Profit from discontinued operation ', 46), (' net finance costs ', 44), ('finance cost ', 43), (' other opertaing income ', 40), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' other income ', 35), (' Other income ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Impairment loss ', 35), (' finance expenses', 32), (' finance income and costs ', 30), (' interest revenue ', 30), (' Finance income and costs ', 30), (' interest gains and losses ', 29), (' finance income and finance cost ', 25), (' Impairement (expenses)/reversal ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other income ', 100), (' Other income ', 100), (' other opertaing income ', 76), (' other gains/losses ', 69), (' other income and revenue ', 67), (' Profit from discontinued operation ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' interest revenue ', 38), (' Loss on revaluation of inventories', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' net of tax ', 33), (' net of tax ', 33), (' Impairement (expenses)/reversal ', 32), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' share of profit of equity accounted investees ', 30), ('finance cost ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' expenses ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' expenses ', 67), (' finance expenses', 64), (' Impairement (expenses)/reversal ', 50), (' interest revenue ', 37), (' other gains/losses ', 30), (' finance income and costs ', 30), (' Finance income and costs ', 30), (' Loss on revaluation of inventories', 30), (' interest gains and losses ', 29), (' other opertaing income ', 27), ('finance cost ', 26), (' other income ', 26), (' Other income ', 26), (' Impairment loss ', 26), (' finance income and finance cost ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net finance costs ', 22), (' share of profit of equity accounted investees ', 21), (' net of tax ', 21), (' Profit from discontinued operation ', 21), (' net of tax ', 21), (' Share of gain/(loss) of joint venture ', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' expenses ', 55), (' other income and revenue ', 53), (' interest revenue ', 52), (' interest gains and losses ', 47), (' finance expenses', 41), (' Share of gain/(loss) of joint venture ', 41), (' other gains/losses ', 39), (' Impairement (expenses)/reversal ', 39), (' Impairment loss ', 37), (' Profit from discontinued operation ', 37), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 32), (' finance income and costs ', 32), (' Finance income and finance costs ', 32), (' Finance income and costs ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 31), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' other opertaing income ', 29), (' net finance costs ', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' expenses ', 67), (' other income ', 61), (' Other income ', 61), (' other gains/losses ', 59), (' finance expenses', 56), (' Impairement (expenses)/reversal ', 56), (' other opertaing income ', 53), (' other income and revenue ', 41), (' interest revenue ', 37), (' Share of gain/(loss) of joint venture ', 35), (' share of profit of equity accounted investees ', 34), (' net of tax ', 32), (' net of tax ', 32), (' Loss on revaluation of inventories', 30), (' interest gains and losses ', 29), (' Impairment loss ', 26), (' Profit from discontinued operation ', 26), (' finance income and costs ', 24), (' Finance income and costs ', 24), (' net finance costs ', 22), (' finance income and finance cost ', 20), (' Finance income and finance costs ', 20), ('finance cost ', 17)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Profit from discontinued operation ', 60), (' other opertaing income ', 53), (' other gains/losses ', 52), (' net finance costs ', 39), (' share of profit of equity accounted investees ', 39), ('finance cost ', 37), (' other income ', 37), (' other income and revenue ', 37), (' Other income ', 37), (' Share of gain/(loss) of joint venture ', 36), (' finance expenses', 34), (' Impairement (expenses)/reversal ', 33), (' Loss on revaluation of inventories', 32), (' Impairment loss ', 30), (' finance income and finance cost ', 27), (' finance income and costs ', 27), (' Finance income and finance costs ', 27), (' Finance income and costs ', 27), (' interest revenue ', 26), (' interest gains and losses ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' finance income and costs ', 73), (' Finance income and costs ', 73), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' net finance costs ', 59), ('finance cost ', 52), (' finance expenses', 48), (' other income and revenue ', 47), (' other income ', 43), (' Other income ', 43), (' interest gains and losses ', 41), (' Impairment loss ', 35), (' other opertaing income ', 33), (' Profit from discontinued operation ', 31), (' other gains/losses ', 30), (' interest revenue ', 30), (' Share of gain/(loss) of joint venture ', 30), (' Loss on revaluation of inventories', 30), (' share of profit of equity accounted investees ', 26), (' Impairement (expenses)/reversal ', 25), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance income and costs ', 69), (' Finance income and costs ', 69), (' finance expenses', 67), (' finance income and finance cost ', 56), (' Finance income and finance costs ', 56), (' share of profit of equity accounted investees ', 35), (' net of tax ', 33), (' net of tax ', 33), (' Profit from discontinued operation ', 32), (' interest revenue ', 31), (' other income and revenue ', 30), (' other opertaing income ', 28), (' other income ', 27), (' Other income ', 27), (' Share of gain/(loss) of joint venture ', 26), (' Impairement (expenses)/reversal ', 26), (' Loss on revaluation of inventories', 25), (' interest gains and losses ', 24), (' other gains/losses ', 23), (' Impairment loss ', 18), (' expenses ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [(' net finance costs ', 65), (' finance income and costs ', 65), (' Finance income and costs ', 65), (' finance income and finance cost ', 55), (' Finance income and finance costs ', 55), (' other income and revenue ', 53), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' interest gains and losses ', 47), ('finance cost ', 44), (' Profit from discontinued operation ', 42), (' finance expenses', 41), (' Share of gain/(loss) of joint venture ', 41), (' other gains/losses ', 39), (' Loss on revaluation of inventories', 38), (' Impairement (expenses)/reversal ', 33), (' share of profit of equity accounted investees ', 31), (' Impairment loss ', 30), (' interest revenue ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [(' share of profit of equity accounted investees ', 72), (' Profit from discontinued operation ', 48), (' Share of gain/(loss) of joint venture ', 45), (' interest gains and losses ', 43), (' other income and revenue ', 43), (' other opertaing income ', 39), (' Loss on revaluation of inventories', 38), (' finance income and finance cost ', 37), (' Finance income and finance costs ', 37), (' net finance costs ', 35), (' finance income and costs ', 35), (' Finance income and costs ', 35), (' other income ', 34), (' Other income ', 34), (' other gains/losses ', 32), (' interest revenue ', 29), (' Impairement (expenses)/reversal ', 29), ('finance cost ', 27), (' net of tax ', 25), (' net of tax ', 25), (' finance expenses', 23), (' Impairment loss ', 20), (' expenses ', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [(' other opertaing income ', 53), (' Profit from discontinued operation ', 52), (' Loss on revaluation of inventories', 50), (' other gains/losses ', 48), (' share of profit of equity accounted investees ', 45), (' Share of gain/(loss) of joint venture ', 44), (' other income ', 42), (' Other income ', 42), (' other income and revenue ', 41), (' net finance costs ', 38), ('finance cost ', 37), (' Impairment loss ', 37), (' finance expenses', 35), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 33), (' finance income and costs ', 33), (' interest gains and losses ', 33), (' Finance income and finance costs ', 33), (' Finance income and costs ', 33), (' Impairement (expenses)/reversal ', 30), (' interest revenue ', 24), (' expenses ', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [(' net of tax ', 58), (' net of tax ', 58), (' other income ', 50), (' Other income ', 50), (' finance income and costs ', 47), (' Finance income and costs ', 47), (' other opertaing income ', 46), (' other income and revenue ', 46), (' net finance costs ', 44), (' finance expenses', 40), (' finance income and finance cost ', 40), (' Finance income and finance costs ', 40), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 37), ('finance cost ', 36), (' Profit from discontinued operation ', 36), (' Impairement (expenses)/reversal ', 32), (' other gains/losses ', 31), (' interest revenue ', 31), (' interest gains and losses ', 31), (' Share of gain/(loss) of joint venture ', 31), (' expenses ', 26), (' Impairment loss ', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [(' other gains/losses ', 56), (' other opertaing income ', 52), (' Loss on revaluation of inventories', 49), (' share of profit of equity accounted investees ', 47), (' Share of gain/(loss) of joint venture ', 46), (' Profit from discontinued operation ', 43), (' other income ', 40), (' Other income ', 40), (' other income and revenue ', 39), (' net finance costs ', 36), (' Impairement (expenses)/reversal ', 36), ('finance cost ', 34), (' Impairment loss ', 34), (' finance income and finance cost ', 31), (' finance income and costs ', 31), (' interest revenue ', 31), (' Finance income and finance costs ', 31), (' Finance income and costs ', 31), (' finance expenses', 27), (' interest gains and losses ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other income ', 67), (' Other income ', 67), (' other income and revenue ', 59), (' other opertaing income ', 55), (' net finance costs ', 49), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' finance expenses', 46), (' Profit from discontinued operation ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' share of profit of equity accounted investees ', 39), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' Impairment loss ', 30), (' expenses ', 29), (' Loss on revaluation of inventories', 28), (' interest revenue ', 27), (' net of tax ', 21), (' net of tax ', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [(' share of profit of equity accounted investees ', 46), (' Share of gain/(loss) of joint venture ', 45), (' other gains/losses ', 41), (' other opertaing income ', 39), (' Profit from discontinued operation ', 39), (' Impairement (expenses)/reversal ', 37), (' Loss on revaluation of inventories', 37), (' interest gains and losses ', 36), (' other income and revenue ', 36), (' finance income and finance cost ', 33), (' Finance income and finance costs ', 33), (' Impairment loss ', 32), (' net finance costs ', 30), (' finance income and costs ', 30), (' interest revenue ', 30), (' Finance income and costs ', 30), ('finance cost ', 28), (' other income ', 28), (' Other income ', 28), (' finance expenses', 27), (' net of tax ', 22), (' net of tax ', 22), (' expenses ', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [(' Profit from discontinued operation ', 39), (' Loss on revaluation of inventories', 39), (' share of profit of equity accounted investees ', 38), (' finance income and finance cost ', 36), (' other income and revenue ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' other gains/losses ', 33), (' finance income and costs ', 33), (' interest gains and losses ', 33), (' Finance income and costs ', 33), (' other opertaing income ', 32), (' net finance costs ', 30), (' interest revenue ', 30), ('finance cost ', 29), (' Impairement (expenses)/reversal ', 28), (' other income ', 25), (' Other income ', 25), (' finance expenses', 24), (' net of tax ', 23), (' net of tax ', 23), (' Impairment loss ', 21), (' expenses ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [(' interest revenue ', 40), (' expenses ', 38), (' finance expenses', 36), (' net of tax ', 36), (' net of tax ', 36), (' Impairement (expenses)/reversal ', 34), (' net finance costs ', 33), (' Loss on revaluation of inventories', 33), ('finance cost ', 31), (' other opertaing income ', 30), (' Profit from discontinued operation ', 29), (' share of profit of equity accounted investees ', 28), (' other gains/losses ', 27), (' interest gains and losses ', 27), (' other income and revenue ', 27), (' other income ', 23), (' finance income and finance cost ', 23), (' Other income ', 23), (' Share of gain/(loss) of joint venture ', 23), (' Impairment loss ', 23), (' Finance income and finance costs ', 23), (' finance income and costs ', 22), (' Finance income and costs ', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [(' share of profit of equity accounted investees ', 71), (' other income and revenue ', 47), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' other opertaing income ', 41), (' finance income and finance cost ', 41), (' Finance income and finance costs ', 41), (' interest gains and losses ', 39), (' Profit from discontinued operation ', 39), (' Share of gain/(loss) of joint venture ', 38), (' net finance costs ', 37), (' other gains/losses ', 37), (' other income ', 36), (' Other income ', 36), (' Impairement (expenses)/reversal ', 34), (' Loss on revaluation of inventories', 31), (' interest revenue ', 28), ('finance cost ', 26), (' finance expenses', 25), (' Impairment loss ', 23), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 14)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' other opertaing income ', 52), (' other income and revenue ', 52), (' other income ', 51), (' Other income ', 51), (' finance income and costs ', 49), (' Finance income and costs ', 49), (' net finance costs ', 47), (' Profit from discontinued operation ', 47), (' other gains/losses ', 43), (' finance income and finance cost ', 43), (' Finance income and finance costs ', 43), (' Impairement (expenses)/reversal ', 42), (' interest gains and losses ', 41), (' finance expenses', 40), (' share of profit of equity accounted investees ', 39), ('finance cost ', 37), (' Share of gain/(loss) of joint venture ', 37), (' net of tax ', 31), (' net of tax ', 31), (' Loss on revaluation of inventories', 30), (' interest revenue ', 26), (' Impairment loss ', 23), (' expenses ', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [(' other opertaing income ', 48), (' other income and revenue ', 45), (' net finance costs ', 41), (' share of profit of equity accounted investees ', 40), (' finance income and costs ', 40), (' Finance income and costs ', 40), (' finance income and finance cost ', 39), (' Finance income and finance costs ', 39), (' Impairement (expenses)/reversal ', 38), (' other income ', 37), (' Other income ', 37), (' Profit from discontinued operation ', 37), (' Share of gain/(loss) of joint venture ', 36), (' interest gains and losses ', 34), (' finance expenses', 32), (' other gains/losses ', 31), (' Loss on revaluation of inventories', 31), ('finance cost ', 30), (' interest revenue ', 28), (' net of tax ', 25), (' net of tax ', 25), (' Impairment loss ', 17), (' expenses ', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [(' share of profit of equity accounted investees ', 48), (' other income and revenue ', 48), (' Profit from discontinued operation ', 48), (' Share of gain/(loss) of joint venture ', 42), (' Loss on revaluation of inventories', 41), (' other opertaing income ', 40), (' finance income and finance cost ', 40), (' Finance income and finance costs ', 40), (' other gains/losses ', 39), (' finance income and costs ', 38), (' Finance income and costs ', 38), (' interest gains and losses ', 35), (' Impairement (expenses)/reversal ', 34), (' other income ', 32), (' Other income ', 32), (' net finance costs ', 31), (' finance expenses', 26), (' interest revenue ', 25), ('finance cost ', 24), (' Impairment loss ', 24), (' net of tax ', 19), (' net of tax ', 19), (' expenses ', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 10], 'score': 100, 'value': 427.0, 'line_item_label': ['Other income', 'Finance costs'], 'note_numbers': ['9.', nan], 'line_item_value': [723.0, -296.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Profit from discontinued operation ', 62), (' net finance costs ', 52), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' other gains/losses ', 44), ('finance cost ', 43), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' other income and revenue ', 41), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' finance income and finance cost ', 35), (' interest gains and losses ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Finance income and finance costs ', 35), (' net of tax ', 32), (' net of tax ', 32), (' Impairement (expenses)/reversal ', 31), (' interest revenue ', 30), (' Impairment loss ', 26), (' finance expenses', 24), (' expenses ', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' interest revenue ', 57), (' expenses ', 50), (' other income and revenue ', 43), (' Share of gain/(loss) of joint venture ', 35), (' finance expenses', 32), (' Impairement (expenses)/reversal ', 31), (' Loss on revaluation of inventories', 30), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' net of tax ', 15), (' net of tax ', 15), (' interest gains and losses ', 14), ('finance cost ', 12), (' other income ', 12), (' Other income ', 12), (' Impairment loss ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10), (' other gains/losses ', 10), (' finance income and costs ', 7), (' Finance income and costs ', 7), (' finance income and finance cost ', 6), (' Finance income and finance costs ', 6)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' net of tax ', 38), (' net of tax ', 38), (' other opertaing income ', 37), (' share of profit of equity accounted investees ', 36), (' other gains/losses ', 33), (' interest revenue ', 33), (' Loss on revaluation of inventories', 33), (' finance income and finance cost ', 32), (' other income and revenue ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Finance income and finance costs ', 32), (' Impairment loss ', 30), (' Impairement (expenses)/reversal ', 28), (' Profit from discontinued operation ', 28), (' finance expenses', 27), (' interest gains and losses ', 26), (' expenses ', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' other gains/losses ', 52), (' Profit from discontinued operation ', 46), (' net finance costs ', 44), ('finance cost ', 43), (' other opertaing income ', 40), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' other income ', 35), (' Other income ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Impairment loss ', 35), (' finance expenses', 32), (' finance income and costs ', 30), (' interest revenue ', 30), (' Finance income and costs ', 30), (' interest gains and losses ', 29), (' finance income and finance cost ', 25), (' Impairement (expenses)/reversal ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other income ', 100), (' Other income ', 100), (' other opertaing income ', 76), (' other gains/losses ', 69), (' other income and revenue ', 67), (' Profit from discontinued operation ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' interest revenue ', 38), (' Loss on revaluation of inventories', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' net of tax ', 33), (' net of tax ', 33), (' Impairement (expenses)/reversal ', 32), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' share of profit of equity accounted investees ', 30), ('finance cost ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' expenses ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' expenses ', 67), (' finance expenses', 64), (' Impairement (expenses)/reversal ', 50), (' interest revenue ', 37), (' other gains/losses ', 30), (' finance income and costs ', 30), (' Finance income and costs ', 30), (' Loss on revaluation of inventories', 30), (' interest gains and losses ', 29), (' other opertaing income ', 27), ('finance cost ', 26), (' other income ', 26), (' Other income ', 26), (' Impairment loss ', 26), (' finance income and finance cost ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net finance costs ', 22), (' share of profit of equity accounted investees ', 21), (' net of tax ', 21), (' Profit from discontinued operation ', 21), (' net of tax ', 21), (' Share of gain/(loss) of joint venture ', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' expenses ', 55), (' other income and revenue ', 53), (' interest revenue ', 52), (' interest gains and losses ', 47), (' finance expenses', 41), (' Share of gain/(loss) of joint venture ', 41), (' other gains/losses ', 39), (' Impairement (expenses)/reversal ', 39), (' Impairment loss ', 37), (' Profit from discontinued operation ', 37), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 32), (' finance income and costs ', 32), (' Finance income and finance costs ', 32), (' Finance income and costs ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 31), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' other opertaing income ', 29), (' net finance costs ', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' expenses ', 67), (' other income ', 61), (' Other income ', 61), (' other gains/losses ', 59), (' finance expenses', 56), (' Impairement (expenses)/reversal ', 56), (' other opertaing income ', 53), (' other income and revenue ', 41), (' interest revenue ', 37), (' Share of gain/(loss) of joint venture ', 35), (' share of profit of equity accounted investees ', 34), (' net of tax ', 32), (' net of tax ', 32), (' Loss on revaluation of inventories', 30), (' interest gains and losses ', 29), (' Impairment loss ', 26), (' Profit from discontinued operation ', 26), (' finance income and costs ', 24), (' Finance income and costs ', 24), (' net finance costs ', 22), (' finance income and finance cost ', 20), (' Finance income and finance costs ', 20), ('finance cost ', 17)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' Profit from discontinued operation ', 60), (' other opertaing income ', 53), (' other gains/losses ', 52), (' net finance costs ', 39), (' share of profit of equity accounted investees ', 39), ('finance cost ', 37), (' other income ', 37), (' other income and revenue ', 37), (' Other income ', 37), (' Share of gain/(loss) of joint venture ', 36), (' finance expenses', 34), (' Impairement (expenses)/reversal ', 33), (' Loss on revaluation of inventories', 32), (' Impairment loss ', 30), (' finance income and finance cost ', 27), (' finance income and costs ', 27), (' Finance income and finance costs ', 27), (' Finance income and costs ', 27), (' interest revenue ', 26), (' interest gains and losses ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' finance income and costs ', 73), (' Finance income and costs ', 73), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' net finance costs ', 59), ('finance cost ', 52), (' finance expenses', 48), (' other income and revenue ', 47), (' other income ', 43), (' Other income ', 43), (' interest gains and losses ', 41), (' Impairment loss ', 35), (' other opertaing income ', 33), (' Profit from discontinued operation ', 31), (' other gains/losses ', 30), (' interest revenue ', 30), (' Share of gain/(loss) of joint venture ', 30), (' Loss on revaluation of inventories', 30), (' share of profit of equity accounted investees ', 26), (' Impairement (expenses)/reversal ', 25), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance income and costs ', 69), (' Finance income and costs ', 69), (' finance expenses', 67), (' finance income and finance cost ', 56), (' Finance income and finance costs ', 56), (' share of profit of equity accounted investees ', 35), (' net of tax ', 33), (' net of tax ', 33), (' Profit from discontinued operation ', 32), (' interest revenue ', 31), (' other income and revenue ', 30), (' other opertaing income ', 28), (' other income ', 27), (' Other income ', 27), (' Share of gain/(loss) of joint venture ', 26), (' Impairement (expenses)/reversal ', 26), (' Loss on revaluation of inventories', 25), (' interest gains and losses ', 24), (' other gains/losses ', 23), (' Impairment loss ', 18), (' expenses ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [(' net finance costs ', 65), (' finance income and costs ', 65), (' Finance income and costs ', 65), (' finance income and finance cost ', 55), (' Finance income and finance costs ', 55), (' other income and revenue ', 53), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' interest gains and losses ', 47), ('finance cost ', 44), (' Profit from discontinued operation ', 42), (' finance expenses', 41), (' Share of gain/(loss) of joint venture ', 41), (' other gains/losses ', 39), (' Loss on revaluation of inventories', 38), (' Impairement (expenses)/reversal ', 33), (' share of profit of equity accounted investees ', 31), (' Impairment loss ', 30), (' interest revenue ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [(' share of profit of equity accounted investees ', 72), (' Profit from discontinued operation ', 48), (' Share of gain/(loss) of joint venture ', 45), (' interest gains and losses ', 43), (' other income and revenue ', 43), (' other opertaing income ', 39), (' Loss on revaluation of inventories', 38), (' finance income and finance cost ', 37), (' Finance income and finance costs ', 37), (' net finance costs ', 35), (' finance income and costs ', 35), (' Finance income and costs ', 35), (' other income ', 34), (' Other income ', 34), (' other gains/losses ', 32), (' interest revenue ', 29), (' Impairement (expenses)/reversal ', 29), ('finance cost ', 27), (' net of tax ', 25), (' net of tax ', 25), (' finance expenses', 23), (' Impairment loss ', 20), (' expenses ', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [(' other opertaing income ', 53), (' Profit from discontinued operation ', 52), (' Loss on revaluation of inventories', 50), (' other gains/losses ', 48), (' share of profit of equity accounted investees ', 45), (' Share of gain/(loss) of joint venture ', 44), (' other income ', 42), (' Other income ', 42), (' other income and revenue ', 41), (' net finance costs ', 38), ('finance cost ', 37), (' Impairment loss ', 37), (' finance expenses', 35), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 33), (' finance income and costs ', 33), (' interest gains and losses ', 33), (' Finance income and finance costs ', 33), (' Finance income and costs ', 33), (' Impairement (expenses)/reversal ', 30), (' interest revenue ', 24), (' expenses ', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [(' net of tax ', 58), (' net of tax ', 58), (' other income ', 50), (' Other income ', 50), (' finance income and costs ', 47), (' Finance income and costs ', 47), (' other opertaing income ', 46), (' other income and revenue ', 46), (' net finance costs ', 44), (' finance expenses', 40), (' finance income and finance cost ', 40), (' Finance income and finance costs ', 40), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 37), ('finance cost ', 36), (' Profit from discontinued operation ', 36), (' Impairement (expenses)/reversal ', 32), (' other gains/losses ', 31), (' interest revenue ', 31), (' interest gains and losses ', 31), (' Share of gain/(loss) of joint venture ', 31), (' expenses ', 26), (' Impairment loss ', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [(' other gains/losses ', 56), (' other opertaing income ', 52), (' Loss on revaluation of inventories', 49), (' share of profit of equity accounted investees ', 47), (' Share of gain/(loss) of joint venture ', 46), (' Profit from discontinued operation ', 43), (' other income ', 40), (' Other income ', 40), (' other income and revenue ', 39), (' net finance costs ', 36), (' Impairement (expenses)/reversal ', 36), ('finance cost ', 34), (' Impairment loss ', 34), (' finance income and finance cost ', 31), (' finance income and costs ', 31), (' interest revenue ', 31), (' Finance income and finance costs ', 31), (' Finance income and costs ', 31), (' finance expenses', 27), (' interest gains and losses ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other income ', 67), (' Other income ', 67), (' other income and revenue ', 59), (' other opertaing income ', 55), (' net finance costs ', 49), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' finance expenses', 46), (' Profit from discontinued operation ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' share of profit of equity accounted investees ', 39), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' Impairment loss ', 30), (' expenses ', 29), (' Loss on revaluation of inventories', 28), (' interest revenue ', 27), (' net of tax ', 21), (' net of tax ', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [(' share of profit of equity accounted investees ', 46), (' Share of gain/(loss) of joint venture ', 45), (' other gains/losses ', 41), (' other opertaing income ', 39), (' Profit from discontinued operation ', 39), (' Impairement (expenses)/reversal ', 37), (' Loss on revaluation of inventories', 37), (' interest gains and losses ', 36), (' other income and revenue ', 36), (' finance income and finance cost ', 33), (' Finance income and finance costs ', 33), (' Impairment loss ', 32), (' net finance costs ', 30), (' finance income and costs ', 30), (' interest revenue ', 30), (' Finance income and costs ', 30), ('finance cost ', 28), (' other income ', 28), (' Other income ', 28), (' finance expenses', 27), (' net of tax ', 22), (' net of tax ', 22), (' expenses ', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [(' Profit from discontinued operation ', 39), (' Loss on revaluation of inventories', 39), (' share of profit of equity accounted investees ', 38), (' finance income and finance cost ', 36), (' other income and revenue ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' other gains/losses ', 33), (' finance income and costs ', 33), (' interest gains and losses ', 33), (' Finance income and costs ', 33), (' other opertaing income ', 32), (' net finance costs ', 30), (' interest revenue ', 30), ('finance cost ', 29), (' Impairement (expenses)/reversal ', 28), (' other income ', 25), (' Other income ', 25), (' finance expenses', 24), (' net of tax ', 23), (' net of tax ', 23), (' Impairment loss ', 21), (' expenses ', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [(' interest revenue ', 40), (' expenses ', 38), (' finance expenses', 36), (' net of tax ', 36), (' net of tax ', 36), (' Impairement (expenses)/reversal ', 34), (' net finance costs ', 33), (' Loss on revaluation of inventories', 33), ('finance cost ', 31), (' other opertaing income ', 30), (' Profit from discontinued operation ', 29), (' share of profit of equity accounted investees ', 28), (' other gains/losses ', 27), (' interest gains and losses ', 27), (' other income and revenue ', 27), (' other income ', 23), (' finance income and finance cost ', 23), (' Other income ', 23), (' Share of gain/(loss) of joint venture ', 23), (' Impairment loss ', 23), (' Finance income and finance costs ', 23), (' finance income and costs ', 22), (' Finance income and costs ', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [(' share of profit of equity accounted investees ', 71), (' other income and revenue ', 47), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' other opertaing income ', 41), (' finance income and finance cost ', 41), (' Finance income and finance costs ', 41), (' interest gains and losses ', 39), (' Profit from discontinued operation ', 39), (' Share of gain/(loss) of joint venture ', 38), (' net finance costs ', 37), (' other gains/losses ', 37), (' other income ', 36), (' Other income ', 36), (' Impairement (expenses)/reversal ', 34), (' Loss on revaluation of inventories', 31), (' interest revenue ', 28), ('finance cost ', 26), (' finance expenses', 25), (' Impairment loss ', 23), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 14)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' other opertaing income ', 52), (' other income and revenue ', 52), (' other income ', 51), (' Other income ', 51), (' finance income and costs ', 49), (' Finance income and costs ', 49), (' net finance costs ', 47), (' Profit from discontinued operation ', 47), (' other gains/losses ', 43), (' finance income and finance cost ', 43), (' Finance income and finance costs ', 43), (' Impairement (expenses)/reversal ', 42), (' interest gains and losses ', 41), (' finance expenses', 40), (' share of profit of equity accounted investees ', 39), ('finance cost ', 37), (' Share of gain/(loss) of joint venture ', 37), (' net of tax ', 31), (' net of tax ', 31), (' Loss on revaluation of inventories', 30), (' interest revenue ', 26), (' Impairment loss ', 23), (' expenses ', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [(' other opertaing income ', 48), (' other income and revenue ', 45), (' net finance costs ', 41), (' share of profit of equity accounted investees ', 40), (' finance income and costs ', 40), (' Finance income and costs ', 40), (' finance income and finance cost ', 39), (' Finance income and finance costs ', 39), (' Impairement (expenses)/reversal ', 38), (' other income ', 37), (' Other income ', 37), (' Profit from discontinued operation ', 37), (' Share of gain/(loss) of joint venture ', 36), (' interest gains and losses ', 34), (' finance expenses', 32), (' other gains/losses ', 31), (' Loss on revaluation of inventories', 31), ('finance cost ', 30), (' interest revenue ', 28), (' net of tax ', 25), (' net of tax ', 25), (' Impairment loss ', 17), (' expenses ', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [(' share of profit of equity accounted investees ', 48), (' other income and revenue ', 48), (' Profit from discontinued operation ', 48), (' Share of gain/(loss) of joint venture ', 42), (' Loss on revaluation of inventories', 41), (' other opertaing income ', 40), (' finance income and finance cost ', 40), (' Finance income and finance costs ', 40), (' other gains/losses ', 39), (' finance income and costs ', 38), (' Finance income and costs ', 38), (' interest gains and losses ', 35), (' Impairement (expenses)/reversal ', 34), (' other income ', 32), (' Other income ', 32), (' net finance costs ', 31), (' finance expenses', 26), (' interest revenue ', 25), ('finance cost ', 24), (' Impairment loss ', 24), (' net of tax ', 19), (' net of tax ', 19), (' expenses ', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 10], 'score': 100, 'value': -8652.0, 'line_item_label': ['Other income', 'Finance costs'], 'note_numbers': ['9.', nan], 'line_item_value': [129.0, -8781.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [('NULL', 4)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [('NULL', 7)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [('NULL', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [('NULL', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [('NULL', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [('NULL', 7)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('NULL', 6)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [('NULL', 4)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [('NULL', 4)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [('NULL', 7)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [('NULL', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [('NULL', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [('NULL', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [('NULL', 7)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('NULL', 6)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [('NULL', 4)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('amount transferred to retained earnings', 41), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax expense', 29), (' income tax', 29), (' income tax benefit/(expense)', 28), ('deferred tax', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' income tax expense', 57), (' tax (expense)/benefit', 47), (' income tax benefit/(expense)', 44), ('deferred tax', 29), (' income tax benefit', 28), ('current tax', 26), ('earlier year', 25), ('provision for taxation previous year', 24), ('minimum alternate tax credit entitlement', 23), ('amount transferred to retained earnings', 21), (' income tax', 19), ('prior year ', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' tax (expense)/benefit', 59), (' income tax benefit/(expense)', 50), ('amount transferred to retained earnings', 42), (' income tax expense', 38), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), ('current tax', 30), (' income tax benefit', 30), ('provision for taxation previous year', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), (' income tax', 29), ('minimum alternate tax credit entitlement', 23)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('provision for taxation previous year', 44), ('amount transferred to retained earnings', 37), ('earlier year', 36), ('deferred tax', 32), ('prior year ', 31), (' income tax expense', 31), (' income tax benefit/(expense)', 30), ('minimum alternate tax credit entitlement', 29), (' tax (expense)/benefit', 29), (' income tax', 24), (' income tax benefit', 24), ('current tax', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' income tax benefit', 55), (' income tax expense', 50), (' income tax benefit/(expense)', 50), (' income tax', 48), ('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), (' tax (expense)/benefit', 27), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year ', 18), ('current tax', 17), ('earlier year', 17)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' income tax', 40), ('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax benefit', 36), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [(' income tax benefit', 61), (' income tax expense', 56), (' income tax', 56), (' income tax benefit/(expense)', 55), ('amount transferred to retained earnings', 42), ('minimum alternate tax credit entitlement', 38), (' tax (expense)/benefit', 35), ('prior year ', 31), ('current tax', 30), ('earlier year', 29), ('provision for taxation previous year', 27), ('deferred tax', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [('minimum alternate tax credit entitlement', 40), ('amount transferred to retained earnings', 40), (' income tax benefit', 40), (' income tax benefit/(expense)', 39), (' income tax expense', 38), ('provision for taxation previous year', 36), (' tax (expense)/benefit', 36), (' income tax', 32), ('current tax', 31), ('earlier year', 27), ('deferred tax', 25), ('prior year ', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [(' income tax benefit', 59), ('provision for taxation previous year', 54), (' income tax expense', 51), (' income tax benefit/(expense)', 51), (' income tax', 50), (' tax (expense)/benefit', 44), ('minimum alternate tax credit entitlement', 41), ('deferred tax', 39), ('current tax', 37), ('amount transferred to retained earnings', 33), ('prior year ', 32), ('earlier year', 31)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [(' income tax benefit', 100), (' income tax benefit/(expense)', 83), (' tax (expense)/benefit', 74), (' income tax expense', 73), (' income tax', 69), ('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 35), ('prior year ', 30), ('earlier year', 28)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [('provision for taxation previous year', 64), ('earlier year', 50), ('prior year ', 47), ('amount transferred to retained earnings', 35), ('current tax', 34), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 30), (' income tax expense', 30), (' income tax benefit', 29), (' income tax', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [('amount transferred to retained earnings', 42), ('provision for taxation previous year', 41), ('minimum alternate tax credit entitlement', 39), (' tax (expense)/benefit', 39), (' income tax benefit/(expense)', 38), (' income tax benefit', 36), (' income tax expense', 33), ('earlier year', 31), ('prior year ', 29), ('deferred tax', 25), (' income tax', 25), ('current tax', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [('amount transferred to retained earnings', 36), ('minimum alternate tax credit entitlement', 34), (' income tax benefit', 32), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), ('earlier year', 28), ('provision for taxation previous year', 27), ('deferred tax', 26), (' income tax expense', 26), ('prior year ', 22), (' income tax', 22), ('current tax', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [('deferred tax', 50), ('provision for taxation previous year', 41), ('current tax', 38), ('amount transferred to retained earnings', 38), ('earlier year', 37), (' tax (expense)/benefit', 36), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' income tax benefit/(expense)', 31), ('minimum alternate tax credit entitlement', 30), (' income tax', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [('amount transferred to retained earnings', 47), (' income tax benefit/(expense)', 43), (' income tax benefit', 42), ('minimum alternate tax credit entitlement', 41), (' income tax expense', 39), ('provision for taxation previous year', 38), (' tax (expense)/benefit', 32), ('current tax', 30), ('prior year ', 27), (' income tax', 27), ('earlier year', 26), ('deferred tax', 17)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' income tax expense', 58), (' income tax benefit', 53), (' income tax benefit/(expense)', 50), ('minimum alternate tax credit entitlement', 44), (' income tax', 44), ('current tax', 42), ('provision for taxation previous year', 39), ('amount transferred to retained earnings', 37), (' tax (expense)/benefit', 36), ('deferred tax', 34), ('prior year ', 33), ('earlier year', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [('provision for taxation previous year', 46), (' income tax expense', 43), (' income tax benefit', 42), (' income tax benefit/(expense)', 41), ('amount transferred to retained earnings', 37), ('minimum alternate tax credit entitlement', 35), ('prior year ', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), (' income tax', 31), ('current tax', 30), ('deferred tax', 28)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [('provision for taxation previous year', 44), (' income tax benefit/(expense)', 37), ('minimum alternate tax credit entitlement', 36), ('amount transferred to retained earnings', 36), (' income tax expense', 36), (' income tax benefit', 32), ('prior year ', 30), ('earlier year', 29), (' tax (expense)/benefit', 29), ('current tax', 24), ('deferred tax', 24), (' income tax', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 46544.0, 'line_item_label': ['Income tax benefits'], 'note_numbers': ['12.'], 'line_item_value': [46544.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('amount transferred to retained earnings', 41), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax expense', 29), (' income tax', 29), (' income tax benefit/(expense)', 28), ('deferred tax', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [(' income tax expense', 57), (' tax (expense)/benefit', 47), (' income tax benefit/(expense)', 44), ('deferred tax', 29), (' income tax benefit', 28), ('current tax', 26), ('earlier year', 25), ('provision for taxation previous year', 24), ('minimum alternate tax credit entitlement', 23), ('amount transferred to retained earnings', 21), (' income tax', 19), ('prior year ', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' tax (expense)/benefit', 59), (' income tax benefit/(expense)', 50), ('amount transferred to retained earnings', 42), (' income tax expense', 38), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), ('current tax', 30), (' income tax benefit', 30), ('provision for taxation previous year', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), (' income tax', 29), ('minimum alternate tax credit entitlement', 23)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('provision for taxation previous year', 44), ('amount transferred to retained earnings', 37), ('earlier year', 36), ('deferred tax', 32), ('prior year ', 31), (' income tax expense', 31), (' income tax benefit/(expense)', 30), ('minimum alternate tax credit entitlement', 29), (' tax (expense)/benefit', 29), (' income tax', 24), (' income tax benefit', 24), ('current tax', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' income tax benefit', 55), (' income tax expense', 50), (' income tax benefit/(expense)', 50), (' income tax', 48), ('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), (' tax (expense)/benefit', 27), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year ', 18), ('current tax', 17), ('earlier year', 17)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' income tax', 40), ('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax benefit', 36), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [(' income tax benefit', 61), (' income tax expense', 56), (' income tax', 56), (' income tax benefit/(expense)', 55), ('amount transferred to retained earnings', 42), ('minimum alternate tax credit entitlement', 38), (' tax (expense)/benefit', 35), ('prior year ', 31), ('current tax', 30), ('earlier year', 29), ('provision for taxation previous year', 27), ('deferred tax', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [('minimum alternate tax credit entitlement', 40), ('amount transferred to retained earnings', 40), (' income tax benefit', 40), (' income tax benefit/(expense)', 39), (' income tax expense', 38), ('provision for taxation previous year', 36), (' tax (expense)/benefit', 36), (' income tax', 32), ('current tax', 31), ('earlier year', 27), ('deferred tax', 25), ('prior year ', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [(' income tax benefit', 59), ('provision for taxation previous year', 54), (' income tax expense', 51), (' income tax benefit/(expense)', 51), (' income tax', 50), (' tax (expense)/benefit', 44), ('minimum alternate tax credit entitlement', 41), ('deferred tax', 39), ('current tax', 37), ('amount transferred to retained earnings', 33), ('prior year ', 32), ('earlier year', 31)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [(' income tax benefit', 100), (' income tax benefit/(expense)', 83), (' tax (expense)/benefit', 74), (' income tax expense', 73), (' income tax', 69), ('minimum alternate tax credit entitlement', 53), ('current tax', 50), ('deferred tax', 46), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 35), ('prior year ', 30), ('earlier year', 28)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [('provision for taxation previous year', 64), ('earlier year', 50), ('prior year ', 47), ('amount transferred to retained earnings', 35), ('current tax', 34), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 30), (' income tax expense', 30), (' income tax benefit', 29), (' income tax', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [('amount transferred to retained earnings', 42), ('provision for taxation previous year', 41), ('minimum alternate tax credit entitlement', 39), (' tax (expense)/benefit', 39), (' income tax benefit/(expense)', 38), (' income tax benefit', 36), (' income tax expense', 33), ('earlier year', 31), ('prior year ', 29), ('deferred tax', 25), (' income tax', 25), ('current tax', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [('amount transferred to retained earnings', 36), ('minimum alternate tax credit entitlement', 34), (' income tax benefit', 32), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), ('earlier year', 28), ('provision for taxation previous year', 27), ('deferred tax', 26), (' income tax expense', 26), ('prior year ', 22), (' income tax', 22), ('current tax', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [('deferred tax', 50), ('provision for taxation previous year', 41), ('current tax', 38), ('amount transferred to retained earnings', 38), ('earlier year', 37), (' tax (expense)/benefit', 36), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' income tax benefit/(expense)', 31), ('minimum alternate tax credit entitlement', 30), (' income tax', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [('amount transferred to retained earnings', 47), (' income tax benefit/(expense)', 43), (' income tax benefit', 42), ('minimum alternate tax credit entitlement', 41), (' income tax expense', 39), ('provision for taxation previous year', 38), (' tax (expense)/benefit', 32), ('current tax', 30), ('prior year ', 27), (' income tax', 27), ('earlier year', 26), ('deferred tax', 17)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' income tax expense', 58), (' income tax benefit', 53), (' income tax benefit/(expense)', 50), ('minimum alternate tax credit entitlement', 44), (' income tax', 44), ('current tax', 42), ('provision for taxation previous year', 39), ('amount transferred to retained earnings', 37), (' tax (expense)/benefit', 36), ('deferred tax', 34), ('prior year ', 33), ('earlier year', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [('provision for taxation previous year', 46), (' income tax expense', 43), (' income tax benefit', 42), (' income tax benefit/(expense)', 41), ('amount transferred to retained earnings', 37), ('minimum alternate tax credit entitlement', 35), ('prior year ', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), (' income tax', 31), ('current tax', 30), ('deferred tax', 28)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [('provision for taxation previous year', 44), (' income tax benefit/(expense)', 37), ('minimum alternate tax credit entitlement', 36), ('amount transferred to retained earnings', 36), (' income tax expense', 36), (' income tax benefit', 32), ('prior year ', 30), ('earlier year', 29), (' tax (expense)/benefit', 29), ('current tax', 24), ('deferred tax', 24), (' income tax', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 948.0, 'line_item_label': ['Income tax benefits'], 'note_numbers': ['12.'], 'line_item_value': [948.0]}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [('share of', 28), ('share in', 28)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [('share of', 28), ('share in', 28)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [('share of', 13), ('share in', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 37), (' prior period ', 33), ('exceptional ', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 19), (' prior period ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional ', 27), (' Actuarial gains / (losses) on retirement benefit obligation', 26), (' prior period ', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 33), ('exceptional ', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('exceptional ', 44), (' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 27), (' prior period ', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional ', 44), (' prior period ', 42), (' Actuarial gains / (losses) on retirement benefit obligation', 33)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 34), ('exceptional ', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24), ('exceptional ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 29), (' prior period ', 26), ('exceptional ', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 34), (' prior period ', 29), ('exceptional ', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 40), (' prior period ', 27), ('exceptional ', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 50), (' prior period ', 41), ('exceptional ', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 48), (' prior period ', 34), ('exceptional ', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 39), ('exceptional ', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' prior period ', 41), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 45), (' prior period ', 31), ('exceptional ', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 46), (' prior period ', 32), ('exceptional ', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 35), (' prior period ', 30), ('exceptional ', 29)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 26), ('exceptional ', 14)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), (' prior period ', 36), ('exceptional ', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 35), (' prior period ', 30), ('exceptional ', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 45), (' prior period ', 32), ('exceptional ', 16)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 37), (' prior period ', 33), ('exceptional ', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 19), (' prior period ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional ', 27), (' Actuarial gains / (losses) on retirement benefit obligation', 26), (' prior period ', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 33), ('exceptional ', 22)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('exceptional ', 44), (' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 27), (' prior period ', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional ', 44), (' prior period ', 42), (' Actuarial gains / (losses) on retirement benefit obligation', 33)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 34), ('exceptional ', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24), ('exceptional ', 11)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 29), (' prior period ', 26), ('exceptional ', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 34), (' prior period ', 29), ('exceptional ', 27)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 40), (' prior period ', 27), ('exceptional ', 19)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 50), (' prior period ', 41), ('exceptional ', 24)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 48), (' prior period ', 34), ('exceptional ', 26)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 39), ('exceptional ', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' prior period ', 41), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 45), (' prior period ', 31), ('exceptional ', 18)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 46), (' prior period ', 32), ('exceptional ', 20)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 35), (' prior period ', 30), ('exceptional ', 29)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 26), ('exceptional ', 14)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), (' prior period ', 36), ('exceptional ', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 35), (' prior period ', 30), ('exceptional ', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 45), (' prior period ', 32), ('exceptional ', 16)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-18 14:45:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [('NULL', 4)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [('NULL', 7)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [('NULL', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [('NULL', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [('NULL', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [('NULL', 7)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('NULL', 6)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [('NULL', 4)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:34+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = occupancy expenses , res_fuzz_match = [('NULL', 25)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = operating profit/(loss) , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = net finance income , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of profit of equity-accounted investees, net of income tax , res_fuzz_match = [('NULL', 4)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit before income tax , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax benefits , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = (loss)/profit for the year , res_fuzz_match = [('NULL', 7)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = items that are or may be reclassfied to profit or loss , res_fuzz_match = [('NULL', 9)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = effective portion of changes in fair value of cash flow hedges , res_fuzz_match = [('NULL', 12)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = translation reserve , res_fuzz_match = [('NULL', 21)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = share of other comprehensive income of equity accounted investments , res_fuzz_match = [('NULL', 7)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = income tax on other comprehensive income , res_fuzz_match = [('NULL', 6)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of income tax , res_fuzz_match = [('NULL', 4)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - txt_particular = total profit or loss and other comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:45:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('other bank balances', 48), ('bank balances other than above', 46), ('cash and short term deposits', 46), ('Cash and short term deposits', 46), ('bank balances other than cash and cash equivalents', 38), ('cash and bank balances', 36), ('cash and cash equivalents', 30), ('cash asset', 29)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = tax related receivables , res_fuzz_match = [('bank balances other than above', 37), ('cash and short term deposits', 37), ('Cash and short term deposits', 37), ('cash asset', 31), ('bank balances other than cash and cash equivalents', 30), ('other bank balances', 30), ('cash and bank balances', 28), ('cash and cash equivalents', 27)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = prepayment , res_fuzz_match = [('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 218214.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['13.'], 'line_item_value': [218214.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('other bank balances', 48), ('bank balances other than above', 46), ('cash and short term deposits', 46), ('Cash and short term deposits', 46), ('bank balances other than cash and cash equivalents', 38), ('cash and bank balances', 36), ('cash and cash equivalents', 30), ('cash asset', 29)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = tax related receivables , res_fuzz_match = [('bank balances other than above', 37), ('cash and short term deposits', 37), ('Cash and short term deposits', 37), ('cash asset', 31), ('bank balances other than cash and cash equivalents', 30), ('other bank balances', 30), ('cash and bank balances', 28), ('cash and cash equivalents', 27)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = prepayment , res_fuzz_match = [('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 403580.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['13.'], 'line_item_value': [403580.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit ', ' Vehicles ', ' Demonstrator units ', ' Training Vehicles']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('inventories', 67)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = tax related receivables , res_fuzz_match = [('inventories', 33)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = prepayment , res_fuzz_match = [('inventories', 17)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 17606.0, 'line_item_label': ['Inventories'], 'note_numbers': ['15.'], 'line_item_value': [17606.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('inventories', 67)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = tax related receivables , res_fuzz_match = [('inventories', 33)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = prepayment , res_fuzz_match = [('inventories', 17)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 45155.0, 'line_item_label': ['Inventories'], 'note_numbers': ['15.'], 'line_item_value': [45155.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' other current assets ', 55), (' other financial assets ', 55), (' other current financial assets ', 50), ('other assets ', 44), (' trade and other receivables', 43), (' prepayments ', 13)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = tax related receivables , res_fuzz_match = [(' trade and other receivables', 47), (' other current assets ', 40), (' other current financial assets ', 33), ('other assets ', 30), (' other financial assets ', 29), (' prepayments ', 27)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = prepayment , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 100, 'value': 222603.0, 'line_item_label': ['Trade and other receivables', 'Prepayment'], 'note_numbers': ['14.', nan], 'line_item_value': [222363.0, 240.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' other current assets ', 55), (' other financial assets ', 55), (' other current financial assets ', 50), ('other assets ', 44), (' trade and other receivables', 43), (' prepayments ', 13)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = tax related receivables , res_fuzz_match = [(' trade and other receivables', 47), (' other current assets ', 40), (' other current financial assets ', 33), ('other assets ', 30), (' other financial assets ', 29), (' prepayments ', 27)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = prepayment , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 100, 'value': 247826.0, 'line_item_label': ['Trade and other receivables', 'Prepayment'], 'note_numbers': ['14.', nan], 'line_item_value': [247644.0, 182.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('other current assets ', 55), (' other financial assets ', 55), (' deferred operating expenditure ', 52), (' other assets ', 44), (' trade and other receivables', 43), (' income tax receivable from related parties ', 41), (' financial assets ', 32), (' biological assets ', 27)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = tax related receivables , res_fuzz_match = [(' income tax receivable from related parties ', 65), (' trade and other receivables', 47), ('other current assets ', 40), (' deferred operating expenditure ', 32), (' other assets ', 30), (' other financial assets ', 29), (' financial assets ', 28), (' biological assets ', 21)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = prepayment , res_fuzz_match = [(' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' other financial assets ', 16), (' other assets ', 12), (' biological assets ', 11)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 222363.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['14.'], 'line_item_value': [222363.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('other current assets ', 55), (' other financial assets ', 55), (' deferred operating expenditure ', 52), (' other assets ', 44), (' trade and other receivables', 43), (' income tax receivable from related parties ', 41), (' financial assets ', 32), (' biological assets ', 27)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = tax related receivables , res_fuzz_match = [(' income tax receivable from related parties ', 65), (' trade and other receivables', 47), ('other current assets ', 40), (' deferred operating expenditure ', 32), (' other assets ', 30), (' other financial assets ', 29), (' financial assets ', 28), (' biological assets ', 21)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = prepayment , res_fuzz_match = [(' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' other financial assets ', 16), (' other assets ', 12), (' biological assets ', 11)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 247644.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['14.'], 'line_item_value': [247644.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment ']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant and equipment ', 43), (' plant and equipment ', 43), ('plant property equipment', 33), ('property plant equipment', 33), (' Property ', 27)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('plant property equipment', 44), ('property plant equipment', 44), ('plant and equipment ', 35), (' plant and equipment ', 35), (' Property ', 24)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('plant and equipment ', 45), (' plant and equipment ', 45), ('plant property equipment', 41), ('property plant equipment', 41), (' Property ', 22)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment ', 77), (' plant and equipment ', 77), (' Property ', 50)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment ', 33), (' plant and equipment ', 33), (' Property ', 26)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant and equipment ', 37), (' plant and equipment ', 37), (' Property ', 30), ('plant property equipment', 25), ('property plant equipment', 25)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 91, 'value': 2885.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['19.'], 'line_item_value': [2885.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant and equipment ', 43), (' plant and equipment ', 43), ('plant property equipment', 33), ('property plant equipment', 33), (' Property ', 27)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('plant property equipment', 44), ('property plant equipment', 44), ('plant and equipment ', 35), (' plant and equipment ', 35), (' Property ', 24)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('plant and equipment ', 45), (' plant and equipment ', 45), ('plant property equipment', 41), ('property plant equipment', 41), (' Property ', 22)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment ', 77), (' plant and equipment ', 77), (' Property ', 50)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment ', 33), (' plant and equipment ', 33), (' Property ', 26)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant and equipment ', 37), (' plant and equipment ', 37), (' Property ', 30), ('plant property equipment', 25), ('property plant equipment', 25)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 91, 'value': 1613.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['19.'], 'line_item_value': [1613.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('plant property equipment', 44), ('property plant equipment', 44)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('plant property equipment', 41), ('property plant equipment', 41)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 91, 'value': 2885.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['19.'], 'line_item_value': [2885.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('plant property equipment', 44), ('property plant equipment', 44)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('plant property equipment', 41), ('property plant equipment', 41)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 91, 'value': 1613.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['19.'], 'line_item_value': [1613.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['construction in progress ', ' work in progress ', ' capital works in progress ', ' WIP']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' plant and equipment ', 47), (' plant property equipment ', 46), (' property plant equipment ', 45), (' investment property', 40), ('Work in progress ', 38)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' investment property', 53), (' plant and equipment ', 47), (' property plant equipment ', 36), (' plant property equipment ', 35), ('Work in progress ', 31)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [(' investment property', 67), (' plant and equipment ', 47), (' property plant equipment ', 45), (' plant property equipment ', 40), ('Work in progress ', 31)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' plant and equipment ', 100), (' property plant equipment ', 80), (' plant property equipment ', 60), (' investment property', 47), ('Work in progress ', 31)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' property plant equipment ', 40), (' investment property', 34), (' plant property equipment ', 33), ('Work in progress ', 31), (' plant and equipment ', 27)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' plant and equipment ', 50), (' plant property equipment ', 42), (' property plant equipment ', 42), (' investment property', 42), ('Work in progress ', 25)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 2885.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['19.'], 'line_item_value': [2885.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' plant and equipment ', 47), (' plant property equipment ', 46), (' property plant equipment ', 45), (' investment property', 40), ('Work in progress ', 38)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' investment property', 53), (' plant and equipment ', 47), (' property plant equipment ', 36), (' plant property equipment ', 35), ('Work in progress ', 31)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [(' investment property', 67), (' plant and equipment ', 47), (' property plant equipment ', 45), (' plant property equipment ', 40), ('Work in progress ', 31)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' plant and equipment ', 100), (' property plant equipment ', 80), (' plant property equipment ', 60), (' investment property', 47), ('Work in progress ', 31)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' property plant equipment ', 40), (' investment property', 34), (' plant property equipment ', 33), ('Work in progress ', 31), (' plant and equipment ', 27)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' plant and equipment ', 50), (' plant property equipment ', 42), (' property plant equipment ', 42), (' investment property', 42), ('Work in progress ', 25)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 1613.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['19.'], 'line_item_value': [1613.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('tangible assets', 29)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('tangible assets', 21)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('tangible assets', 29)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible assets', 80)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 80, 'value': 26.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['20.'], 'line_item_value': [26.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('tangible assets', 29)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('tangible assets', 21)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('tangible assets', 29)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible assets', 80)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 80, 'value': 3.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['20.'], 'line_item_value': [3.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' intangible asset', 33), (' goodwill on consolidation ', 25), ('goodwill ', 14)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' intangible asset', 33), (' goodwill on consolidation ', 31), ('goodwill ', 29)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' intangible asset', 70), (' goodwill on consolidation ', 20), ('goodwill ', 0)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' intangible asset', 100), (' goodwill on consolidation ', 25), ('goodwill ', 14)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 26.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['20.'], 'line_item_value': [26.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' intangible asset', 33), (' goodwill on consolidation ', 25), ('goodwill ', 14)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' intangible asset', 33), (' goodwill on consolidation ', 31), ('goodwill ', 29)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' intangible asset', 70), (' goodwill on consolidation ', 20), ('goodwill ', 0)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' intangible asset', 100), (' goodwill on consolidation ', 25), ('goodwill ', 14)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 3.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['20.'], 'line_item_value': [3.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['Other intangibles ', ' development and software ', ' software ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' intangible assets under development ', 50), (' plant property equipment', 46), (' intangible under development ', 45), ('property plant equipment', 45), ('intangible assets ', 33)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' intangible under development ', 50), (' intangible assets under development ', 44), ('property plant equipment', 36), (' plant property equipment', 35), ('intangible assets ', 33)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('intangible assets ', 50), (' intangible assets under development ', 46), ('property plant equipment', 45), (' intangible under development ', 40), (' plant property equipment', 40)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('property plant equipment', 80), (' plant property equipment', 60), ('intangible assets ', 50), (' intangible under development ', 49), (' intangible assets under development ', 42)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets ', 70), ('property plant equipment', 40), (' intangible under development ', 33), (' intangible assets under development ', 33), (' plant property equipment', 33)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('intangible assets ', 100), (' intangible assets under development ', 100), (' intangible under development ', 67), (' plant property equipment', 42), ('property plant equipment', 42)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 5], 'score': 100, 'value': 2911.0, 'line_item_label': ['Property, plant and equipment', 'Intangible assets'], 'note_numbers': ['19.', '20.'], 'line_item_value': [2885.0, 26.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' intangible assets under development ', 50), (' plant property equipment', 46), (' intangible under development ', 45), ('property plant equipment', 45), ('intangible assets ', 33)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' intangible under development ', 50), (' intangible assets under development ', 44), ('property plant equipment', 36), (' plant property equipment', 35), ('intangible assets ', 33)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('intangible assets ', 50), (' intangible assets under development ', 46), ('property plant equipment', 45), (' intangible under development ', 40), (' plant property equipment', 40)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('property plant equipment', 80), (' plant property equipment', 60), ('intangible assets ', 50), (' intangible under development ', 49), (' intangible assets under development ', 42)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets ', 70), ('property plant equipment', 40), (' intangible under development ', 33), (' intangible assets under development ', 33), (' plant property equipment', 33)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('intangible assets ', 100), (' intangible assets under development ', 100), (' intangible under development ', 67), (' plant property equipment', 42), ('property plant equipment', 42)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 5], 'score': 100, 'value': 1616.0, 'line_item_label': ['Property, plant and equipment', 'Intangible assets'], 'note_numbers': ['19.', '20.'], 'line_item_value': [1613.0, 3.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('donations', 22)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('donations', 20)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('donations', 18)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('donations', 24)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('donations', 22)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('donations', 20)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('donations', 18)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('donations', 24)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('joint ventures and associates', 45), (' investments accounted for using the equity method', 45), ('derivative financial instruments', 36), ('investment', 33), (' investment in joint venture', 32), (' investment in associate', 31)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('investment', 100), (' investment in joint venture', 63), (' investment in associate', 62), ('joint ventures and associates', 44), ('derivative financial instruments', 42), (' investments accounted for using the equity method', 40)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('investment', 100), (' investment in associate', 62), (' investments accounted for using the equity method', 62), (' investment in joint venture', 58), ('derivative financial instruments', 46), ('joint ventures and associates', 43)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method', 40), ('investment', 33)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('derivative financial instruments', 58), (' investment in associate', 58), ('investment', 50), ('joint ventures and associates', 50), (' investment in joint venture', 50), (' investments accounted for using the equity method', 50)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2], 'score': 100, 'value': 47350.0, 'line_item_label': ['Other investments, including derivatives', 'Investments in equity accounted investees'], 'note_numbers': ['18.', '16.'], 'line_item_value': [166.0, 47184.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('joint ventures and associates', 45), (' investments accounted for using the equity method', 45), ('derivative financial instruments', 36), ('investment', 33), (' investment in joint venture', 32), (' investment in associate', 31)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('investment', 100), (' investment in joint venture', 63), (' investment in associate', 62), ('joint ventures and associates', 44), ('derivative financial instruments', 42), (' investments accounted for using the equity method', 40)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('investment', 100), (' investment in associate', 62), (' investments accounted for using the equity method', 62), (' investment in joint venture', 58), ('derivative financial instruments', 46), ('joint ventures and associates', 43)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method', 40), ('investment', 33)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('derivative financial instruments', 58), (' investment in associate', 58), ('investment', 50), ('joint ventures and associates', 50), (' investment in joint venture', 50), (' investments accounted for using the equity method', 50)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2], 'score': 100, 'value': 47906.0, 'line_item_label': ['Other investments, including derivatives', 'Investments in equity accounted investees'], 'note_numbers': ['18.', '16.'], 'line_item_value': [122.0, 47784.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('deferred tax assets', 43), ('deferred tax', 39), ('deferred charges', 36)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('deferred charges', 33), ('deferred tax assets', 30), ('deferred tax', 29)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('deferred tax assets', 32), ('deferred tax', 21), ('deferred charges', 20)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 38), ('deferred charges', 17)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 2801.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['21.'], 'line_item_value': [2801.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('deferred tax assets', 43), ('deferred tax', 39), ('deferred charges', 36)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [('deferred charges', 33), ('deferred tax assets', 30), ('deferred tax', 29)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [('deferred tax assets', 32), ('deferred tax', 21), ('deferred charges', 20)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 38), ('deferred charges', 17)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 2874.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['21.'], 'line_item_value': [2874.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' loan receivables', 55), (' exploration and evaluation expenditure', 49), (' other assets', 42), (' other non-current assets', 39), (' other non-current assets', 39), (' leased assets', 31), (' financial assets', 29), ('non-current', 28), (' leases', 15)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' other non-current assets', 50), (' other non-current assets', 50), (' other assets', 44), (' exploration and evaluation expenditure', 42), (' financial assets', 32), (' leased assets', 29), ('non-current', 25), (' loan receivables', 22), (' leases', 21)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [(' exploration and evaluation expenditure', 36), (' loan receivables', 35), (' financial assets', 33), (' other non-current assets', 33), (' other non-current assets', 33), (' leased assets', 31), (' other assets', 30), ('non-current', 17), (' leases', 12)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets', 80), (' leased assets', 64), (' other assets', 61), (' other non-current assets', 52), (' other non-current assets', 52), (' exploration and evaluation expenditure', 26), (' loan receivables', 26), (' leases', 25), ('non-current', 21)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 80, 'value': 26.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['20.'], 'line_item_value': [26.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' loan receivables', 55), (' exploration and evaluation expenditure', 49), (' other assets', 42), (' other non-current assets', 39), (' other non-current assets', 39), (' leased assets', 31), (' financial assets', 29), ('non-current', 28), (' leases', 15)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' other non-current assets', 50), (' other non-current assets', 50), (' other assets', 44), (' exploration and evaluation expenditure', 42), (' financial assets', 32), (' leased assets', 29), ('non-current', 25), (' loan receivables', 22), (' leases', 21)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [(' exploration and evaluation expenditure', 36), (' loan receivables', 35), (' financial assets', 33), (' other non-current assets', 33), (' other non-current assets', 33), (' leased assets', 31), (' other assets', 30), ('non-current', 17), (' leases', 12)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets', 80), (' leased assets', 64), (' other assets', 61), (' other non-current assets', 52), (' other non-current assets', 52), (' exploration and evaluation expenditure', 26), (' loan receivables', 26), (' leases', 25), ('non-current', 21)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 80, 'value': 3.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['20.'], 'line_item_value': [3.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft ']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [(' borrowings ', 100), (' loans and borrowings ', 57), (' shortterm borrowings ', 55), (' short-term debt ', 40), (' shortterm debt ', 40), (' bank overdraft ', 40), ('short term debt ', 38), (' cash overdraft ', 30), (' interest bearing liabilites ', 21), (' lease liabilities ', 12), ('  leases ', 0), (' cash and cash equivalents ', 0)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [('short term debt ', 39), (' lease liabilities ', 37), (' interest bearing liabilites ', 37), (' short-term debt ', 33), (' shortterm debt ', 33), (' bank overdraft ', 33), (' cash overdraft ', 33), (' loans and borrowings ', 32), (' cash and cash equivalents ', 32), (' shortterm borrowings ', 31), ('  leases ', 30), (' borrowings ', 18)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 302805.0, 'line_item_label': ['Borrowings'], 'note_numbers': ['23.'], 'line_item_value': [302805.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [(' borrowings ', 100), (' loans and borrowings ', 57), (' shortterm borrowings ', 55), (' short-term debt ', 40), (' shortterm debt ', 40), (' bank overdraft ', 40), ('short term debt ', 38), (' cash overdraft ', 30), (' interest bearing liabilites ', 21), (' lease liabilities ', 12), ('  leases ', 0), (' cash and cash equivalents ', 0)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [('short term debt ', 39), (' lease liabilities ', 37), (' interest bearing liabilites ', 37), (' short-term debt ', 33), (' shortterm debt ', 33), (' bank overdraft ', 33), (' cash overdraft ', 33), (' loans and borrowings ', 32), (' cash and cash equivalents ', 32), (' shortterm borrowings ', 31), ('  leases ', 30), (' borrowings ', 18)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 504362.0, 'line_item_label': ['Borrowings'], 'note_numbers': ['23.'], 'line_item_value': [504362.0]}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-18 14:45:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:57+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-18 14:45:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'trade payable', 'other trade payables']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other trade payables', 25), ('trade payable', 22), ('trade and other payables', 21)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [('trade payable', 64), ('other trade payables', 53), ('trade and other payables', 47)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 58928.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['22.'], 'line_item_value': [58928.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('other trade payables', 25), ('trade payable', 22), ('trade and other payables', 21)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [('trade payable', 64), ('other trade payables', 53), ('trade and other payables', 47)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 43736.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['22.'], 'line_item_value': [43736.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses ', ' interest accrued']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('trade and other payables', 21)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [('trade and other payables', 47)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 58928.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['22.'], 'line_item_value': [58928.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('trade and other payables', 21)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [('trade and other payables', 47)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 43736.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['22.'], 'line_item_value': [43736.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current tax liabilities ', 33), (' provision', 33), (' income tax payable ', 17), (' tax ', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [(' tax ', 100), (' income tax payable ', 62), ('current tax liabilities ', 50), (' provision', 17)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3, 4], 'score': 100, 'value': 18178.0, 'line_item_label': ['Liabilities', 'Tax related payables', 'Provisions'], 'note_numbers': [nan, '25.', '24.'], 'line_item_value': [0.0, 17136.0, 1042.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('current tax liabilities ', 33), (' provision', 33), (' income tax payable ', 17), (' tax ', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [(' tax ', 100), (' income tax payable ', 62), ('current tax liabilities ', 50), (' provision', 17)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3, 4], 'score': 100, 'value': 67133.0, 'line_item_label': ['Liabilities', 'Tax related payables', 'Provisions'], 'note_numbers': [nan, '25.', '24.'], 'line_item_value': [0.0, 66071.0, 1062.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('provisions', 33), ('other current liabilities', 23), (' other current liabilities', 23), (' other financial liabilities', 23), (' deferred revenue', 22), (' trade and other payables', 21), (' customer deposits', 20), (' employee benefits', 19), (' foreign exchange contract liability', 16), (' financial liabilities', 10)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [(' trade and other payables', 47), ('other current liabilities', 33), (' other current liabilities', 33), (' other financial liabilities', 33), (' foreign exchange contract liability', 30), (' financial liabilities', 27), (' employee benefits', 26), (' deferred revenue', 21), (' customer deposits', 20), ('provisions', 18)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4], 'score': 100, 'value': 59970.0, 'line_item_label': ['Trade and other payables', 'Provisions'], 'note_numbers': ['22.', '24.'], 'line_item_value': [58928.0, 1042.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('provisions', 33), ('other current liabilities', 23), (' other current liabilities', 23), (' other financial liabilities', 23), (' deferred revenue', 22), (' trade and other payables', 21), (' customer deposits', 20), (' employee benefits', 19), (' foreign exchange contract liability', 16), (' financial liabilities', 10)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = tax related payables , res_fuzz_match = [(' trade and other payables', 47), ('other current liabilities', 33), (' other current liabilities', 33), (' other financial liabilities', 33), (' foreign exchange contract liability', 30), (' financial liabilities', 27), (' employee benefits', 26), (' deferred revenue', 21), (' customer deposits', 20), ('provisions', 18)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4], 'score': 100, 'value': 44798.0, 'line_item_label': ['Trade and other payables', 'Provisions'], 'note_numbers': ['22.', '24.'], 'line_item_value': [43736.0, 1062.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term debt', 30)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('long term debt', 30)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['leases ', ' secured finance debt ', ' bank loan ', ' lease liabilities ', ' lease liability ', ' lease liabilities - non-current ', ' later than 1 year ', ' not later than 5 years']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 53), ('interest bearing loans and borrowings ', 45), (' lease liabilities ', 45), (' lease liability', 45), (' borrowings ', 33)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('interest bearing loans and borrowings ', 100), (' borrowings ', 100), (' loans and borrowings', 100), (' lease liabilities ', 17), (' lease liability', 17)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings ', 33), (' borrowings ', 33), (' loans and borrowings', 33), (' lease liabilities ', 17), (' lease liability', 17)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 1444.0, 'line_item_label': ['Borrowings'], 'note_numbers': ['23.'], 'line_item_value': [1444.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 53), ('interest bearing loans and borrowings ', 45), (' lease liabilities ', 45), (' lease liability', 45), (' borrowings ', 33)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('interest bearing loans and borrowings ', 100), (' borrowings ', 100), (' loans and borrowings', 100), (' lease liabilities ', 17), (' lease liability', 17)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings ', 33), (' borrowings ', 33), (' loans and borrowings', 33), (' lease liabilities ', 17), (' lease liability', 17)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 518.0, 'line_item_label': ['Borrowings'], 'note_numbers': ['23.'], 'line_item_value': [518.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('interest bearing loans and borrowings', 47), ('(bond)', 15)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('(bond)', 40), ('interest bearing loans and borrowings', 34)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('(bond)', 20)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('interest bearing loans and borrowings', 47), ('(bond)', 15)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('(bond)', 40), ('interest bearing loans and borrowings', 34)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('(bond)', 20)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes ', ' deferred tax liabilities']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities ', ' total deferred tax (assets) / liabilities']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' deferred tax liabilities', 52), ('deferred taxes ', 44)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('deferred taxes ', 17), (' deferred tax liabilities', 17)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes ', 17), (' deferred tax liabilities', 17)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' deferred tax liabilities', 52), ('deferred taxes ', 44)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('deferred taxes ', 17), (' deferred tax liabilities', 17)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes ', 17), (' deferred tax liabilities', 17)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables ', 100), ('other long term liabilities ', 50), (' other financial liabilities ', 43), (' other non-current liabilities ', 38), (' deferred revenue', 35), (' financial liabilities ', 33), (' employee benefits ', 32), (' provision for associate funding ', 32), (' provisions ', 14)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [(' other non-current liabilities ', 38), (' provisions ', 33), ('other long term liabilities ', 29), (' provision for associate funding ', 29), (' other financial liabilities ', 23), (' deferred revenue', 22), (' trade and other payables ', 21), (' employee benefits ', 19), (' financial liabilities ', 10)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provisions ', 100), (' provision for associate funding ', 43), (' deferred revenue', 22), (' employee benefits ', 19), (' other non-current liabilities ', 15), (' trade and other payables ', 14), (' financial liabilities ', 10), (' other financial liabilities ', 8), ('other long term liabilities ', 7)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2], 'score': 100, 'value': 2669.0, 'line_item_label': ['Trade and other payables', 'Provisions'], 'note_numbers': ['22.', '24.'], 'line_item_value': [0.0, 2669.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables ', 100), ('other long term liabilities ', 50), (' other financial liabilities ', 43), (' other non-current liabilities ', 38), (' deferred revenue', 35), (' financial liabilities ', 33), (' employee benefits ', 32), (' provision for associate funding ', 32), (' provisions ', 14)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [(' other non-current liabilities ', 38), (' provisions ', 33), ('other long term liabilities ', 29), (' provision for associate funding ', 29), (' other financial liabilities ', 23), (' deferred revenue', 22), (' trade and other payables ', 21), (' employee benefits ', 19), (' financial liabilities ', 10)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provisions ', 100), (' provision for associate funding ', 43), (' deferred revenue', 22), (' employee benefits ', 19), (' other non-current liabilities ', 15), (' trade and other payables ', 14), (' financial liabilities ', 10), (' other financial liabilities ', 8), ('other long term liabilities ', 7)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2], 'score': 100, 'value': 2792.0, 'line_item_label': ['Trade and other payables', 'Provisions'], 'note_numbers': ['22.', '24.'], 'line_item_value': [0.0, 2792.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = borrowings , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares ', ' fully paid ordinary shares ', ' issued and paid-up share capital ', ' retained profits ', ' ordinary shares fully paid ', ' total issued capital ', ' on issue, fully paid ', ' Fully paid Preference shares ', ' Profits captialised on redemption of preference shares']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' share capital ', 40), (' share capital ', 40), (' equity share capital ', 37), (' perpetual equity instrument ', 35), (' contributed equity ', 32), (' issued capital ', 32), (' contributed equity', 32), ('common stock ', 19)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [(' share capital ', 100), (' share capital ', 100), (' equity share capital ', 76), (' issued capital ', 67), (' contributed equity ', 37), (' contributed equity', 37), (' perpetual equity instrument ', 33), ('common stock ', 26)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' perpetual equity instrument ', 26), (' equity share capital ', 25), (' share capital ', 24), (' share capital ', 24), (' contributed equity ', 18), (' contributed equity', 18), (' issued capital ', 12), ('common stock ', 11)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 152000.0, 'line_item_label': ['Share capital'], 'note_numbers': ['26.'], 'line_item_value': [152000.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' share capital ', 40), (' share capital ', 40), (' equity share capital ', 37), (' perpetual equity instrument ', 35), (' contributed equity ', 32), (' issued capital ', 32), (' contributed equity', 32), ('common stock ', 19)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [(' share capital ', 100), (' share capital ', 100), (' equity share capital ', 76), (' issued capital ', 67), (' contributed equity ', 37), (' contributed equity', 37), (' perpetual equity instrument ', 33), ('common stock ', 26)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' perpetual equity instrument ', 26), (' equity share capital ', 25), (' share capital ', 24), (' share capital ', 24), (' contributed equity ', 18), (' contributed equity', 18), (' issued capital ', 12), ('common stock ', 11)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 152000.0, 'line_item_label': ['Share capital'], 'note_numbers': ['26.'], 'line_item_value': [152000.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('Share premium', 27)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('Share premium', 67)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('Share premium', 42)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('Share premium', 27)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('Share premium', 67)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('Share premium', 42)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings ', ' general reserves ', ' accumulated losses ', ' retained earnings and dividends on equity instruments']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' retained earnings ', 40), ('other equity ', 38), (' retained profits', 36), (' accumulated losses ', 29), (' reserves surplus ', 27)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [(' retained profits', 50), ('other equity ', 43), (' retained earnings ', 36), (' accumulated losses ', 26), (' reserves surplus ', 25)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves surplus ', 63), ('other equity ', 33), (' retained earnings ', 24), (' retained profits', 21), (' accumulated losses ', 11)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 37340.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [37340.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' retained earnings ', 40), ('other equity ', 38), (' retained profits', 36), (' accumulated losses ', 29), (' reserves surplus ', 27)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [(' retained profits', 50), ('other equity ', 43), (' retained earnings ', 36), (' accumulated losses ', 26), (' reserves surplus ', 25)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves surplus ', 63), ('other equity ', 33), (' retained earnings ', 24), (' retained profits', 21), (' accumulated losses ', 11)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 42658.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [42658.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' noncontrolling interest ', 36), (' non-controlling interest', 36), ('minority interest ', 35), (' minority interest ', 35), (' non controlling interest ', 34)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('minority interest ', 32), (' non controlling interest ', 32), (' minority interest ', 32), (' noncontrolling interest ', 27), (' non-controlling interest', 27)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest ', 40), (' minority interest ', 40), (' noncontrolling interest ', 32), (' non-controlling interest', 32), (' non controlling interest ', 23)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' noncontrolling interest ', 36), (' non-controlling interest', 36), ('minority interest ', 35), (' minority interest ', 35), (' non controlling interest ', 34)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('minority interest ', 32), (' non controlling interest ', 32), (' minority interest ', 32), (' noncontrolling interest ', 27), (' non-controlling interest', 27)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest ', 40), (' minority interest ', 40), (' noncontrolling interest ', 32), (' non-controlling interest', 32), (' non controlling interest ', 23)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('shareholders equity(a)', 31)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('shareholders equity(a)', 57)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('shareholders equity(a)', 31)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('shareholders equity(a)', 57)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve ', ' cash flow hedge reserve ', ' reserve in joint venture ', ' other reserve ', ' total other reserves ', ' tax reserve ', ' other  components of equity']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other reserves ', 29), (' reserves ', 27), (' foreign currency translation reserve', 25)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('other reserves ', 35), (' reserves ', 24), (' foreign currency translation reserve', 24)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves ', 100), ('other reserves ', 67), (' foreign currency translation reserve', 32)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 503.0, 'line_item_label': ['Reserves'], 'note_numbers': [nan], 'line_item_value': [503.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other reserves ', 29), (' reserves ', 27), (' foreign currency translation reserve', 25)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('other reserves ', 35), (' reserves ', 24), (' foreign currency translation reserve', 24)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves ', 100), ('other reserves ', 67), (' foreign currency translation reserve', 32)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 5064.0, 'line_item_label': ['Reserves'], 'note_numbers': [nan], 'line_item_value': [5064.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['cost ', ' gross ', ' investment property ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction ', ' Mine infrastructure ', ' Assets under construction ', ' Capitalised pre stripping costs ', ' Other assets in progress ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Freehold land ', ' Buildings ', ' Subsea ', ' Marine  Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings ', '']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' Exploration and evaluation assets', 45), (' oil and gas properties ', 44), (' plant and equipment ', 43), ('plant property equipment ', 33), (' property plant equipment ', 33), (' investment property ', 32), (' property ', 27)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' investment property ', 50), ('plant property equipment ', 44), (' property plant equipment ', 44), (' Exploration and evaluation assets', 38), (' oil and gas properties ', 36), (' plant and equipment ', 35), (' property ', 24)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [(' plant and equipment ', 45), ('plant property equipment ', 41), (' property plant equipment ', 41), (' investment property ', 41), (' Exploration and evaluation assets', 35), (' oil and gas properties ', 33), (' property ', 22)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment ', 91), (' property plant equipment ', 91), (' plant and equipment ', 77), (' oil and gas properties ', 70), (' investment property ', 62), (' property ', 50), (' Exploration and evaluation assets', 48)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' Exploration and evaluation assets', 49), (' investment property ', 40), ('plant property equipment ', 34), (' property plant equipment ', 34), (' plant and equipment ', 33), (' oil and gas properties ', 29), (' property ', 26)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' Exploration and evaluation assets', 41), (' plant and equipment ', 37), (' investment property ', 30), (' property ', 30), (' oil and gas properties ', 26), ('plant property equipment ', 25), (' property plant equipment ', 25)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 91, 'value': 2885.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['19.'], 'line_item_value': [2885.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' Exploration and evaluation assets', 45), (' oil and gas properties ', 44), (' plant and equipment ', 43), ('plant property equipment ', 33), (' property plant equipment ', 33), (' investment property ', 32), (' property ', 27)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' investment property ', 50), ('plant property equipment ', 44), (' property plant equipment ', 44), (' Exploration and evaluation assets', 38), (' oil and gas properties ', 36), (' plant and equipment ', 35), (' property ', 24)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = investments in equity accounted investees , res_fuzz_match = [(' plant and equipment ', 45), ('plant property equipment ', 41), (' property plant equipment ', 41), (' investment property ', 41), (' Exploration and evaluation assets', 35), (' oil and gas properties ', 33), (' property ', 22)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment ', 91), (' property plant equipment ', 91), (' plant and equipment ', 77), (' oil and gas properties ', 70), (' investment property ', 62), (' property ', 50), (' Exploration and evaluation assets', 48)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' Exploration and evaluation assets', 49), (' investment property ', 40), ('plant property equipment ', 34), (' property plant equipment ', 34), (' plant and equipment ', 33), (' oil and gas properties ', 29), (' property ', 26)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' Exploration and evaluation assets', 41), (' plant and equipment ', 37), (' investment property ', 30), (' property ', 30), (' oil and gas properties ', 26), ('plant property equipment ', 25), (' property plant equipment ', 25)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 91, 'value': 1613.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['19.'], 'line_item_value': [1613.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:45:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-18 14:45:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' receivable ', 50), (' trade and other receivables', 47), (' government subsidies receivable ', 44), ('account receivables ', 43), (' trade receivables ', 42), (' unbilled ', 40), (' billed ', 25)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = tax related receivables , res_fuzz_match = [(' receivable ', 100), (' trade receivables ', 75), ('account receivables ', 64), (' trade and other receivables', 62), (' government subsidies receivable ', 50), (' billed ', 25), (' unbilled ', 20)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = prepayment , res_fuzz_match = [(' receivable ', 36), ('account receivables ', 33), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4], 'score': 100, 'value': 277553.0, 'line_item_label': ['Trade and other receivables', 'Tax related receivables'], 'note_numbers': ['14.', '25.'], 'line_item_value': [222363.0, 55190.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:45:58+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = other investments, including derivatives , res_fuzz_match = [(' receivable ', 50), (' trade and other receivables', 47), (' government subsidies receivable ', 44), ('account receivables ', 43), (' trade receivables ', 42), (' unbilled ', 40), (' billed ', 25)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = tax related receivables , res_fuzz_match = [(' receivable ', 100), (' trade receivables ', 75), ('account receivables ', 64), (' trade and other receivables', 62), (' government subsidies receivable ', 50), (' billed ', 25), (' unbilled ', 20)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - txt_particular = prepayment , res_fuzz_match = [(' receivable ', 36), ('account receivables ', 33), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-18 14:45:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4], 'score': 100, 'value': 313270.0, 'line_item_label': ['Trade and other receivables', 'Tax related receivables'], 'note_numbers': ['14.', '25.'], 'line_item_value': [247644.0, 65626.0]}
2023-08-18 14:45:58+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-08-18 14:48:22+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-18 14:48:22+0530 - sLogger - DEBUG - process_main_pages started
2023-08-18 14:48:22+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-18 14:48:22+0530 - sLogger - DEBUG - start_refactoring started
2023-08-18 14:48:22+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-18 14:48:22+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-18 14:48:22+0530 - sLogger - DEBUG - start_refactoring started
2023-08-18 14:48:22+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-18 14:48:22+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-18 14:48:22+0530 - sLogger - DEBUG - start_refactoring started
2023-08-18 14:48:22+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-18 14:48:22+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: find_note_subnote_number
2023-08-18 14:48:22+0530 - sLogger - ERROR - error occured: list index out of range
2023-08-18 14:48:22+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: find_note_subnote_number
2023-08-18 14:48:22+0530 - sLogger - ERROR - error occured: list index out of range
2023-08-18 14:48:22+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: find_note_subnote_number
2023-08-18 14:48:22+0530 - sLogger - ERROR - error occured: list index out of range
2023-08-18 14:48:22+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: notes_number_processing
2023-08-18 14:48:22+0530 - sLogger - ERROR - error occured: 'int' object has no attribute 'strip'
2023-08-18 14:48:22+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: find_note_subnote_number
2023-08-18 14:48:22+0530 - sLogger - ERROR - error occured: list index out of range
2023-08-18 14:48:22+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: find_note_subnote_number
2023-08-18 14:48:22+0530 - sLogger - ERROR - error occured: list index out of range
2023-08-18 14:48:22+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: find_note_subnote_number
2023-08-18 14:48:22+0530 - sLogger - ERROR - error occured: list index out of range
2023-08-18 14:48:22+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: find_note_subnote_number
2023-08-18 14:48:22+0530 - sLogger - ERROR - error occured: list index out of range
2023-08-18 14:48:22+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: find_note_subnote_number
2023-08-18 14:48:22+0530 - sLogger - ERROR - error occured: list index out of range
2023-08-18 14:48:22+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: find_note_subnote_number
2023-08-18 14:48:22+0530 - sLogger - ERROR - error occured: list index out of range
2023-08-18 14:48:22+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-18 14:48:22+0530 - sLogger - DEBUG - set_section_details started
2023-08-18 14:48:22+0530 - sLogger - DEBUG - ASSETS | [('assets', 100), ('currentassets', 59), ('current assets', 56), ('noncurrent assets', 56), ('noncurrentassets', 50), ('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD current assets | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD currentassets | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD current liabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD currentliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrent assets | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrentassets | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrent liabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD non current assets | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD non current liabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrentliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrentassets | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrentliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD equity and liabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD equity | score 33
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD equityandliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('currentliabilities', 64), ('assets', 56), ('currentassets', 56), ('noncurrentliabilities', 56), ('current liabilities', 52), ('noncurrentassets', 50), ('noncurrent liabilities', 44), ('equity', 32), ('equityliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('equity liabilities', 23), ('liabilities', 11)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD currentassets | score 96
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD currentliabilities | score 62
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentassets | score 87
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentliabilities | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentassets | score 87
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentliabilities | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equityandliabilities | score 29
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equityandliabilities', 38), ('equity liabilities', 35), ('equityliabilities', 34), ('noncurrentassets', 33), ('assets', 31), ('currentassets', 30), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrentliabilities', 24), ('noncurrent liabilities', 23), ('liabilities', 22), ('currentliabilities', 20)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentassets | score 37
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentliabilities | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equityandliabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Trade receivables | [('equityandliabilities', 43), ('currentassets', 42), ('noncurrentassets', 37), ('equity', 33), ('current assets', 32), ('equity liabilities', 32), ('current liabilities', 31), ('equityliabilities', 30), ('currentliabilities', 29), ('equity and liabilities', 28), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrent assets', 24), ('noncurrent liabilities', 23), ('liabilities', 22)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD current assets | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD currentassets | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD current liabilities | score 50
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD currentliabilities | score 51
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD noncurrent assets | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD noncurrentassets | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD noncurrent liabilities | score 46
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD non current assets | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD non current liabilities | score 45
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD noncurrentliabilities | score 47
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD noncurrentassets | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD noncurrentliabilities | score 47
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD equity and liabilities | score 51
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD equityandliabilities | score 49
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Other current assets | [('current assets', 81), ('noncurrent assets', 62), ('currentassets', 52), ('currentliabilities', 50), ('current liabilities', 48), ('noncurrentassets', 47), ('noncurrentliabilities', 45), ('assets', 42), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('equity liabilities', 25), ('equity', 24), ('equityliabilities', 22), ('equityandliabilities', 20), ('liabilities', 8)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current assets | score 95
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD currentassets | score 83
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current liabilities | score 56
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD currentliabilities | score 53
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent assets | score 81
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentassets | score 78
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current assets | score 84
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current liabilities | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentassets | score 78
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity and liabilities | score 33
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equityandliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('currentliabilities', 57), ('currentassets', 52), ('noncurrentliabilities', 52), ('noncurrentassets', 47), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentassets | score 83
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentliabilities | score 53
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equityandliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('noncurrentliabilities', 56), ('noncurrentassets', 50), ('currentassets', 40), ('currentliabilities', 36), ('current liabilities', 30), ('equity and liabilities', 27), ('equityandliabilities', 25), ('equity liabilities', 23), ('equity', 21), ('equityliabilities', 19), ('liabilities', 11)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD currentassets | score 87
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD currentliabilities | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentassets | score 97
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentliabilities | score 68
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentassets | score 97
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentliabilities | score 68
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equityandliabilities | score 27
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equityliabilities', 26), ('currentliabilities', 25), ('equityandliabilities', 23), ('noncurrentliabilities', 22), ('liabilities', 19)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentassets | score 53
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentliabilities | score 29
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equityandliabilities | score 27
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('equityandliabilities', 23), ('noncurrent liabilities', 21), ('equity', 19), ('currentliabilities', 17), ('equityliabilities', 17), ('noncurrentliabilities', 15), ('liabilities', 10)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentassets | score 62
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentliabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equityandliabilities | score 31
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrentliabilities', 58), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('currentliabilities', 43), ('assets', 42), ('current liabilities', 42), ('currentassets', 39), ('equity and liabilities', 33), ('equityandliabilities', 33), ('equity liabilities', 31), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentassets | score 83
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('currentassets', 43), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equityliabilities', 32), ('currentliabilities', 30), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentassets | score 56
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentliabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equityandliabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - LIABILITIES | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equityandliabilities', 35), ('equity', 33), ('equityliabilities', 29), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11), ('currentassets', 11), ('noncurrentassets', 10)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD current assets | score 24
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD currentassets | score 25
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD current liabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD currentliabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrent assets | score 24
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrentassets | score 22
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrent liabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD non current assets | score 24
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD non current liabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrentliabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrentassets | score 22
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrentliabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD equity and liabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD equityandliabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('currentliabilities', 78), ('noncurrentliabilities', 69), ('equity liabilities', 67), ('currentassets', 62), ('liabilities', 60), ('equity and liabilities', 58), ('noncurrentassets', 55), ('current assets', 52), ('noncurrent liabilities', 43), ('equityliabilities', 36), ('equityandliabilities', 32), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD currentassets | score 62
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD currentliabilities | score 97
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentassets | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentassets | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equityandliabilities | score 67
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Current tax liabilities | [('current liabilities', 88), ('currentliabilities', 67), ('currentassets', 60), ('noncurrentliabilities', 60), ('equity liabilities', 58), ('noncurrentassets', 55), ('equity and liabilities', 51), ('liabilities', 50), ('current assets', 45), ('noncurrent liabilities', 44), ('equityliabilities', 31), ('equityandliabilities', 28), ('noncurrent assets', 26), ('equity', 25), ('assets', 17)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current assets | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD currentassets | score 56
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current liabilities | score 95
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD currentliabilities | score 88
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent assets | score 55
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentassets | score 51
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent liabilities | score 84
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current assets | score 56
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current liabilities | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentliabilities | score 82
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentassets | score 51
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentliabilities | score 82
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity and liabilities | score 71
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equityandliabilities | score 65
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Employee benefit obligations | [('equity and liabilities', 42), ('equity liabilities', 41), ('equityliabilities', 41), ('current liabilities', 40), ('equityandliabilities', 38), ('currentliabilities', 33), ('equity', 30), ('noncurrentliabilities', 30), ('noncurrent liabilities', 29), ('current assets', 24), ('noncurrent assets', 24), ('currentassets', 24), ('noncurrentassets', 22), ('liabilities', 22), ('assets', 15)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD current assets | score 33
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD currentassets | score 29
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD current liabilities | score 45
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD currentliabilities | score 45
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD noncurrent assets | score 37
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD noncurrentassets | score 32
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD noncurrent liabilities | score 44
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD non current assets | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD non current liabilities | score 47
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD noncurrentliabilities | score 41
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD noncurrentassets | score 32
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD noncurrentliabilities | score 41
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD equity and liabilities | score 46
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD equity | score 45
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD equityandliabilities | score 42
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('currentliabilities', 62), ('currentassets', 56), ('noncurrentliabilities', 56), ('equity liabilities', 55), ('noncurrentassets', 51), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('equityandliabilities', 32), ('equityliabilities', 29), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentassets | score 56
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentliabilities | score 84
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equityandliabilities | score 62
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('noncurrentliabilities', 54), ('noncurrentassets', 48), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('currentliabilities', 35), ('currentassets', 31), ('equityandliabilities', 24), ('equity', 20), ('equityliabilities', 18), ('assets', 11)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD currentassets | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD currentliabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentassets | score 68
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentliabilities | score 98
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentassets | score 68
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentliabilities | score 98
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equityandliabilities | score 62
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrentliabilities', 56), ('noncurrent assets', 55), ('noncurrentassets', 51), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('currentliabilities', 41), ('currentassets', 38), ('equity liabilities', 36), ('equity and liabilities', 32), ('equityandliabilities', 26), ('equityliabilities', 21), ('assets', 16), ('equity', 15)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentassets | score 56
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentliabilities | score 85
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equityandliabilities | score 58
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('currentassets', 48), ('noncurrentassets', 42), ('currentliabilities', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equityliabilities', 24), ('liabilities', 13)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentassets | score 70
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentliabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equityandliabilities | score 33
2023-08-18 14:48:22+0530 - sLogger - DEBUG - EQUITY | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD current assets | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD currentassets | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD current liabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD currentliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD noncurrent assets | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD noncurrentassets | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD noncurrent liabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD non current assets | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD non current liabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD noncurrentliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD noncurrentassets | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD noncurrentliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD equity and liabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD equity | score 100
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD equityandliabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Contributed equity | [('equity', 55), ('equityliabilities', 50), ('equity and liabilities', 48), ('equityandliabilities', 44), ('noncurrentliabilities', 43), ('equity liabilities', 41), ('current liabilities', 40), ('currentliabilities', 40), ('noncurrentassets', 39), ('currentassets', 36), ('current assets', 28), ('liabilities', 27), ('noncurrent liabilities', 27), ('noncurrent assets', 21), ('assets', 19)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current assets | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD currentassets | score 32
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current liabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD currentliabilities | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent assets | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentassets | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent liabilities | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current assets | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current liabilities | score 37
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentliabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentassets | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentliabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity and liabilities | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equityandliabilities | score 32
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Other reserves | [('noncurrentassets', 44), ('currentassets', 42), ('noncurrentliabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('currentliabilities', 29), ('assets', 24), ('current liabilities', 23), ('noncurrent liabilities', 23), ('equity liabilities', 16), ('equity and liabilities', 14), ('equity', 11), ('equityliabilities', 10), ('equityandliabilities', 9), ('liabilities', 0)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD current assets | score 43
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD currentassets | score 44
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD current liabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD currentliabilities | score 31
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD noncurrent assets | score 45
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD noncurrentassets | score 47
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD noncurrent liabilities | score 37
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD non current assets | score 44
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD non current liabilities | score 32
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD noncurrentliabilities | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD noncurrentassets | score 47
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD noncurrentliabilities | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD equity and liabilities | score 25
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD equity | score 15
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD equityandliabilities | score 18
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Retained earnings | [('equity and liabilities', 50), ('currentliabilities', 50), ('current liabilities', 48), ('currentassets', 43), ('noncurrentliabilities', 43), ('current assets', 42), ('assets', 38), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equity', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('equityliabilities', 32), ('liabilities', 24), ('noncurrent liabilities', 24)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentassets | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentliabilities | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 46
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equityandliabilities | score 43
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentassets | score 32
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentliabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equityandliabilities | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - nan | [('equityandliabilities', 29), ('currentassets', 27), ('noncurrentliabilities', 27), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('current liabilities', 24), ('noncurrent liabilities', 24), ('noncurrentassets', 22), ('liabilities', 22), ('equity and liabilities', 20), ('currentliabilities', 17), ('equity liabilities', 12), ('equity', 0), ('equityliabilities', 0)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD current assets | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD currentassets | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD current liabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD currentliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrent assets | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentassets | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrent liabilities | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD non current assets | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD non current liabilities | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentliabilities | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentassets | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentliabilities | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD equity and liabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD equity | score 0
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD equityandliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - nan | [('equityandliabilities', 29), ('currentassets', 27), ('noncurrentliabilities', 27), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('current liabilities', 24), ('noncurrent liabilities', 24), ('noncurrentassets', 22), ('liabilities', 22), ('equity and liabilities', 20), ('currentliabilities', 17), ('equity liabilities', 12), ('equity', 0), ('equityliabilities', 0)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD current assets | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD currentassets | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD current liabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD currentliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrent assets | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentassets | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrent liabilities | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD non current assets | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD non current liabilities | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentliabilities | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentassets | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD noncurrentliabilities | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD equity and liabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD equity | score 0
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text nan | MATCH WORD equityandliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - ASSETS | [('assets', 100), ('currentassets', 59), ('current assets', 56), ('noncurrent assets', 56), ('noncurrentassets', 50), ('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD current assets | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD currentassets | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD current liabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD currentliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrent assets | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrentassets | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrent liabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD non current assets | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD non current liabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrentliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrentassets | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD noncurrentliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD equity and liabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD equity | score 33
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text ASSETS | MATCH WORD equityandliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('currentliabilities', 64), ('assets', 56), ('currentassets', 56), ('noncurrentliabilities', 56), ('current liabilities', 52), ('noncurrentassets', 50), ('noncurrent liabilities', 44), ('equity', 32), ('equityliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('equity liabilities', 23), ('liabilities', 11)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD currentassets | score 96
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD currentliabilities | score 62
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentassets | score 87
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentliabilities | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentassets | score 87
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentliabilities | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equityandliabilities | score 29
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equityandliabilities', 38), ('equity liabilities', 35), ('equityliabilities', 34), ('noncurrentassets', 33), ('assets', 31), ('currentassets', 30), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrentliabilities', 24), ('noncurrent liabilities', 23), ('liabilities', 22), ('currentliabilities', 20)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentassets | score 37
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentliabilities | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equityandliabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Trade receivables | [('equityandliabilities', 43), ('currentassets', 42), ('noncurrentassets', 37), ('equity', 33), ('current assets', 32), ('equity liabilities', 32), ('current liabilities', 31), ('equityliabilities', 30), ('currentliabilities', 29), ('equity and liabilities', 28), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrent assets', 24), ('noncurrent liabilities', 23), ('liabilities', 22)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD current assets | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD currentassets | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD current liabilities | score 50
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD currentliabilities | score 51
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD noncurrent assets | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD noncurrentassets | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD noncurrent liabilities | score 46
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD non current assets | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD non current liabilities | score 45
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD noncurrentliabilities | score 47
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD noncurrentassets | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD noncurrentliabilities | score 47
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD equity and liabilities | score 51
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade receivables | MATCH WORD equityandliabilities | score 49
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Other current assets | [('current assets', 81), ('noncurrent assets', 62), ('currentassets', 52), ('currentliabilities', 50), ('current liabilities', 48), ('noncurrentassets', 47), ('noncurrentliabilities', 45), ('assets', 42), ('noncurrent liabilities', 36), ('equity and liabilities', 28), ('equity liabilities', 25), ('equity', 24), ('equityliabilities', 22), ('equityandliabilities', 20), ('liabilities', 8)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current assets | score 95
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD currentassets | score 83
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD current liabilities | score 56
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD currentliabilities | score 53
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent assets | score 81
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentassets | score 78
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current assets | score 84
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD non current liabilities | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentassets | score 78
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity and liabilities | score 33
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other current assets | MATCH WORD equityandliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('currentliabilities', 57), ('currentassets', 52), ('noncurrentliabilities', 52), ('noncurrentassets', 47), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentassets | score 83
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentliabilities | score 53
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equityandliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('noncurrentliabilities', 56), ('noncurrentassets', 50), ('currentassets', 40), ('currentliabilities', 36), ('current liabilities', 30), ('equity and liabilities', 27), ('equityandliabilities', 25), ('equity liabilities', 23), ('equity', 21), ('equityliabilities', 19), ('liabilities', 11)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD currentassets | score 87
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD currentliabilities | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentassets | score 97
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentliabilities | score 68
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentassets | score 97
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentliabilities | score 68
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equityandliabilities | score 27
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equityliabilities', 26), ('currentliabilities', 25), ('equityandliabilities', 23), ('noncurrentliabilities', 22), ('liabilities', 19)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentassets | score 53
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentliabilities | score 29
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equityandliabilities | score 27
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('equityandliabilities', 23), ('noncurrent liabilities', 21), ('equity', 19), ('currentliabilities', 17), ('equityliabilities', 17), ('noncurrentliabilities', 15), ('liabilities', 10)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentassets | score 62
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentliabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equityandliabilities | score 31
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrentliabilities', 58), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('currentliabilities', 43), ('assets', 42), ('current liabilities', 42), ('currentassets', 39), ('equity and liabilities', 33), ('equityandliabilities', 33), ('equity liabilities', 31), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentassets | score 83
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('currentassets', 43), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equityliabilities', 32), ('currentliabilities', 30), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentassets | score 56
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentliabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equityandliabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - LIABILITIES | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equityandliabilities', 35), ('equity', 33), ('equityliabilities', 29), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11), ('currentassets', 11), ('noncurrentassets', 10)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD current assets | score 24
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD currentassets | score 25
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD current liabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD currentliabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrent assets | score 24
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrentassets | score 22
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrent liabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD non current assets | score 24
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD non current liabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrentliabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrentassets | score 22
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD noncurrentliabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD equity and liabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text LIABILITIES | MATCH WORD equityandliabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('currentliabilities', 78), ('noncurrentliabilities', 69), ('equity liabilities', 67), ('currentassets', 62), ('liabilities', 60), ('equity and liabilities', 58), ('noncurrentassets', 55), ('current assets', 52), ('noncurrent liabilities', 43), ('equityliabilities', 36), ('equityandliabilities', 32), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD currentassets | score 62
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD currentliabilities | score 97
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentassets | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentassets | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equityandliabilities | score 67
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Current tax liabilities | [('current liabilities', 88), ('currentliabilities', 67), ('currentassets', 60), ('noncurrentliabilities', 60), ('equity liabilities', 58), ('noncurrentassets', 55), ('equity and liabilities', 51), ('liabilities', 50), ('current assets', 45), ('noncurrent liabilities', 44), ('equityliabilities', 31), ('equityandliabilities', 28), ('noncurrent assets', 26), ('equity', 25), ('assets', 17)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current assets | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD currentassets | score 56
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current liabilities | score 95
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD currentliabilities | score 88
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent assets | score 55
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentassets | score 51
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent liabilities | score 84
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current assets | score 56
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current liabilities | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentliabilities | score 82
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentassets | score 51
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentliabilities | score 82
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity and liabilities | score 71
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equityandliabilities | score 65
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Employee benefit obligations | [('equity and liabilities', 42), ('equity liabilities', 41), ('equityliabilities', 41), ('current liabilities', 40), ('equityandliabilities', 38), ('currentliabilities', 33), ('equity', 30), ('noncurrentliabilities', 30), ('noncurrent liabilities', 29), ('current assets', 24), ('noncurrent assets', 24), ('currentassets', 24), ('noncurrentassets', 22), ('liabilities', 22), ('assets', 15)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD current assets | score 33
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD currentassets | score 29
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD current liabilities | score 45
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD currentliabilities | score 45
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD noncurrent assets | score 37
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD noncurrentassets | score 32
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD noncurrent liabilities | score 44
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD non current assets | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD non current liabilities | score 47
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD noncurrentliabilities | score 41
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD noncurrentassets | score 32
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD noncurrentliabilities | score 41
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD equity and liabilities | score 46
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD equity | score 45
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Employee benefit obligations | MATCH WORD equityandliabilities | score 42
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('currentliabilities', 62), ('currentassets', 56), ('noncurrentliabilities', 56), ('equity liabilities', 55), ('noncurrentassets', 51), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('equityandliabilities', 32), ('equityliabilities', 29), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentassets | score 56
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentliabilities | score 84
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equityandliabilities | score 62
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('noncurrentliabilities', 54), ('noncurrentassets', 48), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('currentliabilities', 35), ('currentassets', 31), ('equityandliabilities', 24), ('equity', 20), ('equityliabilities', 18), ('assets', 11)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD currentassets | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD currentliabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentassets | score 68
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentliabilities | score 98
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentassets | score 68
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentliabilities | score 98
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equityandliabilities | score 62
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrentliabilities', 56), ('noncurrent assets', 55), ('noncurrentassets', 51), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('currentliabilities', 41), ('currentassets', 38), ('equity liabilities', 36), ('equity and liabilities', 32), ('equityandliabilities', 26), ('equityliabilities', 21), ('assets', 16), ('equity', 15)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentassets | score 56
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentliabilities | score 85
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equityandliabilities | score 58
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('currentassets', 48), ('noncurrentassets', 42), ('currentliabilities', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equityliabilities', 24), ('liabilities', 13)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentassets | score 70
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentliabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equityandliabilities | score 33
2023-08-18 14:48:22+0530 - sLogger - DEBUG - EQUITY | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD current assets | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD currentassets | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD current liabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD currentliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD noncurrent assets | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD noncurrentassets | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD noncurrent liabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD non current assets | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD non current liabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD noncurrentliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD noncurrentassets | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD noncurrentliabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD equity and liabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD equity | score 100
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text EQUITY | MATCH WORD equityandliabilities | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Contributed equity | [('equity', 55), ('equityliabilities', 50), ('equity and liabilities', 48), ('equityandliabilities', 44), ('noncurrentliabilities', 43), ('equity liabilities', 41), ('current liabilities', 40), ('currentliabilities', 40), ('noncurrentassets', 39), ('currentassets', 36), ('current assets', 28), ('liabilities', 27), ('noncurrent liabilities', 27), ('noncurrent assets', 21), ('assets', 19)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current assets | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD currentassets | score 32
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD current liabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD currentliabilities | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent assets | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentassets | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrent liabilities | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current assets | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD non current liabilities | score 37
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentliabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentassets | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD noncurrentliabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity and liabilities | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equity | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Contributed equity | MATCH WORD equityandliabilities | score 32
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Other reserves | [('noncurrentassets', 44), ('currentassets', 42), ('noncurrentliabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('currentliabilities', 29), ('assets', 24), ('current liabilities', 23), ('noncurrent liabilities', 23), ('equity liabilities', 16), ('equity and liabilities', 14), ('equity', 11), ('equityliabilities', 10), ('equityandliabilities', 9), ('liabilities', 0)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD current assets | score 43
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD currentassets | score 44
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD current liabilities | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD currentliabilities | score 31
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD noncurrent assets | score 45
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD noncurrentassets | score 47
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD noncurrent liabilities | score 37
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD non current assets | score 44
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD non current liabilities | score 32
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD noncurrentliabilities | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD noncurrentassets | score 47
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD noncurrentliabilities | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD equity and liabilities | score 25
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD equity | score 15
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD equityandliabilities | score 18
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Retained earnings | [('equity and liabilities', 50), ('currentliabilities', 50), ('current liabilities', 48), ('currentassets', 43), ('noncurrentliabilities', 43), ('current assets', 42), ('assets', 38), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equity', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('equityliabilities', 32), ('liabilities', 24), ('noncurrent liabilities', 24)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentassets | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 39
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentliabilities | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 35
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 46
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equityandliabilities | score 43
2023-08-18 14:48:22+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentassets | score 32
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentliabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-08-18 14:48:22+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equityandliabilities | score 57
2023-08-18 14:48:22+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-18 14:48:22+0530 - sLogger - DEBUG - set_section_details started
2023-08-18 14:48:22+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-08-18 14:48:22+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers (inclusive of goods and services tax) | operating profit before changes in assets and liabilities
2023-08-18 14:48:22+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees (inclusive of goods and services | adjustments for increase decrease in operating liabilities
2023-08-18 14:48:22+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- tax) | changes in working capital
2023-08-18 14:48:22+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-08-18 14:48:22+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-08-18 14:48:22+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-08-18 14:48:22+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income taxes paid | changes in working capital
2023-08-18 14:48:22+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash inflow (outflow) from operating activities | operating cash flow before working capital changes
2023-08-18 14:48:22+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-08-18 14:48:22+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments for property, plant and equipment | operating profit before changes in assets and liabilities
2023-08-18 14:48:22+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash (outflow) from investing activities | adjustments for increase decrease in operating liabilities
2023-08-18 14:48:22+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from financing activities | operating cash flow before working capital changes
2023-08-18 14:48:22+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Principal elements of lease payments | changes in operating assets and liabilities
2023-08-18 14:48:22+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash (outflow) from financing activities | operating cash flow before working capital changes
2023-08-18 14:48:22+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase (decrease) in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-08-18 14:48:22+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the beginning of the financial year | changes in operating assets and liabilities
2023-08-18 14:48:22+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Effects of exchange rate changes on cash and cash equivalents | changes in operating assets and liabilities
2023-08-18 14:48:22+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at end of year | changes in operating assets and liabilities
2023-08-18 14:48:23+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:48:23+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '7 16'
2023-08-18 14:48:23+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:48:23+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '3 156'
2023-08-18 14:48:23+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:48:23+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '3 156'
2023-08-18 14:48:23+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-18 14:48:23+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: ''
2023-08-18 14:48:24+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash asset', 61), ('cash and short term deposits', 35), ('Cash and short term deposits', 35), ('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade receivables , res_fuzz_match = [('cash and short term deposits', 31), ('Cash and short term deposits', 31), ('cash and cash equivalents', 30), ('bank balances other than cash and cash equivalents', 29), ('other bank balances', 28), ('cash asset', 27), ('bank balances other than above', 26), ('cash and bank balances', 19)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('cash asset', 55), ('other bank balances', 50), ('cash and short term deposits', 48), ('Cash and short term deposits', 48), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash asset', 61), ('cash and short term deposits', 35), ('Cash and short term deposits', 35), ('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade receivables , res_fuzz_match = [('cash and short term deposits', 31), ('Cash and short term deposits', 31), ('cash and cash equivalents', 30), ('bank balances other than cash and cash equivalents', 29), ('other bank balances', 28), ('cash asset', 27), ('bank balances other than above', 26), ('cash and bank balances', 19)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('cash asset', 55), ('other bank balances', 50), ('cash and short term deposits', 48), ('Cash and short term deposits', 48), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 8], 'score': 100, 'value': 27051318.0, 'line_item_label': ['Cash and cash equivalents', 'Cash and cash equivalents'], 'note_numbers': ['7 16,871,519', '7 16,871,519'], 'line_item_value': [13525659.0, 13525659.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash asset', 61), ('cash and short term deposits', 35), ('Cash and short term deposits', 35), ('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade receivables , res_fuzz_match = [('cash and short term deposits', 31), ('Cash and short term deposits', 31), ('cash and cash equivalents', 30), ('bank balances other than cash and cash equivalents', 29), ('other bank balances', 28), ('cash asset', 27), ('bank balances other than above', 26), ('cash and bank balances', 19)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('cash asset', 55), ('other bank balances', 50), ('cash and short term deposits', 48), ('Cash and short term deposits', 48), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash asset', 61), ('cash and short term deposits', 35), ('Cash and short term deposits', 35), ('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade receivables , res_fuzz_match = [('cash and short term deposits', 31), ('Cash and short term deposits', 31), ('cash and cash equivalents', 30), ('bank balances other than cash and cash equivalents', 29), ('other bank balances', 28), ('cash asset', 27), ('bank balances other than above', 26), ('cash and bank balances', 19)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('cash asset', 55), ('other bank balances', 50), ('cash and short term deposits', 48), ('Cash and short term deposits', 48), ('bank balances other than above', 43), ('bank balances other than cash and cash equivalents', 35), ('cash and bank balances', 31), ('cash and cash equivalents', 30)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 8], 'score': 100, 'value': 0.0, 'line_item_label': ['Cash and cash equivalents', 'Cash and cash equivalents'], 'note_numbers': ['7 16,871,519', '7 16,871,519'], 'line_item_value': [0.0, 0.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit ', ' Vehicles ', ' Demonstrator units ', ' Training Vehicles']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade receivables , res_fuzz_match = [('inventories', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade receivables , res_fuzz_match = [('inventories', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 10], 'score': 100, 'value': 42909500.0, 'line_item_label': ['Inventories', 'Inventories'], 'note_numbers': ['9', '9'], 'line_item_value': [21454750.0, 21454750.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade receivables , res_fuzz_match = [('inventories', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade receivables , res_fuzz_match = [('inventories', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('inventories', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 10], 'score': 100, 'value': 41961706.0, 'line_item_label': ['Inventories', 'Inventories'], 'note_numbers': ['9', '9'], 'line_item_value': [20980853.0, 20980853.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit ', ' Vehicles ', ' Demonstrator units ', ' Training Vehicles'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none raw materials and stores , res_fuzz_match = [('raw materials ', 100), (' raw materials ', 100), (' cranes - in transit ', 54), (' stores and other consumables at cost ', 52), (' goods in transit ', 50), (' stock in transit ', 46), (' Demonstrator units ', 46), (' provision for inventory obsolescence ', 44), (' inventories ', 44), (' parts and accessories (at cost) ', 43), (' Training Vehicles', 42), (' cranes ', 40), (' spare parts ', 40), (' finished goods at cost ', 38), (' work in progress ', 38), (' finished goods ', 36), (' Vehicles ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit ', 0), (' Vehicles ', 0), (' Demonstrator units ', 0), (' Training Vehicles', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none finished goods - at cost , res_fuzz_match = [(' finished goods ', 100), (' finished goods at cost ', 100), (' goods in transit ', 58), (' stores and other consumables at cost ', 52), (' provision for inventory obsolescence ', 43), (' parts and accessories (at cost) ', 43), (' cranes - in transit ', 38), (' stock in transit ', 38), (' inventories ', 33), (' Vehicles ', 33), (' Training Vehicles', 33), (' work in progress ', 31), (' Demonstrator units ', 31), ('raw materials ', 20), (' raw materials ', 20), (' cranes ', 20), (' spare parts ', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit ', 0), (' Vehicles ', 0), (' Demonstrator units ', 0), (' Training Vehicles', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit ', 40), (' Demonstrator units ', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), (' Training Vehicles', 30), ('raw materials ', 21), (' raw materials ', 21), (' Vehicles ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit ', 0), (' Vehicles ', 0), (' Demonstrator units ', 0), (' Training Vehicles', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none raw materials and stores , res_fuzz_match = [('raw materials ', 100), (' raw materials ', 100), (' cranes - in transit ', 54), (' stores and other consumables at cost ', 52), (' goods in transit ', 50), (' stock in transit ', 46), (' Demonstrator units ', 46), (' provision for inventory obsolescence ', 44), (' inventories ', 44), (' parts and accessories (at cost) ', 43), (' Training Vehicles', 42), (' cranes ', 40), (' spare parts ', 40), (' finished goods at cost ', 38), (' work in progress ', 38), (' finished goods ', 36), (' Vehicles ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit ', 0), (' Vehicles ', 0), (' Demonstrator units ', 0), (' Training Vehicles', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none finished goods - at cost , res_fuzz_match = [(' finished goods ', 100), (' finished goods at cost ', 100), (' goods in transit ', 58), (' stores and other consumables at cost ', 52), (' provision for inventory obsolescence ', 43), (' parts and accessories (at cost) ', 43), (' cranes - in transit ', 38), (' stock in transit ', 38), (' inventories ', 33), (' Vehicles ', 33), (' Training Vehicles', 33), (' work in progress ', 31), (' Demonstrator units ', 31), ('raw materials ', 20), (' raw materials ', 20), (' cranes ', 20), (' spare parts ', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit ', 0), (' Vehicles ', 0), (' Demonstrator units ', 0), (' Training Vehicles', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit ', 40), (' Demonstrator units ', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), (' Training Vehicles', 30), ('raw materials ', 21), (' raw materials ', 21), (' Vehicles ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit ', 0), (' Vehicles ', 0), (' Demonstrator units ', 0), (' Training Vehicles', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 3, 4], 'score': [100, 100, 100, 100], 'value': [15722792.0, 5258061.0, 19419118.0, 2035632.0], 'label': ['None Raw materials and stores', 'None Finished goods - at cost', 'None Raw materials and stores', 'None Finished goods - at cost'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [(' other current assets ', 81), (' other current financial assets ', 65), ('other assets ', 58), (' other financial assets ', 50), (' trade and other receivables', 34), (' prepayments ', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade receivables , res_fuzz_match = [(' trade and other receivables', 71), (' other current assets ', 39), (' other financial assets ', 39), (' other current financial assets ', 36), ('other assets ', 35), (' prepayments ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [(' other current assets ', 100), (' other current financial assets ', 83), ('other assets ', 73), (' other financial assets ', 68), (' trade and other receivables', 39), (' prepayments ', 16)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [(' other current assets ', 81), (' other current financial assets ', 65), ('other assets ', 58), (' other financial assets ', 50), (' trade and other receivables', 34), (' prepayments ', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade receivables , res_fuzz_match = [(' trade and other receivables', 71), (' other current assets ', 39), (' other financial assets ', 39), (' other current financial assets ', 36), ('other assets ', 35), (' prepayments ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [(' other current assets ', 100), (' other current financial assets ', 83), ('other assets ', 73), (' other financial assets ', 68), (' trade and other receivables', 39), (' prepayments ', 16)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7, 11], 'score': 100, 'value': 2716954.0, 'line_item_label': ['Current assets', 'Other current assets', 'Current assets', 'Other current assets'], 'note_numbers': [nan, '10', nan, '10'], 'line_item_value': [0.0, 1358477.0, 0.0, 1358477.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [(' other current assets ', 81), (' other current financial assets ', 65), ('other assets ', 58), (' other financial assets ', 50), (' trade and other receivables', 34), (' prepayments ', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade receivables , res_fuzz_match = [(' trade and other receivables', 71), (' other current assets ', 39), (' other financial assets ', 39), (' other current financial assets ', 36), ('other assets ', 35), (' prepayments ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [(' other current assets ', 100), (' other current financial assets ', 83), ('other assets ', 73), (' other financial assets ', 68), (' trade and other receivables', 39), (' prepayments ', 16)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [(' other current assets ', 81), (' other current financial assets ', 65), ('other assets ', 58), (' other financial assets ', 50), (' trade and other receivables', 34), (' prepayments ', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade receivables , res_fuzz_match = [(' trade and other receivables', 71), (' other current assets ', 39), (' other financial assets ', 39), (' other current financial assets ', 36), ('other assets ', 35), (' prepayments ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [(' other current assets ', 100), (' other current financial assets ', 83), ('other assets ', 73), (' other financial assets ', 68), (' trade and other receivables', 39), (' prepayments ', 16)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7, 11], 'score': 100, 'value': 4146574.0, 'line_item_label': ['Current assets', 'Other current assets', 'Current assets', 'Other current assets'], 'note_numbers': [nan, '10', nan, '10'], 'line_item_value': [0.0, 2073287.0, 0.0, 2073287.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none accrued interest receivable , res_fuzz_match = [(' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43), (' other prepayments ', 42), (' prepaid expenditure ', 39), ('prepaid expense ', 36), (' prepayments ', 33), (' in advance ', 33), (' charges paid in advance', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none other receivables , res_fuzz_match = [(' other receivables and prepayments ', 71), (' other prepayments ', 67), (' prepaid ', 43), (' prepaid ', 43), (' prepayments ', 33), ('prepaid expense ', 29), (' prepaid expenditure ', 29), (' charges paid in advance', 29), (' in advance ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' other prepayments ', 30), (' other receivables and prepayments ', 30), (' prepaid ', 29), (' prepaid ', 29), (' prepaid expenditure ', 20), (' charges paid in advance', 20), (' prepayments ', 17), (' in advance ', 17), ('prepaid expense ', 10)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none accrued interest receivable , res_fuzz_match = [(' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43), (' other prepayments ', 42), (' prepaid expenditure ', 39), ('prepaid expense ', 36), (' prepayments ', 33), (' in advance ', 33), (' charges paid in advance', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none other receivables , res_fuzz_match = [(' other receivables and prepayments ', 71), (' other prepayments ', 67), (' prepaid ', 43), (' prepaid ', 43), (' prepayments ', 33), ('prepaid expense ', 29), (' prepaid expenditure ', 29), (' charges paid in advance', 29), (' in advance ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' other prepayments ', 30), (' other receivables and prepayments ', 30), (' prepaid ', 29), (' prepaid ', 29), (' prepaid expenditure ', 20), (' charges paid in advance', 20), (' prepayments ', 17), (' in advance ', 17), ('prepaid expense ', 10)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets ', 81), (' other assets ', 58), (' financial assets ', 54), (' other financial assets ', 50), (' biological assets ', 48), (' trade and other receivables', 34), (' income tax receivable from related parties ', 30), (' deferred operating expenditure ', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade receivables , res_fuzz_match = [(' trade and other receivables', 71), (' deferred operating expenditure ', 42), (' income tax receivable from related parties ', 40), ('other current assets ', 39), (' other financial assets ', 39), (' other assets ', 35), (' financial assets ', 24), (' biological assets ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets ', 100), (' other assets ', 73), (' other financial assets ', 68), (' biological assets ', 45), (' deferred operating expenditure ', 45), (' financial assets ', 44), (' trade and other receivables', 39), (' income tax receivable from related parties ', 35)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets ', 81), (' other assets ', 58), (' financial assets ', 54), (' other financial assets ', 50), (' biological assets ', 48), (' trade and other receivables', 34), (' income tax receivable from related parties ', 30), (' deferred operating expenditure ', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade receivables , res_fuzz_match = [(' trade and other receivables', 71), (' deferred operating expenditure ', 42), (' income tax receivable from related parties ', 40), ('other current assets ', 39), (' other financial assets ', 39), (' other assets ', 35), (' financial assets ', 24), (' biological assets ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets ', 100), (' other assets ', 73), (' other financial assets ', 68), (' biological assets ', 45), (' deferred operating expenditure ', 45), (' financial assets ', 44), (' trade and other receivables', 39), (' income tax receivable from related parties ', 35)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7, 11], 'score': 100, 'value': 2716954.0, 'line_item_label': ['Current assets', 'Other current assets', 'Current assets', 'Other current assets'], 'note_numbers': [nan, '10', nan, '10'], 'line_item_value': [0.0, 1358477.0, 0.0, 1358477.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets ', 81), (' other assets ', 58), (' financial assets ', 54), (' other financial assets ', 50), (' biological assets ', 48), (' trade and other receivables', 34), (' income tax receivable from related parties ', 30), (' deferred operating expenditure ', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade receivables , res_fuzz_match = [(' trade and other receivables', 71), (' deferred operating expenditure ', 42), (' income tax receivable from related parties ', 40), ('other current assets ', 39), (' other financial assets ', 39), (' other assets ', 35), (' financial assets ', 24), (' biological assets ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets ', 100), (' other assets ', 73), (' other financial assets ', 68), (' biological assets ', 45), (' deferred operating expenditure ', 45), (' financial assets ', 44), (' trade and other receivables', 39), (' income tax receivable from related parties ', 35)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets ', 81), (' other assets ', 58), (' financial assets ', 54), (' other financial assets ', 50), (' biological assets ', 48), (' trade and other receivables', 34), (' income tax receivable from related parties ', 30), (' deferred operating expenditure ', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade receivables , res_fuzz_match = [(' trade and other receivables', 71), (' deferred operating expenditure ', 42), (' income tax receivable from related parties ', 40), ('other current assets ', 39), (' other financial assets ', 39), (' other assets ', 35), (' financial assets ', 24), (' biological assets ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [('other current assets ', 100), (' other assets ', 73), (' other financial assets ', 68), (' biological assets ', 45), (' deferred operating expenditure ', 45), (' financial assets ', 44), (' trade and other receivables', 39), (' income tax receivable from related parties ', 35)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5, 7, 11], 'score': 100, 'value': 4146574.0, 'line_item_label': ['Current assets', 'Other current assets', 'Current assets', 'Other current assets'], 'note_numbers': [nan, '10', nan, '10'], 'line_item_value': [0.0, 2073287.0, 0.0, 2073287.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none accrued interest receivable , res_fuzz_match = [(' accrued interest', 100), (' interest receivable', 100), (' accrued rebates', 64), (' related party receivable', 61), (' other', 60), (' current investments', 57), (' other deposits receivable - related party', 54), (' bank guarantee', 54), (' long service leave receivable', 48), (' other receivables - related party', 46), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' other debtors and prepayments', 39), ('foreign exchange derivatives at fair value', 38), (' related party disclosures', 38), (' foreign exchange forward contracts', 38), (' electricity derivatives at fair value', 36), (' rental bond', 36), (' lng', 33), (' forward exchange contracts', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), (' other receivables - related party', 71), (' income tax receivable from related parties', 65), (' other deposits receivable - related party', 65), ('other assets', 64), (' long service leave receivable', 59), (' amount receivable from controlling entity', 59), (' related party receivable', 59), (' deposits', 43), (' condensate', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 41), (' electricity derivatives at fair value', 41), (' derivative contracts - fair value', 41), (' other debtors and prepayments', 41), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' foreign exchange forward contracts', 35), (' forward exchange contracts', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 29), (' rental bond', 27)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), (' rental bond', 42), ('other assets', 40), (' other', 40), (' derivative contracts - fair value', 40), (' other deposits receivable - related party', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' other debtors and prepayments', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' electricity derivatives at fair value', 30), (' accrued interest', 30), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' interest receivable', 30), (' bank guarantee', 30), (' related party receivable', 30), (' share of jv prepayments', 30), (' accrued rebates', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none accrued interest receivable , res_fuzz_match = [(' accrued interest', 100), (' interest receivable', 100), (' accrued rebates', 64), (' related party receivable', 61), (' other', 60), (' current investments', 57), (' other deposits receivable - related party', 54), (' bank guarantee', 54), (' long service leave receivable', 48), (' other receivables - related party', 46), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' other debtors and prepayments', 39), ('foreign exchange derivatives at fair value', 38), (' related party disclosures', 38), (' foreign exchange forward contracts', 38), (' electricity derivatives at fair value', 36), (' rental bond', 36), (' lng', 33), (' forward exchange contracts', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), (' other receivables - related party', 71), (' income tax receivable from related parties', 65), (' other deposits receivable - related party', 65), ('other assets', 64), (' long service leave receivable', 59), (' amount receivable from controlling entity', 59), (' related party receivable', 59), (' deposits', 43), (' condensate', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 41), (' electricity derivatives at fair value', 41), (' derivative contracts - fair value', 41), (' other debtors and prepayments', 41), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' foreign exchange forward contracts', 35), (' forward exchange contracts', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 29), (' rental bond', 27)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' income tax receivable from related parties', 50), (' amount receivable from controlling entity', 50), (' forward exchange contracts', 50), (' deposits', 43), (' condensate', 43), (' rental bond', 42), ('other assets', 40), (' other', 40), (' derivative contracts - fair value', 40), (' other deposits receivable - related party', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' other debtors and prepayments', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 30), (' electricity derivatives at fair value', 30), (' accrued interest', 30), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' interest receivable', 30), (' bank guarantee', 30), (' related party receivable', 30), (' share of jv prepayments', 30), (' accrued rebates', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 3, 4], 'score': [100, 100, 100, 100], 'value': [10449.0, 2062838.0, 1427.0, 1357050.0], 'label': ['None Accrued interest receivable', 'None Other receivables', 'None Accrued interest receivable', 'None Other receivables'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none accrued interest receivable , res_fuzz_match = [(' ', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none other receivables , res_fuzz_match = [(' ', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' ', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none accrued interest receivable , res_fuzz_match = [(' ', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none other receivables , res_fuzz_match = [(' ', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' ', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [(' ', 100)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100], 'value': [10449.0, 2062838.0, 2073287.0, 1427.0, 1357050.0, 1358477.0], 'label': ['', '', '', '', '', ''], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment ']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30), ('plant and equipment ', 29), (' plant and equipment ', 29), (' Property ', 19)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment ', 77), (' plant and equipment ', 77), (' Property ', 50)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment ', 27), (' plant and equipment ', 27), (' Property ', 26)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment ', 33), (' plant and equipment ', 33), (' Property ', 26)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30), ('plant and equipment ', 29), (' plant and equipment ', 29), (' Property ', 19)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment ', 77), (' plant and equipment ', 77), (' Property ', 50)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment ', 27), (' plant and equipment ', 27), (' Property ', 26)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment ', 33), (' plant and equipment ', 33), (' Property ', 26)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 91, 'value': 21496.0, 'line_item_label': ['Property, plant and equipment', 'Property, plant and equipment'], 'note_numbers': ['11', '11'], 'line_item_value': [10748.0, 10748.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30), ('plant and equipment ', 29), (' plant and equipment ', 29), (' Property ', 19)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment ', 77), (' plant and equipment ', 77), (' Property ', 50)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment ', 27), (' plant and equipment ', 27), (' Property ', 26)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment ', 33), (' plant and equipment ', 33), (' Property ', 26)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30), ('plant and equipment ', 29), (' plant and equipment ', 29), (' Property ', 19)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment ', 77), (' plant and equipment ', 77), (' Property ', 50)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment ', 27), (' plant and equipment ', 27), (' Property ', 26)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment ', 33), (' plant and equipment ', 33), (' Property ', 26)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 91, 'value': 17138.0, 'line_item_label': ['Property, plant and equipment', 'Property, plant and equipment'], 'note_numbers': ['11', '11'], 'line_item_value': [8569.0, 8569.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none net book amount , res_fuzz_match = [(' Other assets ', 45), (' Assets under construction ', 42), (' under construction ', 40), (' Marine ', 40), (' Mine infrastructure ', 39), (' Mining properties ', 38), (' Workshop tooling ', 38), ('depreciatio', 36), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' Building & mine infrastructure ', 35), (' Plant and equipment ', 33), (' land and improvement ', 33), (' Subsea ', 33), (' Development properties ', 33), (' Capitalised pre stripping costs ', 31), (' Pipeline Asset ', 31), (' Construction in progress ', 28), (' Leasehold buildings', 27), (' Fishing vessels & equipment ', 24), (' Stripping WIP ', 22), ('accumulated depreciation ', 20), (' Facilities ', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), (' Freehold land and buildings ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Building & mine infrastructure ', 42), ('accumulated depreciation ', 40), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Development properties ', 38), ('depreciatio', 36), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Construction in progress ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 23), (' Subsea ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 opening net book amount , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 53), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Workshop tooling ', 46), (' Other assets ', 45), (' Freehold land and buildings ', 43), (' Assets under construction ', 43), (' under construction ', 40), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Development properties ', 38), ('depreciatio', 36), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Building & mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Stripping WIP ', 22)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), (' Freehold land and buildings ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Building & mine infrastructure ', 42), ('accumulated depreciation ', 40), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Development properties ', 38), ('depreciatio', 36), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Construction in progress ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 23), (' Subsea ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 additions , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' Freehold land and buildings ', 45), (' Assets under construction ', 40), (' under construction ', 40), (' Facilities ', 40), ('depreciatio', 36), (' Other assets ', 36), (' Capitalised pre stripping costs ', 36), (' Asset Retirement Obligation ', 35), (' Building & mine infrastructure ', 35), ('accumulated depreciation ', 33), (' Plant and equipment ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Development properties ', 25), (' Fishing vessels & equipment ', 24), (' Construction in progress ', 22)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), (' Freehold land and buildings ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Building & mine infrastructure ', 42), ('accumulated depreciation ', 40), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Development properties ', 38), ('depreciatio', 36), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Construction in progress ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 23), (' Subsea ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 depreciation charge , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation ', 67), (' Marine ', 60), (' land and improvement ', 47), (' Mining properties ', 46), (' Plant and equipment ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Assets under construction ', 39), (' Capitalised pre stripping costs ', 38), (' Development properties ', 38), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Building & mine infrastructure ', 29), (' Fishing vessels & equipment ', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), (' Freehold land and buildings ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Building & mine infrastructure ', 42), ('accumulated depreciation ', 40), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Development properties ', 38), ('depreciatio', 36), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Construction in progress ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 23), (' Subsea ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 closing net book amount , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' under construction ', 47), (' Workshop tooling ', 46), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Facilities ', 40), (' Freehold land and buildings ', 39), ('depreciatio', 36), (' Other assets ', 36), (' Fishing vessels & equipment ', 35), ('accumulated depreciation ', 33), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Development properties ', 31), (' Pipeline Asset ', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), (' Freehold land and buildings ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Building & mine infrastructure ', 42), ('accumulated depreciation ', 40), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Development properties ', 38), ('depreciatio', 36), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Construction in progress ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 23), (' Subsea ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 cost , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Assets under construction ', 60), (' under construction ', 60), (' Marine ', 60), (' Construction in progress ', 40), (' Other assets ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), ('depreciatio', 30), ('accumulated depreciation ', 30), (' Freehold land and buildings ', 30), (' Asset Retirement Obligation ', 30), (' land and improvement ', 30), (' Mining properties ', 30), (' Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings', 30), (' Stripping WIP ', 22), (' Plant and equipment ', 20), (' Subsea ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), (' Freehold land and buildings ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Building & mine infrastructure ', 42), ('accumulated depreciation ', 40), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Development properties ', 38), ('depreciatio', 36), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Construction in progress ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 23), (' Subsea ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 accumulated depreciation , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 78), (' Marine ', 60), (' Mining properties ', 46), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Development properties ', 38), (' Fishing vessels & equipment ', 35), (' Freehold land and buildings ', 33), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Building & mine infrastructure ', 29), (' Other assets ', 27), (' Pipeline Asset ', 23), (' Stripping WIP ', 22)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), (' Freehold land and buildings ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Building & mine infrastructure ', 42), ('accumulated depreciation ', 40), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Development properties ', 38), ('depreciatio', 36), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Construction in progress ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 23), (' Subsea ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 net book amount , res_fuzz_match = [(' Marine ', 60), (' Workshop tooling ', 46), (' under construction ', 40), (' Facilities ', 40), (' Assets under construction ', 38), (' Mining properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Mine infrastructure ', 35), (' Capitalised pre stripping costs ', 34), (' Freehold land and buildings ', 33), (' Plant and equipment ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Development properties ', 33), (' Fishing vessels & equipment ', 29), (' Construction in progress ', 28), ('depreciatio', 27), ('accumulated depreciation ', 27), (' Leasehold buildings', 27), (' Pipeline Asset ', 23), (' Stripping WIP ', 22)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), (' Freehold land and buildings ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Building & mine infrastructure ', 42), ('accumulated depreciation ', 40), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Development properties ', 38), ('depreciatio', 36), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Construction in progress ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 23), (' Subsea ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none net book amount , res_fuzz_match = [(' Other assets ', 45), (' Assets under construction ', 42), (' under construction ', 40), (' Marine ', 40), (' Mine infrastructure ', 39), (' Mining properties ', 38), (' Workshop tooling ', 38), ('depreciatio', 36), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' Building & mine infrastructure ', 35), (' Plant and equipment ', 33), (' land and improvement ', 33), (' Subsea ', 33), (' Development properties ', 33), (' Capitalised pre stripping costs ', 31), (' Pipeline Asset ', 31), (' Construction in progress ', 28), (' Leasehold buildings', 27), (' Fishing vessels & equipment ', 24), (' Stripping WIP ', 22), ('accumulated depreciation ', 20), (' Facilities ', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), ('depreciatio', 45), (' Freehold land and buildings ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Mine infrastructure ', 39), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Development properties ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Pipeline Asset ', 31), (' Subsea ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 opening net book amount , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 53), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Workshop tooling ', 46), (' Other assets ', 45), (' Freehold land and buildings ', 43), (' Assets under construction ', 43), (' under construction ', 40), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Development properties ', 38), ('depreciatio', 36), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Building & mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Stripping WIP ', 22)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), ('depreciatio', 45), (' Freehold land and buildings ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Mine infrastructure ', 39), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Development properties ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Pipeline Asset ', 31), (' Subsea ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 additions , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' Freehold land and buildings ', 45), (' Assets under construction ', 40), (' under construction ', 40), (' Facilities ', 40), ('depreciatio', 36), (' Other assets ', 36), (' Capitalised pre stripping costs ', 36), (' Asset Retirement Obligation ', 35), (' Building & mine infrastructure ', 35), ('accumulated depreciation ', 33), (' Plant and equipment ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Development properties ', 25), (' Fishing vessels & equipment ', 24), (' Construction in progress ', 22)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), ('depreciatio', 45), (' Freehold land and buildings ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Mine infrastructure ', 39), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Development properties ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Pipeline Asset ', 31), (' Subsea ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 depreciation charge , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation ', 67), (' Marine ', 60), (' land and improvement ', 47), (' Mining properties ', 46), (' Plant and equipment ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Assets under construction ', 39), (' Capitalised pre stripping costs ', 38), (' Development properties ', 38), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Building & mine infrastructure ', 29), (' Fishing vessels & equipment ', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), ('depreciatio', 45), (' Freehold land and buildings ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Mine infrastructure ', 39), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Development properties ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Pipeline Asset ', 31), (' Subsea ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 closing net book amount , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), (' under construction ', 47), (' Workshop tooling ', 46), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Facilities ', 40), (' Freehold land and buildings ', 39), ('depreciatio', 36), (' Other assets ', 36), (' Fishing vessels & equipment ', 35), ('accumulated depreciation ', 33), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Development properties ', 31), (' Pipeline Asset ', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), ('depreciatio', 45), (' Freehold land and buildings ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Mine infrastructure ', 39), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Development properties ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Pipeline Asset ', 31), (' Subsea ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 cost , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Assets under construction ', 60), (' under construction ', 60), (' Marine ', 60), (' Construction in progress ', 40), (' Other assets ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), ('depreciatio', 30), ('accumulated depreciation ', 30), (' Freehold land and buildings ', 30), (' Asset Retirement Obligation ', 30), (' land and improvement ', 30), (' Mining properties ', 30), (' Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings', 30), (' Stripping WIP ', 22), (' Plant and equipment ', 20), (' Subsea ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), ('depreciatio', 45), (' Freehold land and buildings ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Mine infrastructure ', 39), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Development properties ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Pipeline Asset ', 31), (' Subsea ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 accumulated depreciation , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 78), (' Marine ', 60), (' Mining properties ', 46), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Development properties ', 38), (' Fishing vessels & equipment ', 35), (' Freehold land and buildings ', 33), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings', 33), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Building & mine infrastructure ', 29), (' Other assets ', 27), (' Pipeline Asset ', 23), (' Stripping WIP ', 22)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), ('depreciatio', 45), (' Freehold land and buildings ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Mine infrastructure ', 39), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Development properties ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Pipeline Asset ', 31), (' Subsea ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 net book amount , res_fuzz_match = [(' Marine ', 60), (' Workshop tooling ', 46), (' under construction ', 40), (' Facilities ', 40), (' Assets under construction ', 38), (' Mining properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Mine infrastructure ', 35), (' Capitalised pre stripping costs ', 34), (' Freehold land and buildings ', 33), (' Plant and equipment ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Development properties ', 33), (' Fishing vessels & equipment ', 29), (' Construction in progress ', 28), ('depreciatio', 27), ('accumulated depreciation ', 27), (' Leasehold buildings', 27), (' Pipeline Asset ', 23), (' Stripping WIP ', 22)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), ('depreciatio', 45), (' Freehold land and buildings ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Mine infrastructure ', 39), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Development properties ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Pipeline Asset ', 31), (' Subsea ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [6, 14], 'score': [100, 100], 'value': [-102641.0, -102641.0], 'label': ['At: 31 March 2023 Accumulated depreciation', 'At: 31 March 2023 Accumulated depreciation'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value', 'net book value'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none net book amount , res_fuzz_match = [('net book value', 85), ('cost', 50), ('net value', 50), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('net value', 38), ('net book value', 38), ('cost', 25), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 opening net book amount , res_fuzz_match = [('net book value', 85), ('cost', 50), ('net value', 50), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('net value', 38), ('net book value', 38), ('cost', 25), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 additions , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('net value', 38), ('net book value', 38), ('cost', 25), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 depreciation charge , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('net value', 38), ('net book value', 38), ('cost', 25), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 closing net book amount , res_fuzz_match = [('net book value', 85), ('cost', 50), ('net value', 50), ('gross', 40)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('net value', 38), ('net book value', 38), ('cost', 25), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 20), ('net value', 12)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('net value', 38), ('net book value', 38), ('cost', 25), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 accumulated depreciation , res_fuzz_match = [('net value', 38), ('cost', 25), ('net book value', 23), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('net value', 38), ('net book value', 38), ('cost', 25), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 net book amount , res_fuzz_match = [('net book value', 85), ('cost', 50), ('net value', 50), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('net value', 38), ('net book value', 38), ('cost', 25), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none net book amount , res_fuzz_match = [('net book value', 85), ('cost', 50), ('net value', 50), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('cost', 50), ('net value', 50), ('net book value', 38), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 opening net book amount , res_fuzz_match = [('net book value', 85), ('cost', 50), ('net value', 50), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('cost', 50), ('net value', 50), ('net book value', 38), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 additions , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('cost', 50), ('net value', 50), ('net book value', 38), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 depreciation charge , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('cost', 50), ('net value', 50), ('net book value', 38), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 closing net book amount , res_fuzz_match = [('net book value', 85), ('cost', 50), ('net value', 50), ('gross', 40)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('cost', 50), ('net value', 50), ('net book value', 38), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 20), ('net value', 12)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('cost', 50), ('net value', 50), ('net book value', 38), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 accumulated depreciation , res_fuzz_match = [('net value', 38), ('cost', 25), ('net book value', 23), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('cost', 50), ('net value', 50), ('net book value', 38), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 net book amount , res_fuzz_match = [('net book value', 85), ('cost', 50), ('net value', 50), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('cost', 50), ('net value', 50), ('net book value', 38), ('gross', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 4, 5, 7, 8, 9, 12, 13, 15], 'score': [85, 85, 85, 100, 85, 85, 85, 85, 100, 85], 'value': [10748.0, 10748.0, 8569.0, 111210.0, 8569.0, 10748.0, 10748.0, 8569.0, 111210.0, 8569.0], 'label': ['None Net book amount', 'Year ended 31 March 2023 Opening net book amount', 'Year ended 31 March 2023 Closing net book amount', 'At: 31 March 2023 Cost', 'At: 31 March 2023 Net book amount', 'None Net book amount', 'Year ended 31 March 2023 Opening net book amount', 'Year ended 31 March 2023 Closing net book amount', 'At: 31 March 2023 Cost', 'At: 31 March 2023 Net book amount'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-18 14:48:51+0530 - sLogger - ERROR - error occured: cannot convert float NaN to integer
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 91, 'value': 21496.0, 'line_item_label': ['Property, plant and equipment', 'Property, plant and equipment'], 'note_numbers': ['11', '11'], 'line_item_value': [10748.0, 10748.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 91, 'value': 17138.0, 'line_item_label': ['Property, plant and equipment', 'Property, plant and equipment'], 'note_numbers': ['11', '11'], 'line_item_value': [8569.0, 8569.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-18 14:48:51+0530 - sLogger - ERROR - error occured: cannot convert float NaN to integer
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['construction in progress ', ' work in progress ', ' capital works in progress ', ' WIP']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('Work in progress ', 38), (' property plant equipment ', 38), (' plant property equipment ', 31), (' plant and equipment ', 31), (' investment property', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' plant and equipment ', 100), (' property plant equipment ', 80), (' plant property equipment ', 60), (' investment property', 47), ('Work in progress ', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment property', 34), (' property plant equipment ', 33), ('Work in progress ', 31), (' plant property equipment ', 27), (' plant and equipment ', 27)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' property plant equipment ', 40), (' investment property', 34), (' plant property equipment ', 33), ('Work in progress ', 31), (' plant and equipment ', 27)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('Work in progress ', 38), (' property plant equipment ', 38), (' plant property equipment ', 31), (' plant and equipment ', 31), (' investment property', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' plant and equipment ', 100), (' property plant equipment ', 80), (' plant property equipment ', 60), (' investment property', 47), ('Work in progress ', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment property', 34), (' property plant equipment ', 33), ('Work in progress ', 31), (' plant property equipment ', 27), (' plant and equipment ', 27)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' property plant equipment ', 40), (' investment property', 34), (' plant property equipment ', 33), ('Work in progress ', 31), (' plant and equipment ', 27)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 100, 'value': 21496.0, 'line_item_label': ['Property, plant and equipment', 'Property, plant and equipment'], 'note_numbers': ['11', '11'], 'line_item_value': [10748.0, 10748.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('Work in progress ', 38), (' property plant equipment ', 38), (' plant property equipment ', 31), (' plant and equipment ', 31), (' investment property', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' plant and equipment ', 100), (' property plant equipment ', 80), (' plant property equipment ', 60), (' investment property', 47), ('Work in progress ', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment property', 34), (' property plant equipment ', 33), ('Work in progress ', 31), (' plant property equipment ', 27), (' plant and equipment ', 27)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' property plant equipment ', 40), (' investment property', 34), (' plant property equipment ', 33), ('Work in progress ', 31), (' plant and equipment ', 27)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('Work in progress ', 38), (' property plant equipment ', 38), (' plant property equipment ', 31), (' plant and equipment ', 31), (' investment property', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' plant and equipment ', 100), (' property plant equipment ', 80), (' plant property equipment ', 60), (' investment property', 47), ('Work in progress ', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment property', 34), (' property plant equipment ', 33), ('Work in progress ', 31), (' plant property equipment ', 27), (' plant and equipment ', 27)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' property plant equipment ', 40), (' investment property', 34), (' plant property equipment ', 33), ('Work in progress ', 31), (' plant and equipment ', 27)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 100, 'value': 17138.0, 'line_item_label': ['Property, plant and equipment', 'Property, plant and equipment'], 'note_numbers': ['11', '11'], 'line_item_value': [8569.0, 8569.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['construction in progress ', ' work in progress ', ' capital works in progress ', ' WIP'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none net book amount , res_fuzz_match = [(' capital works in progress ', 33), (' work in progress ', 31), ('construction in progress ', 28), (' WIP', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 33), (' capital works in progress ', 32), (' work in progress ', 23)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 opening net book amount , res_fuzz_match = [(' capital works in progress ', 37), ('construction in progress ', 33), (' WIP', 33), (' work in progress ', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 33), (' capital works in progress ', 32), (' work in progress ', 23)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 additions , res_fuzz_match = [(' WIP', 33), (' work in progress ', 23), ('construction in progress ', 22), (' capital works in progress ', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 33), (' capital works in progress ', 32), (' work in progress ', 23)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 depreciation charge , res_fuzz_match = [('construction in progress ', 39), (' work in progress ', 38), (' capital works in progress ', 37), (' WIP', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 33), (' capital works in progress ', 32), (' work in progress ', 23)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 closing net book amount , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress ', 32), (' work in progress ', 31), (' WIP', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 33), (' capital works in progress ', 32), (' work in progress ', 23)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 cost , res_fuzz_match = [('construction in progress ', 40), (' work in progress ', 30), (' capital works in progress ', 30), (' WIP', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 33), (' capital works in progress ', 32), (' work in progress ', 23)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 accumulated depreciation , res_fuzz_match = [('construction in progress ', 33), (' WIP', 33), (' capital works in progress ', 32), (' work in progress ', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 33), (' capital works in progress ', 32), (' work in progress ', 23)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 net book amount , res_fuzz_match = [(' capital works in progress ', 38), (' work in progress ', 31), ('construction in progress ', 28), (' WIP', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 33), (' capital works in progress ', 32), (' work in progress ', 23)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none net book amount , res_fuzz_match = [(' capital works in progress ', 33), (' work in progress ', 31), ('construction in progress ', 28), (' WIP', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 33), (' capital works in progress ', 32), (' work in progress ', 23)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 opening net book amount , res_fuzz_match = [(' capital works in progress ', 37), ('construction in progress ', 33), (' WIP', 33), (' work in progress ', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 33), (' capital works in progress ', 32), (' work in progress ', 23)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 additions , res_fuzz_match = [(' WIP', 33), (' work in progress ', 23), ('construction in progress ', 22), (' capital works in progress ', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 33), (' capital works in progress ', 32), (' work in progress ', 23)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 depreciation charge , res_fuzz_match = [('construction in progress ', 39), (' work in progress ', 38), (' capital works in progress ', 37), (' WIP', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 33), (' capital works in progress ', 32), (' work in progress ', 23)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 closing net book amount , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress ', 32), (' work in progress ', 31), (' WIP', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 33), (' capital works in progress ', 32), (' work in progress ', 23)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 cost , res_fuzz_match = [('construction in progress ', 40), (' work in progress ', 30), (' capital works in progress ', 30), (' WIP', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 33), (' capital works in progress ', 32), (' work in progress ', 23)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 accumulated depreciation , res_fuzz_match = [('construction in progress ', 33), (' WIP', 33), (' capital works in progress ', 32), (' work in progress ', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 33), (' capital works in progress ', 32), (' work in progress ', 23)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 net book amount , res_fuzz_match = [(' capital works in progress ', 38), (' work in progress ', 31), ('construction in progress ', 28), (' WIP', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 33), (' capital works in progress ', 32), (' work in progress ', 23)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-18 14:48:51+0530 - sLogger - ERROR - error occured: cannot convert float NaN to integer
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' intangible asset', 58), (' goodwill on consolidation ', 23), ('goodwill ', 14)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' intangible asset', 58), ('goodwill ', 29), (' goodwill on consolidation ', 27)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' intangible asset', 70), (' goodwill on consolidation ', 20), ('goodwill ', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' intangible asset', 58), (' goodwill on consolidation ', 23), ('goodwill ', 14)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' intangible asset', 58), ('goodwill ', 29), (' goodwill on consolidation ', 27)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' intangible asset', 70), (' goodwill on consolidation ', 20), ('goodwill ', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' intangible asset', 58), (' goodwill on consolidation ', 23), ('goodwill ', 14)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' intangible asset', 58), ('goodwill ', 29), (' goodwill on consolidation ', 27)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' intangible asset', 70), (' goodwill on consolidation ', 20), ('goodwill ', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' intangible asset', 58), (' goodwill on consolidation ', 23), ('goodwill ', 14)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' intangible asset', 58), ('goodwill ', 29), (' goodwill on consolidation ', 27)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' intangible asset', 70), (' goodwill on consolidation ', 20), ('goodwill ', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['Other intangibles ', ' development and software ', ' software ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' intangible assets under development ', 62), ('intangible assets ', 58), (' intangible under development ', 38), ('property plant equipment', 38), (' plant property equipment', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('property plant equipment', 80), (' plant property equipment', 60), ('intangible assets ', 50), (' intangible under development ', 49), (' intangible assets under development ', 42)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets ', 58), (' intangible assets under development ', 53), ('property plant equipment', 33), (' intangible under development ', 27), (' plant property equipment', 27)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets ', 70), ('property plant equipment', 40), (' intangible under development ', 33), (' intangible assets under development ', 33), (' plant property equipment', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' intangible assets under development ', 62), ('intangible assets ', 58), (' intangible under development ', 38), ('property plant equipment', 38), (' plant property equipment', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('property plant equipment', 80), (' plant property equipment', 60), ('intangible assets ', 50), (' intangible under development ', 49), (' intangible assets under development ', 42)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets ', 58), (' intangible assets under development ', 53), ('property plant equipment', 33), (' intangible under development ', 27), (' plant property equipment', 27)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets ', 70), ('property plant equipment', 40), (' intangible under development ', 33), (' intangible assets under development ', 33), (' plant property equipment', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 80, 'value': 21496.0, 'line_item_label': ['Property, plant and equipment', 'Property, plant and equipment'], 'note_numbers': ['11', '11'], 'line_item_value': [10748.0, 10748.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' intangible assets under development ', 62), ('intangible assets ', 58), (' intangible under development ', 38), ('property plant equipment', 38), (' plant property equipment', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('property plant equipment', 80), (' plant property equipment', 60), ('intangible assets ', 50), (' intangible under development ', 49), (' intangible assets under development ', 42)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets ', 58), (' intangible assets under development ', 53), ('property plant equipment', 33), (' intangible under development ', 27), (' plant property equipment', 27)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets ', 70), ('property plant equipment', 40), (' intangible under development ', 33), (' intangible assets under development ', 33), (' plant property equipment', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' intangible assets under development ', 62), ('intangible assets ', 58), (' intangible under development ', 38), ('property plant equipment', 38), (' plant property equipment', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('property plant equipment', 80), (' plant property equipment', 60), ('intangible assets ', 50), (' intangible under development ', 49), (' intangible assets under development ', 42)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets ', 58), (' intangible assets under development ', 53), ('property plant equipment', 33), (' intangible under development ', 27), (' plant property equipment', 27)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets ', 70), ('property plant equipment', 40), (' intangible under development ', 33), (' intangible assets under development ', 33), (' plant property equipment', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 80, 'value': 17138.0, 'line_item_label': ['Property, plant and equipment', 'Property, plant and equipment'], 'note_numbers': ['11', '11'], 'line_item_value': [8569.0, 8569.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['Other intangibles ', ' development and software ', ' software ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none net book amount , res_fuzz_match = [('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' software ', 29), (' computer software ', 29), (' water licenses', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('Other intangibles ', 58), (' mining rights ', 50), (' software ', 43), (' computer software ', 43), (' water licenses', 42), (' development and software ', 37), (' consumer contracts ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 opening net book amount , res_fuzz_match = [(' computer software ', 43), ('Other intangibles ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' development and software ', 37), (' mining rights ', 30), (' software ', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('Other intangibles ', 58), (' mining rights ', 50), (' software ', 43), (' computer software ', 43), (' water licenses', 42), (' development and software ', 37), (' consumer contracts ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 additions , res_fuzz_match = [('Other intangibles ', 42), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 37), (' consumer contracts ', 33), (' software ', 29), (' computer software ', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('Other intangibles ', 58), (' mining rights ', 50), (' software ', 43), (' computer software ', 43), (' water licenses', 42), (' development and software ', 37), (' consumer contracts ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 depreciation charge , res_fuzz_match = [('Other intangibles ', 42), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 37), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 27)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('Other intangibles ', 58), (' mining rights ', 50), (' software ', 43), (' computer software ', 43), (' water licenses', 42), (' development and software ', 37), (' consumer contracts ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 closing net book amount , res_fuzz_match = [(' water licenses', 50), ('Other intangibles ', 42), (' consumer contracts ', 40), (' development and software ', 37), (' mining rights ', 30), (' software ', 29), (' computer software ', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('Other intangibles ', 58), (' mining rights ', 50), (' software ', 43), (' computer software ', 43), (' water licenses', 42), (' development and software ', 37), (' consumer contracts ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 cost , res_fuzz_match = [(' consumer contracts ', 50), (' development and software ', 40), (' computer software ', 40), (' mining rights ', 40), (' water licenses', 40), ('Other intangibles ', 30), (' software ', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('Other intangibles ', 58), (' mining rights ', 50), (' software ', 43), (' computer software ', 43), (' water licenses', 42), (' development and software ', 37), (' consumer contracts ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 accumulated depreciation , res_fuzz_match = [(' consumer contracts ', 40), (' computer software ', 36), (' water licenses', 33), (' mining rights ', 30), (' software ', 29), ('Other intangibles ', 25), (' development and software ', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('Other intangibles ', 58), (' mining rights ', 50), (' software ', 43), (' computer software ', 43), (' water licenses', 42), (' development and software ', 37), (' consumer contracts ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 net book amount , res_fuzz_match = [('Other intangibles ', 42), (' mining rights ', 40), (' computer software ', 36), (' consumer contracts ', 33), (' water licenses', 33), (' development and software ', 32), (' software ', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('Other intangibles ', 58), (' mining rights ', 50), (' software ', 43), (' computer software ', 43), (' water licenses', 42), (' development and software ', 37), (' consumer contracts ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none net book amount , res_fuzz_match = [('Other intangibles ', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' development and software ', 37), (' software ', 29), (' computer software ', 29), (' water licenses', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('Other intangibles ', 58), (' software ', 43), (' computer software ', 43), (' development and software ', 42), (' water licenses', 42), (' mining rights ', 40), (' consumer contracts ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 opening net book amount , res_fuzz_match = [(' computer software ', 43), ('Other intangibles ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' development and software ', 37), (' mining rights ', 30), (' software ', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('Other intangibles ', 58), (' software ', 43), (' computer software ', 43), (' development and software ', 42), (' water licenses', 42), (' mining rights ', 40), (' consumer contracts ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 additions , res_fuzz_match = [('Other intangibles ', 42), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 37), (' consumer contracts ', 33), (' software ', 29), (' computer software ', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('Other intangibles ', 58), (' software ', 43), (' computer software ', 43), (' development and software ', 42), (' water licenses', 42), (' mining rights ', 40), (' consumer contracts ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 depreciation charge , res_fuzz_match = [('Other intangibles ', 42), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 37), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 27)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('Other intangibles ', 58), (' software ', 43), (' computer software ', 43), (' development and software ', 42), (' water licenses', 42), (' mining rights ', 40), (' consumer contracts ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 closing net book amount , res_fuzz_match = [(' water licenses', 50), ('Other intangibles ', 42), (' consumer contracts ', 40), (' development and software ', 37), (' mining rights ', 30), (' software ', 29), (' computer software ', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('Other intangibles ', 58), (' software ', 43), (' computer software ', 43), (' development and software ', 42), (' water licenses', 42), (' mining rights ', 40), (' consumer contracts ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 cost , res_fuzz_match = [(' consumer contracts ', 50), (' development and software ', 40), (' computer software ', 40), (' mining rights ', 40), (' water licenses', 40), ('Other intangibles ', 30), (' software ', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('Other intangibles ', 58), (' software ', 43), (' computer software ', 43), (' development and software ', 42), (' water licenses', 42), (' mining rights ', 40), (' consumer contracts ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 accumulated depreciation , res_fuzz_match = [(' consumer contracts ', 40), (' computer software ', 36), (' water licenses', 33), (' mining rights ', 30), (' software ', 29), ('Other intangibles ', 25), (' development and software ', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('Other intangibles ', 58), (' software ', 43), (' computer software ', 43), (' development and software ', 42), (' water licenses', 42), (' mining rights ', 40), (' consumer contracts ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 net book amount , res_fuzz_match = [('Other intangibles ', 42), (' mining rights ', 40), (' computer software ', 36), (' consumer contracts ', 33), (' water licenses', 33), (' development and software ', 32), (' software ', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('Other intangibles ', 58), (' software ', 43), (' computer software ', 43), (' development and software ', 42), (' water licenses', 42), (' mining rights ', 40), (' consumer contracts ', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-18 14:48:51+0530 - sLogger - ERROR - error occured: cannot convert float NaN to integer
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method', 54), ('joint ventures and associates', 46), ('derivative financial instruments', 46), (' investment in associate', 40), (' investment in joint venture', 38), ('investment', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), ('joint ventures and associates', 40), (' investments accounted for using the equity method', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method', 40), ('investment', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method', 54), ('joint ventures and associates', 46), ('derivative financial instruments', 46), (' investment in associate', 40), (' investment in joint venture', 38), ('investment', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), ('joint ventures and associates', 40), (' investments accounted for using the equity method', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method', 40), ('investment', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method', 54), ('joint ventures and associates', 46), ('derivative financial instruments', 46), (' investment in associate', 40), (' investment in joint venture', 38), ('investment', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), ('joint ventures and associates', 40), (' investments accounted for using the equity method', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method', 40), ('investment', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method', 54), ('joint ventures and associates', 46), ('derivative financial instruments', 46), (' investment in associate', 40), (' investment in joint venture', 38), ('investment', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), ('joint ventures and associates', 40), (' investments accounted for using the equity method', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method', 40), ('investment', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 7], 'score': 100, 'value': 66820.0, 'line_item_label': ['Deferred tax assets', 'Deferred tax assets'], 'note_numbers': ['13', '13'], 'line_item_value': [33410.0, 33410.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 7], 'score': 100, 'value': 68522.0, 'line_item_label': ['Deferred tax assets', 'Deferred tax assets'], 'note_numbers': ['13', '13'], 'line_item_value': [34261.0, 34261.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['deferred tax assets', ' deferred tax balances'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none at 1 april 2021 , res_fuzz_match = [(' deferred tax balances', 40), ('deferred tax assets', 30)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = employee benefits $ employee benefits $ , res_fuzz_match = [('deferred tax assets', 33), (' deferred tax balances', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = (charged)/credited to profit or loss , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = employee benefits $ employee benefits $ , res_fuzz_match = [('deferred tax assets', 33), (' deferred tax balances', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = (charged)/credited at: 31 march 2022 , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = employee benefits $ employee benefits $ , res_fuzz_match = [('deferred tax assets', 33), (' deferred tax balances', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = (charged)/credited at 1 april 2022 , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = employee benefits $ employee benefits $ , res_fuzz_match = [('deferred tax assets', 33), (' deferred tax balances', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = (charged)/credited -to profit or loss , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = employee benefits $ employee benefits $ , res_fuzz_match = [('deferred tax assets', 33), (' deferred tax balances', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = (charged)/credited at 31 march 2023 , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = employee benefits $ employee benefits $ , res_fuzz_match = [('deferred tax assets', 33), (' deferred tax balances', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none at 1 april 2021 , res_fuzz_match = [(' deferred tax balances', 40), ('deferred tax assets', 30)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = periodic accruals $ periodic accruals $ , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = (charged)/credited to profit or loss , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = periodic accruals $ periodic accruals $ , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = (charged)/credited at: 31 march 2022 , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = periodic accruals $ periodic accruals $ , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = (charged)/credited at 1 april 2022 , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = periodic accruals $ periodic accruals $ , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = (charged)/credited -to profit or loss , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = periodic accruals $ periodic accruals $ , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = (charged)/credited at 31 march 2023 , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = periodic accruals $ periodic accruals $ , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = none at 1 april 2021 , res_fuzz_match = [(' deferred tax balances', 40), ('deferred tax assets', 30)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = total $ total $ , res_fuzz_match = [(' deferred tax balances', 45), ('deferred tax assets', 36)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = (charged)/credited to profit or loss , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = total $ total $ , res_fuzz_match = [(' deferred tax balances', 45), ('deferred tax assets', 36)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = (charged)/credited at: 31 march 2022 , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = total $ total $ , res_fuzz_match = [(' deferred tax balances', 45), ('deferred tax assets', 36)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = (charged)/credited at 1 april 2022 , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = total $ total $ , res_fuzz_match = [(' deferred tax balances', 45), ('deferred tax assets', 36)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = (charged)/credited -to profit or loss , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = total $ total $ , res_fuzz_match = [(' deferred tax balances', 45), ('deferred tax assets', 36)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = (charged)/credited at 31 march 2023 , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = total $ total $ , res_fuzz_match = [(' deferred tax balances', 45), ('deferred tax assets', 36)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['deferred tax assets', ' deferred tax balances'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = total employee benefits , res_fuzz_match = [('deferred tax assets', 33), (' deferred tax balances', 31)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = total periodic accruals , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = total 38163 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 40)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = total set-off of deferred tax liabilities pursuant to set-off provisions , res_fuzz_match = [(' deferred tax balances', 75), ('deferred tax assets', 73)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows = total net deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 71)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': [100], 'value': [34261.0], 'label': ['Total Net deferred tax assets'], 'year': [], 'colname_found': ['rows']}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 35), (' loan receivables', 25), (' leases', 24)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' exploration and evaluation expenditure', 29), (' leases', 21), ('non-current', 18)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 35), (' loan receivables', 25), (' leases', 24)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' exploration and evaluation expenditure', 29), (' leases', 21), ('non-current', 18)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets', 'Non-current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 0.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 35), (' loan receivables', 25), (' leases', 24)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' exploration and evaluation expenditure', 29), (' leases', 21), ('non-current', 18)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 35), (' loan receivables', 25), (' leases', 24)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' exploration and evaluation expenditure', 29), (' leases', 21), ('non-current', 18)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets', 'Non-current assets'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 0.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft ']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [(' lease liabilities ', 64), (' interest bearing liabilites ', 61), (' loans and borrowings ', 34), (' cash and cash equivalents ', 29), (' cash overdraft ', 29), ('  leases ', 22), ('short term debt ', 21), (' short-term debt ', 21), (' shortterm debt ', 21), (' bank overdraft ', 21), (' borrowings ', 20), (' shortterm borrowings ', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [(' interest bearing liabilites ', 60), (' lease liabilities ', 55), (' cash overdraft ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' borrowings ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [(' interest bearing liabilites ', 47), (' lease liabilities ', 31), (' short-term debt ', 29), (' shortterm debt ', 29), (' bank overdraft ', 29), ('short term debt ', 28), (' loans and borrowings ', 28), (' borrowings ', 22), (' shortterm borrowings ', 22), (' cash and cash equivalents ', 19), (' cash overdraft ', 17), ('  leases ', 16)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [(' lease liabilities ', 64), (' interest bearing liabilites ', 61), (' loans and borrowings ', 34), (' cash and cash equivalents ', 29), (' cash overdraft ', 29), ('  leases ', 22), ('short term debt ', 21), (' short-term debt ', 21), (' shortterm debt ', 21), (' bank overdraft ', 21), (' borrowings ', 20), (' shortterm borrowings ', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [(' interest bearing liabilites ', 60), (' lease liabilities ', 55), (' cash overdraft ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' borrowings ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [(' interest bearing liabilites ', 47), (' lease liabilities ', 31), (' short-term debt ', 29), (' shortterm debt ', 29), (' bank overdraft ', 29), ('short term debt ', 28), (' loans and borrowings ', 28), (' borrowings ', 22), (' shortterm borrowings ', 22), (' cash and cash equivalents ', 19), (' cash overdraft ', 17), ('  leases ', 16)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 9], 'score': 100, 'value': 158132.0, 'line_item_label': ['Lease liabilities', 'Lease liabilities'], 'note_numbers': ['12', '12'], 'line_item_value': [79066.0, 79066.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [(' lease liabilities ', 64), (' interest bearing liabilites ', 61), (' loans and borrowings ', 34), (' cash and cash equivalents ', 29), (' cash overdraft ', 29), ('  leases ', 22), ('short term debt ', 21), (' short-term debt ', 21), (' shortterm debt ', 21), (' bank overdraft ', 21), (' borrowings ', 20), (' shortterm borrowings ', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [(' interest bearing liabilites ', 60), (' lease liabilities ', 55), (' cash overdraft ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' borrowings ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [(' interest bearing liabilites ', 47), (' lease liabilities ', 31), (' short-term debt ', 29), (' shortterm debt ', 29), (' bank overdraft ', 29), ('short term debt ', 28), (' loans and borrowings ', 28), (' borrowings ', 22), (' shortterm borrowings ', 22), (' cash and cash equivalents ', 19), (' cash overdraft ', 17), ('  leases ', 16)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [(' lease liabilities ', 64), (' interest bearing liabilites ', 61), (' loans and borrowings ', 34), (' cash and cash equivalents ', 29), (' cash overdraft ', 29), ('  leases ', 22), ('short term debt ', 21), (' short-term debt ', 21), (' shortterm debt ', 21), (' bank overdraft ', 21), (' borrowings ', 20), (' shortterm borrowings ', 20)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [(' interest bearing liabilites ', 60), (' lease liabilities ', 55), (' cash overdraft ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' borrowings ', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [(' interest bearing liabilites ', 47), (' lease liabilities ', 31), (' short-term debt ', 29), (' shortterm debt ', 29), (' bank overdraft ', 29), ('short term debt ', 28), (' loans and borrowings ', 28), (' borrowings ', 22), (' shortterm borrowings ', 22), (' cash and cash equivalents ', 19), (' cash overdraft ', 17), ('  leases ', 16)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 9], 'score': 100, 'value': 115424.0, 'line_item_label': ['Lease liabilities', 'Lease liabilities'], 'note_numbers': ['12', '12'], 'line_item_value': [57712.0, 57712.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [('', 0)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'trade payable', 'other trade payables']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33), ('other trade payables', 31), ('trade payable', 23)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45), ('other trade payables', 44), ('trade payable', 40)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [('trade and other payables', 33), ('other trade payables', 31), ('trade payable', 24)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33), ('other trade payables', 31), ('trade payable', 23)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45), ('other trade payables', 44), ('trade payable', 40)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [('trade and other payables', 33), ('other trade payables', 31), ('trade payable', 24)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 8], 'score': 100, 'value': 19272950.0, 'line_item_label': ['Trade and other payables', 'Trade and other payables'], 'note_numbers': ['14', '14'], 'line_item_value': [9636475.0, 9636475.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33), ('other trade payables', 31), ('trade payable', 23)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45), ('other trade payables', 44), ('trade payable', 40)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [('trade and other payables', 33), ('other trade payables', 31), ('trade payable', 24)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33), ('other trade payables', 31), ('trade payable', 23)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45), ('other trade payables', 44), ('trade payable', 40)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [('trade and other payables', 33), ('other trade payables', 31), ('trade payable', 24)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 8], 'score': 100, 'value': 19004782.0, 'line_item_label': ['Trade and other payables', 'Trade and other payables'], 'note_numbers': ['14', '14'], 'line_item_value': [9502391.0, 9502391.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses ', ' interest accrued']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [('trade and other payables', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [('trade and other payables', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 8], 'score': 100, 'value': 19272950.0, 'line_item_label': ['Trade and other payables', 'Trade and other payables'], 'note_numbers': ['14', '14'], 'line_item_value': [9636475.0, 9636475.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [('trade and other payables', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [('trade and other payables', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 8], 'score': 100, 'value': 19004782.0, 'line_item_label': ['Trade and other payables', 'Trade and other payables'], 'note_numbers': ['14', '14'], 'line_item_value': [9502391.0, 9502391.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-18 14:48:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities ', 71), (' income tax payable ', 43), (' tax ', 33), (' provision', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' tax ', 100), (' income tax payable ', 56), (' provision', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [(' income tax payable ', 38), ('current tax liabilities ', 33), (' tax ', 33), (' provision', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities ', 71), (' income tax payable ', 43), (' tax ', 33), (' provision', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' tax ', 100), (' income tax payable ', 56), (' provision', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [(' income tax payable ', 38), ('current tax liabilities ', 33), (' tax ', 33), (' provision', 33)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 6, 10], 'score': 100, 'value': 494558.0, 'line_item_label': ['LIABILITIES', 'Current tax liabilities', 'LIABILITIES', 'Current tax liabilities'], 'note_numbers': [nan, nan, nan, nan], 'line_item_value': [0.0, 247279.0, 0.0, 247279.0]}
2023-08-18 14:48:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:51+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities ', 71), (' income tax payable ', 43), (' tax ', 33), (' provision', 17)]
2023-08-18 14:48:51+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' tax ', 100), (' income tax payable ', 56), (' provision', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [(' income tax payable ', 38), ('current tax liabilities ', 33), (' tax ', 33), (' provision', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities ', 71), (' income tax payable ', 43), (' tax ', 33), (' provision', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' tax ', 100), (' income tax payable ', 56), (' provision', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [(' income tax payable ', 38), ('current tax liabilities ', 33), (' tax ', 33), (' provision', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 6, 10], 'score': 100, 'value': 680558.0, 'line_item_label': ['LIABILITIES', 'Current tax liabilities', 'LIABILITIES', 'Current tax liabilities'], 'note_numbers': [nan, nan, nan, nan], 'line_item_value': [0.0, 340279.0, 0.0, 340279.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' foreign exchange contract liability', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), ('provisions', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84), (' other current liabilities', 84), (' other financial liabilities', 53), (' financial liabilities', 50), (' foreign exchange contract liability', 49), (' trade and other payables', 45), (' customer deposits', 38), (' employee benefits', 30), (' deferred revenue', 27), ('provisions', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [(' employee benefits', 83), (' foreign exchange contract liability', 35), ('other current liabilities', 34), (' financial liabilities', 34), (' other current liabilities', 34), (' customer deposits', 34), (' trade and other payables', 33), (' deferred revenue', 30), (' other financial liabilities', 29), ('provisions', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' foreign exchange contract liability', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), ('provisions', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84), (' other current liabilities', 84), (' other financial liabilities', 53), (' financial liabilities', 50), (' foreign exchange contract liability', 49), (' trade and other payables', 45), (' customer deposits', 38), (' employee benefits', 30), (' deferred revenue', 27), ('provisions', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [(' employee benefits', 83), (' foreign exchange contract liability', 35), ('other current liabilities', 34), (' financial liabilities', 34), (' other current liabilities', 34), (' customer deposits', 34), (' trade and other payables', 33), (' deferred revenue', 30), (' other financial liabilities', 29), ('provisions', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2, 4, 5, 7, 8, 10, 11], 'score': 83, 'value': 19863808.0, 'line_item_label': ['Current liabilities', 'Trade and other payables', 'Current tax liabilities', 'Employee benefit obligations', 'Current liabilities', 'Trade and other payables', 'Current tax liabilities', 'Employee benefit obligations'], 'note_numbers': [nan, '14', nan, '15', nan, '14', nan, '15'], 'line_item_value': [0.0, 9636475.0, 247279.0, 48150.0, 0.0, 9636475.0, 247279.0, 48150.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' foreign exchange contract liability', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), ('provisions', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84), (' other current liabilities', 84), (' other financial liabilities', 53), (' financial liabilities', 50), (' foreign exchange contract liability', 49), (' trade and other payables', 45), (' customer deposits', 38), (' employee benefits', 30), (' deferred revenue', 27), ('provisions', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [(' employee benefits', 83), (' foreign exchange contract liability', 35), ('other current liabilities', 34), (' financial liabilities', 34), (' other current liabilities', 34), (' customer deposits', 34), (' trade and other payables', 33), (' deferred revenue', 30), (' other financial liabilities', 29), ('provisions', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' foreign exchange contract liability', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), ('provisions', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84), (' other current liabilities', 84), (' other financial liabilities', 53), (' financial liabilities', 50), (' foreign exchange contract liability', 49), (' trade and other payables', 45), (' customer deposits', 38), (' employee benefits', 30), (' deferred revenue', 27), ('provisions', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefit obligations , res_fuzz_match = [(' employee benefits', 83), (' foreign exchange contract liability', 35), ('other current liabilities', 34), (' financial liabilities', 34), (' other current liabilities', 34), (' customer deposits', 34), (' trade and other payables', 33), (' deferred revenue', 30), (' other financial liabilities', 29), ('provisions', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2, 4, 5, 7, 8, 10, 11], 'score': 83, 'value': 19795064.0, 'line_item_label': ['Current liabilities', 'Trade and other payables', 'Current tax liabilities', 'Employee benefit obligations', 'Current liabilities', 'Trade and other payables', 'Current tax liabilities', 'Employee benefit obligations'], 'note_numbers': [nan, '14', nan, '15', nan, '14', nan, '15'], 'line_item_value': [0.0, 9502391.0, 340279.0, 54862.0, 0.0, 9502391.0, 340279.0, 54862.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['leases ', ' secured finance debt ', ' bank loan ', ' lease liabilities ', ' lease liability ', ' lease liabilities - non-current ', ' later than 1 year ', ' not later than 5 years']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities ', 64), (' lease liability', 64), ('interest bearing loans and borrowings ', 36), (' loans and borrowings', 36), (' borrowings ', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' lease liability', 100), ('interest bearing loans and borrowings ', 45), (' loans and borrowings', 45), (' borrowings ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities ', 64), (' lease liability', 64), ('interest bearing loans and borrowings ', 36), (' loans and borrowings', 36), (' borrowings ', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' lease liability', 100), ('interest bearing loans and borrowings ', 45), (' loans and borrowings', 45), (' borrowings ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3], 'score': 100, 'value': 56822.0, 'line_item_label': ['Lease liabilities', 'Lease liabilities'], 'note_numbers': ['12', '12'], 'line_item_value': [28411.0, 28411.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities ', 64), (' lease liability', 64), ('interest bearing loans and borrowings ', 36), (' loans and borrowings', 36), (' borrowings ', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' lease liability', 100), ('interest bearing loans and borrowings ', 45), (' loans and borrowings', 45), (' borrowings ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities ', 64), (' lease liability', 64), ('interest bearing loans and borrowings ', 36), (' loans and borrowings', 36), (' borrowings ', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' lease liability', 100), ('interest bearing loans and borrowings ', 45), (' loans and borrowings', 45), (' borrowings ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3], 'score': 100, 'value': 98018.0, 'line_item_label': ['Lease liabilities', 'Lease liabilities'], 'note_numbers': ['12', '12'], 'line_item_value': [49009.0, 49009.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes ', ' deferred tax liabilities']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities ', ' total deferred tax (assets) / liabilities']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' deferred tax liabilities', 57), ('deferred taxes ', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' deferred tax liabilities', 73), ('deferred taxes ', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' deferred tax liabilities', 57), ('deferred taxes ', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' deferred tax liabilities', 73), ('deferred taxes ', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' deferred tax liabilities', 57), ('deferred taxes ', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' deferred tax liabilities', 73), ('deferred taxes ', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' deferred tax liabilities', 57), ('deferred taxes ', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' deferred tax liabilities', 73), ('deferred taxes ', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities ', 82), ('other long term liabilities ', 61), (' other financial liabilities ', 53), (' financial liabilities ', 43), (' provision for associate funding ', 33), (' trade and other payables ', 28), (' employee benefits ', 28), (' deferred revenue', 23), (' provisions ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities ', 64), (' other financial liabilities ', 52), (' other non-current liabilities ', 39), ('other long term liabilities ', 36), (' trade and other payables ', 30), (' provision for associate funding ', 24), (' employee benefits ', 23), (' deferred revenue', 17), (' provisions ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities ', 82), ('other long term liabilities ', 61), (' other financial liabilities ', 53), (' financial liabilities ', 43), (' provision for associate funding ', 33), (' trade and other payables ', 28), (' employee benefits ', 28), (' deferred revenue', 23), (' provisions ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities ', 64), (' other financial liabilities ', 52), (' other non-current liabilities ', 39), ('other long term liabilities ', 36), (' trade and other payables ', 30), (' provision for associate funding ', 24), (' employee benefits ', 23), (' deferred revenue', 17), (' provisions ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2], 'score': 82, 'value': 0.0, 'line_item_label': ['Non-current liabilities', 'Non-current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 0.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities ', 82), ('other long term liabilities ', 61), (' other financial liabilities ', 53), (' financial liabilities ', 43), (' provision for associate funding ', 33), (' trade and other payables ', 28), (' employee benefits ', 28), (' deferred revenue', 23), (' provisions ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities ', 64), (' other financial liabilities ', 52), (' other non-current liabilities ', 39), ('other long term liabilities ', 36), (' trade and other payables ', 30), (' provision for associate funding ', 24), (' employee benefits ', 23), (' deferred revenue', 17), (' provisions ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities ', 82), ('other long term liabilities ', 61), (' other financial liabilities ', 53), (' financial liabilities ', 43), (' provision for associate funding ', 33), (' trade and other payables ', 28), (' employee benefits ', 28), (' deferred revenue', 23), (' provisions ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities ', 64), (' other financial liabilities ', 52), (' other non-current liabilities ', 39), ('other long term liabilities ', 36), (' trade and other payables ', 30), (' provision for associate funding ', 24), (' employee benefits ', 23), (' deferred revenue', 17), (' provisions ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2], 'score': 82, 'value': 0.0, 'line_item_label': ['Non-current liabilities', 'Non-current liabilities'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 0.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares ', ' fully paid ordinary shares ', ' issued and paid-up share capital ', ' retained profits ', ' ordinary shares fully paid ', ' total issued capital ', ' on issue, fully paid ', ' Fully paid Preference shares ', ' Profits captialised on redemption of preference shares']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' share capital ', 40), (' share capital ', 40), (' equity share capital ', 37), (' perpetual equity instrument ', 35), (' contributed equity ', 32), (' issued capital ', 32), (' contributed equity', 32), ('common stock ', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' contributed equity ', 100), (' contributed equity', 100), (' equity share capital ', 59), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 37), (' share capital ', 37), ('common stock ', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [(' contributed equity ', 36), (' contributed equity', 36), (' share capital ', 35), (' share capital ', 35), (' equity share capital ', 33), (' perpetual equity instrument ', 32), (' issued capital ', 27), ('common stock ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' issued capital ', 15), (' share capital ', 14), (' perpetual equity instrument ', 14), (' share capital ', 14), ('common stock ', 13), (' contributed equity ', 11), (' contributed equity', 11), (' equity share capital ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' issued capital ', 15), (' share capital ', 14), (' perpetual equity instrument ', 14), (' share capital ', 14), ('common stock ', 13), (' contributed equity ', 11), (' contributed equity', 11), (' equity share capital ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' share capital ', 40), (' share capital ', 40), (' equity share capital ', 37), (' perpetual equity instrument ', 35), (' contributed equity ', 32), (' issued capital ', 32), (' contributed equity', 32), ('common stock ', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' contributed equity ', 100), (' contributed equity', 100), (' equity share capital ', 59), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 37), (' share capital ', 37), ('common stock ', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [(' contributed equity ', 36), (' contributed equity', 36), (' share capital ', 35), (' share capital ', 35), (' equity share capital ', 33), (' perpetual equity instrument ', 32), (' issued capital ', 27), ('common stock ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 9], 'score': 100, 'value': 50934778.0, 'line_item_label': ['Contributed equity', 'Contributed equity'], 'note_numbers': ['17', '17'], 'line_item_value': [25467389.0, 25467389.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' share capital ', 40), (' share capital ', 40), (' equity share capital ', 37), (' perpetual equity instrument ', 35), (' contributed equity ', 32), (' issued capital ', 32), (' contributed equity', 32), ('common stock ', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' contributed equity ', 100), (' contributed equity', 100), (' equity share capital ', 59), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 37), (' share capital ', 37), ('common stock ', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [(' contributed equity ', 36), (' contributed equity', 36), (' share capital ', 35), (' share capital ', 35), (' equity share capital ', 33), (' perpetual equity instrument ', 32), (' issued capital ', 27), ('common stock ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' issued capital ', 15), (' share capital ', 14), (' perpetual equity instrument ', 14), (' share capital ', 14), ('common stock ', 13), (' contributed equity ', 11), (' contributed equity', 11), (' equity share capital ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' issued capital ', 15), (' share capital ', 14), (' perpetual equity instrument ', 14), (' share capital ', 14), ('common stock ', 13), (' contributed equity ', 11), (' contributed equity', 11), (' equity share capital ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' share capital ', 40), (' share capital ', 40), (' equity share capital ', 37), (' perpetual equity instrument ', 35), (' contributed equity ', 32), (' issued capital ', 32), (' contributed equity', 32), ('common stock ', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' contributed equity ', 100), (' contributed equity', 100), (' equity share capital ', 59), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 37), (' share capital ', 37), ('common stock ', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [(' contributed equity ', 36), (' contributed equity', 36), (' share capital ', 35), (' share capital ', 35), (' equity share capital ', 33), (' perpetual equity instrument ', 32), (' issued capital ', 27), ('common stock ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 9], 'score': 100, 'value': 50934778.0, 'line_item_label': ['Contributed equity', 'Contributed equity'], 'note_numbers': ['17', '17'], 'line_item_value': [25467389.0, 25467389.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('Share premium', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('Share premium', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('Share premium', 32)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('Share premium', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('Share premium', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('Share premium', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('Share premium', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('Share premium', 32)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('Share premium', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('Share premium', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('Share premium', 32)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('Share premium', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('Share premium', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('Share premium', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('Share premium', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('Share premium', 32)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings ', ' general reserves ', ' accumulated losses ', ' retained earnings and dividends on equity instruments']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' retained earnings ', 40), ('other equity ', 38), (' retained profits', 36), (' accumulated losses ', 29), (' reserves surplus ', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' retained profits', 48), ('other equity ', 43), (' retained earnings ', 37), (' reserves surplus ', 21), (' accumulated losses ', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [(' reserves surplus ', 48), (' retained earnings ', 43), ('other equity ', 42), (' retained profits', 40), (' accumulated losses ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' retained earnings ', 43), (' retained profits', 25), (' accumulated losses ', 13), ('other equity ', 0), (' reserves surplus ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' retained earnings ', 43), (' retained profits', 25), (' accumulated losses ', 13), ('other equity ', 0), (' reserves surplus ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' retained earnings ', 40), ('other equity ', 38), (' retained profits', 36), (' accumulated losses ', 29), (' reserves surplus ', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' retained profits', 48), ('other equity ', 43), (' retained earnings ', 37), (' reserves surplus ', 21), (' accumulated losses ', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [(' reserves surplus ', 48), (' retained earnings ', 43), ('other equity ', 42), (' retained profits', 40), (' accumulated losses ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 11], 'score': 100, 'value': 14525558.0, 'line_item_label': ['Retained earnings', 'Retained earnings'], 'note_numbers': ['18(b)', '18(b)'], 'line_item_value': [7262779.0, 7262779.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' retained earnings ', 40), ('other equity ', 38), (' retained profits', 36), (' accumulated losses ', 29), (' reserves surplus ', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' retained profits', 48), ('other equity ', 43), (' retained earnings ', 37), (' reserves surplus ', 21), (' accumulated losses ', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [(' reserves surplus ', 48), (' retained earnings ', 43), ('other equity ', 42), (' retained profits', 40), (' accumulated losses ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' retained earnings ', 43), (' retained profits', 25), (' accumulated losses ', 13), ('other equity ', 0), (' reserves surplus ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' retained earnings ', 43), (' retained profits', 25), (' accumulated losses ', 13), ('other equity ', 0), (' reserves surplus ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' retained earnings ', 40), ('other equity ', 38), (' retained profits', 36), (' accumulated losses ', 29), (' reserves surplus ', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' retained profits', 48), ('other equity ', 43), (' retained earnings ', 37), (' reserves surplus ', 21), (' accumulated losses ', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [(' reserves surplus ', 48), (' retained earnings ', 43), ('other equity ', 42), (' retained profits', 40), (' accumulated losses ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 11], 'score': 100, 'value': 17443998.0, 'line_item_label': ['Retained earnings', 'Retained earnings'], 'note_numbers': ['18(b)', '18(b)'], 'line_item_value': [8721999.0, 8721999.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' noncontrolling interest ', 36), (' non-controlling interest', 36), ('minority interest ', 35), (' minority interest ', 35), (' non controlling interest ', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' non controlling interest ', 50), ('minority interest ', 40), (' minority interest ', 40), (' noncontrolling interest ', 34), (' non-controlling interest', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('minority interest ', 46), (' minority interest ', 46), (' non controlling interest ', 44), (' noncontrolling interest ', 39), (' non-controlling interest', 39)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('minority interest ', 24), (' minority interest ', 24), (' noncontrolling interest ', 18), (' non-controlling interest', 18), (' non controlling interest ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('minority interest ', 24), (' minority interest ', 24), (' noncontrolling interest ', 18), (' non-controlling interest', 18), (' non controlling interest ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' noncontrolling interest ', 36), (' non-controlling interest', 36), ('minority interest ', 35), (' minority interest ', 35), (' non controlling interest ', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' non controlling interest ', 50), ('minority interest ', 40), (' minority interest ', 40), (' noncontrolling interest ', 34), (' non-controlling interest', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('minority interest ', 46), (' minority interest ', 46), (' non controlling interest ', 44), (' noncontrolling interest ', 39), (' non-controlling interest', 39)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' noncontrolling interest ', 36), (' non-controlling interest', 36), ('minority interest ', 35), (' minority interest ', 35), (' non controlling interest ', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' non controlling interest ', 50), ('minority interest ', 40), (' minority interest ', 40), (' noncontrolling interest ', 34), (' non-controlling interest', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('minority interest ', 46), (' minority interest ', 46), (' non controlling interest ', 44), (' noncontrolling interest ', 39), (' non-controlling interest', 39)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('minority interest ', 24), (' minority interest ', 24), (' noncontrolling interest ', 18), (' non-controlling interest', 18), (' non controlling interest ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('minority interest ', 24), (' minority interest ', 24), (' noncontrolling interest ', 18), (' non-controlling interest', 18), (' non controlling interest ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' noncontrolling interest ', 36), (' non-controlling interest', 36), ('minority interest ', 35), (' minority interest ', 35), (' non controlling interest ', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [(' non controlling interest ', 50), ('minority interest ', 40), (' minority interest ', 40), (' noncontrolling interest ', 34), (' non-controlling interest', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('minority interest ', 46), (' minority interest ', 46), (' non controlling interest ', 44), (' noncontrolling interest ', 39), (' non-controlling interest', 39)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('shareholders equity(a)', 31)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('shareholders equity(a)', 28)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('shareholders equity(a)', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('shareholders equity(a)', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('shareholders equity(a)', 31)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('shareholders equity(a)', 28)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('shareholders equity(a)', 31)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('shareholders equity(a)', 28)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('shareholders equity(a)', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [('shareholders equity(a)', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('shareholders equity(a)', 31)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('shareholders equity(a)', 28)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve ', ' cash flow hedge reserve ', ' reserve in joint venture ', ' other reserve ', ' total other reserves ', ' tax reserve ', ' other  components of equity']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other reserves ', 29), (' reserves ', 27), (' foreign currency translation reserve', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves ', 36), (' foreign currency translation reserve', 30), (' reserves ', 18)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('other reserves ', 100), (' reserves ', 67), (' foreign currency translation reserve', 42)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' foreign currency translation reserve', 18), ('other reserves ', 0), (' reserves ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' foreign currency translation reserve', 18), ('other reserves ', 0), (' reserves ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other reserves ', 29), (' reserves ', 27), (' foreign currency translation reserve', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves ', 36), (' foreign currency translation reserve', 30), (' reserves ', 18)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('other reserves ', 100), (' reserves ', 67), (' foreign currency translation reserve', 42)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 10], 'score': 100, 'value': -2511394.0, 'line_item_label': ['Other reserves', 'Other reserves'], 'note_numbers': ['18(a)', '18(a)'], 'line_item_value': [-1255697.0, -1255697.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other reserves ', 29), (' reserves ', 27), (' foreign currency translation reserve', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves ', 36), (' foreign currency translation reserve', 30), (' reserves ', 18)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('other reserves ', 100), (' reserves ', 67), (' foreign currency translation reserve', 42)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' foreign currency translation reserve', 18), ('other reserves ', 0), (' reserves ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = nan , res_fuzz_match = [(' foreign currency translation reserve', 18), ('other reserves ', 0), (' reserves ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other reserves ', 29), (' reserves ', 27), (' foreign currency translation reserve', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = contributed equity , res_fuzz_match = [('other reserves ', 36), (' foreign currency translation reserve', 30), (' reserves ', 18)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('other reserves ', 100), (' reserves ', 67), (' foreign currency translation reserve', 42)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 10], 'score': 100, 'value': 3891364.0, 'line_item_label': ['Other reserves', 'Other reserves'], 'note_numbers': ['18(a)', '18(a)'], 'line_item_value': [1945682.0, 1945682.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['cost ', ' gross ', ' investment property ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction ', ' Mine infrastructure ', ' Assets under construction ', ' Capitalised pre stripping costs ', ' Other assets in progress ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Freehold land ', ' Buildings ', ' Subsea ', ' Marine  Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings ', '']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' Exploration and evaluation assets', 46), (' investment property ', 36), (' oil and gas properties ', 31), ('plant property equipment ', 30), (' property plant equipment ', 30), (' plant and equipment ', 29), (' property ', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment ', 91), (' property plant equipment ', 91), (' plant and equipment ', 77), (' oil and gas properties ', 70), (' investment property ', 62), (' property ', 50), (' Exploration and evaluation assets', 48)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' Exploration and evaluation assets', 38), (' investment property ', 33), ('plant property equipment ', 29), (' property plant equipment ', 29), (' plant and equipment ', 27), (' property ', 26), (' oil and gas properties ', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' Exploration and evaluation assets', 49), (' investment property ', 40), ('plant property equipment ', 34), (' property plant equipment ', 34), (' plant and equipment ', 33), (' oil and gas properties ', 29), (' property ', 26)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' Exploration and evaluation assets', 46), (' investment property ', 36), (' oil and gas properties ', 31), ('plant property equipment ', 30), (' property plant equipment ', 30), (' plant and equipment ', 29), (' property ', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment ', 91), (' property plant equipment ', 91), (' plant and equipment ', 77), (' oil and gas properties ', 70), (' investment property ', 62), (' property ', 50), (' Exploration and evaluation assets', 48)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' Exploration and evaluation assets', 38), (' investment property ', 33), ('plant property equipment ', 29), (' property plant equipment ', 29), (' plant and equipment ', 27), (' property ', 26), (' oil and gas properties ', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' Exploration and evaluation assets', 49), (' investment property ', 40), ('plant property equipment ', 34), (' property plant equipment ', 34), (' plant and equipment ', 33), (' oil and gas properties ', 29), (' property ', 26)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 91, 'value': 21496.0, 'line_item_label': ['Property, plant and equipment', 'Property, plant and equipment'], 'note_numbers': ['11', '11'], 'line_item_value': [10748.0, 10748.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' Exploration and evaluation assets', 46), (' investment property ', 36), (' oil and gas properties ', 31), ('plant property equipment ', 30), (' property plant equipment ', 30), (' plant and equipment ', 29), (' property ', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment ', 91), (' property plant equipment ', 91), (' plant and equipment ', 77), (' oil and gas properties ', 70), (' investment property ', 62), (' property ', 50), (' Exploration and evaluation assets', 48)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' Exploration and evaluation assets', 38), (' investment property ', 33), ('plant property equipment ', 29), (' property plant equipment ', 29), (' plant and equipment ', 27), (' property ', 26), (' oil and gas properties ', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' Exploration and evaluation assets', 49), (' investment property ', 40), ('plant property equipment ', 34), (' property plant equipment ', 34), (' plant and equipment ', 33), (' oil and gas properties ', 29), (' property ', 26)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' Exploration and evaluation assets', 46), (' investment property ', 36), (' oil and gas properties ', 31), ('plant property equipment ', 30), (' property plant equipment ', 30), (' plant and equipment ', 29), (' property ', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment ', 91), (' property plant equipment ', 91), (' plant and equipment ', 77), (' oil and gas properties ', 70), (' investment property ', 62), (' property ', 50), (' Exploration and evaluation assets', 48)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' Exploration and evaluation assets', 38), (' investment property ', 33), ('plant property equipment ', 29), (' property plant equipment ', 29), (' plant and equipment ', 27), (' property ', 26), (' oil and gas properties ', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' Exploration and evaluation assets', 49), (' investment property ', 40), ('plant property equipment ', 34), (' property plant equipment ', 34), (' plant and equipment ', 33), (' oil and gas properties ', 29), (' property ', 26)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 91, 'value': 17138.0, 'line_item_label': ['Property, plant and equipment', 'Property, plant and equipment'], 'note_numbers': ['11', '11'], 'line_item_value': [8569.0, 8569.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['cost ', ' gross ', ' investment property ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction ', ' Mine infrastructure ', ' Assets under construction ', ' Capitalised pre stripping costs ', ' Other assets in progress ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Freehold land ', ' Buildings ', ' Subsea ', ' Marine  Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings ', ''] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none net book amount , res_fuzz_match = [('cost ', 50), (' Assets under construction ', 42), (' investment property ', 40), (' under construction ', 40), (' Mine infrastructure ', 39), (' Mining properties ', 38), (' Freehold land ', 38), (' Workshop tooling ', 38), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' Building & mine infrastructure ', 35), (' Marine  Development properties ', 35), (' Plant and equipment ', 33), (' Construction ', 33), (' land and improvement ', 33), (' Subsea ', 33), (' Capitalised pre stripping costs ', 31), (' Pipeline Asset ', 31), (' Leasehold buildings ', 27), (' Fishing vessels & equipment ', 24), (' Stripping WIP ', 22), (' gross ', 20), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), (' Freehold land and buildings ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' investment property ', 33), (' Construction ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), ('cost ', 25), (' Workshop tooling ', 23), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 opening net book amount , res_fuzz_match = [(' land and improvement ', 53), ('cost ', 50), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Workshop tooling ', 46), (' Marine  Development properties ', 45), (' Freehold land and buildings ', 43), (' Assets under construction ', 43), (' investment property ', 40), (' under construction ', 40), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Freehold land ', 38), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' Plant and equipment ', 33), (' Construction ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Building & mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Stripping WIP ', 22), (' gross ', 20), (' Buildings ', 20), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), (' Freehold land and buildings ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' investment property ', 33), (' Construction ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), ('cost ', 25), (' Workshop tooling ', 23), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 additions , res_fuzz_match = [(' land and improvement ', 47), (' Freehold land and buildings ', 45), (' Assets under construction ', 40), (' under construction ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' Capitalised pre stripping costs ', 36), (' Asset Retirement Obligation ', 35), (' Building & mine infrastructure ', 35), (' Marine  Development properties ', 35), (' Plant and equipment ', 33), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Other assets in progress ', 30), (' investment property ', 27), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' gross ', 20), (' Buildings ', 20), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), (' Freehold land and buildings ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' investment property ', 33), (' Construction ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), ('cost ', 25), (' Workshop tooling ', 23), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 depreciation charge , res_fuzz_match = [(' land and improvement ', 47), (' Mining properties ', 46), (' Freehold land ', 46), (' Marine  Development properties ', 45), (' Plant and equipment ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Assets under construction ', 39), (' Capitalised pre stripping costs ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' investment property ', 33), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Building & mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), ('cost ', 25), (' gross ', 20), (' Buildings ', 20), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), (' Freehold land and buildings ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' investment property ', 33), (' Construction ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), ('cost ', 25), (' Workshop tooling ', 23), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 closing net book amount , res_fuzz_match = [('cost ', 50), (' land and improvement ', 47), (' under construction ', 47), (' Workshop tooling ', 46), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' gross ', 40), (' investment property ', 40), (' Facilities ', 40), (' Freehold land and buildings ', 39), (' Freehold land ', 38), (' Other assets in progress ', 35), (' Fishing vessels & equipment ', 35), (' Plant and equipment ', 33), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Buildings ', 20), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), (' Freehold land and buildings ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' investment property ', 33), (' Construction ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), ('cost ', 25), (' Workshop tooling ', 23), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 cost , res_fuzz_match = [('cost ', 100), (' Assets under construction ', 60), (' Capitalised pre stripping costs ', 60), (' under construction ', 60), (' Construction ', 44), (' gross ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' Marine  Development properties ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' investment property ', 30), (' Freehold land and buildings ', 30), (' Asset Retirement Obligation ', 30), (' Other assets in progress ', 30), (' land and improvement ', 30), (' Mining properties ', 30), (' Freehold land ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings ', 30), (' Stripping WIP ', 22), (' Plant and equipment ', 20), (' Subsea ', 17), (' Buildings ', 0), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), (' Freehold land and buildings ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' investment property ', 33), (' Construction ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), ('cost ', 25), (' Workshop tooling ', 23), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 accumulated depreciation , res_fuzz_match = [(' Buildings ', 60), (' Mining properties ', 46), (' Marine  Development properties ', 43), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Other assets in progress ', 35), (' Fishing vessels & equipment ', 35), (' investment property ', 33), (' Freehold land and buildings ', 33), (' Plant and equipment ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' land and improvement ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Building & mine infrastructure ', 29), ('cost ', 25), (' Pipeline Asset ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' gross ', 20), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), (' Freehold land and buildings ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' investment property ', 33), (' Construction ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), ('cost ', 25), (' Workshop tooling ', 23), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 net book amount , res_fuzz_match = [('cost ', 50), (' Workshop tooling ', 46), (' Marine  Development properties ', 43), (' investment property ', 40), (' under construction ', 40), (' Facilities ', 40), (' Assets under construction ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), (' Mine infrastructure ', 35), (' Capitalised pre stripping costs ', 34), (' Freehold land and buildings ', 33), (' Plant and equipment ', 33), (' Construction ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Other assets in progress ', 30), (' Fishing vessels & equipment ', 29), (' Leasehold buildings ', 27), (' Pipeline Asset ', 23), (' Stripping WIP ', 22), (' gross ', 20), (' Buildings ', 20), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), (' Freehold land and buildings ', 44), (' Mine infrastructure ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' investment property ', 33), (' Construction ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), ('cost ', 25), (' Workshop tooling ', 23), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none net book amount , res_fuzz_match = [('cost ', 50), (' Assets under construction ', 42), (' investment property ', 40), (' under construction ', 40), (' Mine infrastructure ', 39), (' Mining properties ', 38), (' Freehold land ', 38), (' Workshop tooling ', 38), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' Building & mine infrastructure ', 35), (' Marine  Development properties ', 35), (' Plant and equipment ', 33), (' Construction ', 33), (' land and improvement ', 33), (' Subsea ', 33), (' Capitalised pre stripping costs ', 31), (' Pipeline Asset ', 31), (' Leasehold buildings ', 27), (' Fishing vessels & equipment ', 24), (' Stripping WIP ', 22), (' gross ', 20), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Mine infrastructure ', 39), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Workshop tooling ', 38), (' investment property ', 33), (' Construction ', 33), (' Pipeline Asset ', 31), (' Other assets in progress ', 30), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 opening net book amount , res_fuzz_match = [(' land and improvement ', 53), ('cost ', 50), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Workshop tooling ', 46), (' Marine  Development properties ', 45), (' Freehold land and buildings ', 43), (' Assets under construction ', 43), (' investment property ', 40), (' under construction ', 40), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Freehold land ', 38), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' Plant and equipment ', 33), (' Construction ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Building & mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Stripping WIP ', 22), (' gross ', 20), (' Buildings ', 20), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Mine infrastructure ', 39), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Workshop tooling ', 38), (' investment property ', 33), (' Construction ', 33), (' Pipeline Asset ', 31), (' Other assets in progress ', 30), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 additions , res_fuzz_match = [(' land and improvement ', 47), (' Freehold land and buildings ', 45), (' Assets under construction ', 40), (' under construction ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' Capitalised pre stripping costs ', 36), (' Asset Retirement Obligation ', 35), (' Building & mine infrastructure ', 35), (' Marine  Development properties ', 35), (' Plant and equipment ', 33), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Other assets in progress ', 30), (' investment property ', 27), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' gross ', 20), (' Buildings ', 20), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Mine infrastructure ', 39), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Workshop tooling ', 38), (' investment property ', 33), (' Construction ', 33), (' Pipeline Asset ', 31), (' Other assets in progress ', 30), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 depreciation charge , res_fuzz_match = [(' land and improvement ', 47), (' Mining properties ', 46), (' Freehold land ', 46), (' Marine  Development properties ', 45), (' Plant and equipment ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Assets under construction ', 39), (' Capitalised pre stripping costs ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' investment property ', 33), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Building & mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), ('cost ', 25), (' gross ', 20), (' Buildings ', 20), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Mine infrastructure ', 39), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Workshop tooling ', 38), (' investment property ', 33), (' Construction ', 33), (' Pipeline Asset ', 31), (' Other assets in progress ', 30), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 closing net book amount , res_fuzz_match = [('cost ', 50), (' land and improvement ', 47), (' under construction ', 47), (' Workshop tooling ', 46), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' gross ', 40), (' investment property ', 40), (' Facilities ', 40), (' Freehold land and buildings ', 39), (' Freehold land ', 38), (' Other assets in progress ', 35), (' Fishing vessels & equipment ', 35), (' Plant and equipment ', 33), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Buildings ', 20), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Mine infrastructure ', 39), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Workshop tooling ', 38), (' investment property ', 33), (' Construction ', 33), (' Pipeline Asset ', 31), (' Other assets in progress ', 30), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 cost , res_fuzz_match = [('cost ', 100), (' Assets under construction ', 60), (' Capitalised pre stripping costs ', 60), (' under construction ', 60), (' Construction ', 44), (' gross ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' Marine  Development properties ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' investment property ', 30), (' Freehold land and buildings ', 30), (' Asset Retirement Obligation ', 30), (' Other assets in progress ', 30), (' land and improvement ', 30), (' Mining properties ', 30), (' Freehold land ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings ', 30), (' Stripping WIP ', 22), (' Plant and equipment ', 20), (' Subsea ', 17), (' Buildings ', 0), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Mine infrastructure ', 39), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Workshop tooling ', 38), (' investment property ', 33), (' Construction ', 33), (' Pipeline Asset ', 31), (' Other assets in progress ', 30), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 accumulated depreciation , res_fuzz_match = [(' Buildings ', 60), (' Mining properties ', 46), (' Marine  Development properties ', 43), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Other assets in progress ', 35), (' Fishing vessels & equipment ', 35), (' investment property ', 33), (' Freehold land and buildings ', 33), (' Plant and equipment ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' land and improvement ', 33), (' under construction ', 33), (' Subsea ', 33), (' Leasehold buildings ', 33), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Building & mine infrastructure ', 29), ('cost ', 25), (' Pipeline Asset ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' gross ', 20), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Mine infrastructure ', 39), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Workshop tooling ', 38), (' investment property ', 33), (' Construction ', 33), (' Pipeline Asset ', 31), (' Other assets in progress ', 30), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 net book amount , res_fuzz_match = [('cost ', 50), (' Workshop tooling ', 46), (' Marine  Development properties ', 43), (' investment property ', 40), (' under construction ', 40), (' Facilities ', 40), (' Assets under construction ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), (' Mine infrastructure ', 35), (' Capitalised pre stripping costs ', 34), (' Freehold land and buildings ', 33), (' Plant and equipment ', 33), (' Construction ', 33), (' land and improvement ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Other assets in progress ', 30), (' Fishing vessels & equipment ', 29), (' Leasehold buildings ', 27), (' Pipeline Asset ', 23), (' Stripping WIP ', 22), (' gross ', 20), (' Buildings ', 20), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 53), (' Fishing vessels & equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Marine  Development properties ', 41), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Mine infrastructure ', 39), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Workshop tooling ', 38), (' investment property ', 33), (' Construction ', 33), (' Pipeline Asset ', 31), (' Other assets in progress ', 30), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 13], 'score': [100, 100], 'value': [111210.0, 111210.0], 'label': ['At: 31 March 2023 Cost', 'At: 31 March 2023 Cost'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none net book amount , res_fuzz_match = [('net book value', 85), ('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('accumulated depreciation', 40), ('net value', 38), ('net book value', 38), ('depreciatio', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 opening net book amount , res_fuzz_match = [('net book value', 85), ('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('accumulated depreciation', 40), ('net value', 38), ('net book value', 38), ('depreciatio', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 additions , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('accumulated depreciation', 40), ('net value', 38), ('net book value', 38), ('depreciatio', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 depreciation charge , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 67), ('net value', 38), ('net book value', 31)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('accumulated depreciation', 40), ('net value', 38), ('net book value', 38), ('depreciatio', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 closing net book amount , res_fuzz_match = [('net book value', 85), ('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('accumulated depreciation', 40), ('net value', 38), ('net book value', 38), ('depreciatio', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 cost , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 20), ('net value', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('accumulated depreciation', 40), ('net value', 38), ('net book value', 38), ('depreciatio', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38), ('net book value', 23)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('accumulated depreciation', 40), ('net value', 38), ('net book value', 38), ('depreciatio', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 net book amount , res_fuzz_match = [('net book value', 85), ('net value', 50), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ furniture, fittings and equipment $ furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('accumulated depreciation', 40), ('net value', 38), ('net book value', 38), ('depreciatio', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none net book amount , res_fuzz_match = [('net book value', 85), ('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 opening net book amount , res_fuzz_match = [('net book value', 85), ('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 additions , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 depreciation charge , res_fuzz_match = [('depreciatio', 73), ('accumulated depreciation', 67), ('net value', 38), ('net book value', 31)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = year ended 31 march 2023 closing net book amount , res_fuzz_match = [('net book value', 85), ('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 cost , res_fuzz_match = [('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 20), ('net value', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38), ('net book value', 23)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = 31 march 2023 net book amount , res_fuzz_match = [('net book value', 85), ('net value', 50), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = furniture, fittings and equipment $ total furniture, fittings and equipment $ 109,203 (98,455) 109,203 (98,455) , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 4, 6, 7, 8, 9, 12, 14, 15], 'score': [85, 85, 85, 100, 85, 85, 85, 85, 100, 85], 'value': [10748.0, 10748.0, 8569.0, -102641.0, 8569.0, 10748.0, 10748.0, 8569.0, -102641.0, 8569.0], 'label': ['None Net book amount', 'Year ended 31 March 2023 Opening net book amount', 'Year ended 31 March 2023 Closing net book amount', 'At: 31 March 2023 Accumulated depreciation', 'At: 31 March 2023 Net book amount', 'None Net book amount', 'Year ended 31 March 2023 Opening net book amount', 'Year ended 31 March 2023 Closing net book amount', 'At: 31 March 2023 Accumulated depreciation', 'At: 31 March 2023 Net book amount'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-18 14:48:52+0530 - sLogger - ERROR - error occured: cannot convert float NaN to integer
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables ', 46), (' unbilled ', 40), (' government subsidies receivable ', 38), (' trade and other receivables', 38), (' trade receivables ', 35), (' receivable ', 33), (' billed ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = trade receivables , res_fuzz_match = [(' trade receivables ', 100), (' receivable ', 100), (' trade and other receivables', 75), ('account receivables ', 67), (' government subsidies receivable ', 67), (' billed ', 25), (' unbilled ', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [(' trade and other receivables', 47), ('account receivables ', 44), (' trade receivables ', 42), (' government subsidies receivable ', 42), (' unbilled ', 40), (' receivable ', 33), (' billed ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables ', 46), (' unbilled ', 40), (' government subsidies receivable ', 38), (' trade and other receivables', 38), (' trade receivables ', 35), (' receivable ', 33), (' billed ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = trade receivables , res_fuzz_match = [(' trade receivables ', 100), (' receivable ', 100), (' trade and other receivables', 75), ('account receivables ', 67), (' government subsidies receivable ', 67), (' billed ', 25), (' unbilled ', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [(' trade and other receivables', 47), ('account receivables ', 44), (' trade receivables ', 42), (' government subsidies receivable ', 42), (' unbilled ', 40), (' receivable ', 33), (' billed ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 9], 'score': 100, 'value': 10042954.0, 'line_item_label': ['Trade receivables', 'Trade receivables'], 'note_numbers': ['8', '8'], 'line_item_value': [5021477.0, 5021477.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables ', 46), (' unbilled ', 40), (' government subsidies receivable ', 38), (' trade and other receivables', 38), (' trade receivables ', 35), (' receivable ', 33), (' billed ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = trade receivables , res_fuzz_match = [(' trade receivables ', 100), (' receivable ', 100), (' trade and other receivables', 75), ('account receivables ', 67), (' government subsidies receivable ', 67), (' billed ', 25), (' unbilled ', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [(' trade and other receivables', 47), ('account receivables ', 44), (' trade receivables ', 42), (' government subsidies receivable ', 42), (' unbilled ', 40), (' receivable ', 33), (' billed ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables ', 46), (' unbilled ', 40), (' government subsidies receivable ', 38), (' trade and other receivables', 38), (' trade receivables ', 35), (' receivable ', 33), (' billed ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = trade receivables , res_fuzz_match = [(' trade receivables ', 100), (' receivable ', 100), (' trade and other receivables', 75), ('account receivables ', 67), (' government subsidies receivable ', 67), (' billed ', 25), (' unbilled ', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other current assets , res_fuzz_match = [(' trade and other receivables', 47), ('account receivables ', 44), (' trade receivables ', 42), (' government subsidies receivable ', 42), (' unbilled ', 40), (' receivable ', 33), (' billed ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 9], 'score': 100, 'value': 12130220.0, 'line_item_label': ['Trade receivables', 'Trade receivables'], 'note_numbers': ['8', '8'], 'line_item_value': [6065110.0, 6065110.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' revenue from contracts with customers ', 100), (' revenue from continuing activities', 63), ('revenue from operations ', 50), (' from trading business ', 43), (' transmission and distribution business ', 33), (' Sales revenue ', 33), (' Revenue ', 32), (' Sale of coal ', 29), (' sale of products ', 27), (' net sales ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' sale of products ', 67), (' Sale of coal ', 67), (' net sales ', 59), (' Sales revenue ', 50), (' from trading business ', 33), ('revenue from operations ', 32), (' revenue from continuing activities', 24), (' transmission and distribution business ', 22), (' revenue from contracts with customers ', 20), (' Revenue ', 13)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' from trading business ', 46), ('revenue from operations ', 44), (' Sale of coal ', 40), (' revenue from contracts with customers ', 37), (' revenue from continuing activities', 33), (' net sales ', 32), (' Sales revenue ', 27), (' sale of products ', 26), (' transmission and distribution business ', 21), (' Revenue ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' net sales ', 45), (' from trading business ', 34), ('revenue from operations ', 33), (' sale of products ', 31), (' revenue from continuing activities', 31), (' revenue from contracts with customers ', 30), (' transmission and distribution business ', 29), (' Sale of coal ', 26), (' Sales revenue ', 24), (' Revenue ', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Revenue ', 50), (' Sales revenue ', 47), (' net sales ', 29), ('revenue from operations ', 27), (' sale of products ', 22), (' revenue from continuing activities', 19), (' revenue from contracts with customers ', 16), (' Sale of coal ', 13), (' transmission and distribution business ', 12), (' from trading business ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Sale of coal ', 61), (' net sales ', 55), (' sale of products ', 54), (' from trading business ', 41), (' Sales revenue ', 40), (' revenue from continuing activities', 36), (' revenue from contracts with customers ', 35), ('revenue from operations ', 33), (' transmission and distribution business ', 24), (' Revenue ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' Sale of coal ', 40), ('revenue from operations ', 37), (' revenue from contracts with customers ', 37), (' transmission and distribution business ', 36), (' sale of products ', 35), (' revenue from continuing activities', 33), (' net sales ', 32), (' from trading business ', 31), (' Sales revenue ', 27), (' Revenue ', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Sale of coal ', 48), (' from trading business ', 39), (' revenue from contracts with customers ', 38), (' sale of products ', 36), (' net sales ', 33), (' Sales revenue ', 30), (' revenue from continuing activities', 29), (' transmission and distribution business ', 27), ('revenue from operations ', 19), (' Revenue ', 9)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' net sales ', 52), (' Sales revenue ', 38), (' from trading business ', 33), (' sale of products ', 30), ('revenue from operations ', 26), (' revenue from contracts with customers ', 26), (' Sale of coal ', 25), (' revenue from continuing activities', 25), (' transmission and distribution business ', 23), (' Revenue ', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' transmission and distribution business ', 38), (' revenue from continuing activities', 29), (' from trading business ', 25), (' net sales ', 24), (' revenue from contracts with customers ', 24), (' Sale of coal ', 22), (' Sales revenue ', 20), (' sale of products ', 19), ('revenue from operations ', 16), (' Revenue ', 13)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Sale of coal ', 40), (' sale of products ', 35), (' revenue from contracts with customers ', 33), (' revenue from continuing activities', 33), (' net sales ', 32), (' from trading business ', 31), (' transmission and distribution business ', 26), ('revenue from operations ', 22), (' Sales revenue ', 18), (' Revenue ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' from trading business ', 43), ('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' transmission and distribution business ', 36), (' sale of products ', 35), (' revenue from continuing activities', 30), (' net sales ', 27), (' Sale of coal ', 26), (' Sales revenue ', 24), (' Revenue ', 14)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' from trading business ', 45), (' Sales revenue ', 37), (' transmission and distribution business ', 32), (' Sale of coal ', 32), (' sale of products ', 29), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), (' Revenue ', 27), ('revenue from operations ', 25), (' net sales ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations ', 46), (' sale of products ', 39), (' from trading business ', 35), (' revenue from continuing activities', 32), (' revenue from contracts with customers ', 31), (' transmission and distribution business ', 30), (' Sales revenue ', 27), (' Revenue ', 24), (' net sales ', 22), (' Sale of coal ', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' from trading business ', 38), (' revenue from continuing activities', 38), ('revenue from operations ', 37), (' Sales revenue ', 36), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' Sale of coal ', 26), (' net sales ', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('revenue from operations ', 42), (' transmission and distribution business ', 38), (' revenue from continuing activities', 36), (' from trading business ', 35), (' revenue from contracts with customers ', 32), (' Sales revenue ', 30), (' net sales ', 23), (' Sale of coal ', 22), (' sale of products ', 21), (' Revenue ', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' from trading business ', 40), (' revenue from contracts with customers ', 39), (' sale of products ', 38), (' revenue from continuing activities', 37), (' Sales revenue ', 35), ('revenue from operations ', 31), (' transmission and distribution business ', 29), (' net sales ', 28), (' Sale of coal ', 27), (' Revenue ', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' revenue from contracts with customers ', 100), (' revenue from continuing activities', 63), ('revenue from operations ', 50), (' from trading business ', 43), (' transmission and distribution business ', 33), (' Sales revenue ', 33), (' Revenue ', 32), (' Sale of coal ', 29), (' sale of products ', 27), (' net sales ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' sale of products ', 67), (' Sale of coal ', 67), (' net sales ', 59), (' Sales revenue ', 50), (' from trading business ', 33), ('revenue from operations ', 32), (' revenue from continuing activities', 24), (' transmission and distribution business ', 22), (' revenue from contracts with customers ', 20), (' Revenue ', 13)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' from trading business ', 46), ('revenue from operations ', 44), (' Sale of coal ', 40), (' revenue from contracts with customers ', 37), (' revenue from continuing activities', 33), (' net sales ', 32), (' Sales revenue ', 27), (' sale of products ', 26), (' transmission and distribution business ', 21), (' Revenue ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' net sales ', 45), (' from trading business ', 34), ('revenue from operations ', 33), (' sale of products ', 31), (' revenue from continuing activities', 31), (' revenue from contracts with customers ', 30), (' transmission and distribution business ', 29), (' Sale of coal ', 26), (' Sales revenue ', 24), (' Revenue ', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Revenue ', 50), (' Sales revenue ', 47), (' net sales ', 29), ('revenue from operations ', 27), (' sale of products ', 22), (' revenue from continuing activities', 19), (' revenue from contracts with customers ', 16), (' Sale of coal ', 13), (' transmission and distribution business ', 12), (' from trading business ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Sale of coal ', 61), (' net sales ', 55), (' sale of products ', 54), (' from trading business ', 41), (' Sales revenue ', 40), (' revenue from continuing activities', 36), (' revenue from contracts with customers ', 35), ('revenue from operations ', 33), (' transmission and distribution business ', 24), (' Revenue ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' Sale of coal ', 40), ('revenue from operations ', 37), (' revenue from contracts with customers ', 37), (' transmission and distribution business ', 36), (' sale of products ', 35), (' revenue from continuing activities', 33), (' net sales ', 32), (' from trading business ', 31), (' Sales revenue ', 27), (' Revenue ', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Sale of coal ', 48), (' from trading business ', 39), (' revenue from contracts with customers ', 38), (' sale of products ', 36), (' net sales ', 33), (' Sales revenue ', 30), (' revenue from continuing activities', 29), (' transmission and distribution business ', 27), ('revenue from operations ', 19), (' Revenue ', 9)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' net sales ', 52), (' Sales revenue ', 38), (' from trading business ', 33), (' sale of products ', 30), ('revenue from operations ', 26), (' revenue from contracts with customers ', 26), (' Sale of coal ', 25), (' revenue from continuing activities', 25), (' transmission and distribution business ', 23), (' Revenue ', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' transmission and distribution business ', 38), (' revenue from continuing activities', 29), (' from trading business ', 25), (' net sales ', 24), (' revenue from contracts with customers ', 24), (' Sale of coal ', 22), (' Sales revenue ', 20), (' sale of products ', 19), ('revenue from operations ', 16), (' Revenue ', 13)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Sale of coal ', 40), (' sale of products ', 35), (' revenue from contracts with customers ', 33), (' revenue from continuing activities', 33), (' net sales ', 32), (' from trading business ', 31), (' transmission and distribution business ', 26), ('revenue from operations ', 22), (' Sales revenue ', 18), (' Revenue ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' from trading business ', 43), ('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' transmission and distribution business ', 36), (' sale of products ', 35), (' revenue from continuing activities', 30), (' net sales ', 27), (' Sale of coal ', 26), (' Sales revenue ', 24), (' Revenue ', 14)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' from trading business ', 45), (' Sales revenue ', 37), (' transmission and distribution business ', 32), (' Sale of coal ', 32), (' sale of products ', 29), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), (' Revenue ', 27), ('revenue from operations ', 25), (' net sales ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations ', 46), (' sale of products ', 39), (' from trading business ', 35), (' revenue from continuing activities', 32), (' revenue from contracts with customers ', 31), (' transmission and distribution business ', 30), (' Sales revenue ', 27), (' Revenue ', 24), (' net sales ', 22), (' Sale of coal ', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' from trading business ', 38), (' revenue from continuing activities', 38), ('revenue from operations ', 37), (' Sales revenue ', 36), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' Sale of coal ', 26), (' net sales ', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('revenue from operations ', 42), (' transmission and distribution business ', 38), (' revenue from continuing activities', 36), (' from trading business ', 35), (' revenue from contracts with customers ', 32), (' Sales revenue ', 30), (' net sales ', 23), (' Sale of coal ', 22), (' sale of products ', 21), (' Revenue ', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' from trading business ', 40), (' revenue from contracts with customers ', 39), (' sale of products ', 38), (' revenue from continuing activities', 37), (' Sales revenue ', 35), ('revenue from operations ', 31), (' transmission and distribution business ', 29), (' net sales ', 28), (' Sale of coal ', 27), (' Revenue ', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 17], 'score': 100, 'value': 0.0, 'line_item_label': ['Revenue from contracts with customers', 'Revenue from contracts with customers'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 0.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' revenue from contracts with customers ', 100), (' revenue from continuing activities', 63), ('revenue from operations ', 50), (' from trading business ', 43), (' transmission and distribution business ', 33), (' Sales revenue ', 33), (' Revenue ', 32), (' Sale of coal ', 29), (' sale of products ', 27), (' net sales ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' sale of products ', 67), (' Sale of coal ', 67), (' net sales ', 59), (' Sales revenue ', 50), (' from trading business ', 33), ('revenue from operations ', 32), (' revenue from continuing activities', 24), (' transmission and distribution business ', 22), (' revenue from contracts with customers ', 20), (' Revenue ', 13)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' from trading business ', 46), ('revenue from operations ', 44), (' Sale of coal ', 40), (' revenue from contracts with customers ', 37), (' revenue from continuing activities', 33), (' net sales ', 32), (' Sales revenue ', 27), (' sale of products ', 26), (' transmission and distribution business ', 21), (' Revenue ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' net sales ', 45), (' from trading business ', 34), ('revenue from operations ', 33), (' sale of products ', 31), (' revenue from continuing activities', 31), (' revenue from contracts with customers ', 30), (' transmission and distribution business ', 29), (' Sale of coal ', 26), (' Sales revenue ', 24), (' Revenue ', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Revenue ', 50), (' Sales revenue ', 47), (' net sales ', 29), ('revenue from operations ', 27), (' sale of products ', 22), (' revenue from continuing activities', 19), (' revenue from contracts with customers ', 16), (' Sale of coal ', 13), (' transmission and distribution business ', 12), (' from trading business ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Sale of coal ', 61), (' net sales ', 55), (' sale of products ', 54), (' from trading business ', 41), (' Sales revenue ', 40), (' revenue from continuing activities', 36), (' revenue from contracts with customers ', 35), ('revenue from operations ', 33), (' transmission and distribution business ', 24), (' Revenue ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' Sale of coal ', 40), ('revenue from operations ', 37), (' revenue from contracts with customers ', 37), (' transmission and distribution business ', 36), (' sale of products ', 35), (' revenue from continuing activities', 33), (' net sales ', 32), (' from trading business ', 31), (' Sales revenue ', 27), (' Revenue ', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Sale of coal ', 48), (' from trading business ', 39), (' revenue from contracts with customers ', 38), (' sale of products ', 36), (' net sales ', 33), (' Sales revenue ', 30), (' revenue from continuing activities', 29), (' transmission and distribution business ', 27), ('revenue from operations ', 19), (' Revenue ', 9)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' net sales ', 52), (' Sales revenue ', 38), (' from trading business ', 33), (' sale of products ', 30), ('revenue from operations ', 26), (' revenue from contracts with customers ', 26), (' Sale of coal ', 25), (' revenue from continuing activities', 25), (' transmission and distribution business ', 23), (' Revenue ', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' transmission and distribution business ', 38), (' revenue from continuing activities', 29), (' from trading business ', 25), (' net sales ', 24), (' revenue from contracts with customers ', 24), (' Sale of coal ', 22), (' Sales revenue ', 20), (' sale of products ', 19), ('revenue from operations ', 16), (' Revenue ', 13)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Sale of coal ', 40), (' sale of products ', 35), (' revenue from contracts with customers ', 33), (' revenue from continuing activities', 33), (' net sales ', 32), (' from trading business ', 31), (' transmission and distribution business ', 26), ('revenue from operations ', 22), (' Sales revenue ', 18), (' Revenue ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' from trading business ', 43), ('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' transmission and distribution business ', 36), (' sale of products ', 35), (' revenue from continuing activities', 30), (' net sales ', 27), (' Sale of coal ', 26), (' Sales revenue ', 24), (' Revenue ', 14)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' from trading business ', 45), (' Sales revenue ', 37), (' transmission and distribution business ', 32), (' Sale of coal ', 32), (' sale of products ', 29), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), (' Revenue ', 27), ('revenue from operations ', 25), (' net sales ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations ', 46), (' sale of products ', 39), (' from trading business ', 35), (' revenue from continuing activities', 32), (' revenue from contracts with customers ', 31), (' transmission and distribution business ', 30), (' Sales revenue ', 27), (' Revenue ', 24), (' net sales ', 22), (' Sale of coal ', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' from trading business ', 38), (' revenue from continuing activities', 38), ('revenue from operations ', 37), (' Sales revenue ', 36), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' Sale of coal ', 26), (' net sales ', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('revenue from operations ', 42), (' transmission and distribution business ', 38), (' revenue from continuing activities', 36), (' from trading business ', 35), (' revenue from contracts with customers ', 32), (' Sales revenue ', 30), (' net sales ', 23), (' Sale of coal ', 22), (' sale of products ', 21), (' Revenue ', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' from trading business ', 40), (' revenue from contracts with customers ', 39), (' sale of products ', 38), (' revenue from continuing activities', 37), (' Sales revenue ', 35), ('revenue from operations ', 31), (' transmission and distribution business ', 29), (' net sales ', 28), (' Sale of coal ', 27), (' Revenue ', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' revenue from contracts with customers ', 100), (' revenue from continuing activities', 63), ('revenue from operations ', 50), (' from trading business ', 43), (' transmission and distribution business ', 33), (' Sales revenue ', 33), (' Revenue ', 32), (' Sale of coal ', 29), (' sale of products ', 27), (' net sales ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' sale of products ', 67), (' Sale of coal ', 67), (' net sales ', 59), (' Sales revenue ', 50), (' from trading business ', 33), ('revenue from operations ', 32), (' revenue from continuing activities', 24), (' transmission and distribution business ', 22), (' revenue from contracts with customers ', 20), (' Revenue ', 13)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' from trading business ', 46), ('revenue from operations ', 44), (' Sale of coal ', 40), (' revenue from contracts with customers ', 37), (' revenue from continuing activities', 33), (' net sales ', 32), (' Sales revenue ', 27), (' sale of products ', 26), (' transmission and distribution business ', 21), (' Revenue ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' net sales ', 45), (' from trading business ', 34), ('revenue from operations ', 33), (' sale of products ', 31), (' revenue from continuing activities', 31), (' revenue from contracts with customers ', 30), (' transmission and distribution business ', 29), (' Sale of coal ', 26), (' Sales revenue ', 24), (' Revenue ', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Revenue ', 50), (' Sales revenue ', 47), (' net sales ', 29), ('revenue from operations ', 27), (' sale of products ', 22), (' revenue from continuing activities', 19), (' revenue from contracts with customers ', 16), (' Sale of coal ', 13), (' transmission and distribution business ', 12), (' from trading business ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Sale of coal ', 61), (' net sales ', 55), (' sale of products ', 54), (' from trading business ', 41), (' Sales revenue ', 40), (' revenue from continuing activities', 36), (' revenue from contracts with customers ', 35), ('revenue from operations ', 33), (' transmission and distribution business ', 24), (' Revenue ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' Sale of coal ', 40), ('revenue from operations ', 37), (' revenue from contracts with customers ', 37), (' transmission and distribution business ', 36), (' sale of products ', 35), (' revenue from continuing activities', 33), (' net sales ', 32), (' from trading business ', 31), (' Sales revenue ', 27), (' Revenue ', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Sale of coal ', 48), (' from trading business ', 39), (' revenue from contracts with customers ', 38), (' sale of products ', 36), (' net sales ', 33), (' Sales revenue ', 30), (' revenue from continuing activities', 29), (' transmission and distribution business ', 27), ('revenue from operations ', 19), (' Revenue ', 9)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' net sales ', 52), (' Sales revenue ', 38), (' from trading business ', 33), (' sale of products ', 30), ('revenue from operations ', 26), (' revenue from contracts with customers ', 26), (' Sale of coal ', 25), (' revenue from continuing activities', 25), (' transmission and distribution business ', 23), (' Revenue ', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' transmission and distribution business ', 38), (' revenue from continuing activities', 29), (' from trading business ', 25), (' net sales ', 24), (' revenue from contracts with customers ', 24), (' Sale of coal ', 22), (' Sales revenue ', 20), (' sale of products ', 19), ('revenue from operations ', 16), (' Revenue ', 13)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Sale of coal ', 40), (' sale of products ', 35), (' revenue from contracts with customers ', 33), (' revenue from continuing activities', 33), (' net sales ', 32), (' from trading business ', 31), (' transmission and distribution business ', 26), ('revenue from operations ', 22), (' Sales revenue ', 18), (' Revenue ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' from trading business ', 43), ('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' transmission and distribution business ', 36), (' sale of products ', 35), (' revenue from continuing activities', 30), (' net sales ', 27), (' Sale of coal ', 26), (' Sales revenue ', 24), (' Revenue ', 14)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' from trading business ', 45), (' Sales revenue ', 37), (' transmission and distribution business ', 32), (' Sale of coal ', 32), (' sale of products ', 29), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), (' Revenue ', 27), ('revenue from operations ', 25), (' net sales ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations ', 46), (' sale of products ', 39), (' from trading business ', 35), (' revenue from continuing activities', 32), (' revenue from contracts with customers ', 31), (' transmission and distribution business ', 30), (' Sales revenue ', 27), (' Revenue ', 24), (' net sales ', 22), (' Sale of coal ', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' from trading business ', 38), (' revenue from continuing activities', 38), ('revenue from operations ', 37), (' Sales revenue ', 36), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' Sale of coal ', 26), (' net sales ', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('revenue from operations ', 42), (' transmission and distribution business ', 38), (' revenue from continuing activities', 36), (' from trading business ', 35), (' revenue from contracts with customers ', 32), (' Sales revenue ', 30), (' net sales ', 23), (' Sale of coal ', 22), (' sale of products ', 21), (' Revenue ', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' from trading business ', 40), (' revenue from contracts with customers ', 39), (' sale of products ', 38), (' revenue from continuing activities', 37), (' Sales revenue ', 35), ('revenue from operations ', 31), (' transmission and distribution business ', 29), (' net sales ', 28), (' Sale of coal ', 27), (' Revenue ', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 17], 'score': 100, 'value': 0.0, 'line_item_label': ['Revenue from contracts with customers', 'Revenue from contracts with customers'], 'note_numbers': [nan, nan], 'line_item_value': [0.0, 0.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['Included in cost of sales ', ' cost of goods']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' cost of coal sold', 39), (' Cost of goods and services sold', 39), (' Cost of product sold', 37), (' Cost of inventory sold', 35), (' Personnel costs', 35), ('purchase of stock-in-trade', 31), (' cost of goods sold ', 30), (' change in inventory', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('cost of sales', 67), ('Cost of sales', 67), (' cost of goods sold ', 61), (' Cost of product sold', 46), (' cost of coal sold', 43), (' Cost of goods and services sold', 41), (' Cost of inventory sold', 36), (' Personnel costs', 35), ('total expenditure', 32), ('total expenses', 29), (' change in inventory', 25), ('purchase of stock-in-trade', 21), ('expense', 13), ('expenditure', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), ('total expenses', 35), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' cost of goods sold ', 32), (' change in inventory', 31), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' Cost of inventory sold', 48), ('cost of sales', 43), ('Cost of sales', 43), (' cost of coal sold', 43), (' Personnel costs', 43), (' change in inventory', 41), (' Cost of product sold', 39), ('total expenses', 38), ('purchase of stock-in-trade', 36), (' Cost of goods and services sold', 36), (' cost of goods sold ', 36), ('total expenditure', 33), ('expenditure', 25), ('expense', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), (' Personnel costs', 30), (' Cost of inventory sold', 24), (' change in inventory', 19), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 10), (' cost of goods sold ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' cost of goods sold ', 86), ('cost of sales', 78), ('Cost of sales', 78), (' Cost of product sold', 65), (' Cost of goods and services sold', 62), (' Cost of inventory sold', 55), (' cost of coal sold', 50), (' Personnel costs', 50), ('total expenses', 38), ('total expenditure', 33), ('purchase of stock-in-trade', 30), (' change in inventory', 28), ('expense', 10), ('expenditure', 8)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' Personnel costs', 64), ('cost of sales', 60), ('Cost of sales', 60), (' Cost of product sold', 57), (' Cost of inventory sold', 53), (' cost of coal sold', 48), (' cost of goods sold ', 48), (' Cost of goods and services sold', 44), ('expense', 35), (' change in inventory', 31), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('total expenditure', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [('cost of sales', 56), ('Cost of sales', 56), (' cost of goods sold ', 53), (' Cost of inventory sold', 46), (' Cost of product sold', 42), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' change in inventory', 39), ('purchase of stock-in-trade', 34), ('total expenses', 29), ('total expenditure', 25), ('expense', 18), ('expenditure', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('total expenditure', 39), (' Personnel costs', 34), ('cost of sales', 33), ('Cost of sales', 33), ('expenditure', 32), ('total expenses', 30), ('expense', 29), (' Cost of inventory sold', 29), (' change in inventory', 27), (' Cost of product sold', 25), (' Cost of goods and services sold', 25), (' cost of coal sold', 21), (' cost of goods sold ', 21), ('purchase of stock-in-trade', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [('expenditure', 42), (' change in inventory', 42), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('total expenses', 29), (' Cost of goods and services sold', 29), (' Cost of inventory sold', 29), ('expense', 27), (' cost of coal sold', 26), (' Personnel costs', 26), (' Cost of product sold', 23), ('cost of sales', 22), ('Cost of sales', 22), (' cost of goods sold ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Cost of inventory sold', 53), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), (' change in inventory', 38), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Cost of product sold', 41), (' Cost of inventory sold', 39), ('total expenditure', 37), ('total expenses', 35), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), (' Cost of goods and services sold', 30), (' cost of goods sold ', 28), ('expenditure', 25), ('expense', 14)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), (' Cost of goods and services sold', 29), (' cost of coal sold', 27), (' Personnel costs', 27), (' cost of goods sold ', 27), (' Cost of product sold', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), (' cost of goods sold ', 24), (' change in inventory', 24), ('expense', 16)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' change in inventory', 43), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), (' cost of goods sold ', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' change in inventory', 43), ('purchase of stock-in-trade', 40), ('total expenses', 38), (' Cost of goods and services sold', 36), ('total expenditure', 35), (' Cost of inventory sold', 33), (' Personnel costs', 32), (' Cost of product sold', 30), ('expense', 29), (' cost of coal sold', 28), (' cost of goods sold ', 28), ('expenditure', 26), ('cost of sales', 22), ('Cost of sales', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('total expenses', 43), ('total expenditure', 43), (' change in inventory', 40), (' Cost of product sold', 38), ('purchase of stock-in-trade', 37), (' cost of coal sold', 37), (' Cost of goods and services sold', 37), (' Cost of inventory sold', 37), (' Personnel costs', 37), (' cost of goods sold ', 37), ('cost of sales', 36), ('Cost of sales', 36), ('expenditure', 27), ('expense', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' cost of coal sold', 39), (' Cost of goods and services sold', 39), (' Cost of product sold', 37), (' Cost of inventory sold', 35), (' Personnel costs', 35), ('purchase of stock-in-trade', 31), (' cost of goods sold ', 30), (' change in inventory', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('cost of sales', 67), ('Cost of sales', 67), (' cost of goods sold ', 61), (' Cost of product sold', 46), (' cost of coal sold', 43), (' Cost of goods and services sold', 41), (' Cost of inventory sold', 36), (' Personnel costs', 35), ('total expenditure', 32), ('total expenses', 29), (' change in inventory', 25), ('purchase of stock-in-trade', 21), ('expense', 13), ('expenditure', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), ('total expenses', 35), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' cost of goods sold ', 32), (' change in inventory', 31), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' Cost of inventory sold', 48), ('cost of sales', 43), ('Cost of sales', 43), (' cost of coal sold', 43), (' Personnel costs', 43), (' change in inventory', 41), (' Cost of product sold', 39), ('total expenses', 38), ('purchase of stock-in-trade', 36), (' Cost of goods and services sold', 36), (' cost of goods sold ', 36), ('total expenditure', 33), ('expenditure', 25), ('expense', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), (' Personnel costs', 30), (' Cost of inventory sold', 24), (' change in inventory', 19), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 10), (' cost of goods sold ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' cost of goods sold ', 86), ('cost of sales', 78), ('Cost of sales', 78), (' Cost of product sold', 65), (' Cost of goods and services sold', 62), (' Cost of inventory sold', 55), (' cost of coal sold', 50), (' Personnel costs', 50), ('total expenses', 38), ('total expenditure', 33), ('purchase of stock-in-trade', 30), (' change in inventory', 28), ('expense', 10), ('expenditure', 8)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' Personnel costs', 64), ('cost of sales', 60), ('Cost of sales', 60), (' Cost of product sold', 57), (' Cost of inventory sold', 53), (' cost of coal sold', 48), (' cost of goods sold ', 48), (' Cost of goods and services sold', 44), ('expense', 35), (' change in inventory', 31), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('total expenditure', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [('cost of sales', 56), ('Cost of sales', 56), (' cost of goods sold ', 53), (' Cost of inventory sold', 46), (' Cost of product sold', 42), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' change in inventory', 39), ('purchase of stock-in-trade', 34), ('total expenses', 29), ('total expenditure', 25), ('expense', 18), ('expenditure', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('total expenditure', 39), (' Personnel costs', 34), ('cost of sales', 33), ('Cost of sales', 33), ('expenditure', 32), ('total expenses', 30), ('expense', 29), (' Cost of inventory sold', 29), (' change in inventory', 27), (' Cost of product sold', 25), (' Cost of goods and services sold', 25), (' cost of coal sold', 21), (' cost of goods sold ', 21), ('purchase of stock-in-trade', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [('expenditure', 42), (' change in inventory', 42), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('total expenses', 29), (' Cost of goods and services sold', 29), (' Cost of inventory sold', 29), ('expense', 27), (' cost of coal sold', 26), (' Personnel costs', 26), (' Cost of product sold', 23), ('cost of sales', 22), ('Cost of sales', 22), (' cost of goods sold ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Cost of inventory sold', 53), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), (' change in inventory', 38), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Cost of product sold', 41), (' Cost of inventory sold', 39), ('total expenditure', 37), ('total expenses', 35), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), (' Cost of goods and services sold', 30), (' cost of goods sold ', 28), ('expenditure', 25), ('expense', 14)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), (' Cost of goods and services sold', 29), (' cost of coal sold', 27), (' Personnel costs', 27), (' cost of goods sold ', 27), (' Cost of product sold', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), (' cost of goods sold ', 24), (' change in inventory', 24), ('expense', 16)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' change in inventory', 43), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), (' cost of goods sold ', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' change in inventory', 43), ('purchase of stock-in-trade', 40), ('total expenses', 38), (' Cost of goods and services sold', 36), ('total expenditure', 35), (' Cost of inventory sold', 33), (' Personnel costs', 32), (' Cost of product sold', 30), ('expense', 29), (' cost of coal sold', 28), (' cost of goods sold ', 28), ('expenditure', 26), ('cost of sales', 22), ('Cost of sales', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('total expenses', 43), ('total expenditure', 43), (' change in inventory', 40), (' Cost of product sold', 38), ('purchase of stock-in-trade', 37), (' cost of coal sold', 37), (' Cost of goods and services sold', 37), (' Cost of inventory sold', 37), (' Personnel costs', 37), (' cost of goods sold ', 37), ('cost of sales', 36), ('Cost of sales', 36), ('expenditure', 27), ('expense', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 5, 21, 22], 'score': 86, 'value': -238284074.0, 'line_item_label': ['Expenses', 'Cost of sales of goods', 'Expenses', 'Cost of sales of goods'], 'note_numbers': [nan, nan, nan, nan], 'line_item_value': [0.0, -119142037.0, 0.0, -119142037.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' cost of coal sold', 39), (' Cost of goods and services sold', 39), (' Cost of product sold', 37), (' Cost of inventory sold', 35), (' Personnel costs', 35), ('purchase of stock-in-trade', 31), (' cost of goods sold ', 30), (' change in inventory', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('cost of sales', 67), ('Cost of sales', 67), (' cost of goods sold ', 61), (' Cost of product sold', 46), (' cost of coal sold', 43), (' Cost of goods and services sold', 41), (' Cost of inventory sold', 36), (' Personnel costs', 35), ('total expenditure', 32), ('total expenses', 29), (' change in inventory', 25), ('purchase of stock-in-trade', 21), ('expense', 13), ('expenditure', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), ('total expenses', 35), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' cost of goods sold ', 32), (' change in inventory', 31), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' Cost of inventory sold', 48), ('cost of sales', 43), ('Cost of sales', 43), (' cost of coal sold', 43), (' Personnel costs', 43), (' change in inventory', 41), (' Cost of product sold', 39), ('total expenses', 38), ('purchase of stock-in-trade', 36), (' Cost of goods and services sold', 36), (' cost of goods sold ', 36), ('total expenditure', 33), ('expenditure', 25), ('expense', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), (' Personnel costs', 30), (' Cost of inventory sold', 24), (' change in inventory', 19), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 10), (' cost of goods sold ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' cost of goods sold ', 86), ('cost of sales', 78), ('Cost of sales', 78), (' Cost of product sold', 65), (' Cost of goods and services sold', 62), (' Cost of inventory sold', 55), (' cost of coal sold', 50), (' Personnel costs', 50), ('total expenses', 38), ('total expenditure', 33), ('purchase of stock-in-trade', 30), (' change in inventory', 28), ('expense', 10), ('expenditure', 8)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' Personnel costs', 64), ('cost of sales', 60), ('Cost of sales', 60), (' Cost of product sold', 57), (' Cost of inventory sold', 53), (' cost of coal sold', 48), (' cost of goods sold ', 48), (' Cost of goods and services sold', 44), ('expense', 35), (' change in inventory', 31), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('total expenditure', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [('cost of sales', 56), ('Cost of sales', 56), (' cost of goods sold ', 53), (' Cost of inventory sold', 46), (' Cost of product sold', 42), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' change in inventory', 39), ('purchase of stock-in-trade', 34), ('total expenses', 29), ('total expenditure', 25), ('expense', 18), ('expenditure', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('total expenditure', 39), (' Personnel costs', 34), ('cost of sales', 33), ('Cost of sales', 33), ('expenditure', 32), ('total expenses', 30), ('expense', 29), (' Cost of inventory sold', 29), (' change in inventory', 27), (' Cost of product sold', 25), (' Cost of goods and services sold', 25), (' cost of coal sold', 21), (' cost of goods sold ', 21), ('purchase of stock-in-trade', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [('expenditure', 42), (' change in inventory', 42), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('total expenses', 29), (' Cost of goods and services sold', 29), (' Cost of inventory sold', 29), ('expense', 27), (' cost of coal sold', 26), (' Personnel costs', 26), (' Cost of product sold', 23), ('cost of sales', 22), ('Cost of sales', 22), (' cost of goods sold ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Cost of inventory sold', 53), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), (' change in inventory', 38), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Cost of product sold', 41), (' Cost of inventory sold', 39), ('total expenditure', 37), ('total expenses', 35), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), (' Cost of goods and services sold', 30), (' cost of goods sold ', 28), ('expenditure', 25), ('expense', 14)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), (' Cost of goods and services sold', 29), (' cost of coal sold', 27), (' Personnel costs', 27), (' cost of goods sold ', 27), (' Cost of product sold', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), (' cost of goods sold ', 24), (' change in inventory', 24), ('expense', 16)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' change in inventory', 43), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), (' cost of goods sold ', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' change in inventory', 43), ('purchase of stock-in-trade', 40), ('total expenses', 38), (' Cost of goods and services sold', 36), ('total expenditure', 35), (' Cost of inventory sold', 33), (' Personnel costs', 32), (' Cost of product sold', 30), ('expense', 29), (' cost of coal sold', 28), (' cost of goods sold ', 28), ('expenditure', 26), ('cost of sales', 22), ('Cost of sales', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('total expenses', 43), ('total expenditure', 43), (' change in inventory', 40), (' Cost of product sold', 38), ('purchase of stock-in-trade', 37), (' cost of coal sold', 37), (' Cost of goods and services sold', 37), (' Cost of inventory sold', 37), (' Personnel costs', 37), (' cost of goods sold ', 37), ('cost of sales', 36), ('Cost of sales', 36), ('expenditure', 27), ('expense', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' cost of coal sold', 39), (' Cost of goods and services sold', 39), (' Cost of product sold', 37), (' Cost of inventory sold', 35), (' Personnel costs', 35), ('purchase of stock-in-trade', 31), (' cost of goods sold ', 30), (' change in inventory', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('cost of sales', 67), ('Cost of sales', 67), (' cost of goods sold ', 61), (' Cost of product sold', 46), (' cost of coal sold', 43), (' Cost of goods and services sold', 41), (' Cost of inventory sold', 36), (' Personnel costs', 35), ('total expenditure', 32), ('total expenses', 29), (' change in inventory', 25), ('purchase of stock-in-trade', 21), ('expense', 13), ('expenditure', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), ('total expenses', 35), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' cost of goods sold ', 32), (' change in inventory', 31), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' Cost of inventory sold', 48), ('cost of sales', 43), ('Cost of sales', 43), (' cost of coal sold', 43), (' Personnel costs', 43), (' change in inventory', 41), (' Cost of product sold', 39), ('total expenses', 38), ('purchase of stock-in-trade', 36), (' Cost of goods and services sold', 36), (' cost of goods sold ', 36), ('total expenditure', 33), ('expenditure', 25), ('expense', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), (' Personnel costs', 30), (' Cost of inventory sold', 24), (' change in inventory', 19), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 10), (' cost of goods sold ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' cost of goods sold ', 86), ('cost of sales', 78), ('Cost of sales', 78), (' Cost of product sold', 65), (' Cost of goods and services sold', 62), (' Cost of inventory sold', 55), (' cost of coal sold', 50), (' Personnel costs', 50), ('total expenses', 38), ('total expenditure', 33), ('purchase of stock-in-trade', 30), (' change in inventory', 28), ('expense', 10), ('expenditure', 8)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' Personnel costs', 64), ('cost of sales', 60), ('Cost of sales', 60), (' Cost of product sold', 57), (' Cost of inventory sold', 53), (' cost of coal sold', 48), (' cost of goods sold ', 48), (' Cost of goods and services sold', 44), ('expense', 35), (' change in inventory', 31), ('expenditure', 29), ('purchase of stock-in-trade', 27), ('total expenses', 26), ('total expenditure', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [('cost of sales', 56), ('Cost of sales', 56), (' cost of goods sold ', 53), (' Cost of inventory sold', 46), (' Cost of product sold', 42), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' change in inventory', 39), ('purchase of stock-in-trade', 34), ('total expenses', 29), ('total expenditure', 25), ('expense', 18), ('expenditure', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('total expenditure', 39), (' Personnel costs', 34), ('cost of sales', 33), ('Cost of sales', 33), ('expenditure', 32), ('total expenses', 30), ('expense', 29), (' Cost of inventory sold', 29), (' change in inventory', 27), (' Cost of product sold', 25), (' Cost of goods and services sold', 25), (' cost of coal sold', 21), (' cost of goods sold ', 21), ('purchase of stock-in-trade', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [('expenditure', 42), (' change in inventory', 42), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('total expenses', 29), (' Cost of goods and services sold', 29), (' Cost of inventory sold', 29), ('expense', 27), (' cost of coal sold', 26), (' Personnel costs', 26), (' Cost of product sold', 23), ('cost of sales', 22), ('Cost of sales', 22), (' cost of goods sold ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Cost of inventory sold', 53), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), (' change in inventory', 38), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Cost of product sold', 41), (' Cost of inventory sold', 39), ('total expenditure', 37), ('total expenses', 35), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), (' Cost of goods and services sold', 30), (' cost of goods sold ', 28), ('expenditure', 25), ('expense', 14)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), (' Cost of goods and services sold', 29), (' cost of coal sold', 27), (' Personnel costs', 27), (' cost of goods sold ', 27), (' Cost of product sold', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), (' cost of goods sold ', 24), (' change in inventory', 24), ('expense', 16)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' change in inventory', 43), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), (' cost of goods sold ', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' change in inventory', 43), ('purchase of stock-in-trade', 40), ('total expenses', 38), (' Cost of goods and services sold', 36), ('total expenditure', 35), (' Cost of inventory sold', 33), (' Personnel costs', 32), (' Cost of product sold', 30), ('expense', 29), (' cost of coal sold', 28), (' cost of goods sold ', 28), ('expenditure', 26), ('cost of sales', 22), ('Cost of sales', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('total expenses', 43), ('total expenditure', 43), (' change in inventory', 40), (' Cost of product sold', 38), ('purchase of stock-in-trade', 37), (' cost of coal sold', 37), (' Cost of goods and services sold', 37), (' Cost of inventory sold', 37), (' Personnel costs', 37), (' cost of goods sold ', 37), ('cost of sales', 36), ('Cost of sales', 36), ('expenditure', 27), ('expense', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 5, 21, 22], 'score': 86, 'value': -302527276.0, 'line_item_label': ['Expenses', 'Cost of sales of goods', 'Expenses', 'Cost of sales of goods'], 'note_numbers': [nan, nan, nan, nan], 'line_item_value': [0.0, -151263638.0, 0.0, -151263638.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['consum ', ' power ', ' machinery ', ' charges ', ' research ', ' analytical ', ' equipment ', ' exchange ', ' loss on ', ' donation ', ' csr ', ' social ', ' miscellaneous ', ' loss allowance ', ' Included in administrative expenses ', ' Depreciation property ', ' plant and equipment ', ' Depreciation right-of-use assets ', ' Administrative expenses ', ' Wages and salaries ', ' Compulsory superannuation contributions ', ' Payroll on-costs (excluding employee benefit provision) ', ' Staff welfare ', ' Contractors, subcontractors and employee related expenses ', ' Facilities Expense ', ' Rental equipment expenses ', ' Depreciation expense right-of-use asset ', ' Depreciation expense ', ' Amortisation expense ', ' Other expenses ', ' Research and development expenses ', ' employee benefits expenses ', ' depreciation and amortisation expenses ', ' Employee expenses ', ' Distribution Expenses ', ' Depreciation and Amortisation Expenses ', ' Other Expenses from Ordinary Activities ', '  ', ' Defined contribution plans ', ' Other employement costs']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Administrative and other expenses ', 38), (' Amortisation expenses ', 35), (' Logistics and distribution ', 35), (' Selling & distribution expenses ', 34), (' Depreciation and amortisation expenses ', 34), (' Distribution expenses ', 33), (' Administrative expenses ', 33), (' Administration expenses ', 33), (' employee benefits expense ', 33), (' employee benefit espense ', 33), (' Marketing expenses ', 31), (' Advertising expenses ', 30), (' property espense ', 30), (' other expenses ', 27), (' Other expenses ', 27), (' Other expenses ', 27), (' Depreciation expenses ', 26), (' Sales and marketing ', 26), (' Administration ', 24), (' Occupancy expenses ', 23), (' Management expenses ', 23), (' Occupancy ', 22), (' Royalties ', 21), (' Lease expenses ', 19), (' Selling Expenses ', 19), (' levies', 17), ('expenses ', 16), (' depreciation ', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' Sales and marketing ', 50), (' Royalties ', 38), (' levies', 31), (' Lease expenses ', 30), (' Selling Expenses ', 30), (' Logistics and distribution ', 28), (' Marketing expenses ', 27), (' Selling & distribution expenses ', 27), (' Depreciation expenses ', 26), (' Amortisation expenses ', 26), (' employee benefit espense ', 26), (' depreciation ', 25), (' Advertising expenses ', 25), (' Distribution expenses ', 24), (' Administrative expenses ', 24), (' Administration expenses ', 24), (' Administrative and other expenses ', 23), (' Depreciation and amortisation expenses ', 23), (' Administration ', 22), (' other expenses ', 19), (' Other expenses ', 19), (' Management expenses ', 19), (' Other expenses ', 19), (' employee benefits expense ', 19), (' property espense ', 17), (' Occupancy ', 14), ('expenses ', 13), (' Occupancy expenses ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other expenses ', 61), (' Other expenses ', 61), (' Other expenses ', 61), (' Administrative and other expenses ', 43), (' Administration ', 40), (' property espense ', 38), (' Amortisation expenses ', 32), (' Sales and marketing ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Lease expenses ', 27), (' Selling Expenses ', 27), (' Depreciation and amortisation expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Depreciation expenses ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Advertising expenses ', 23), (' depreciation ', 22), (' Distribution expenses ', 22), (' Royalties ', 22), (' Management expenses ', 17), (' levies', 13), ('expenses ', 12), (' Occupancy ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' other expenses ', 54), (' Other expenses ', 54), (' Other expenses ', 54), (' Administrative and other expenses ', 50), (' property espense ', 41), (' Amortisation expenses ', 36), (' Depreciation and amortisation expenses ', 35), (' Sales and marketing ', 34), (' employee benefits expense ', 33), (' employee benefit espense ', 33), (' Marketing expenses ', 30), (' Selling & distribution expenses ', 29), (' Logistics and distribution ', 29), (' Advertising expenses ', 28), (' Distribution expenses ', 27), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Administration ', 26), (' Lease expenses ', 24), (' Selling Expenses ', 24), (' Occupancy expenses ', 23), (' Management expenses ', 23), (' levies', 22), (' Depreciation expenses ', 21), ('expenses ', 20), (' depreciation ', 19), (' Royalties ', 19), (' Occupancy ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expenses ', 100), (' Lease expenses ', 71), (' Selling Expenses ', 71), (' other expenses ', 67), (' Occupancy expenses ', 67), (' Other expenses ', 67), (' Management expenses ', 67), (' Other expenses ', 67), (' Marketing expenses ', 63), (' Depreciation expenses ', 60), (' Amortisation expenses ', 60), (' Advertising expenses ', 57), (' Distribution expenses ', 55), (' Administrative expenses ', 55), (' Administration expenses ', 55), (' property espense ', 48), (' depreciation ', 46), (' Selling & distribution expenses ', 44), (' employee benefits expense ', 43), (' Administrative and other expenses ', 38), (' Depreciation and amortisation expenses ', 38), (' employee benefit espense ', 36), (' Administration ', 27), (' levies', 20), (' Sales and marketing ', 19), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Sales and marketing ', 41), (' Administrative and other expenses ', 35), (' Selling & distribution expenses ', 34), (' employee benefit espense ', 33), (' Lease expenses ', 32), (' Selling Expenses ', 32), (' other expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), (' Marketing expenses ', 30), (' Depreciation and amortisation expenses ', 30), (' Amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Royalties ', 29), (' employee benefits expense ', 28), (' property espense ', 28), (' Distribution expenses ', 27), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Occupancy expenses ', 23), (' Management expenses ', 23), (' levies', 22), (' Depreciation expenses ', 21), (' Advertising expenses ', 21), (' depreciation ', 19), (' Administration ', 17), (' Occupancy ', 11), ('expenses ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' Amortisation expenses ', 48), (' property espense ', 46), (' depreciation ', 44), (' Distribution expenses ', 44), (' Administrative expenses ', 44), (' Administration expenses ', 44), (' Depreciation and amortisation expenses ', 43), (' Depreciation expenses ', 40), (' Selling & distribution expenses ', 38), (' Advertising expenses ', 38), (' Lease expenses ', 36), ('expenses ', 35), (' Marketing expenses ', 33), (' Royalties ', 33), (' Administrative and other expenses ', 32), (' Logistics and distribution ', 32), (' Sales and marketing ', 31), (' employee benefits expense ', 30), (' employee benefit espense ', 30), (' Administration ', 30), (' Selling Expenses ', 27), (' levies', 27), (' other expenses ', 26), (' Occupancy expenses ', 26), (' Other expenses ', 26), (' Management expenses ', 26), (' Other expenses ', 26), (' Occupancy ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Management expenses ', 50), (' Sales and marketing ', 39), (' Administrative and other expenses ', 38), (' Marketing expenses ', 34), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Logistics and distribution ', 33), (' Selling & distribution expenses ', 32), (' Administration ', 32), (' Distribution expenses ', 31), (' Administrative expenses ', 31), (' Administration expenses ', 31), (' Lease expenses ', 30), (' Depreciation expenses ', 27), (' Advertising expenses ', 26), (' employee benefits expense ', 26), (' property espense ', 26), (' employee benefit espense ', 26), (' Royalties ', 26), (' Selling Expenses ', 22), (' other expenses ', 21), (' Other expenses ', 21), (' Other expenses ', 21), ('expenses ', 18), (' Occupancy expenses ', 14), (' Occupancy ', 10), (' depreciation ', 9), (' levies', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits expense ', 81), (' employee benefit espense ', 81), (' Depreciation expenses ', 48), (' Administrative expenses ', 45), (' Administration expenses ', 45), (' Advertising expenses ', 40), (' Sales and marketing ', 40), (' property espense ', 40), (' Distribution expenses ', 39), (' Administrative and other expenses ', 39), (' Lease expenses ', 38), (' Selling Expenses ', 38), (' other expenses ', 37), (' Other expenses ', 37), (' Other expenses ', 37), (' Marketing expenses ', 36), (' Depreciation and amortisation expenses ', 34), (' Amortisation expenses ', 34), (' Logistics and distribution ', 34), (' Selling & distribution expenses ', 33), (' Occupancy expenses ', 30), (' Management expenses ', 30), ('expenses ', 29), (' depreciation ', 27), (' Administration ', 25), (' levies', 21), (' Royalties ', 18), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' Administration ', 100), (' Administrative expenses ', 72), (' Administration expenses ', 72), (' Administrative and other expenses ', 51), (' Amortisation expenses ', 43), (' Advertising expenses ', 42), (' Logistics and distribution ', 41), (' Distribution expenses ', 40), (' other expenses ', 38), (' Other expenses ', 38), (' Other expenses ', 38), (' Depreciation expenses ', 35), (' Depreciation and amortisation expenses ', 34), (' Selling & distribution expenses ', 33), (' Sales and marketing ', 33), ('expenses ', 27), (' Marketing expenses ', 27), (' depreciation ', 25), (' property espense ', 25), (' Royalties ', 25), (' Lease expenses ', 20), (' Selling Expenses ', 20), (' Occupancy expenses ', 19), (' Management expenses ', 19), (' employee benefits expense ', 19), (' employee benefit espense ', 19), (' levies', 15), (' Occupancy ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Management expenses ', 35), (' Royalties ', 33), (' Depreciation and amortisation expenses ', 32), (' Amortisation expenses ', 32), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Administrative and other expenses ', 27), (' Lease expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Occupancy ', 25), (' Depreciation expenses ', 24), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' property espense ', 23), (' depreciation ', 22), (' Administration ', 20), (' Selling Expenses ', 18), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' other expenses ', 17), (' Other expenses ', 17), (' Other expenses ', 17), (' levies', 13), ('expenses ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 42), (' employee benefits expense ', 41), (' property espense ', 38), (' employee benefit espense ', 36), (' Depreciation expenses ', 33), (' Logistics and distribution ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Sales and marketing ', 32), (' other expenses ', 29), (' Marketing expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Other expenses ', 29), (' depreciation ', 28), (' Selling & distribution expenses ', 28), (' Amortisation expenses ', 28), (' Advertising expenses ', 27), (' Administration ', 26), (' Occupancy expenses ', 24), (' Lease expenses ', 24), (' Management expenses ', 24), (' Occupancy ', 22), (' Royalties ', 21), (' Selling Expenses ', 18), (' levies', 15), ('expenses ', 14)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' other expenses ', 64), (' Other expenses ', 64), (' Management expenses ', 64), (' Other expenses ', 64), (' Marketing expenses ', 62), (' Lease expenses ', 59), (' Occupancy expenses ', 57), ('expenses ', 55), (' Selling Expenses ', 52), (' property espense ', 52), (' Administrative and other expenses ', 43), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' Advertising expenses ', 39), (' Distribution expenses ', 38), (' Administrative expenses ', 38), (' Selling & distribution expenses ', 38), (' Administration expenses ', 38), (' depreciation ', 35), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' Depreciation and amortisation expenses ', 29), (' Logistics and distribution ', 28), (' employee benefit espense ', 26), (' Administration ', 24), (' levies', 20), (' Royalties ', 17), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Depreciation expenses ', 36), (' Administrative and other expenses ', 36), (' Amortisation expenses ', 36), (' Selling & distribution expenses ', 35), (' property espense ', 35), (' Distribution expenses ', 34), (' employee benefits expense ', 34), (' employee benefit espense ', 34), (' Lease expenses ', 33), (' Marketing expenses ', 31), (' Logistics and distribution ', 31), (' Royalties ', 31), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Advertising expenses ', 29), (' Sales and marketing ', 29), (' Selling Expenses ', 27), (' Management expenses ', 26), (' depreciation ', 23), (' Administration ', 21), (' Occupancy expenses ', 19), (' Occupancy ', 17), ('expenses ', 16), (' levies', 9)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other expenses ', 59), (' Other expenses ', 59), (' Other expenses ', 59), (' Administrative and other expenses ', 50), (' property espense ', 43), (' Marketing expenses ', 40), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Occupancy expenses ', 35), (' Management expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Administration ', 32), ('expenses ', 29), (' Logistics and distribution ', 29), (' depreciation ', 28), (' Advertising expenses ', 27), (' Sales and marketing ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Royalties ', 21), (' Occupancy ', 15), (' levies', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' Depreciation expenses ', 44), (' Administrative and other expenses ', 42), (' Depreciation and amortisation expenses ', 42), (' Selling & distribution expenses ', 39), (' Advertising expenses ', 39), (' property espense ', 39), (' Distribution expenses ', 38), (' Administrative expenses ', 38), (' Administration expenses ', 38), (' Amortisation expenses ', 36), (' Lease expenses ', 34), (' employee benefits expense ', 34), (' employee benefit espense ', 34), (' other expenses ', 33), (' Marketing expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Logistics and distribution ', 32), (' Sales and marketing ', 31), (' Selling Expenses ', 30), ('expenses ', 29), (' Occupancy expenses ', 29), (' depreciation ', 28), (' Administration ', 27), (' Royalties ', 23), (' Occupancy ', 10), (' levies', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' other expenses ', 43), (' Other expenses ', 43), (' Administrative and other expenses ', 43), (' Other expenses ', 43), (' property espense ', 36), (' Lease expenses ', 35), (' Management expenses ', 34), (' Marketing expenses ', 33), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' employee benefit espense ', 32), (' Occupancy expenses ', 30), (' Selling Expenses ', 30), (' Depreciation and amortisation expenses ', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Distribution expenses ', 24), (' Advertising expenses ', 24), (' Administration ', 23), ('expenses ', 20), (' depreciation ', 19), (' Royalties ', 19), (' Occupancy ', 10), (' levies', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Administrative and other expenses ', 38), (' Amortisation expenses ', 35), (' Logistics and distribution ', 35), (' Selling & distribution expenses ', 34), (' Depreciation and amortisation expenses ', 34), (' Distribution expenses ', 33), (' Administrative expenses ', 33), (' Administration expenses ', 33), (' employee benefits expense ', 33), (' employee benefit espense ', 33), (' Marketing expenses ', 31), (' Advertising expenses ', 30), (' property espense ', 30), (' other expenses ', 27), (' Other expenses ', 27), (' Other expenses ', 27), (' Depreciation expenses ', 26), (' Sales and marketing ', 26), (' Administration ', 24), (' Occupancy expenses ', 23), (' Management expenses ', 23), (' Occupancy ', 22), (' Royalties ', 21), (' Lease expenses ', 19), (' Selling Expenses ', 19), (' levies', 17), ('expenses ', 16), (' depreciation ', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' Sales and marketing ', 50), (' Royalties ', 38), (' levies', 31), (' Lease expenses ', 30), (' Selling Expenses ', 30), (' Logistics and distribution ', 28), (' Marketing expenses ', 27), (' Selling & distribution expenses ', 27), (' Depreciation expenses ', 26), (' Amortisation expenses ', 26), (' employee benefit espense ', 26), (' depreciation ', 25), (' Advertising expenses ', 25), (' Distribution expenses ', 24), (' Administrative expenses ', 24), (' Administration expenses ', 24), (' Administrative and other expenses ', 23), (' Depreciation and amortisation expenses ', 23), (' Administration ', 22), (' other expenses ', 19), (' Other expenses ', 19), (' Management expenses ', 19), (' Other expenses ', 19), (' employee benefits expense ', 19), (' property espense ', 17), (' Occupancy ', 14), ('expenses ', 13), (' Occupancy expenses ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other expenses ', 61), (' Other expenses ', 61), (' Other expenses ', 61), (' Administrative and other expenses ', 43), (' Administration ', 40), (' property espense ', 38), (' Amortisation expenses ', 32), (' Sales and marketing ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Lease expenses ', 27), (' Selling Expenses ', 27), (' Depreciation and amortisation expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Depreciation expenses ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Advertising expenses ', 23), (' depreciation ', 22), (' Distribution expenses ', 22), (' Royalties ', 22), (' Management expenses ', 17), (' levies', 13), ('expenses ', 12), (' Occupancy ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' other expenses ', 54), (' Other expenses ', 54), (' Other expenses ', 54), (' Administrative and other expenses ', 50), (' property espense ', 41), (' Amortisation expenses ', 36), (' Depreciation and amortisation expenses ', 35), (' Sales and marketing ', 34), (' employee benefits expense ', 33), (' employee benefit espense ', 33), (' Marketing expenses ', 30), (' Selling & distribution expenses ', 29), (' Logistics and distribution ', 29), (' Advertising expenses ', 28), (' Distribution expenses ', 27), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Administration ', 26), (' Lease expenses ', 24), (' Selling Expenses ', 24), (' Occupancy expenses ', 23), (' Management expenses ', 23), (' levies', 22), (' Depreciation expenses ', 21), ('expenses ', 20), (' depreciation ', 19), (' Royalties ', 19), (' Occupancy ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expenses ', 100), (' Lease expenses ', 71), (' Selling Expenses ', 71), (' other expenses ', 67), (' Occupancy expenses ', 67), (' Other expenses ', 67), (' Management expenses ', 67), (' Other expenses ', 67), (' Marketing expenses ', 63), (' Depreciation expenses ', 60), (' Amortisation expenses ', 60), (' Advertising expenses ', 57), (' Distribution expenses ', 55), (' Administrative expenses ', 55), (' Administration expenses ', 55), (' property espense ', 48), (' depreciation ', 46), (' Selling & distribution expenses ', 44), (' employee benefits expense ', 43), (' Administrative and other expenses ', 38), (' Depreciation and amortisation expenses ', 38), (' employee benefit espense ', 36), (' Administration ', 27), (' levies', 20), (' Sales and marketing ', 19), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Sales and marketing ', 41), (' Administrative and other expenses ', 35), (' Selling & distribution expenses ', 34), (' employee benefit espense ', 33), (' Lease expenses ', 32), (' Selling Expenses ', 32), (' other expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), (' Marketing expenses ', 30), (' Depreciation and amortisation expenses ', 30), (' Amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Royalties ', 29), (' employee benefits expense ', 28), (' property espense ', 28), (' Distribution expenses ', 27), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Occupancy expenses ', 23), (' Management expenses ', 23), (' levies', 22), (' Depreciation expenses ', 21), (' Advertising expenses ', 21), (' depreciation ', 19), (' Administration ', 17), (' Occupancy ', 11), ('expenses ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' Amortisation expenses ', 48), (' property espense ', 46), (' depreciation ', 44), (' Distribution expenses ', 44), (' Administrative expenses ', 44), (' Administration expenses ', 44), (' Depreciation and amortisation expenses ', 43), (' Depreciation expenses ', 40), (' Selling & distribution expenses ', 38), (' Advertising expenses ', 38), (' Lease expenses ', 36), ('expenses ', 35), (' Marketing expenses ', 33), (' Royalties ', 33), (' Administrative and other expenses ', 32), (' Logistics and distribution ', 32), (' Sales and marketing ', 31), (' employee benefits expense ', 30), (' employee benefit espense ', 30), (' Administration ', 30), (' Selling Expenses ', 27), (' levies', 27), (' other expenses ', 26), (' Occupancy expenses ', 26), (' Other expenses ', 26), (' Management expenses ', 26), (' Other expenses ', 26), (' Occupancy ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Management expenses ', 50), (' Sales and marketing ', 39), (' Administrative and other expenses ', 38), (' Marketing expenses ', 34), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Logistics and distribution ', 33), (' Selling & distribution expenses ', 32), (' Administration ', 32), (' Distribution expenses ', 31), (' Administrative expenses ', 31), (' Administration expenses ', 31), (' Lease expenses ', 30), (' Depreciation expenses ', 27), (' Advertising expenses ', 26), (' employee benefits expense ', 26), (' property espense ', 26), (' employee benefit espense ', 26), (' Royalties ', 26), (' Selling Expenses ', 22), (' other expenses ', 21), (' Other expenses ', 21), (' Other expenses ', 21), ('expenses ', 18), (' Occupancy expenses ', 14), (' Occupancy ', 10), (' depreciation ', 9), (' levies', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits expense ', 81), (' employee benefit espense ', 81), (' Depreciation expenses ', 48), (' Administrative expenses ', 45), (' Administration expenses ', 45), (' Advertising expenses ', 40), (' Sales and marketing ', 40), (' property espense ', 40), (' Distribution expenses ', 39), (' Administrative and other expenses ', 39), (' Lease expenses ', 38), (' Selling Expenses ', 38), (' other expenses ', 37), (' Other expenses ', 37), (' Other expenses ', 37), (' Marketing expenses ', 36), (' Depreciation and amortisation expenses ', 34), (' Amortisation expenses ', 34), (' Logistics and distribution ', 34), (' Selling & distribution expenses ', 33), (' Occupancy expenses ', 30), (' Management expenses ', 30), ('expenses ', 29), (' depreciation ', 27), (' Administration ', 25), (' levies', 21), (' Royalties ', 18), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' Administration ', 100), (' Administrative expenses ', 72), (' Administration expenses ', 72), (' Administrative and other expenses ', 51), (' Amortisation expenses ', 43), (' Advertising expenses ', 42), (' Logistics and distribution ', 41), (' Distribution expenses ', 40), (' other expenses ', 38), (' Other expenses ', 38), (' Other expenses ', 38), (' Depreciation expenses ', 35), (' Depreciation and amortisation expenses ', 34), (' Selling & distribution expenses ', 33), (' Sales and marketing ', 33), ('expenses ', 27), (' Marketing expenses ', 27), (' depreciation ', 25), (' property espense ', 25), (' Royalties ', 25), (' Lease expenses ', 20), (' Selling Expenses ', 20), (' Occupancy expenses ', 19), (' Management expenses ', 19), (' employee benefits expense ', 19), (' employee benefit espense ', 19), (' levies', 15), (' Occupancy ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Management expenses ', 35), (' Royalties ', 33), (' Depreciation and amortisation expenses ', 32), (' Amortisation expenses ', 32), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Administrative and other expenses ', 27), (' Lease expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Occupancy ', 25), (' Depreciation expenses ', 24), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' property espense ', 23), (' depreciation ', 22), (' Administration ', 20), (' Selling Expenses ', 18), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' other expenses ', 17), (' Other expenses ', 17), (' Other expenses ', 17), (' levies', 13), ('expenses ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 42), (' employee benefits expense ', 41), (' property espense ', 38), (' employee benefit espense ', 36), (' Depreciation expenses ', 33), (' Logistics and distribution ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Sales and marketing ', 32), (' other expenses ', 29), (' Marketing expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Other expenses ', 29), (' depreciation ', 28), (' Selling & distribution expenses ', 28), (' Amortisation expenses ', 28), (' Advertising expenses ', 27), (' Administration ', 26), (' Occupancy expenses ', 24), (' Lease expenses ', 24), (' Management expenses ', 24), (' Occupancy ', 22), (' Royalties ', 21), (' Selling Expenses ', 18), (' levies', 15), ('expenses ', 14)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' other expenses ', 64), (' Other expenses ', 64), (' Management expenses ', 64), (' Other expenses ', 64), (' Marketing expenses ', 62), (' Lease expenses ', 59), (' Occupancy expenses ', 57), ('expenses ', 55), (' Selling Expenses ', 52), (' property espense ', 52), (' Administrative and other expenses ', 43), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' Advertising expenses ', 39), (' Distribution expenses ', 38), (' Administrative expenses ', 38), (' Selling & distribution expenses ', 38), (' Administration expenses ', 38), (' depreciation ', 35), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' Depreciation and amortisation expenses ', 29), (' Logistics and distribution ', 28), (' employee benefit espense ', 26), (' Administration ', 24), (' levies', 20), (' Royalties ', 17), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Depreciation expenses ', 36), (' Administrative and other expenses ', 36), (' Amortisation expenses ', 36), (' Selling & distribution expenses ', 35), (' property espense ', 35), (' Distribution expenses ', 34), (' employee benefits expense ', 34), (' employee benefit espense ', 34), (' Lease expenses ', 33), (' Marketing expenses ', 31), (' Logistics and distribution ', 31), (' Royalties ', 31), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Advertising expenses ', 29), (' Sales and marketing ', 29), (' Selling Expenses ', 27), (' Management expenses ', 26), (' depreciation ', 23), (' Administration ', 21), (' Occupancy expenses ', 19), (' Occupancy ', 17), ('expenses ', 16), (' levies', 9)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other expenses ', 59), (' Other expenses ', 59), (' Other expenses ', 59), (' Administrative and other expenses ', 50), (' property espense ', 43), (' Marketing expenses ', 40), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Occupancy expenses ', 35), (' Management expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Administration ', 32), ('expenses ', 29), (' Logistics and distribution ', 29), (' depreciation ', 28), (' Advertising expenses ', 27), (' Sales and marketing ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Royalties ', 21), (' Occupancy ', 15), (' levies', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' Depreciation expenses ', 44), (' Administrative and other expenses ', 42), (' Depreciation and amortisation expenses ', 42), (' Selling & distribution expenses ', 39), (' Advertising expenses ', 39), (' property espense ', 39), (' Distribution expenses ', 38), (' Administrative expenses ', 38), (' Administration expenses ', 38), (' Amortisation expenses ', 36), (' Lease expenses ', 34), (' employee benefits expense ', 34), (' employee benefit espense ', 34), (' other expenses ', 33), (' Marketing expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Logistics and distribution ', 32), (' Sales and marketing ', 31), (' Selling Expenses ', 30), ('expenses ', 29), (' Occupancy expenses ', 29), (' depreciation ', 28), (' Administration ', 27), (' Royalties ', 23), (' Occupancy ', 10), (' levies', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' other expenses ', 43), (' Other expenses ', 43), (' Administrative and other expenses ', 43), (' Other expenses ', 43), (' property espense ', 36), (' Lease expenses ', 35), (' Management expenses ', 34), (' Marketing expenses ', 33), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' employee benefit espense ', 32), (' Occupancy expenses ', 30), (' Selling Expenses ', 30), (' Depreciation and amortisation expenses ', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Distribution expenses ', 24), (' Advertising expenses ', 24), (' Administration ', 23), ('expenses ', 20), (' depreciation ', 19), (' Royalties ', 19), (' Occupancy ', 10), (' levies', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 8, 9, 21, 25, 26], 'score': 100, 'value': -5861662.0, 'line_item_label': ['Expenses', 'Employee benefits', 'Administration', 'Expenses', 'Employee benefits', 'Administration'], 'note_numbers': [nan, nan, nan, nan, nan, nan], 'line_item_value': [0.0, -396461.0, -2534370.0, 0.0, -396461.0, -2534370.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Administrative and other expenses ', 38), (' Amortisation expenses ', 35), (' Logistics and distribution ', 35), (' Selling & distribution expenses ', 34), (' Depreciation and amortisation expenses ', 34), (' Distribution expenses ', 33), (' Administrative expenses ', 33), (' Administration expenses ', 33), (' employee benefits expense ', 33), (' employee benefit espense ', 33), (' Marketing expenses ', 31), (' Advertising expenses ', 30), (' property espense ', 30), (' other expenses ', 27), (' Other expenses ', 27), (' Other expenses ', 27), (' Depreciation expenses ', 26), (' Sales and marketing ', 26), (' Administration ', 24), (' Occupancy expenses ', 23), (' Management expenses ', 23), (' Occupancy ', 22), (' Royalties ', 21), (' Lease expenses ', 19), (' Selling Expenses ', 19), (' levies', 17), ('expenses ', 16), (' depreciation ', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' Sales and marketing ', 50), (' Royalties ', 38), (' levies', 31), (' Lease expenses ', 30), (' Selling Expenses ', 30), (' Logistics and distribution ', 28), (' Marketing expenses ', 27), (' Selling & distribution expenses ', 27), (' Depreciation expenses ', 26), (' Amortisation expenses ', 26), (' employee benefit espense ', 26), (' depreciation ', 25), (' Advertising expenses ', 25), (' Distribution expenses ', 24), (' Administrative expenses ', 24), (' Administration expenses ', 24), (' Administrative and other expenses ', 23), (' Depreciation and amortisation expenses ', 23), (' Administration ', 22), (' other expenses ', 19), (' Other expenses ', 19), (' Management expenses ', 19), (' Other expenses ', 19), (' employee benefits expense ', 19), (' property espense ', 17), (' Occupancy ', 14), ('expenses ', 13), (' Occupancy expenses ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other expenses ', 61), (' Other expenses ', 61), (' Other expenses ', 61), (' Administrative and other expenses ', 43), (' Administration ', 40), (' property espense ', 38), (' Amortisation expenses ', 32), (' Sales and marketing ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Lease expenses ', 27), (' Selling Expenses ', 27), (' Depreciation and amortisation expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Depreciation expenses ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Advertising expenses ', 23), (' depreciation ', 22), (' Distribution expenses ', 22), (' Royalties ', 22), (' Management expenses ', 17), (' levies', 13), ('expenses ', 12), (' Occupancy ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' other expenses ', 54), (' Other expenses ', 54), (' Other expenses ', 54), (' Administrative and other expenses ', 50), (' property espense ', 41), (' Amortisation expenses ', 36), (' Depreciation and amortisation expenses ', 35), (' Sales and marketing ', 34), (' employee benefits expense ', 33), (' employee benefit espense ', 33), (' Marketing expenses ', 30), (' Selling & distribution expenses ', 29), (' Logistics and distribution ', 29), (' Advertising expenses ', 28), (' Distribution expenses ', 27), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Administration ', 26), (' Lease expenses ', 24), (' Selling Expenses ', 24), (' Occupancy expenses ', 23), (' Management expenses ', 23), (' levies', 22), (' Depreciation expenses ', 21), ('expenses ', 20), (' depreciation ', 19), (' Royalties ', 19), (' Occupancy ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expenses ', 100), (' Lease expenses ', 71), (' Selling Expenses ', 71), (' other expenses ', 67), (' Occupancy expenses ', 67), (' Other expenses ', 67), (' Management expenses ', 67), (' Other expenses ', 67), (' Marketing expenses ', 63), (' Depreciation expenses ', 60), (' Amortisation expenses ', 60), (' Advertising expenses ', 57), (' Distribution expenses ', 55), (' Administrative expenses ', 55), (' Administration expenses ', 55), (' property espense ', 48), (' depreciation ', 46), (' Selling & distribution expenses ', 44), (' employee benefits expense ', 43), (' Administrative and other expenses ', 38), (' Depreciation and amortisation expenses ', 38), (' employee benefit espense ', 36), (' Administration ', 27), (' levies', 20), (' Sales and marketing ', 19), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Sales and marketing ', 41), (' Administrative and other expenses ', 35), (' Selling & distribution expenses ', 34), (' employee benefit espense ', 33), (' Lease expenses ', 32), (' Selling Expenses ', 32), (' other expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), (' Marketing expenses ', 30), (' Depreciation and amortisation expenses ', 30), (' Amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Royalties ', 29), (' employee benefits expense ', 28), (' property espense ', 28), (' Distribution expenses ', 27), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Occupancy expenses ', 23), (' Management expenses ', 23), (' levies', 22), (' Depreciation expenses ', 21), (' Advertising expenses ', 21), (' depreciation ', 19), (' Administration ', 17), (' Occupancy ', 11), ('expenses ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' Amortisation expenses ', 48), (' property espense ', 46), (' depreciation ', 44), (' Distribution expenses ', 44), (' Administrative expenses ', 44), (' Administration expenses ', 44), (' Depreciation and amortisation expenses ', 43), (' Depreciation expenses ', 40), (' Selling & distribution expenses ', 38), (' Advertising expenses ', 38), (' Lease expenses ', 36), ('expenses ', 35), (' Marketing expenses ', 33), (' Royalties ', 33), (' Administrative and other expenses ', 32), (' Logistics and distribution ', 32), (' Sales and marketing ', 31), (' employee benefits expense ', 30), (' employee benefit espense ', 30), (' Administration ', 30), (' Selling Expenses ', 27), (' levies', 27), (' other expenses ', 26), (' Occupancy expenses ', 26), (' Other expenses ', 26), (' Management expenses ', 26), (' Other expenses ', 26), (' Occupancy ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Management expenses ', 50), (' Sales and marketing ', 39), (' Administrative and other expenses ', 38), (' Marketing expenses ', 34), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Logistics and distribution ', 33), (' Selling & distribution expenses ', 32), (' Administration ', 32), (' Distribution expenses ', 31), (' Administrative expenses ', 31), (' Administration expenses ', 31), (' Lease expenses ', 30), (' Depreciation expenses ', 27), (' Advertising expenses ', 26), (' employee benefits expense ', 26), (' property espense ', 26), (' employee benefit espense ', 26), (' Royalties ', 26), (' Selling Expenses ', 22), (' other expenses ', 21), (' Other expenses ', 21), (' Other expenses ', 21), ('expenses ', 18), (' Occupancy expenses ', 14), (' Occupancy ', 10), (' depreciation ', 9), (' levies', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits expense ', 81), (' employee benefit espense ', 81), (' Depreciation expenses ', 48), (' Administrative expenses ', 45), (' Administration expenses ', 45), (' Advertising expenses ', 40), (' Sales and marketing ', 40), (' property espense ', 40), (' Distribution expenses ', 39), (' Administrative and other expenses ', 39), (' Lease expenses ', 38), (' Selling Expenses ', 38), (' other expenses ', 37), (' Other expenses ', 37), (' Other expenses ', 37), (' Marketing expenses ', 36), (' Depreciation and amortisation expenses ', 34), (' Amortisation expenses ', 34), (' Logistics and distribution ', 34), (' Selling & distribution expenses ', 33), (' Occupancy expenses ', 30), (' Management expenses ', 30), ('expenses ', 29), (' depreciation ', 27), (' Administration ', 25), (' levies', 21), (' Royalties ', 18), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' Administration ', 100), (' Administrative expenses ', 72), (' Administration expenses ', 72), (' Administrative and other expenses ', 51), (' Amortisation expenses ', 43), (' Advertising expenses ', 42), (' Logistics and distribution ', 41), (' Distribution expenses ', 40), (' other expenses ', 38), (' Other expenses ', 38), (' Other expenses ', 38), (' Depreciation expenses ', 35), (' Depreciation and amortisation expenses ', 34), (' Selling & distribution expenses ', 33), (' Sales and marketing ', 33), ('expenses ', 27), (' Marketing expenses ', 27), (' depreciation ', 25), (' property espense ', 25), (' Royalties ', 25), (' Lease expenses ', 20), (' Selling Expenses ', 20), (' Occupancy expenses ', 19), (' Management expenses ', 19), (' employee benefits expense ', 19), (' employee benefit espense ', 19), (' levies', 15), (' Occupancy ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Management expenses ', 35), (' Royalties ', 33), (' Depreciation and amortisation expenses ', 32), (' Amortisation expenses ', 32), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Administrative and other expenses ', 27), (' Lease expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Occupancy ', 25), (' Depreciation expenses ', 24), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' property espense ', 23), (' depreciation ', 22), (' Administration ', 20), (' Selling Expenses ', 18), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' other expenses ', 17), (' Other expenses ', 17), (' Other expenses ', 17), (' levies', 13), ('expenses ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 42), (' employee benefits expense ', 41), (' property espense ', 38), (' employee benefit espense ', 36), (' Depreciation expenses ', 33), (' Logistics and distribution ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Sales and marketing ', 32), (' other expenses ', 29), (' Marketing expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Other expenses ', 29), (' depreciation ', 28), (' Selling & distribution expenses ', 28), (' Amortisation expenses ', 28), (' Advertising expenses ', 27), (' Administration ', 26), (' Occupancy expenses ', 24), (' Lease expenses ', 24), (' Management expenses ', 24), (' Occupancy ', 22), (' Royalties ', 21), (' Selling Expenses ', 18), (' levies', 15), ('expenses ', 14)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' other expenses ', 64), (' Other expenses ', 64), (' Management expenses ', 64), (' Other expenses ', 64), (' Marketing expenses ', 62), (' Lease expenses ', 59), (' Occupancy expenses ', 57), ('expenses ', 55), (' Selling Expenses ', 52), (' property espense ', 52), (' Administrative and other expenses ', 43), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' Advertising expenses ', 39), (' Distribution expenses ', 38), (' Administrative expenses ', 38), (' Selling & distribution expenses ', 38), (' Administration expenses ', 38), (' depreciation ', 35), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' Depreciation and amortisation expenses ', 29), (' Logistics and distribution ', 28), (' employee benefit espense ', 26), (' Administration ', 24), (' levies', 20), (' Royalties ', 17), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Depreciation expenses ', 36), (' Administrative and other expenses ', 36), (' Amortisation expenses ', 36), (' Selling & distribution expenses ', 35), (' property espense ', 35), (' Distribution expenses ', 34), (' employee benefits expense ', 34), (' employee benefit espense ', 34), (' Lease expenses ', 33), (' Marketing expenses ', 31), (' Logistics and distribution ', 31), (' Royalties ', 31), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Advertising expenses ', 29), (' Sales and marketing ', 29), (' Selling Expenses ', 27), (' Management expenses ', 26), (' depreciation ', 23), (' Administration ', 21), (' Occupancy expenses ', 19), (' Occupancy ', 17), ('expenses ', 16), (' levies', 9)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other expenses ', 59), (' Other expenses ', 59), (' Other expenses ', 59), (' Administrative and other expenses ', 50), (' property espense ', 43), (' Marketing expenses ', 40), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Occupancy expenses ', 35), (' Management expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Administration ', 32), ('expenses ', 29), (' Logistics and distribution ', 29), (' depreciation ', 28), (' Advertising expenses ', 27), (' Sales and marketing ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Royalties ', 21), (' Occupancy ', 15), (' levies', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' Depreciation expenses ', 44), (' Administrative and other expenses ', 42), (' Depreciation and amortisation expenses ', 42), (' Selling & distribution expenses ', 39), (' Advertising expenses ', 39), (' property espense ', 39), (' Distribution expenses ', 38), (' Administrative expenses ', 38), (' Administration expenses ', 38), (' Amortisation expenses ', 36), (' Lease expenses ', 34), (' employee benefits expense ', 34), (' employee benefit espense ', 34), (' other expenses ', 33), (' Marketing expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Logistics and distribution ', 32), (' Sales and marketing ', 31), (' Selling Expenses ', 30), ('expenses ', 29), (' Occupancy expenses ', 29), (' depreciation ', 28), (' Administration ', 27), (' Royalties ', 23), (' Occupancy ', 10), (' levies', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' other expenses ', 43), (' Other expenses ', 43), (' Administrative and other expenses ', 43), (' Other expenses ', 43), (' property espense ', 36), (' Lease expenses ', 35), (' Management expenses ', 34), (' Marketing expenses ', 33), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' employee benefit espense ', 32), (' Occupancy expenses ', 30), (' Selling Expenses ', 30), (' Depreciation and amortisation expenses ', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Distribution expenses ', 24), (' Advertising expenses ', 24), (' Administration ', 23), ('expenses ', 20), (' depreciation ', 19), (' Royalties ', 19), (' Occupancy ', 10), (' levies', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Administrative and other expenses ', 38), (' Amortisation expenses ', 35), (' Logistics and distribution ', 35), (' Selling & distribution expenses ', 34), (' Depreciation and amortisation expenses ', 34), (' Distribution expenses ', 33), (' Administrative expenses ', 33), (' Administration expenses ', 33), (' employee benefits expense ', 33), (' employee benefit espense ', 33), (' Marketing expenses ', 31), (' Advertising expenses ', 30), (' property espense ', 30), (' other expenses ', 27), (' Other expenses ', 27), (' Other expenses ', 27), (' Depreciation expenses ', 26), (' Sales and marketing ', 26), (' Administration ', 24), (' Occupancy expenses ', 23), (' Management expenses ', 23), (' Occupancy ', 22), (' Royalties ', 21), (' Lease expenses ', 19), (' Selling Expenses ', 19), (' levies', 17), ('expenses ', 16), (' depreciation ', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' Sales and marketing ', 50), (' Royalties ', 38), (' levies', 31), (' Lease expenses ', 30), (' Selling Expenses ', 30), (' Logistics and distribution ', 28), (' Marketing expenses ', 27), (' Selling & distribution expenses ', 27), (' Depreciation expenses ', 26), (' Amortisation expenses ', 26), (' employee benefit espense ', 26), (' depreciation ', 25), (' Advertising expenses ', 25), (' Distribution expenses ', 24), (' Administrative expenses ', 24), (' Administration expenses ', 24), (' Administrative and other expenses ', 23), (' Depreciation and amortisation expenses ', 23), (' Administration ', 22), (' other expenses ', 19), (' Other expenses ', 19), (' Management expenses ', 19), (' Other expenses ', 19), (' employee benefits expense ', 19), (' property espense ', 17), (' Occupancy ', 14), ('expenses ', 13), (' Occupancy expenses ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other expenses ', 61), (' Other expenses ', 61), (' Other expenses ', 61), (' Administrative and other expenses ', 43), (' Administration ', 40), (' property espense ', 38), (' Amortisation expenses ', 32), (' Sales and marketing ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Lease expenses ', 27), (' Selling Expenses ', 27), (' Depreciation and amortisation expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Depreciation expenses ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Advertising expenses ', 23), (' depreciation ', 22), (' Distribution expenses ', 22), (' Royalties ', 22), (' Management expenses ', 17), (' levies', 13), ('expenses ', 12), (' Occupancy ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' other expenses ', 54), (' Other expenses ', 54), (' Other expenses ', 54), (' Administrative and other expenses ', 50), (' property espense ', 41), (' Amortisation expenses ', 36), (' Depreciation and amortisation expenses ', 35), (' Sales and marketing ', 34), (' employee benefits expense ', 33), (' employee benefit espense ', 33), (' Marketing expenses ', 30), (' Selling & distribution expenses ', 29), (' Logistics and distribution ', 29), (' Advertising expenses ', 28), (' Distribution expenses ', 27), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Administration ', 26), (' Lease expenses ', 24), (' Selling Expenses ', 24), (' Occupancy expenses ', 23), (' Management expenses ', 23), (' levies', 22), (' Depreciation expenses ', 21), ('expenses ', 20), (' depreciation ', 19), (' Royalties ', 19), (' Occupancy ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expenses ', 100), (' Lease expenses ', 71), (' Selling Expenses ', 71), (' other expenses ', 67), (' Occupancy expenses ', 67), (' Other expenses ', 67), (' Management expenses ', 67), (' Other expenses ', 67), (' Marketing expenses ', 63), (' Depreciation expenses ', 60), (' Amortisation expenses ', 60), (' Advertising expenses ', 57), (' Distribution expenses ', 55), (' Administrative expenses ', 55), (' Administration expenses ', 55), (' property espense ', 48), (' depreciation ', 46), (' Selling & distribution expenses ', 44), (' employee benefits expense ', 43), (' Administrative and other expenses ', 38), (' Depreciation and amortisation expenses ', 38), (' employee benefit espense ', 36), (' Administration ', 27), (' levies', 20), (' Sales and marketing ', 19), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Sales and marketing ', 41), (' Administrative and other expenses ', 35), (' Selling & distribution expenses ', 34), (' employee benefit espense ', 33), (' Lease expenses ', 32), (' Selling Expenses ', 32), (' other expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), (' Marketing expenses ', 30), (' Depreciation and amortisation expenses ', 30), (' Amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Royalties ', 29), (' employee benefits expense ', 28), (' property espense ', 28), (' Distribution expenses ', 27), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Occupancy expenses ', 23), (' Management expenses ', 23), (' levies', 22), (' Depreciation expenses ', 21), (' Advertising expenses ', 21), (' depreciation ', 19), (' Administration ', 17), (' Occupancy ', 11), ('expenses ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' Amortisation expenses ', 48), (' property espense ', 46), (' depreciation ', 44), (' Distribution expenses ', 44), (' Administrative expenses ', 44), (' Administration expenses ', 44), (' Depreciation and amortisation expenses ', 43), (' Depreciation expenses ', 40), (' Selling & distribution expenses ', 38), (' Advertising expenses ', 38), (' Lease expenses ', 36), ('expenses ', 35), (' Marketing expenses ', 33), (' Royalties ', 33), (' Administrative and other expenses ', 32), (' Logistics and distribution ', 32), (' Sales and marketing ', 31), (' employee benefits expense ', 30), (' employee benefit espense ', 30), (' Administration ', 30), (' Selling Expenses ', 27), (' levies', 27), (' other expenses ', 26), (' Occupancy expenses ', 26), (' Other expenses ', 26), (' Management expenses ', 26), (' Other expenses ', 26), (' Occupancy ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Management expenses ', 50), (' Sales and marketing ', 39), (' Administrative and other expenses ', 38), (' Marketing expenses ', 34), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Logistics and distribution ', 33), (' Selling & distribution expenses ', 32), (' Administration ', 32), (' Distribution expenses ', 31), (' Administrative expenses ', 31), (' Administration expenses ', 31), (' Lease expenses ', 30), (' Depreciation expenses ', 27), (' Advertising expenses ', 26), (' employee benefits expense ', 26), (' property espense ', 26), (' employee benefit espense ', 26), (' Royalties ', 26), (' Selling Expenses ', 22), (' other expenses ', 21), (' Other expenses ', 21), (' Other expenses ', 21), ('expenses ', 18), (' Occupancy expenses ', 14), (' Occupancy ', 10), (' depreciation ', 9), (' levies', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits expense ', 81), (' employee benefit espense ', 81), (' Depreciation expenses ', 48), (' Administrative expenses ', 45), (' Administration expenses ', 45), (' Advertising expenses ', 40), (' Sales and marketing ', 40), (' property espense ', 40), (' Distribution expenses ', 39), (' Administrative and other expenses ', 39), (' Lease expenses ', 38), (' Selling Expenses ', 38), (' other expenses ', 37), (' Other expenses ', 37), (' Other expenses ', 37), (' Marketing expenses ', 36), (' Depreciation and amortisation expenses ', 34), (' Amortisation expenses ', 34), (' Logistics and distribution ', 34), (' Selling & distribution expenses ', 33), (' Occupancy expenses ', 30), (' Management expenses ', 30), ('expenses ', 29), (' depreciation ', 27), (' Administration ', 25), (' levies', 21), (' Royalties ', 18), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' Administration ', 100), (' Administrative expenses ', 72), (' Administration expenses ', 72), (' Administrative and other expenses ', 51), (' Amortisation expenses ', 43), (' Advertising expenses ', 42), (' Logistics and distribution ', 41), (' Distribution expenses ', 40), (' other expenses ', 38), (' Other expenses ', 38), (' Other expenses ', 38), (' Depreciation expenses ', 35), (' Depreciation and amortisation expenses ', 34), (' Selling & distribution expenses ', 33), (' Sales and marketing ', 33), ('expenses ', 27), (' Marketing expenses ', 27), (' depreciation ', 25), (' property espense ', 25), (' Royalties ', 25), (' Lease expenses ', 20), (' Selling Expenses ', 20), (' Occupancy expenses ', 19), (' Management expenses ', 19), (' employee benefits expense ', 19), (' employee benefit espense ', 19), (' levies', 15), (' Occupancy ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Management expenses ', 35), (' Royalties ', 33), (' Depreciation and amortisation expenses ', 32), (' Amortisation expenses ', 32), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Administrative and other expenses ', 27), (' Lease expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Occupancy ', 25), (' Depreciation expenses ', 24), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' property espense ', 23), (' depreciation ', 22), (' Administration ', 20), (' Selling Expenses ', 18), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' other expenses ', 17), (' Other expenses ', 17), (' Other expenses ', 17), (' levies', 13), ('expenses ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 42), (' employee benefits expense ', 41), (' property espense ', 38), (' employee benefit espense ', 36), (' Depreciation expenses ', 33), (' Logistics and distribution ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Sales and marketing ', 32), (' other expenses ', 29), (' Marketing expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Other expenses ', 29), (' depreciation ', 28), (' Selling & distribution expenses ', 28), (' Amortisation expenses ', 28), (' Advertising expenses ', 27), (' Administration ', 26), (' Occupancy expenses ', 24), (' Lease expenses ', 24), (' Management expenses ', 24), (' Occupancy ', 22), (' Royalties ', 21), (' Selling Expenses ', 18), (' levies', 15), ('expenses ', 14)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' other expenses ', 64), (' Other expenses ', 64), (' Management expenses ', 64), (' Other expenses ', 64), (' Marketing expenses ', 62), (' Lease expenses ', 59), (' Occupancy expenses ', 57), ('expenses ', 55), (' Selling Expenses ', 52), (' property espense ', 52), (' Administrative and other expenses ', 43), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' Advertising expenses ', 39), (' Distribution expenses ', 38), (' Administrative expenses ', 38), (' Selling & distribution expenses ', 38), (' Administration expenses ', 38), (' depreciation ', 35), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' Depreciation and amortisation expenses ', 29), (' Logistics and distribution ', 28), (' employee benefit espense ', 26), (' Administration ', 24), (' levies', 20), (' Royalties ', 17), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Depreciation expenses ', 36), (' Administrative and other expenses ', 36), (' Amortisation expenses ', 36), (' Selling & distribution expenses ', 35), (' property espense ', 35), (' Distribution expenses ', 34), (' employee benefits expense ', 34), (' employee benefit espense ', 34), (' Lease expenses ', 33), (' Marketing expenses ', 31), (' Logistics and distribution ', 31), (' Royalties ', 31), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Advertising expenses ', 29), (' Sales and marketing ', 29), (' Selling Expenses ', 27), (' Management expenses ', 26), (' depreciation ', 23), (' Administration ', 21), (' Occupancy expenses ', 19), (' Occupancy ', 17), ('expenses ', 16), (' levies', 9)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other expenses ', 59), (' Other expenses ', 59), (' Other expenses ', 59), (' Administrative and other expenses ', 50), (' property espense ', 43), (' Marketing expenses ', 40), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Occupancy expenses ', 35), (' Management expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Administration ', 32), ('expenses ', 29), (' Logistics and distribution ', 29), (' depreciation ', 28), (' Advertising expenses ', 27), (' Sales and marketing ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Royalties ', 21), (' Occupancy ', 15), (' levies', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' Depreciation expenses ', 44), (' Administrative and other expenses ', 42), (' Depreciation and amortisation expenses ', 42), (' Selling & distribution expenses ', 39), (' Advertising expenses ', 39), (' property espense ', 39), (' Distribution expenses ', 38), (' Administrative expenses ', 38), (' Administration expenses ', 38), (' Amortisation expenses ', 36), (' Lease expenses ', 34), (' employee benefits expense ', 34), (' employee benefit espense ', 34), (' other expenses ', 33), (' Marketing expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Logistics and distribution ', 32), (' Sales and marketing ', 31), (' Selling Expenses ', 30), ('expenses ', 29), (' Occupancy expenses ', 29), (' depreciation ', 28), (' Administration ', 27), (' Royalties ', 23), (' Occupancy ', 10), (' levies', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' other expenses ', 43), (' Other expenses ', 43), (' Administrative and other expenses ', 43), (' Other expenses ', 43), (' property espense ', 36), (' Lease expenses ', 35), (' Management expenses ', 34), (' Marketing expenses ', 33), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' employee benefit espense ', 32), (' Occupancy expenses ', 30), (' Selling Expenses ', 30), (' Depreciation and amortisation expenses ', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Distribution expenses ', 24), (' Advertising expenses ', 24), (' Administration ', 23), ('expenses ', 20), (' depreciation ', 19), (' Royalties ', 19), (' Occupancy ', 10), (' levies', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 8, 9, 21, 25, 26], 'score': 100, 'value': -7645870.0, 'line_item_label': ['Expenses', 'Employee benefits', 'Administration', 'Expenses', 'Employee benefits', 'Administration'], 'note_numbers': [nan, nan, nan, nan, nan, nan], 'line_item_value': [0.0, -510266.0, -3312669.0, 0.0, -510266.0, -3312669.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses', ' Occupancy', ' Occupancy expenses']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Administration expenses ', 33), (' Rental expenses ', 31), (' Occupancy expenses', 23), ('Rent ', 22), (' Occupancy ', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' Rental expenses ', 27), (' Administration expenses ', 24), ('Rent ', 15), (' Occupancy ', 14), (' Occupancy expenses', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses ', 30), ('Rent ', 27), (' Occupancy expenses', 26), (' Rental expenses ', 25), (' Occupancy ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' Rental expenses ', 30), (' Administration expenses ', 27), (' Occupancy expenses', 23), ('Rent ', 22), (' Occupancy ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses ', 63), (' Administration expenses ', 55), ('Rent ', 40), (' Occupancy ', 18)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Rental expenses ', 30), (' Administration expenses ', 27), (' Occupancy expenses', 23), ('Rent ', 11), (' Occupancy ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' Administration expenses ', 44), (' Rental expenses ', 33), ('Rent ', 27), (' Occupancy expenses', 26), (' Occupancy ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Rental expenses ', 34), (' Administration expenses ', 31), ('Rent ', 20), (' Occupancy expenses', 14), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' Administration expenses ', 45), (' Rental expenses ', 36), ('Rent ', 32), (' Occupancy expenses', 30), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' Administration expenses ', 72), ('Rent ', 31), (' Rental expenses ', 27), (' Occupancy expenses', 19), (' Occupancy ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Rental expenses ', 33), (' Administration expenses ', 30), (' Occupancy expenses', 26), (' Occupancy ', 25), ('Rent ', 13)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Rental expenses ', 34), (' Administration expenses ', 32), (' Occupancy expenses', 24), ('Rent ', 23), (' Occupancy ', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Rental expenses ', 69), (' Occupancy expenses', 57), (' Administration expenses ', 38), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses ', 31), (' Administration expenses ', 29), (' Occupancy expenses', 19), ('Rent ', 17), (' Occupancy ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Rental expenses ', 40), (' Occupancy expenses', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' Rental expenses ', 41), (' Administration expenses ', 38), (' Occupancy expenses', 29), ('Rent ', 20), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Rental expenses ', 42), (' Occupancy expenses', 30), (' Administration expenses ', 27), ('Rent ', 21), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Administration expenses ', 33), (' Rental expenses ', 31), (' Occupancy expenses', 23), ('Rent ', 22), (' Occupancy ', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' Rental expenses ', 27), (' Administration expenses ', 24), ('Rent ', 15), (' Occupancy ', 14), (' Occupancy expenses', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses ', 30), ('Rent ', 27), (' Occupancy expenses', 26), (' Rental expenses ', 25), (' Occupancy ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' Rental expenses ', 30), (' Administration expenses ', 27), (' Occupancy expenses', 23), ('Rent ', 22), (' Occupancy ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses ', 63), (' Administration expenses ', 55), ('Rent ', 40), (' Occupancy ', 18)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Rental expenses ', 30), (' Administration expenses ', 27), (' Occupancy expenses', 23), ('Rent ', 11), (' Occupancy ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' Administration expenses ', 44), (' Rental expenses ', 33), ('Rent ', 27), (' Occupancy expenses', 26), (' Occupancy ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Rental expenses ', 34), (' Administration expenses ', 31), ('Rent ', 20), (' Occupancy expenses', 14), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' Administration expenses ', 45), (' Rental expenses ', 36), ('Rent ', 32), (' Occupancy expenses', 30), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' Administration expenses ', 72), ('Rent ', 31), (' Rental expenses ', 27), (' Occupancy expenses', 19), (' Occupancy ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Rental expenses ', 33), (' Administration expenses ', 30), (' Occupancy expenses', 26), (' Occupancy ', 25), ('Rent ', 13)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Rental expenses ', 34), (' Administration expenses ', 32), (' Occupancy expenses', 24), ('Rent ', 23), (' Occupancy ', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Rental expenses ', 69), (' Occupancy expenses', 57), (' Administration expenses ', 38), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses ', 31), (' Administration expenses ', 29), (' Occupancy expenses', 19), ('Rent ', 17), (' Occupancy ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Rental expenses ', 40), (' Occupancy expenses', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' Rental expenses ', 41), (' Administration expenses ', 38), (' Occupancy expenses', 29), ('Rent ', 20), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Rental expenses ', 42), (' Occupancy expenses', 30), (' Administration expenses ', 27), ('Rent ', 21), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Administration expenses ', 33), (' Rental expenses ', 31), (' Occupancy expenses', 23), ('Rent ', 22), (' Occupancy ', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' Rental expenses ', 27), (' Administration expenses ', 24), ('Rent ', 15), (' Occupancy ', 14), (' Occupancy expenses', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses ', 30), ('Rent ', 27), (' Occupancy expenses', 26), (' Rental expenses ', 25), (' Occupancy ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' Rental expenses ', 30), (' Administration expenses ', 27), (' Occupancy expenses', 23), ('Rent ', 22), (' Occupancy ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses ', 63), (' Administration expenses ', 55), ('Rent ', 40), (' Occupancy ', 18)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Rental expenses ', 30), (' Administration expenses ', 27), (' Occupancy expenses', 23), ('Rent ', 11), (' Occupancy ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' Administration expenses ', 44), (' Rental expenses ', 33), ('Rent ', 27), (' Occupancy expenses', 26), (' Occupancy ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Rental expenses ', 34), (' Administration expenses ', 31), ('Rent ', 20), (' Occupancy expenses', 14), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' Administration expenses ', 45), (' Rental expenses ', 36), ('Rent ', 32), (' Occupancy expenses', 30), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' Administration expenses ', 72), ('Rent ', 31), (' Rental expenses ', 27), (' Occupancy expenses', 19), (' Occupancy ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Rental expenses ', 33), (' Administration expenses ', 30), (' Occupancy expenses', 26), (' Occupancy ', 25), ('Rent ', 13)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Rental expenses ', 34), (' Administration expenses ', 32), (' Occupancy expenses', 24), ('Rent ', 23), (' Occupancy ', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Rental expenses ', 69), (' Occupancy expenses', 57), (' Administration expenses ', 38), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses ', 31), (' Administration expenses ', 29), (' Occupancy expenses', 19), ('Rent ', 17), (' Occupancy ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Rental expenses ', 40), (' Occupancy expenses', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' Rental expenses ', 41), (' Administration expenses ', 38), (' Occupancy expenses', 29), ('Rent ', 20), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Rental expenses ', 42), (' Occupancy expenses', 30), (' Administration expenses ', 27), ('Rent ', 21), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Administration expenses ', 33), (' Rental expenses ', 31), (' Occupancy expenses', 23), ('Rent ', 22), (' Occupancy ', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' Rental expenses ', 27), (' Administration expenses ', 24), ('Rent ', 15), (' Occupancy ', 14), (' Occupancy expenses', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses ', 30), ('Rent ', 27), (' Occupancy expenses', 26), (' Rental expenses ', 25), (' Occupancy ', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' Rental expenses ', 30), (' Administration expenses ', 27), (' Occupancy expenses', 23), ('Rent ', 22), (' Occupancy ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses ', 63), (' Administration expenses ', 55), ('Rent ', 40), (' Occupancy ', 18)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Rental expenses ', 30), (' Administration expenses ', 27), (' Occupancy expenses', 23), ('Rent ', 11), (' Occupancy ', 11)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' Administration expenses ', 44), (' Rental expenses ', 33), ('Rent ', 27), (' Occupancy expenses', 26), (' Occupancy ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Rental expenses ', 34), (' Administration expenses ', 31), ('Rent ', 20), (' Occupancy expenses', 14), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' Administration expenses ', 45), (' Rental expenses ', 36), ('Rent ', 32), (' Occupancy expenses', 30), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' Administration expenses ', 72), ('Rent ', 31), (' Rental expenses ', 27), (' Occupancy expenses', 19), (' Occupancy ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Rental expenses ', 33), (' Administration expenses ', 30), (' Occupancy expenses', 26), (' Occupancy ', 25), ('Rent ', 13)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Rental expenses ', 34), (' Administration expenses ', 32), (' Occupancy expenses', 24), ('Rent ', 23), (' Occupancy ', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Rental expenses ', 69), (' Occupancy expenses', 57), (' Administration expenses ', 38), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses ', 31), (' Administration expenses ', 29), (' Occupancy expenses', 19), ('Rent ', 17), (' Occupancy ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Rental expenses ', 40), (' Occupancy expenses', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' Rental expenses ', 41), (' Administration expenses ', 38), (' Occupancy expenses', 29), ('Rent ', 20), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Rental expenses ', 42), (' Occupancy expenses', 30), (' Administration expenses ', 27), ('Rent ', 21), (' Occupancy ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['other operating', 'Other revenue', ' Other income']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['Other income ', ' Commission revenue ', ' Rent ', ' rental revenue']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('Other revenue', 45), (' Other income', 37), ('other operating', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('other operating', 32), (' Other income', 30), ('Other revenue', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('other operating', 67), (' Other income', 56), ('Other revenue', 38)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('Other revenue', 33), ('other operating', 25), (' Other income', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Other income', 40), ('other operating', 33), ('Other revenue', 31)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('Other revenue', 43), ('other operating', 38), (' Other income', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Other income', 37), ('Other revenue', 29), ('other operating', 23)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other operating', 32), (' Other income', 31), ('Other revenue', 30)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' Other income', 40), ('other operating', 21), ('Other revenue', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue', 35), (' Other income', 27), ('other operating', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Other income', 48), ('other operating', 31), ('Other revenue', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Other income', 52), ('other operating', 38), ('Other revenue', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('other operating', 30), (' Other income', 30), ('Other revenue', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('other operating', 44), (' Other income', 43), ('Other revenue', 30)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('Other revenue', 45), (' Other income', 37), ('other operating', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('other operating', 32), (' Other income', 30), ('Other revenue', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('other operating', 67), (' Other income', 56), ('Other revenue', 38)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('Other revenue', 33), ('other operating', 25), (' Other income', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Other income', 40), ('other operating', 33), ('Other revenue', 31)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('Other revenue', 43), ('other operating', 38), (' Other income', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Other income', 37), ('Other revenue', 29), ('other operating', 23)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other operating', 32), (' Other income', 31), ('Other revenue', 30)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' Other income', 40), ('other operating', 21), ('Other revenue', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue', 35), (' Other income', 27), ('other operating', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Other income', 48), ('other operating', 31), ('Other revenue', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Other income', 52), ('other operating', 38), ('Other revenue', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('other operating', 30), (' Other income', 30), ('Other revenue', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('other operating', 44), (' Other income', 43), ('Other revenue', 30)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 19], 'score': 100, 'value': 1394738.0, 'line_item_label': ['Other income', 'Other income'], 'note_numbers': ['4', '4'], 'line_item_value': [697369.0, 697369.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('Other revenue', 45), (' Other income', 37), ('other operating', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('other operating', 32), (' Other income', 30), ('Other revenue', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('other operating', 67), (' Other income', 56), ('Other revenue', 38)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('Other revenue', 33), ('other operating', 25), (' Other income', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Other income', 40), ('other operating', 33), ('Other revenue', 31)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('Other revenue', 43), ('other operating', 38), (' Other income', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Other income', 37), ('Other revenue', 29), ('other operating', 23)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other operating', 32), (' Other income', 31), ('Other revenue', 30)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' Other income', 40), ('other operating', 21), ('Other revenue', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue', 35), (' Other income', 27), ('other operating', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Other income', 48), ('other operating', 31), ('Other revenue', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Other income', 52), ('other operating', 38), ('Other revenue', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('other operating', 30), (' Other income', 30), ('Other revenue', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('other operating', 44), (' Other income', 43), ('Other revenue', 30)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('Other revenue', 45), (' Other income', 37), ('other operating', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('other operating', 32), (' Other income', 30), ('Other revenue', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('other operating', 67), (' Other income', 56), ('Other revenue', 38)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('Other revenue', 33), ('other operating', 25), (' Other income', 12)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Other income', 40), ('other operating', 33), ('Other revenue', 31)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('Other revenue', 43), ('other operating', 38), (' Other income', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Other income', 37), ('Other revenue', 29), ('other operating', 23)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other operating', 32), (' Other income', 31), ('Other revenue', 30)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' Other income', 40), ('other operating', 21), ('Other revenue', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue', 35), (' Other income', 27), ('other operating', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Other income', 48), ('other operating', 31), ('Other revenue', 24)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Other income', 52), ('other operating', 38), ('Other revenue', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('other operating', 30), (' Other income', 30), ('Other revenue', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('other operating', 44), (' Other income', 43), ('Other revenue', 30)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 19], 'score': 100, 'value': 906350.0, 'line_item_label': ['Other income', 'Other income'], 'note_numbers': ['4', '4'], 'line_item_value': [453175.0, 453175.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['Other income ', ' Commission revenue ', ' Rent ', ' rental revenue'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [(' Rent ', 75), ('Other income ', 73), (' rental revenue', 38), (' Commission revenue ', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Other income ', 0), (' Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none commission rebate , res_fuzz_match = [(' Commission revenue ', 74), ('Other income ', 55), (' Rent ', 50), (' rental revenue', 31)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Other income ', 0), (' Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none other income , res_fuzz_match = [('Other income ', 100), (' Rent ', 50), (' rental revenue', 31), (' Commission revenue ', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Other income ', 0), (' Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Rent ', 50), ('Other income ', 40), (' rental revenue', 40), (' Commission revenue ', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Other income ', 0), (' Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [(' Rent ', 75), ('Other income ', 73), (' rental revenue', 38), (' Commission revenue ', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Other income ', 0), (' Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none commission rebate , res_fuzz_match = [(' Commission revenue ', 74), ('Other income ', 55), (' Rent ', 50), (' rental revenue', 31)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Other income ', 0), (' Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none other income , res_fuzz_match = [('Other income ', 100), (' Rent ', 50), (' rental revenue', 31), (' Commission revenue ', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Other income ', 0), (' Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Rent ', 50), ('Other income ', 40), (' rental revenue', 40), (' Commission revenue ', 20)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Other income ', 0), (' Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 6], 'score': [100, 100], 'value': [96756.0, 28313.0], 'label': ['None Other income', 'None Other income'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['Interest expense', 'interest expense']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Interest revenue', 51), ('Finance income and costs', 38), (' Net finance costs', 38), ('other income', 37), (' Finance income and finance costs', 37), ('finance income', 32)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' Net finance costs', 33), ('other income', 30), ('Finance income and costs', 27), (' Finance income and finance costs', 22), (' Interest revenue', 17), ('finance income', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), (' Interest revenue', 38), (' Net finance costs', 38), ('Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('other income', 56), (' Net finance costs', 41), ('Finance income and costs', 34), (' Interest revenue', 34), (' Finance income and finance costs', 29), ('finance income', 23)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Interest revenue', 29), ('Finance income and costs', 15), ('other income', 12), (' Finance income and finance costs', 12), ('finance income', 11), (' Net finance costs', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Net finance costs', 48), ('other income', 40), ('Finance income and costs', 34), (' Finance income and finance costs', 33), (' Interest revenue', 28), ('finance income', 23)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' Net finance costs', 46), ('Finance income and costs', 38), (' Interest revenue', 38), ('other income', 36), (' Finance income and finance costs', 31), ('finance income', 26)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Net finance costs', 58), ('Finance income and costs', 43), (' Finance income and finance costs', 41), ('other income', 37), (' Interest revenue', 26), ('finance income', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' Interest revenue', 40), ('other income', 31), ('finance income', 30), ('Finance income and costs', 28), (' Net finance costs', 27), (' Finance income and finance costs', 23)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' Interest revenue', 42), ('other income', 40), ('Finance income and costs', 33), ('finance income', 29), (' Finance income and finance costs', 27), (' Net finance costs', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs', 85), ('Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), (' Interest revenue', 31), ('other income', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other income', 48), ('finance income', 41), (' Net finance costs', 38), (' Finance income and finance costs', 36), ('Finance income and costs', 33), (' Interest revenue', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50), (' Net finance costs', 45), ('Finance income and costs', 43), (' Finance income and finance costs', 36), (' Interest revenue', 32)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), ('Finance income and costs', 25), ('finance income', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' Interest revenue', 35), (' Finance income and finance costs', 34), ('Finance income and costs', 32), (' Net finance costs', 31), ('other income', 30), ('finance income', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Net finance costs', 44), ('other income', 43), ('Finance income and costs', 39), (' Finance income and finance costs', 35), ('finance income', 30), (' Interest revenue', 28)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Interest revenue', 51), ('Finance income and costs', 38), (' Net finance costs', 38), ('other income', 37), (' Finance income and finance costs', 37), ('finance income', 32)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' Net finance costs', 33), ('other income', 30), ('Finance income and costs', 27), (' Finance income and finance costs', 22), (' Interest revenue', 17), ('finance income', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), (' Interest revenue', 38), (' Net finance costs', 38), ('Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('other income', 56), (' Net finance costs', 41), ('Finance income and costs', 34), (' Interest revenue', 34), (' Finance income and finance costs', 29), ('finance income', 23)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Interest revenue', 29), ('Finance income and costs', 15), ('other income', 12), (' Finance income and finance costs', 12), ('finance income', 11), (' Net finance costs', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Net finance costs', 48), ('other income', 40), ('Finance income and costs', 34), (' Finance income and finance costs', 33), (' Interest revenue', 28), ('finance income', 23)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' Net finance costs', 46), ('Finance income and costs', 38), (' Interest revenue', 38), ('other income', 36), (' Finance income and finance costs', 31), ('finance income', 26)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Net finance costs', 58), ('Finance income and costs', 43), (' Finance income and finance costs', 41), ('other income', 37), (' Interest revenue', 26), ('finance income', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' Interest revenue', 40), ('other income', 31), ('finance income', 30), ('Finance income and costs', 28), (' Net finance costs', 27), (' Finance income and finance costs', 23)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' Interest revenue', 42), ('other income', 40), ('Finance income and costs', 33), ('finance income', 29), (' Finance income and finance costs', 27), (' Net finance costs', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs', 85), ('Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), (' Interest revenue', 31), ('other income', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other income', 48), ('finance income', 41), (' Net finance costs', 38), (' Finance income and finance costs', 36), ('Finance income and costs', 33), (' Interest revenue', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50), (' Net finance costs', 45), ('Finance income and costs', 43), (' Finance income and finance costs', 36), (' Interest revenue', 32)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), ('Finance income and costs', 25), ('finance income', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' Interest revenue', 35), (' Finance income and finance costs', 34), ('Finance income and costs', 32), (' Net finance costs', 31), ('other income', 30), ('finance income', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Net finance costs', 44), ('other income', 43), ('Finance income and costs', 39), (' Finance income and finance costs', 35), ('finance income', 30), (' Interest revenue', 28)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 10, 19, 27], 'score': 85, 'value': 1389706.0, 'line_item_label': ['Other income', 'Finance costs', 'Other income', 'Finance costs'], 'note_numbers': ['4', '5(b)', '4', '5(b)'], 'line_item_value': [697369.0, -2516.0, 697369.0, -2516.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Interest revenue', 51), ('Finance income and costs', 38), (' Net finance costs', 38), ('other income', 37), (' Finance income and finance costs', 37), ('finance income', 32)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' Net finance costs', 33), ('other income', 30), ('Finance income and costs', 27), (' Finance income and finance costs', 22), (' Interest revenue', 17), ('finance income', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), (' Interest revenue', 38), (' Net finance costs', 38), ('Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('other income', 56), (' Net finance costs', 41), ('Finance income and costs', 34), (' Interest revenue', 34), (' Finance income and finance costs', 29), ('finance income', 23)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Interest revenue', 29), ('Finance income and costs', 15), ('other income', 12), (' Finance income and finance costs', 12), ('finance income', 11), (' Net finance costs', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Net finance costs', 48), ('other income', 40), ('Finance income and costs', 34), (' Finance income and finance costs', 33), (' Interest revenue', 28), ('finance income', 23)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' Net finance costs', 46), ('Finance income and costs', 38), (' Interest revenue', 38), ('other income', 36), (' Finance income and finance costs', 31), ('finance income', 26)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Net finance costs', 58), ('Finance income and costs', 43), (' Finance income and finance costs', 41), ('other income', 37), (' Interest revenue', 26), ('finance income', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' Interest revenue', 40), ('other income', 31), ('finance income', 30), ('Finance income and costs', 28), (' Net finance costs', 27), (' Finance income and finance costs', 23)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' Interest revenue', 42), ('other income', 40), ('Finance income and costs', 33), ('finance income', 29), (' Finance income and finance costs', 27), (' Net finance costs', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs', 85), ('Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), (' Interest revenue', 31), ('other income', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other income', 48), ('finance income', 41), (' Net finance costs', 38), (' Finance income and finance costs', 36), ('Finance income and costs', 33), (' Interest revenue', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50), (' Net finance costs', 45), ('Finance income and costs', 43), (' Finance income and finance costs', 36), (' Interest revenue', 32)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), ('Finance income and costs', 25), ('finance income', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' Interest revenue', 35), (' Finance income and finance costs', 34), ('Finance income and costs', 32), (' Net finance costs', 31), ('other income', 30), ('finance income', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Net finance costs', 44), ('other income', 43), ('Finance income and costs', 39), (' Finance income and finance costs', 35), ('finance income', 30), (' Interest revenue', 28)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Interest revenue', 51), ('Finance income and costs', 38), (' Net finance costs', 38), ('other income', 37), (' Finance income and finance costs', 37), ('finance income', 32)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' Net finance costs', 33), ('other income', 30), ('Finance income and costs', 27), (' Finance income and finance costs', 22), (' Interest revenue', 17), ('finance income', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), (' Interest revenue', 38), (' Net finance costs', 38), ('Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('other income', 56), (' Net finance costs', 41), ('Finance income and costs', 34), (' Interest revenue', 34), (' Finance income and finance costs', 29), ('finance income', 23)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' Interest revenue', 29), ('Finance income and costs', 15), ('other income', 12), (' Finance income and finance costs', 12), ('finance income', 11), (' Net finance costs', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Net finance costs', 48), ('other income', 40), ('Finance income and costs', 34), (' Finance income and finance costs', 33), (' Interest revenue', 28), ('finance income', 23)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' Net finance costs', 46), ('Finance income and costs', 38), (' Interest revenue', 38), ('other income', 36), (' Finance income and finance costs', 31), ('finance income', 26)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Net finance costs', 58), ('Finance income and costs', 43), (' Finance income and finance costs', 41), ('other income', 37), (' Interest revenue', 26), ('finance income', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' Interest revenue', 40), ('other income', 31), ('finance income', 30), ('Finance income and costs', 28), (' Net finance costs', 27), (' Finance income and finance costs', 23)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' Interest revenue', 42), ('other income', 40), ('Finance income and costs', 33), ('finance income', 29), (' Finance income and finance costs', 27), (' Net finance costs', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs', 85), ('Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), (' Interest revenue', 31), ('other income', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other income', 48), ('finance income', 41), (' Net finance costs', 38), (' Finance income and finance costs', 36), ('Finance income and costs', 33), (' Interest revenue', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50), (' Net finance costs', 45), ('Finance income and costs', 43), (' Finance income and finance costs', 36), (' Interest revenue', 32)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), ('Finance income and costs', 25), ('finance income', 19)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' Interest revenue', 35), (' Finance income and finance costs', 34), ('Finance income and costs', 32), (' Net finance costs', 31), ('other income', 30), ('finance income', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Net finance costs', 44), ('other income', 43), ('Finance income and costs', 39), (' Finance income and finance costs', 35), ('finance income', 30), (' Interest revenue', 28)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 10, 19, 27], 'score': 85, 'value': 900662.0, 'line_item_label': ['Other income', 'Finance costs', 'Other income', 'Finance costs'], 'note_numbers': ['4', '5(b)', '4', '5(b)'], 'line_item_value': [453175.0, -2844.0, 453175.0, -2844.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [('interest ', 100), (' Interest income ', 100), (' Sublease interest income ', 84), (' Bank interest ', 77), (' interest revenue', 69), (' Share of JV interest received/(paid) ', 63), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 63), (' Interest received - Bank ', 58), (' Interest received - Loan ', 58), (' Bank Deposits - cash and cash equivalents ', 37)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none commission rebate , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 50), (' Interest received - Bank ', 44), (' Interest income ', 43), (' interest revenue', 40), (' Interest received - Loan ', 39), (' Share of JV interest received/(paid) ', 39), (' Bank Deposits - cash and cash equivalents ', 39), ('interest ', 38), (' Sublease interest income ', 33), (' Bank interest ', 31)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none other income , res_fuzz_match = [(' Interest income ', 71), (' Sublease interest income ', 62), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 50), (' Share of JV interest received/(paid) ', 44), (' interest revenue', 40), ('interest ', 38), (' Bank interest ', 38), (' Interest received - Bank ', 38), (' Interest received - Loan ', 38), (' Bank Deposits - cash and cash equivalents ', 38)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Interest received - Loan ', 40), (' Bank Deposits - cash and cash equivalents ', 40), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 40), ('interest ', 38), (' Bank interest ', 30), (' Interest income ', 30), (' Interest received - Bank ', 30), (' Sublease interest income ', 30), (' Share of JV interest received/(paid) ', 30), (' interest revenue', 30)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [('interest ', 100), (' Interest income ', 100), (' Sublease interest income ', 84), (' Bank interest ', 77), (' interest revenue', 69), (' Share of JV interest received/(paid) ', 63), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 63), (' Interest received - Bank ', 58), (' Interest received - Loan ', 58), (' Bank Deposits - cash and cash equivalents ', 37)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none commission rebate , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 50), (' Interest received - Bank ', 44), (' Interest income ', 43), (' interest revenue', 40), (' Interest received - Loan ', 39), (' Share of JV interest received/(paid) ', 39), (' Bank Deposits - cash and cash equivalents ', 39), ('interest ', 38), (' Sublease interest income ', 33), (' Bank interest ', 31)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none other income , res_fuzz_match = [(' Interest income ', 71), (' Sublease interest income ', 62), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 50), (' Share of JV interest received/(paid) ', 44), (' interest revenue', 40), ('interest ', 38), (' Bank interest ', 38), (' Interest received - Bank ', 38), (' Interest received - Loan ', 38), (' Bank Deposits - cash and cash equivalents ', 38)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Interest received - Loan ', 40), (' Bank Deposits - cash and cash equivalents ', 40), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 40), ('interest ', 38), (' Bank interest ', 30), (' Interest income ', 30), (' Interest received - Bank ', 30), (' Sublease interest income ', 30), (' Share of JV interest received/(paid) ', 30), (' interest revenue', 30)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4], 'score': [100, 100], 'value': [57475.0, 3746.0], 'label': ['None Interest income', 'None Interest income'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['Interest expense', 'interest expense'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [('Interest expense', 69), ('interest expense', 69)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none commission rebate , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none other income , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('Interest expense', 30), ('interest expense', 30)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [('Interest expense', 69), ('interest expense', 69)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none commission rebate , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none other income , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('Interest expense', 30), ('interest expense', 30)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: prepaid insurance nan , res_fuzz_match = [(' Share of JV interest received/(paid) ', 50), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), (' Sublease interest income ', 41), (' interest revenue', 40), ('interest ', 38), (' Bank interest ', 38), (' Interest income ', 36), (' Bank Deposits - cash and cash equivalents ', 35)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: trade accounts receivable nan , res_fuzz_match = [(' Interest received - Bank ', 62), (' Interest received - Loan ', 62), (' Share of JV interest received/(paid) ', 55), ('interest ', 50), (' interest revenue', 47), (' Bank interest ', 46), (' Interest income ', 43), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 43), (' Bank Deposits - cash and cash equivalents ', 41), (' Sublease interest income ', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: accrued interest receivable nan , res_fuzz_match = [('interest ', 100), (' Interest received - Bank ', 92), (' Interest received - Loan ', 92), (' interest revenue', 80), (' Share of JV interest received/(paid) ', 78), (' Interest income ', 71), (' Bank interest ', 69), (' Sublease interest income ', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 46), (' Bank Deposits - cash and cash equivalents ', 38)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: total nan , res_fuzz_match = [('interest ', 50), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 48), (' Bank interest ', 46), (' Interest received - Loan ', 45), (' Share of JV interest received/(paid) ', 42), (' Interest received - Bank ', 40), (' interest revenue', 40), (' Interest income ', 36), (' Sublease interest income ', 36), (' Bank Deposits - cash and cash equivalents ', 35)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: set-off of deferred tax assets pursuant to set-off provisions nan , res_fuzz_match = [('interest ', 50), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 50), (' Sublease interest income ', 45), (' Share of JV interest received/(paid) ', 42), (' interest revenue', 40), (' Bank interest ', 38), (' Bank Deposits - cash and cash equivalents ', 38), (' Interest income ', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = total trade accounts receivable movements $ at 1 april 2021 3,796 accrued interest receivable $ (278) , res_fuzz_match = [('interest ', 100), (' interest revenue', 80), (' Interest received - Bank ', 75), (' Interest received - Loan ', 75), (' Interest income ', 71), (' Bank interest ', 69), (' Share of JV interest received/(paid) ', 69), (' Sublease interest income ', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 41), (' Bank Deposits - cash and cash equivalents ', 39)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = total trade accounts receivable movements $ at 1 april 2021 3,796 accrued interest receivable $ (278) , res_fuzz_match = [('interest ', 100), (' interest revenue', 80), (' Interest received - Bank ', 75), (' Interest received - Loan ', 75), (' Interest income ', 71), (' Bank interest ', 69), (' Share of JV interest received/(paid) ', 69), (' Sublease interest income ', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 41), (' Bank Deposits - cash and cash equivalents ', 39)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) -profit or loss (3,782) 706 , res_fuzz_match = [(' Share of JV interest received/(paid) ', 46), (' Interest received - Loan ', 45), (' Interest income ', 43), ('interest ', 38), (' Bank interest ', 38), (' Bank Deposits - cash and cash equivalents ', 38), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 38), (' Sublease interest income ', 36), (' Interest received - Bank ', 35), (' interest revenue', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 31 march 2022 14 428 , res_fuzz_match = [(' Share of JV interest received/(paid) ', 56), (' Bank Deposits - cash and cash equivalents ', 44), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 44), (' Interest received - Bank ', 40), (' Interest received - Loan ', 40), (' Sublease interest income ', 39), ('interest ', 38), (' Bank interest ', 38), (' Interest income ', 36), (' interest revenue', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 1 april 2022 14 428 , res_fuzz_match = [(' Share of JV interest received/(paid) ', 50), (' Bank Deposits - cash and cash equivalents ', 44), (' Interest received - Bank ', 40), (' Interest received - Loan ', 40), (' Sublease interest income ', 39), ('interest ', 38), (' Bank interest ', 38), (' Interest income ', 36), (' interest revenue', 34), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) profit or loss 3,519 (428) , res_fuzz_match = [(' Share of JV interest received/(paid) ', 46), (' Interest received - Loan ', 45), (' Interest income ', 43), ('interest ', 38), (' Bank interest ', 38), (' Bank Deposits - cash and cash equivalents ', 38), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 38), (' Sublease interest income ', 36), (' Interest received - Bank ', 35), (' interest revenue', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 31 march 2023 3,533 nan , res_fuzz_match = [(' Share of JV interest received/(paid) ', 50), (' Bank Deposits - cash and cash equivalents ', 50), (' Interest received - Bank ', 47), (' Interest received - Loan ', 47), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 41), (' interest revenue', 40), ('interest ', 38), (' Bank interest ', 38), (' Interest income ', 36), (' Sublease interest income ', 32)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = share capital 2023 shares 2022 shares , res_fuzz_match = [(' Share of JV interest received/(paid) ', 57), (' Bank Deposits - cash and cash equivalents ', 52), ('interest ', 50), (' interest revenue', 47), (' Bank interest ', 46), (' Interest received - Bank ', 40), (' Interest received - Loan ', 40), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 39), (' Interest income ', 36), (' Sublease interest income ', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = share capital 2023 shares 2022 shares , res_fuzz_match = [(' Share of JV interest received/(paid) ', 57), (' Bank Deposits - cash and cash equivalents ', 52), ('interest ', 50), (' interest revenue', 47), (' Bank interest ', 46), (' Interest received - Bank ', 40), (' Interest received - Loan ', 40), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 39), (' Interest income ', 36), (' Sublease interest income ', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = ordinary shares fully paid 25,467,389 25467389 , res_fuzz_match = [(' Share of JV interest received/(paid) ', 54), ('interest ', 50), (' interest revenue', 47), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 44), (' Interest income ', 36), (' Bank Deposits - cash and cash equivalents ', 36), (' Bank interest ', 31), (' Sublease interest income ', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: prepaid insurance nan , res_fuzz_match = [(' Share of JV interest received/(paid) ', 50), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), (' Sublease interest income ', 41), (' interest revenue', 40), ('interest ', 38), (' Bank interest ', 38), (' Interest income ', 36), (' Bank Deposits - cash and cash equivalents ', 35)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: trade accounts receivable nan , res_fuzz_match = [(' Interest received - Bank ', 62), (' Interest received - Loan ', 62), (' Share of JV interest received/(paid) ', 55), ('interest ', 50), (' interest revenue', 47), (' Bank interest ', 46), (' Interest income ', 43), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 43), (' Bank Deposits - cash and cash equivalents ', 41), (' Sublease interest income ', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: accrued interest receivable nan , res_fuzz_match = [('interest ', 100), (' Interest received - Bank ', 92), (' Interest received - Loan ', 92), (' interest revenue', 80), (' Share of JV interest received/(paid) ', 78), (' Interest income ', 71), (' Bank interest ', 69), (' Sublease interest income ', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 46), (' Bank Deposits - cash and cash equivalents ', 38)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: total nan , res_fuzz_match = [('interest ', 50), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 48), (' Bank interest ', 46), (' Interest received - Loan ', 45), (' Share of JV interest received/(paid) ', 42), (' Interest received - Bank ', 40), (' interest revenue', 40), (' Interest income ', 36), (' Sublease interest income ', 36), (' Bank Deposits - cash and cash equivalents ', 35)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: set-off of deferred tax assets pursuant to set-off provisions nan , res_fuzz_match = [('interest ', 50), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 50), (' Sublease interest income ', 45), (' Share of JV interest received/(paid) ', 42), (' interest revenue', 40), (' Bank interest ', 38), (' Bank Deposits - cash and cash equivalents ', 38), (' Interest income ', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = total trade accounts receivable movements $ at 1 april 2021 3,796 accrued interest receivable $ (278) , res_fuzz_match = [('interest ', 100), (' interest revenue', 80), (' Interest received - Bank ', 75), (' Interest received - Loan ', 75), (' Interest income ', 71), (' Bank interest ', 69), (' Share of JV interest received/(paid) ', 69), (' Sublease interest income ', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 41), (' Bank Deposits - cash and cash equivalents ', 39)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = total trade accounts receivable movements $ at 1 april 2021 3,796 accrued interest receivable $ (278) , res_fuzz_match = [('interest ', 100), (' interest revenue', 80), (' Interest received - Bank ', 75), (' Interest received - Loan ', 75), (' Interest income ', 71), (' Bank interest ', 69), (' Share of JV interest received/(paid) ', 69), (' Sublease interest income ', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 41), (' Bank Deposits - cash and cash equivalents ', 39)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) -profit or loss (3,782) 706 , res_fuzz_match = [(' Share of JV interest received/(paid) ', 46), (' Interest received - Loan ', 45), (' Interest income ', 43), ('interest ', 38), (' Bank interest ', 38), (' Bank Deposits - cash and cash equivalents ', 38), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 38), (' Sublease interest income ', 36), (' Interest received - Bank ', 35), (' interest revenue', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 31 march 2022 14 428 , res_fuzz_match = [(' Share of JV interest received/(paid) ', 56), (' Bank Deposits - cash and cash equivalents ', 44), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 44), (' Interest received - Bank ', 40), (' Interest received - Loan ', 40), (' Sublease interest income ', 39), ('interest ', 38), (' Bank interest ', 38), (' Interest income ', 36), (' interest revenue', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 1 april 2022 14 428 , res_fuzz_match = [(' Share of JV interest received/(paid) ', 50), (' Bank Deposits - cash and cash equivalents ', 44), (' Interest received - Bank ', 40), (' Interest received - Loan ', 40), (' Sublease interest income ', 39), ('interest ', 38), (' Bank interest ', 38), (' Interest income ', 36), (' interest revenue', 34), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) profit or loss 3,519 (428) , res_fuzz_match = [(' Share of JV interest received/(paid) ', 46), (' Interest received - Loan ', 45), (' Interest income ', 43), ('interest ', 38), (' Bank interest ', 38), (' Bank Deposits - cash and cash equivalents ', 38), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 38), (' Sublease interest income ', 36), (' Interest received - Bank ', 35), (' interest revenue', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 31 march 2023 3,533 nan , res_fuzz_match = [(' Share of JV interest received/(paid) ', 50), (' Bank Deposits - cash and cash equivalents ', 50), (' Interest received - Bank ', 47), (' Interest received - Loan ', 47), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 41), (' interest revenue', 40), ('interest ', 38), (' Bank interest ', 38), (' Interest income ', 36), (' Sublease interest income ', 32)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = share capital 2023 shares 2022 shares , res_fuzz_match = [(' Share of JV interest received/(paid) ', 57), (' Bank Deposits - cash and cash equivalents ', 52), ('interest ', 50), (' interest revenue', 47), (' Bank interest ', 46), (' Interest received - Bank ', 40), (' Interest received - Loan ', 40), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 39), (' Interest income ', 36), (' Sublease interest income ', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = share capital 2023 shares 2022 shares , res_fuzz_match = [(' Share of JV interest received/(paid) ', 57), (' Bank Deposits - cash and cash equivalents ', 52), ('interest ', 50), (' interest revenue', 47), (' Bank interest ', 46), (' Interest received - Bank ', 40), (' Interest received - Loan ', 40), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 39), (' Interest income ', 36), (' Sublease interest income ', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = ordinary shares fully paid 25,467,389 25467389 , res_fuzz_match = [(' Share of JV interest received/(paid) ', 54), ('interest ', 50), (' interest revenue', 47), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 44), (' Interest income ', 36), (' Bank Deposits - cash and cash equivalents ', 36), (' Bank interest ', 31), (' Sublease interest income ', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 5, 6, 17, 20, 21], 'score': [100, 100, 100, 100, 100, 100], 'value': [0.0, 0.0, 0.0, 428.0, 0.0, 0.0], 'label': ['The balance comprises temporary differences attributable to: Accrued interest receivable nan', 'Total Trade accounts receivable Movements $ At 1 April 2021 3,796 Accrued interest receivable $ (278)', 'Total Trade accounts receivable Movements $ At 1 April 2021 3,796 Accrued interest receivable $ (278)', 'The balance comprises temporary differences attributable to: Accrued interest receivable nan', 'Total Trade accounts receivable Movements $ At 1 April 2021 3,796 Accrued interest receivable $ (278)', 'Total Trade accounts receivable Movements $ At 1 April 2021 3,796 Accrued interest receivable $ (278)'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['Interest expense', 'interest expense'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: prepaid insurance nan , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: trade accounts receivable nan , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: accrued interest receivable nan , res_fuzz_match = [('Interest expense', 73), ('interest expense', 73)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: total nan , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: set-off of deferred tax assets pursuant to set-off provisions nan , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = total trade accounts receivable movements $ at 1 april 2021 3,796 accrued interest receivable $ (278) , res_fuzz_match = [('Interest expense', 73), ('interest expense', 73)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = total trade accounts receivable movements $ at 1 april 2021 3,796 accrued interest receivable $ (278) , res_fuzz_match = [('Interest expense', 73), ('interest expense', 73)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) -profit or loss (3,782) 706 , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 31 march 2022 14 428 , res_fuzz_match = [('Interest expense', 28), ('interest expense', 28)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 1 april 2022 14 428 , res_fuzz_match = [('Interest expense', 34), ('interest expense', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) profit or loss 3,519 (428) , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 31 march 2023 3,533 nan , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = share capital 2023 shares 2022 shares , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = share capital 2023 shares 2022 shares , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = ordinary shares fully paid 25,467,389 25467389 , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: prepaid insurance nan , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: trade accounts receivable nan , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: accrued interest receivable nan , res_fuzz_match = [('Interest expense', 73), ('interest expense', 73)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: total nan , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: set-off of deferred tax assets pursuant to set-off provisions nan , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = total trade accounts receivable movements $ at 1 april 2021 3,796 accrued interest receivable $ (278) , res_fuzz_match = [('Interest expense', 73), ('interest expense', 73)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = total trade accounts receivable movements $ at 1 april 2021 3,796 accrued interest receivable $ (278) , res_fuzz_match = [('Interest expense', 73), ('interest expense', 73)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) -profit or loss (3,782) 706 , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 31 march 2022 14 428 , res_fuzz_match = [('Interest expense', 28), ('interest expense', 28)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 1 april 2022 14 428 , res_fuzz_match = [('Interest expense', 34), ('interest expense', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) profit or loss 3,519 (428) , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 31 march 2023 3,533 nan , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = share capital 2023 shares 2022 shares , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = share capital 2023 shares 2022 shares , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = ordinary shares fully paid 25,467,389 25467389 , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none foreign currency translation , res_fuzz_match = [('interest ', 50), (' interest revenue', 47), (' Bank interest ', 46), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), (' Interest income ', 43), (' Share of JV interest received/(paid) ', 38), (' Sublease interest income ', 36), (' Bank Deposits - cash and cash equivalents ', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = foreign currency translation opening balance , res_fuzz_match = [('interest ', 50), (' Interest income ', 50), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' interest revenue', 47), (' Bank interest ', 46), (' Share of JV interest received/(paid) ', 42), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 42), (' Sublease interest income ', 41), (' Bank Deposits - cash and cash equivalents ', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = foreign currency translation currency translation differences arising during the year , res_fuzz_match = [('interest ', 50), (' Interest income ', 50), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' Share of JV interest received/(paid) ', 50), (' Sublease interest income ', 45), (' Bank Deposits - cash and cash equivalents ', 44), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 43), (' interest revenue', 40), (' Bank interest ', 38)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = foreign currency translation balance 31 march , res_fuzz_match = [('interest ', 50), (' Interest income ', 50), (' Bank interest ', 46), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Sublease interest income ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 43), (' Share of JV interest received/(paid) ', 42), (' interest revenue', 40), (' Bank Deposits - cash and cash equivalents ', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: total , res_fuzz_match = [('interest ', 62), (' Bank interest ', 54), (' interest revenue', 53), (' Interest income ', 50), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 42), (' Sublease interest income ', 41), (' Share of JV interest received/(paid) ', 38), (' Bank Deposits - cash and cash equivalents ', 35)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: total , res_fuzz_match = [('interest ', 62), (' Bank interest ', 54), (' interest revenue', 53), (' Interest income ', 50), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 42), (' Sublease interest income ', 41), (' Share of JV interest received/(paid) ', 38), (' Bank Deposits - cash and cash equivalents ', 35)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: balance 1 april , res_fuzz_match = [('interest ', 62), (' Bank interest ', 54), (' interest revenue', 53), (' Interest income ', 50), (' Interest received - Loan ', 50), (' Interest received - Bank ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 42), (' Sublease interest income ', 41), (' Share of JV interest received/(paid) ', 38), (' Bank Deposits - cash and cash equivalents ', 38)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: net profit for the year , res_fuzz_match = [('interest ', 62), (' Bank interest ', 54), (' interest revenue', 53), (' Interest income ', 50), (' Interest received - Loan ', 50), (' Interest received - Bank ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 43), (' Sublease interest income ', 41), (' Share of JV interest received/(paid) ', 38), (' Bank Deposits - cash and cash equivalents ', 35)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: balance 31 march , res_fuzz_match = [('interest ', 62), (' Bank interest ', 54), (' interest revenue', 53), (' Interest income ', 50), (' Interest received - Loan ', 50), (' Interest received - Bank ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 42), (' Sublease interest income ', 41), (' Share of JV interest received/(paid) ', 38), (' Bank Deposits - cash and cash equivalents ', 35)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = franked dividends total , res_fuzz_match = [(' Bank interest ', 46), (' Bank Deposits - cash and cash equivalents ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), ('interest ', 38), (' Interest received - Loan ', 35), (' interest revenue', 33), (' Interest received - Bank ', 30), (' Sublease interest income ', 30), (' Share of JV interest received/(paid) ', 30), (' Interest income ', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = franked dividends total , res_fuzz_match = [(' Bank interest ', 46), (' Bank Deposits - cash and cash equivalents ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), ('interest ', 38), (' Interest received - Loan ', 35), (' interest revenue', 33), (' Interest received - Bank ', 30), (' Sublease interest income ', 30), (' Share of JV interest received/(paid) ', 30), (' Interest income ', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = franked dividends franking credits available for subsequent reporting periods based on a tax rate of 30.0% (2022 30.0%) , res_fuzz_match = [(' Sublease interest income ', 50), (' Bank Deposits - cash and cash equivalents ', 47), (' Bank interest ', 46), (' Interest received - Bank ', 45), (' Interest income ', 43), (' Interest received - Loan ', 40), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 40), (' interest revenue', 40), ('interest ', 38), (' Share of JV interest received/(paid) ', 38)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none foreign currency translation , res_fuzz_match = [('interest ', 50), (' interest revenue', 47), (' Bank interest ', 46), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), (' Interest income ', 43), (' Share of JV interest received/(paid) ', 38), (' Sublease interest income ', 36), (' Bank Deposits - cash and cash equivalents ', 34)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = foreign currency translation opening balance , res_fuzz_match = [('interest ', 50), (' Interest income ', 50), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' interest revenue', 47), (' Bank interest ', 46), (' Share of JV interest received/(paid) ', 42), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 42), (' Sublease interest income ', 41), (' Bank Deposits - cash and cash equivalents ', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = foreign currency translation currency translation differences arising during the year , res_fuzz_match = [('interest ', 50), (' Interest income ', 50), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' Share of JV interest received/(paid) ', 50), (' Sublease interest income ', 45), (' Bank Deposits - cash and cash equivalents ', 44), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 43), (' interest revenue', 40), (' Bank interest ', 38)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = foreign currency translation balance 31 march , res_fuzz_match = [('interest ', 50), (' Interest income ', 50), (' Bank interest ', 46), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Sublease interest income ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 43), (' Share of JV interest received/(paid) ', 42), (' interest revenue', 40), (' Bank Deposits - cash and cash equivalents ', 36)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: total , res_fuzz_match = [('interest ', 62), (' Bank interest ', 54), (' interest revenue', 53), (' Interest income ', 50), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 42), (' Sublease interest income ', 41), (' Share of JV interest received/(paid) ', 38), (' Bank Deposits - cash and cash equivalents ', 35)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: total , res_fuzz_match = [('interest ', 62), (' Bank interest ', 54), (' interest revenue', 53), (' Interest income ', 50), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 42), (' Sublease interest income ', 41), (' Share of JV interest received/(paid) ', 38), (' Bank Deposits - cash and cash equivalents ', 35)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: balance 1 april , res_fuzz_match = [('interest ', 62), (' Bank interest ', 54), (' interest revenue', 53), (' Interest income ', 50), (' Interest received - Loan ', 50), (' Interest received - Bank ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 42), (' Sublease interest income ', 41), (' Share of JV interest received/(paid) ', 38), (' Bank Deposits - cash and cash equivalents ', 38)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: net profit for the year , res_fuzz_match = [('interest ', 62), (' Bank interest ', 54), (' interest revenue', 53), (' Interest income ', 50), (' Interest received - Loan ', 50), (' Interest received - Bank ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 43), (' Sublease interest income ', 41), (' Share of JV interest received/(paid) ', 38), (' Bank Deposits - cash and cash equivalents ', 35)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: balance 31 march , res_fuzz_match = [('interest ', 62), (' Bank interest ', 54), (' interest revenue', 53), (' Interest income ', 50), (' Interest received - Loan ', 50), (' Interest received - Bank ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 42), (' Sublease interest income ', 41), (' Share of JV interest received/(paid) ', 38), (' Bank Deposits - cash and cash equivalents ', 35)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = franked dividends total , res_fuzz_match = [(' Bank interest ', 46), (' Bank Deposits - cash and cash equivalents ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), ('interest ', 38), (' Interest received - Loan ', 35), (' interest revenue', 33), (' Interest received - Bank ', 30), (' Sublease interest income ', 30), (' Share of JV interest received/(paid) ', 30), (' Interest income ', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = franked dividends total , res_fuzz_match = [(' Bank interest ', 46), (' Bank Deposits - cash and cash equivalents ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), ('interest ', 38), (' Interest received - Loan ', 35), (' interest revenue', 33), (' Interest received - Bank ', 30), (' Sublease interest income ', 30), (' Share of JV interest received/(paid) ', 30), (' Interest income ', 29)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = franked dividends franking credits available for subsequent reporting periods based on a tax rate of 30.0% (2022 30.0%) , res_fuzz_match = [(' Sublease interest income ', 50), (' Bank Deposits - cash and cash equivalents ', 47), (' Bank interest ', 46), (' Interest received - Bank ', 45), (' Interest income ', 43), (' Interest received - Loan ', 40), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 40), (' interest revenue', 40), ('interest ', 38), (' Share of JV interest received/(paid) ', 38)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['Interest expense', 'interest expense'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none foreign currency translation , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = foreign currency translation opening balance , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = foreign currency translation currency translation differences arising during the year , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = foreign currency translation balance 31 march , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: total , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: total , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: balance 1 april , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: net profit for the year , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: balance 31 march , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = franked dividends total , res_fuzz_match = [('Interest expense', 27), ('interest expense', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = franked dividends total , res_fuzz_match = [('Interest expense', 27), ('interest expense', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = franked dividends franking credits available for subsequent reporting periods based on a tax rate of 30.0% (2022 30.0%) , res_fuzz_match = [('Interest expense', 47), ('interest expense', 47)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = none foreign currency translation , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = foreign currency translation opening balance , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = foreign currency translation currency translation differences arising during the year , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = foreign currency translation balance 31 march , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: total , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: total , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: balance 1 april , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: net profit for the year , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: balance 31 march , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = franked dividends total , res_fuzz_match = [('Interest expense', 27), ('interest expense', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = franked dividends total , res_fuzz_match = [('Interest expense', 27), ('interest expense', 27)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = franked dividends franking credits available for subsequent reporting periods based on a tax rate of 30.0% (2022 30.0%) , res_fuzz_match = [('Interest expense', 47), ('interest expense', 47)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-18 14:48:52+0530 - sLogger - DEBUG - list_target_keywords = ['interest income']
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 33), (' interest expense', 26), (' finance expenses ', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' net finance costs ', 33), ('finance cost ', 30), (' finance expenses ', 18), (' interest expense', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 38), ('finance cost ', 27), (' finance expenses ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' net finance costs ', 41), (' interest expense', 41), ('finance cost ', 32), (' finance expenses ', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' finance expenses ', 63), (' interest expense', 57), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [('finance cost ', 48), (' net finance costs ', 48), (' finance expenses ', 22), (' interest expense', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('finance cost ', 55), (' net finance costs ', 46), (' interest expense', 38), (' finance expenses ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' net finance costs ', 58), ('finance cost ', 52), (' interest expense', 32), (' finance expenses ', 28)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest expense', 40), (' finance expenses ', 29), (' net finance costs ', 27), ('finance cost ', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' interest expense', 33), (' net finance costs ', 25), ('finance cost ', 20), (' finance expenses ', 18)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance expenses ', 67), (' interest expense', 31)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 36), (' finance expenses ', 34), (' interest expense', 32)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses ', 69), (' interest expense', 65), (' net finance costs ', 45), ('finance cost ', 37)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost ', 33), (' interest expense', 29), (' finance expenses ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' interest expense', 54), (' net finance costs ', 49), (' finance expenses ', 46), ('finance cost ', 42)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' interest expense', 39), (' finance expenses ', 37), (' net finance costs ', 31), ('finance cost ', 30)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' net finance costs ', 44), (' interest expense', 40), (' finance expenses ', 38), ('finance cost ', 35)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 33), (' interest expense', 26), (' finance expenses ', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' net finance costs ', 33), ('finance cost ', 30), (' finance expenses ', 18), (' interest expense', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 38), ('finance cost ', 27), (' finance expenses ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' net finance costs ', 41), (' interest expense', 41), ('finance cost ', 32), (' finance expenses ', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' finance expenses ', 63), (' interest expense', 57), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [('finance cost ', 48), (' net finance costs ', 48), (' finance expenses ', 22), (' interest expense', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('finance cost ', 55), (' net finance costs ', 46), (' interest expense', 38), (' finance expenses ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' net finance costs ', 58), ('finance cost ', 52), (' interest expense', 32), (' finance expenses ', 28)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest expense', 40), (' finance expenses ', 29), (' net finance costs ', 27), ('finance cost ', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' interest expense', 33), (' net finance costs ', 25), ('finance cost ', 20), (' finance expenses ', 18)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance expenses ', 67), (' interest expense', 31)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 36), (' finance expenses ', 34), (' interest expense', 32)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses ', 69), (' interest expense', 65), (' net finance costs ', 45), ('finance cost ', 37)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost ', 33), (' interest expense', 29), (' finance expenses ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' interest expense', 54), (' net finance costs ', 49), (' finance expenses ', 46), ('finance cost ', 42)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' interest expense', 39), (' finance expenses ', 37), (' net finance costs ', 31), ('finance cost ', 30)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' net finance costs ', 44), (' interest expense', 40), (' finance expenses ', 38), ('finance cost ', 35)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [10, 27], 'score': 100, 'value': -5032.0, 'line_item_label': ['Finance costs', 'Finance costs'], 'note_numbers': ['5(b)', '5(b)'], 'line_item_value': [-2516.0, -2516.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 33), (' interest expense', 26), (' finance expenses ', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' net finance costs ', 33), ('finance cost ', 30), (' finance expenses ', 18), (' interest expense', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 38), ('finance cost ', 27), (' finance expenses ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' net finance costs ', 41), (' interest expense', 41), ('finance cost ', 32), (' finance expenses ', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' finance expenses ', 63), (' interest expense', 57), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [('finance cost ', 48), (' net finance costs ', 48), (' finance expenses ', 22), (' interest expense', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('finance cost ', 55), (' net finance costs ', 46), (' interest expense', 38), (' finance expenses ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' net finance costs ', 58), ('finance cost ', 52), (' interest expense', 32), (' finance expenses ', 28)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest expense', 40), (' finance expenses ', 29), (' net finance costs ', 27), ('finance cost ', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' interest expense', 33), (' net finance costs ', 25), ('finance cost ', 20), (' finance expenses ', 18)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance expenses ', 67), (' interest expense', 31)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 36), (' finance expenses ', 34), (' interest expense', 32)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses ', 69), (' interest expense', 65), (' net finance costs ', 45), ('finance cost ', 37)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost ', 33), (' interest expense', 29), (' finance expenses ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' interest expense', 54), (' net finance costs ', 49), (' finance expenses ', 46), ('finance cost ', 42)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' interest expense', 39), (' finance expenses ', 37), (' net finance costs ', 31), ('finance cost ', 30)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' net finance costs ', 44), (' interest expense', 40), (' finance expenses ', 38), ('finance cost ', 35)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 33), (' interest expense', 26), (' finance expenses ', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' net finance costs ', 33), ('finance cost ', 30), (' finance expenses ', 18), (' interest expense', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 38), ('finance cost ', 27), (' finance expenses ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' net finance costs ', 41), (' interest expense', 41), ('finance cost ', 32), (' finance expenses ', 22)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' finance expenses ', 63), (' interest expense', 57), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [('finance cost ', 48), (' net finance costs ', 48), (' finance expenses ', 22), (' interest expense', 21)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('finance cost ', 55), (' net finance costs ', 46), (' interest expense', 38), (' finance expenses ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' net finance costs ', 58), ('finance cost ', 52), (' interest expense', 32), (' finance expenses ', 28)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest expense', 40), (' finance expenses ', 29), (' net finance costs ', 27), ('finance cost ', 15)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' interest expense', 33), (' net finance costs ', 25), ('finance cost ', 20), (' finance expenses ', 18)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance expenses ', 67), (' interest expense', 31)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 36), (' finance expenses ', 34), (' interest expense', 32)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses ', 69), (' interest expense', 65), (' net finance costs ', 45), ('finance cost ', 37)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost ', 33), (' interest expense', 29), (' finance expenses ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' interest expense', 54), (' net finance costs ', 49), (' finance expenses ', 46), ('finance cost ', 42)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' interest expense', 39), (' finance expenses ', 37), (' net finance costs ', 31), ('finance cost ', 30)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' net finance costs ', 44), (' interest expense', 40), (' finance expenses ', 38), ('finance cost ', 35)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - best_match = {'data_index': [10, 27], 'score': 100, 'value': -5688.0, 'line_item_label': ['Finance costs', 'Finance costs'], 'note_numbers': ['5(b)', '5(b)'], 'line_item_value': [-2844.0, -2844.0]}
2023-08-18 14:48:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:52+0530 - sLogger - DEBUG - keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: prepaid insurance nan , res_fuzz_match = [('loan ', 75), (' cash credit ', 55), (' debt ', 50), (' debenture ', 50), (' borrowings ', 50), (' bank facilities ', 50), (' Interest on leases ', 46), (' Interest accrued on lease liabilities ', 46), (' Lease interest expense ', 45), (' Discount unwind on the provision for asset retirement obligation ', 44), (' Other interest expense ', 43), (' Interest accrued on loans ', 42), (' Lease liabilities interest expense ', 41), (' Interest expenses ', 40), (' Interest on bank overdrafts and loans (other than those from related parties) ', 40), (' Interest expense on financial liabilities using the effective interest rate method - other ', 40), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 40), (' interest ', 38), (' interest income', 36), (' bonds ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: trade accounts receivable nan , res_fuzz_match = [('loan ', 75), (' cash credit ', 55), (' debt ', 50), (' borrowings ', 50), (' bank facilities ', 50), (' bonds ', 50), (' interest ', 50), (' Interest accrued on loans ', 47), (' Interest on leases ', 46), (' Interest accrued on lease liabilities ', 46), (' interest income', 43), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Interest on bank overdrafts and loans (other than those from related parties) ', 41), (' Interest expense on financial liabilities using the effective interest rate method - other ', 41), (' Interest expenses ', 40), (' Lease interest expense ', 40), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 39), (' debenture ', 38), (' Other interest expense ', 38), (' Lease liabilities interest expense ', 37)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: accrued interest receivable nan , res_fuzz_match = [(' interest ', 100), (' Interest on leases ', 77), ('loan ', 75), (' Interest expenses ', 73), (' interest income', 71), (' Interest accrued on loans ', 68), (' Other interest expense ', 67), (' Lease interest expense ', 65), (' Lease liabilities interest expense ', 56), (' cash credit ', 55), (' debt ', 50), (' borrowings ', 50), (' bank facilities ', 50), (' Interest accrued on lease liabilities ', 50), (' Interest expense on financial liabilities using the effective interest rate method - other ', 44), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 43), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Interest on bank overdrafts and loans (other than those from related parties) ', 42), (' debenture ', 38), (' bonds ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: total nan , res_fuzz_match = [('loan ', 75), (' cash credit ', 55), (' Interest accrued on loans ', 53), (' debt ', 50), (' borrowings ', 50), (' bank facilities ', 50), (' interest ', 50), (' Discount unwind on the provision for asset retirement obligation ', 43), (' Other interest expense ', 43), (' Interest expense on financial liabilities using the effective interest rate method - other ', 43), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 43), (' Interest accrued on lease liabilities ', 42), (' Interest on bank overdrafts and loans (other than those from related parties) ', 41), (' Lease interest expense ', 40), (' debenture ', 38), (' Interest on leases ', 38), (' Lease liabilities interest expense ', 37), (' interest income', 36), (' Interest expenses ', 33), (' bonds ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: set-off of deferred tax assets pursuant to set-off provisions nan , res_fuzz_match = [('loan ', 75), (' cash credit ', 55), (' debt ', 50), (' debenture ', 50), (' borrowings ', 50), (' bank facilities ', 50), (' interest ', 50), (' Interest on leases ', 46), (' Interest expense on financial liabilities using the effective interest rate method - other ', 46), (' Discount unwind on the provision for asset retirement obligation ', 44), (' Other interest expense ', 43), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 43), (' Interest accrued on loans ', 42), (' Interest accrued on lease liabilities ', 42), (' Interest on bank overdrafts and loans (other than those from related parties) ', 41), (' Interest expenses ', 40), (' Lease interest expense ', 40), (' Lease liabilities interest expense ', 37), (' interest income', 36), (' bonds ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = total trade accounts receivable movements $ at 1 april 2021 3,796 accrued interest receivable $ (278) , res_fuzz_match = [(' interest ', 100), (' Interest on leases ', 77), (' Interest expenses ', 73), (' interest income', 71), (' Other interest expense ', 62), (' Lease interest expense ', 60), (' Interest accrued on loans ', 58), (' Lease liabilities interest expense ', 56), ('loan ', 50), (' debt ', 50), (' debenture ', 50), (' bonds ', 50), (' Interest accrued on lease liabilities ', 50), (' Discount unwind on the provision for asset retirement obligation ', 46), (' cash credit ', 45), (' Interest expense on financial liabilities using the effective interest rate method - other ', 44), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 41), (' bank facilities ', 40), (' Interest on bank overdrafts and loans (other than those from related parties) ', 40), (' borrowings ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = total trade accounts receivable movements $ at 1 april 2021 3,796 accrued interest receivable $ (278) , res_fuzz_match = [(' interest ', 100), (' Interest on leases ', 77), (' Interest expenses ', 73), (' interest income', 71), (' Other interest expense ', 62), (' Lease interest expense ', 60), (' Interest accrued on loans ', 58), (' Lease liabilities interest expense ', 56), ('loan ', 50), (' debt ', 50), (' debenture ', 50), (' bonds ', 50), (' Interest accrued on lease liabilities ', 50), (' Discount unwind on the provision for asset retirement obligation ', 46), (' cash credit ', 45), (' Interest expense on financial liabilities using the effective interest rate method - other ', 44), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 41), (' bank facilities ', 40), (' Interest on bank overdrafts and loans (other than those from related parties) ', 40), (' borrowings ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) -profit or loss (3,782) 706 , res_fuzz_match = [(' cash credit ', 73), (' Interest on leases ', 54), ('loan ', 50), (' debt ', 50), (' Discount unwind on the provision for asset retirement obligation ', 46), (' interest income', 43), (' Interest on bank overdrafts and loans (other than those from related parties) ', 42), (' Interest accrued on loans ', 42), (' Interest expense on financial liabilities using the effective interest rate method - other ', 42), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 42), (' bank facilities ', 40), (' Interest expenses ', 40), (' debenture ', 38), (' interest ', 38), (' Other interest expense ', 38), (' Lease interest expense ', 37), (' borrowings ', 33), (' Interest accrued on lease liabilities ', 33), (' Lease liabilities interest expense ', 33), (' bonds ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 31 march 2022 14 428 , res_fuzz_match = [(' cash credit ', 73), (' debt ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 44), (' bank facilities ', 40), (' Discount unwind on the provision for asset retirement obligation ', 39), (' Other interest expense ', 39), (' Interest expense on financial liabilities using the effective interest rate method - other ', 39), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 39), (' debenture ', 38), (' interest ', 38), (' Interest on leases ', 38), (' interest income', 36), (' Interest accrued on loans ', 33), (' Interest accrued on lease liabilities ', 33), (' Lease interest expense ', 33), (' Lease liabilities interest expense ', 33), (' Interest expenses ', 28), ('loan ', 25), (' bonds ', 25), (' borrowings ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 1 april 2022 14 428 , res_fuzz_match = [(' cash credit ', 73), (' debt ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 50), (' Other interest expense ', 44), (' Interest accrued on lease liabilities ', 44), (' bank facilities ', 40), (' Discount unwind on the provision for asset retirement obligation ', 39), (' Interest accrued on loans ', 39), (' Lease interest expense ', 39), (' Interest expense on financial liabilities using the effective interest rate method - other ', 39), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 39), (' Lease liabilities interest expense ', 39), (' debenture ', 38), (' interest ', 38), (' Interest on leases ', 38), (' interest income', 36), (' Interest expenses ', 34), ('loan ', 25), (' bonds ', 25), (' borrowings ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) profit or loss 3,519 (428) , res_fuzz_match = [(' cash credit ', 73), (' Interest on leases ', 54), ('loan ', 50), (' debt ', 50), (' Discount unwind on the provision for asset retirement obligation ', 46), (' interest income', 43), (' Interest on bank overdrafts and loans (other than those from related parties) ', 42), (' Interest accrued on loans ', 42), (' Interest expense on financial liabilities using the effective interest rate method - other ', 42), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 42), (' bank facilities ', 40), (' Interest expenses ', 40), (' debenture ', 38), (' interest ', 38), (' Other interest expense ', 38), (' Lease interest expense ', 37), (' borrowings ', 33), (' Interest accrued on lease liabilities ', 33), (' Lease liabilities interest expense ', 33), (' bonds ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 31 march 2023 3,533 nan , res_fuzz_match = [(' cash credit ', 73), ('loan ', 50), (' debt ', 50), (' Interest accrued on loans ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 41), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 41), (' bank facilities ', 40), (' debenture ', 38), (' interest ', 38), (' Other interest expense ', 38), (' Interest on leases ', 38), (' Discount unwind on the provision for asset retirement obligation ', 36), (' Interest accrued on lease liabilities ', 36), (' Interest expense on financial liabilities using the effective interest rate method - other ', 36), (' interest income', 36), (' Lease interest expense ', 35), (' Interest expenses ', 33), (' Lease liabilities interest expense ', 32), (' bonds ', 25), (' borrowings ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = share capital 2023 shares 2022 shares , res_fuzz_match = [(' cash credit ', 55), (' interest ', 50), (' Discount unwind on the provision for asset retirement obligation ', 48), (' Interest expense on financial liabilities using the effective interest rate method - other ', 48), (' Interest on leases ', 46), (' Other interest expense ', 43), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 43), (' Interest accrued on loans ', 42), (' bank facilities ', 40), (' Interest expenses ', 40), (' Lease interest expense ', 40), (' Interest on bank overdrafts and loans (other than those from related parties) ', 39), (' Interest accrued on lease liabilities ', 39), (' Lease liabilities interest expense ', 39), (' interest income', 36), ('loan ', 25), (' debt ', 25), (' debenture ', 25), (' borrowings ', 17), (' bonds ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = share capital 2023 shares 2022 shares , res_fuzz_match = [(' cash credit ', 55), (' interest ', 50), (' Discount unwind on the provision for asset retirement obligation ', 48), (' Interest expense on financial liabilities using the effective interest rate method - other ', 48), (' Interest on leases ', 46), (' Other interest expense ', 43), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 43), (' Interest accrued on loans ', 42), (' bank facilities ', 40), (' Interest expenses ', 40), (' Lease interest expense ', 40), (' Interest on bank overdrafts and loans (other than those from related parties) ', 39), (' Interest accrued on lease liabilities ', 39), (' Lease liabilities interest expense ', 39), (' interest income', 36), ('loan ', 25), (' debt ', 25), (' debenture ', 25), (' borrowings ', 17), (' bonds ', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = ordinary shares fully paid 25,467,389 25467389 , res_fuzz_match = [(' interest ', 50), (' Interest accrued on lease liabilities ', 48), (' cash credit ', 45), (' Interest on bank overdrafts and loans (other than those from related parties) ', 44), (' Interest expense on financial liabilities using the effective interest rate method - other ', 44), (' Interest accrued on loans ', 42), (' bank facilities ', 40), (' Discount unwind on the provision for asset retirement obligation ', 40), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 40), (' debenture ', 38), (' Interest on leases ', 38), (' interest income', 36), (' borrowings ', 33), (' Interest expenses ', 33), (' Other interest expense ', 33), (' Lease liabilities interest expense ', 32), (' Lease interest expense ', 30), ('loan ', 25), (' debt ', 25), (' bonds ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: prepaid insurance nan , res_fuzz_match = [('loan ', 75), (' cash credit ', 55), (' debt ', 50), (' debenture ', 50), (' borrowings ', 50), (' bank facilities ', 50), (' Interest on leases ', 46), (' Interest accrued on lease liabilities ', 46), (' Lease interest expense ', 45), (' Discount unwind on the provision for asset retirement obligation ', 44), (' Other interest expense ', 43), (' Interest accrued on loans ', 42), (' Lease liabilities interest expense ', 41), (' Interest expenses ', 40), (' Interest on bank overdrafts and loans (other than those from related parties) ', 40), (' Interest expense on financial liabilities using the effective interest rate method - other ', 40), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 40), (' interest ', 38), (' interest income', 36), (' bonds ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: trade accounts receivable nan , res_fuzz_match = [('loan ', 75), (' cash credit ', 55), (' debt ', 50), (' borrowings ', 50), (' bank facilities ', 50), (' bonds ', 50), (' interest ', 50), (' Interest accrued on loans ', 47), (' Interest on leases ', 46), (' Interest accrued on lease liabilities ', 46), (' interest income', 43), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Interest on bank overdrafts and loans (other than those from related parties) ', 41), (' Interest expense on financial liabilities using the effective interest rate method - other ', 41), (' Interest expenses ', 40), (' Lease interest expense ', 40), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 39), (' debenture ', 38), (' Other interest expense ', 38), (' Lease liabilities interest expense ', 37)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: accrued interest receivable nan , res_fuzz_match = [(' interest ', 100), (' Interest on leases ', 77), ('loan ', 75), (' Interest expenses ', 73), (' interest income', 71), (' Interest accrued on loans ', 68), (' Other interest expense ', 67), (' Lease interest expense ', 65), (' Lease liabilities interest expense ', 56), (' cash credit ', 55), (' debt ', 50), (' borrowings ', 50), (' bank facilities ', 50), (' Interest accrued on lease liabilities ', 50), (' Interest expense on financial liabilities using the effective interest rate method - other ', 44), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 43), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Interest on bank overdrafts and loans (other than those from related parties) ', 42), (' debenture ', 38), (' bonds ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: total nan , res_fuzz_match = [('loan ', 75), (' cash credit ', 55), (' Interest accrued on loans ', 53), (' debt ', 50), (' borrowings ', 50), (' bank facilities ', 50), (' interest ', 50), (' Discount unwind on the provision for asset retirement obligation ', 43), (' Other interest expense ', 43), (' Interest expense on financial liabilities using the effective interest rate method - other ', 43), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 43), (' Interest accrued on lease liabilities ', 42), (' Interest on bank overdrafts and loans (other than those from related parties) ', 41), (' Lease interest expense ', 40), (' debenture ', 38), (' Interest on leases ', 38), (' Lease liabilities interest expense ', 37), (' interest income', 36), (' Interest expenses ', 33), (' bonds ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: set-off of deferred tax assets pursuant to set-off provisions nan , res_fuzz_match = [('loan ', 75), (' cash credit ', 55), (' debt ', 50), (' debenture ', 50), (' borrowings ', 50), (' bank facilities ', 50), (' interest ', 50), (' Interest on leases ', 46), (' Interest expense on financial liabilities using the effective interest rate method - other ', 46), (' Discount unwind on the provision for asset retirement obligation ', 44), (' Other interest expense ', 43), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 43), (' Interest accrued on loans ', 42), (' Interest accrued on lease liabilities ', 42), (' Interest on bank overdrafts and loans (other than those from related parties) ', 41), (' Interest expenses ', 40), (' Lease interest expense ', 40), (' Lease liabilities interest expense ', 37), (' interest income', 36), (' bonds ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = total trade accounts receivable movements $ at 1 april 2021 3,796 accrued interest receivable $ (278) , res_fuzz_match = [(' interest ', 100), (' Interest on leases ', 77), (' Interest expenses ', 73), (' interest income', 71), (' Other interest expense ', 62), (' Lease interest expense ', 60), (' Interest accrued on loans ', 58), (' Lease liabilities interest expense ', 56), ('loan ', 50), (' debt ', 50), (' debenture ', 50), (' bonds ', 50), (' Interest accrued on lease liabilities ', 50), (' Discount unwind on the provision for asset retirement obligation ', 46), (' cash credit ', 45), (' Interest expense on financial liabilities using the effective interest rate method - other ', 44), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 41), (' bank facilities ', 40), (' Interest on bank overdrafts and loans (other than those from related parties) ', 40), (' borrowings ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = total trade accounts receivable movements $ at 1 april 2021 3,796 accrued interest receivable $ (278) , res_fuzz_match = [(' interest ', 100), (' Interest on leases ', 77), (' Interest expenses ', 73), (' interest income', 71), (' Other interest expense ', 62), (' Lease interest expense ', 60), (' Interest accrued on loans ', 58), (' Lease liabilities interest expense ', 56), ('loan ', 50), (' debt ', 50), (' debenture ', 50), (' bonds ', 50), (' Interest accrued on lease liabilities ', 50), (' Discount unwind on the provision for asset retirement obligation ', 46), (' cash credit ', 45), (' Interest expense on financial liabilities using the effective interest rate method - other ', 44), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 41), (' bank facilities ', 40), (' Interest on bank overdrafts and loans (other than those from related parties) ', 40), (' borrowings ', 17)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) -profit or loss (3,782) 706 , res_fuzz_match = [(' cash credit ', 73), (' Interest on leases ', 54), ('loan ', 50), (' debt ', 50), (' Discount unwind on the provision for asset retirement obligation ', 46), (' interest income', 43), (' Interest on bank overdrafts and loans (other than those from related parties) ', 42), (' Interest accrued on loans ', 42), (' Interest expense on financial liabilities using the effective interest rate method - other ', 42), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 42), (' bank facilities ', 40), (' Interest expenses ', 40), (' debenture ', 38), (' interest ', 38), (' Other interest expense ', 38), (' Lease interest expense ', 37), (' borrowings ', 33), (' Interest accrued on lease liabilities ', 33), (' Lease liabilities interest expense ', 33), (' bonds ', 25)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:52+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 31 march 2022 14 428 , res_fuzz_match = [(' cash credit ', 73), (' debt ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 44), (' bank facilities ', 40), (' Discount unwind on the provision for asset retirement obligation ', 39), (' Other interest expense ', 39), (' Interest expense on financial liabilities using the effective interest rate method - other ', 39), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 39), (' debenture ', 38), (' interest ', 38), (' Interest on leases ', 38), (' interest income', 36), (' Interest accrued on loans ', 33), (' Interest accrued on lease liabilities ', 33), (' Lease interest expense ', 33), (' Lease liabilities interest expense ', 33), (' Interest expenses ', 28), ('loan ', 25), (' bonds ', 25), (' borrowings ', 17)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 1 april 2022 14 428 , res_fuzz_match = [(' cash credit ', 73), (' debt ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 50), (' Other interest expense ', 44), (' Interest accrued on lease liabilities ', 44), (' bank facilities ', 40), (' Discount unwind on the provision for asset retirement obligation ', 39), (' Interest accrued on loans ', 39), (' Lease interest expense ', 39), (' Interest expense on financial liabilities using the effective interest rate method - other ', 39), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 39), (' Lease liabilities interest expense ', 39), (' debenture ', 38), (' interest ', 38), (' Interest on leases ', 38), (' interest income', 36), (' Interest expenses ', 34), ('loan ', 25), (' bonds ', 25), (' borrowings ', 17)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) profit or loss 3,519 (428) , res_fuzz_match = [(' cash credit ', 73), (' Interest on leases ', 54), ('loan ', 50), (' debt ', 50), (' Discount unwind on the provision for asset retirement obligation ', 46), (' interest income', 43), (' Interest on bank overdrafts and loans (other than those from related parties) ', 42), (' Interest accrued on loans ', 42), (' Interest expense on financial liabilities using the effective interest rate method - other ', 42), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 42), (' bank facilities ', 40), (' Interest expenses ', 40), (' debenture ', 38), (' interest ', 38), (' Other interest expense ', 38), (' Lease interest expense ', 37), (' borrowings ', 33), (' Interest accrued on lease liabilities ', 33), (' Lease liabilities interest expense ', 33), (' bonds ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 31 march 2023 3,533 nan , res_fuzz_match = [(' cash credit ', 73), ('loan ', 50), (' debt ', 50), (' Interest accrued on loans ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 41), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 41), (' bank facilities ', 40), (' debenture ', 38), (' interest ', 38), (' Other interest expense ', 38), (' Interest on leases ', 38), (' Discount unwind on the provision for asset retirement obligation ', 36), (' Interest accrued on lease liabilities ', 36), (' Interest expense on financial liabilities using the effective interest rate method - other ', 36), (' interest income', 36), (' Lease interest expense ', 35), (' Interest expenses ', 33), (' Lease liabilities interest expense ', 32), (' bonds ', 25), (' borrowings ', 17)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = share capital 2023 shares 2022 shares , res_fuzz_match = [(' cash credit ', 55), (' interest ', 50), (' Discount unwind on the provision for asset retirement obligation ', 48), (' Interest expense on financial liabilities using the effective interest rate method - other ', 48), (' Interest on leases ', 46), (' Other interest expense ', 43), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 43), (' Interest accrued on loans ', 42), (' bank facilities ', 40), (' Interest expenses ', 40), (' Lease interest expense ', 40), (' Interest on bank overdrafts and loans (other than those from related parties) ', 39), (' Interest accrued on lease liabilities ', 39), (' Lease liabilities interest expense ', 39), (' interest income', 36), ('loan ', 25), (' debt ', 25), (' debenture ', 25), (' borrowings ', 17), (' bonds ', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = share capital 2023 shares 2022 shares , res_fuzz_match = [(' cash credit ', 55), (' interest ', 50), (' Discount unwind on the provision for asset retirement obligation ', 48), (' Interest expense on financial liabilities using the effective interest rate method - other ', 48), (' Interest on leases ', 46), (' Other interest expense ', 43), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 43), (' Interest accrued on loans ', 42), (' bank facilities ', 40), (' Interest expenses ', 40), (' Lease interest expense ', 40), (' Interest on bank overdrafts and loans (other than those from related parties) ', 39), (' Interest accrued on lease liabilities ', 39), (' Lease liabilities interest expense ', 39), (' interest income', 36), ('loan ', 25), (' debt ', 25), (' debenture ', 25), (' borrowings ', 17), (' bonds ', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = ordinary shares fully paid 25,467,389 25467389 , res_fuzz_match = [(' interest ', 50), (' Interest accrued on lease liabilities ', 48), (' cash credit ', 45), (' Interest on bank overdrafts and loans (other than those from related parties) ', 44), (' Interest expense on financial liabilities using the effective interest rate method - other ', 44), (' Interest accrued on loans ', 42), (' bank facilities ', 40), (' Discount unwind on the provision for asset retirement obligation ', 40), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 40), (' debenture ', 38), (' Interest on leases ', 38), (' interest income', 36), (' borrowings ', 33), (' Interest expenses ', 33), (' Other interest expense ', 33), (' Lease liabilities interest expense ', 32), (' Lease interest expense ', 30), ('loan ', 25), (' debt ', 25), (' bonds ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 5, 6, 17, 20, 21], 'score': [100, 100, 100, 100, 100, 100], 'value': [0.0, 0.0, 0.0, 428.0, 0.0, 0.0], 'label': ['The balance comprises temporary differences attributable to: Accrued interest receivable nan', 'Total Trade accounts receivable Movements $ At 1 April 2021 3,796 Accrued interest receivable $ (278)', 'Total Trade accounts receivable Movements $ At 1 April 2021 3,796 Accrued interest receivable $ (278)', 'The balance comprises temporary differences attributable to: Accrued interest receivable nan', 'Total Trade accounts receivable Movements $ At 1 April 2021 3,796 Accrued interest receivable $ (278)', 'Total Trade accounts receivable Movements $ At 1 April 2021 3,796 Accrued interest receivable $ (278)'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:53+0530 - sLogger - DEBUG - keywords = ['interest income'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: prepaid insurance nan , res_fuzz_match = [('interest income', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: trade accounts receivable nan , res_fuzz_match = [('interest income', 43)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: accrued interest receivable nan , res_fuzz_match = [('interest income', 71)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: total nan , res_fuzz_match = [('interest income', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: set-off of deferred tax assets pursuant to set-off provisions nan , res_fuzz_match = [('interest income', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = total trade accounts receivable movements $ at 1 april 2021 3,796 accrued interest receivable $ (278) , res_fuzz_match = [('interest income', 71)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = total trade accounts receivable movements $ at 1 april 2021 3,796 accrued interest receivable $ (278) , res_fuzz_match = [('interest income', 71)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) -profit or loss (3,782) 706 , res_fuzz_match = [('interest income', 43)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 31 march 2022 14 428 , res_fuzz_match = [('interest income', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 1 april 2022 14 428 , res_fuzz_match = [('interest income', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) profit or loss 3,519 (428) , res_fuzz_match = [('interest income', 43)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 31 march 2023 3,533 nan , res_fuzz_match = [('interest income', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = share capital 2023 shares 2022 shares , res_fuzz_match = [('interest income', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = share capital 2023 shares 2022 shares , res_fuzz_match = [('interest income', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = ordinary shares fully paid 25,467,389 25467389 , res_fuzz_match = [('interest income', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: prepaid insurance nan , res_fuzz_match = [('interest income', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: trade accounts receivable nan , res_fuzz_match = [('interest income', 43)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: accrued interest receivable nan , res_fuzz_match = [('interest income', 71)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: total nan , res_fuzz_match = [('interest income', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: set-off of deferred tax assets pursuant to set-off provisions nan , res_fuzz_match = [('interest income', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = total trade accounts receivable movements $ at 1 april 2021 3,796 accrued interest receivable $ (278) , res_fuzz_match = [('interest income', 71)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = total trade accounts receivable movements $ at 1 april 2021 3,796 accrued interest receivable $ (278) , res_fuzz_match = [('interest income', 71)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) -profit or loss (3,782) 706 , res_fuzz_match = [('interest income', 43)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 31 march 2022 14 428 , res_fuzz_match = [('interest income', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 1 april 2022 14 428 , res_fuzz_match = [('interest income', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) profit or loss 3,519 (428) , res_fuzz_match = [('interest income', 43)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 31 march 2023 3,533 nan , res_fuzz_match = [('interest income', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = share capital 2023 shares 2022 shares , res_fuzz_match = [('interest income', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = share capital 2023 shares 2022 shares , res_fuzz_match = [('interest income', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = ordinary shares fully paid 25,467,389 25467389 , res_fuzz_match = [('interest income', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:53+0530 - sLogger - DEBUG - keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = none foreign currency translation , res_fuzz_match = [('loan ', 50), (' debenture ', 50), (' bonds ', 50), (' interest ', 50), (' Interest on leases ', 46), (' Interest on bank overdrafts and loans (other than those from related parties) ', 45), (' Other interest expense ', 43), (' interest income', 43), (' Interest accrued on loans ', 42), (' Interest accrued on lease liabilities ', 42), (' Discount unwind on the provision for asset retirement obligation ', 41), (' Interest expense on financial liabilities using the effective interest rate method - other ', 41), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 41), (' bank facilities ', 40), (' Interest expenses ', 40), (' Lease interest expense ', 40), (' cash credit ', 36), (' borrowings ', 33), (' Lease liabilities interest expense ', 33), (' debt ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = foreign currency translation opening balance , res_fuzz_match = [('loan ', 75), (' Interest expenses ', 53), (' debenture ', 50), (' interest ', 50), (' Lease interest expense ', 50), (' interest income', 50), (' Other interest expense ', 48), (' Interest accrued on loans ', 47), (' Interest on leases ', 46), (' Lease liabilities interest expense ', 44), (' Interest on bank overdrafts and loans (other than those from related parties) ', 42), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 42), (' bank facilities ', 40), (' Discount unwind on the provision for asset retirement obligation ', 39), (' Interest accrued on lease liabilities ', 38), (' cash credit ', 36), (' Interest expense on financial liabilities using the effective interest rate method - other ', 36), (' borrowings ', 33), (' debt ', 25), (' bonds ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = foreign currency translation currency translation differences arising during the year , res_fuzz_match = [(' cash credit ', 55), ('loan ', 50), (' debt ', 50), (' debenture ', 50), (' interest ', 50), (' interest income', 50), (' Interest on leases ', 46), (' Interest accrued on lease liabilities ', 46), (' Lease interest expense ', 45), (' Interest expense on financial liabilities using the effective interest rate method - other ', 45), (' Other interest expense ', 43), (' Interest on bank overdrafts and loans (other than those from related parties) ', 43), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Interest accrued on loans ', 42), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 42), (' Lease liabilities interest expense ', 41), (' bank facilities ', 40), (' Interest expenses ', 40), (' borrowings ', 33), (' bonds ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = foreign currency translation balance 31 march , res_fuzz_match = [(' Interest on leases ', 54), (' Interest accrued on loans ', 53), ('loan ', 50), (' debenture ', 50), (' bank facilities ', 50), (' interest ', 50), (' interest income', 50), (' Interest accrued on lease liabilities ', 46), (' Other interest expense ', 43), (' Interest on bank overdrafts and loans (other than those from related parties) ', 41), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 41), (' Interest expenses ', 40), (' Lease interest expense ', 40), (' Interest expense on financial liabilities using the effective interest rate method - other ', 38), (' Lease liabilities interest expense ', 37), (' cash credit ', 36), (' Discount unwind on the provision for asset retirement obligation ', 35), (' borrowings ', 33), (' debt ', 25), (' bonds ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: total , res_fuzz_match = [(' debenture ', 62), (' interest ', 62), (' Interest on leases ', 62), (' Interest expenses ', 53), ('loan ', 50), (' debt ', 50), (' borrowings ', 50), (' Interest accrued on lease liabilities ', 50), (' interest income', 50), (' Other interest expense ', 48), (' Interest accrued on loans ', 47), (' Interest on bank overdrafts and loans (other than those from related parties) ', 45), (' Lease interest expense ', 45), (' Interest expense on financial liabilities using the effective interest rate method - other ', 45), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 42), (' bank facilities ', 40), (' Lease liabilities interest expense ', 37), (' cash credit ', 36), (' bonds ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: total , res_fuzz_match = [(' debenture ', 62), (' interest ', 62), (' Interest on leases ', 62), (' Interest expenses ', 53), ('loan ', 50), (' debt ', 50), (' borrowings ', 50), (' Interest accrued on lease liabilities ', 50), (' interest income', 50), (' Other interest expense ', 48), (' Interest accrued on loans ', 47), (' Interest on bank overdrafts and loans (other than those from related parties) ', 45), (' Lease interest expense ', 45), (' Interest expense on financial liabilities using the effective interest rate method - other ', 45), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 42), (' bank facilities ', 40), (' Lease liabilities interest expense ', 37), (' cash credit ', 36), (' bonds ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: balance 1 april , res_fuzz_match = [('loan ', 75), (' debenture ', 62), (' interest ', 62), (' Interest on leases ', 62), (' bank facilities ', 60), (' Interest expenses ', 53), (' borrowings ', 50), (' Interest accrued on lease liabilities ', 50), (' interest income', 50), (' Other interest expense ', 48), (' Interest on bank overdrafts and loans (other than those from related parties) ', 47), (' Interest accrued on loans ', 47), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 47), (' Lease interest expense ', 45), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Interest expense on financial liabilities using the effective interest rate method - other ', 38), (' Lease liabilities interest expense ', 37), (' cash credit ', 36), (' debt ', 25), (' bonds ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: net profit for the year , res_fuzz_match = [(' debenture ', 62), (' interest ', 62), (' Interest on leases ', 62), (' Interest expenses ', 53), ('loan ', 50), (' debt ', 50), (' borrowings ', 50), (' Interest accrued on lease liabilities ', 50), (' interest income', 50), (' Other interest expense ', 48), (' Interest accrued on loans ', 47), (' Interest on bank overdrafts and loans (other than those from related parties) ', 45), (' Lease interest expense ', 45), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 45), (' Discount unwind on the provision for asset retirement obligation ', 44), (' Interest expense on financial liabilities using the effective interest rate method - other ', 43), (' Lease liabilities interest expense ', 41), (' bank facilities ', 40), (' cash credit ', 36), (' bonds ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: balance 31 march , res_fuzz_match = [('loan ', 75), (' debenture ', 62), (' interest ', 62), (' Interest on leases ', 62), (' Interest expenses ', 53), (' borrowings ', 50), (' bank facilities ', 50), (' Interest accrued on lease liabilities ', 50), (' interest income', 50), (' Other interest expense ', 48), (' Interest accrued on loans ', 47), (' Interest on bank overdrafts and loans (other than those from related parties) ', 45), (' Lease interest expense ', 45), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 44), (' Discount unwind on the provision for asset retirement obligation ', 38), (' Lease liabilities interest expense ', 37), (' cash credit ', 36), (' Interest expense on financial liabilities using the effective interest rate method - other ', 36), (' debt ', 25), (' bonds ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = franked dividends total , res_fuzz_match = [('loan ', 50), (' debt ', 50), (' debenture ', 50), (' bank facilities ', 50), (' bonds ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 45), (' Interest expense on financial liabilities using the effective interest rate method - other ', 45), (' Discount unwind on the provision for asset retirement obligation ', 40), (' interest ', 38), (' Interest on leases ', 38), (' cash credit ', 36), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 35), (' Lease liabilities interest expense ', 35), (' Interest accrued on loans ', 32), (' Lease interest expense ', 31), (' Other interest expense ', 30), (' Interest accrued on lease liabilities ', 30), (' interest income', 29), (' Interest expenses ', 27), (' borrowings ', 17)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = franked dividends total , res_fuzz_match = [('loan ', 50), (' debt ', 50), (' debenture ', 50), (' bank facilities ', 50), (' bonds ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 45), (' Interest expense on financial liabilities using the effective interest rate method - other ', 45), (' Discount unwind on the provision for asset retirement obligation ', 40), (' interest ', 38), (' Interest on leases ', 38), (' cash credit ', 36), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 35), (' Lease liabilities interest expense ', 35), (' Interest accrued on loans ', 32), (' Lease interest expense ', 31), (' Other interest expense ', 30), (' Interest accrued on lease liabilities ', 30), (' interest income', 29), (' Interest expenses ', 27), (' borrowings ', 17)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = franked dividends franking credits available for subsequent reporting periods based on a tax rate of 30.0% (2022 30.0%) , res_fuzz_match = [(' cash credit ', 73), ('loan ', 50), (' debt ', 50), (' debenture ', 50), (' bank facilities ', 50), (' bonds ', 50), (' Discount unwind on the provision for asset retirement obligation ', 48), (' Interest expenses ', 47), (' Interest on leases ', 46), (' Interest expense on financial liabilities using the effective interest rate method - other ', 45), (' Interest on bank overdrafts and loans (other than those from related parties) ', 44), (' Other interest expense ', 43), (' interest income', 43), (' Interest accrued on loans ', 42), (' Interest accrued on lease liabilities ', 42), (' Lease liabilities interest expense ', 41), (' Lease interest expense ', 40), (' interest ', 38), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 36), (' borrowings ', 33)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = none foreign currency translation , res_fuzz_match = [('loan ', 50), (' debenture ', 50), (' bonds ', 50), (' interest ', 50), (' Interest on leases ', 46), (' Interest on bank overdrafts and loans (other than those from related parties) ', 45), (' Other interest expense ', 43), (' interest income', 43), (' Interest accrued on loans ', 42), (' Interest accrued on lease liabilities ', 42), (' Discount unwind on the provision for asset retirement obligation ', 41), (' Interest expense on financial liabilities using the effective interest rate method - other ', 41), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 41), (' bank facilities ', 40), (' Interest expenses ', 40), (' Lease interest expense ', 40), (' cash credit ', 36), (' borrowings ', 33), (' Lease liabilities interest expense ', 33), (' debt ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = foreign currency translation opening balance , res_fuzz_match = [('loan ', 75), (' Interest expenses ', 53), (' debenture ', 50), (' interest ', 50), (' Lease interest expense ', 50), (' interest income', 50), (' Other interest expense ', 48), (' Interest accrued on loans ', 47), (' Interest on leases ', 46), (' Lease liabilities interest expense ', 44), (' Interest on bank overdrafts and loans (other than those from related parties) ', 42), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 42), (' bank facilities ', 40), (' Discount unwind on the provision for asset retirement obligation ', 39), (' Interest accrued on lease liabilities ', 38), (' cash credit ', 36), (' Interest expense on financial liabilities using the effective interest rate method - other ', 36), (' borrowings ', 33), (' debt ', 25), (' bonds ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = foreign currency translation currency translation differences arising during the year , res_fuzz_match = [(' cash credit ', 55), ('loan ', 50), (' debt ', 50), (' debenture ', 50), (' interest ', 50), (' interest income', 50), (' Interest on leases ', 46), (' Interest accrued on lease liabilities ', 46), (' Lease interest expense ', 45), (' Interest expense on financial liabilities using the effective interest rate method - other ', 45), (' Other interest expense ', 43), (' Interest on bank overdrafts and loans (other than those from related parties) ', 43), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Interest accrued on loans ', 42), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 42), (' Lease liabilities interest expense ', 41), (' bank facilities ', 40), (' Interest expenses ', 40), (' borrowings ', 33), (' bonds ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = foreign currency translation balance 31 march , res_fuzz_match = [(' Interest on leases ', 54), (' Interest accrued on loans ', 53), ('loan ', 50), (' debenture ', 50), (' bank facilities ', 50), (' interest ', 50), (' interest income', 50), (' Interest accrued on lease liabilities ', 46), (' Other interest expense ', 43), (' Interest on bank overdrafts and loans (other than those from related parties) ', 41), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 41), (' Interest expenses ', 40), (' Lease interest expense ', 40), (' Interest expense on financial liabilities using the effective interest rate method - other ', 38), (' Lease liabilities interest expense ', 37), (' cash credit ', 36), (' Discount unwind on the provision for asset retirement obligation ', 35), (' borrowings ', 33), (' debt ', 25), (' bonds ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: total , res_fuzz_match = [(' debenture ', 62), (' interest ', 62), (' Interest on leases ', 62), (' Interest expenses ', 53), ('loan ', 50), (' debt ', 50), (' borrowings ', 50), (' Interest accrued on lease liabilities ', 50), (' interest income', 50), (' Other interest expense ', 48), (' Interest accrued on loans ', 47), (' Interest on bank overdrafts and loans (other than those from related parties) ', 45), (' Lease interest expense ', 45), (' Interest expense on financial liabilities using the effective interest rate method - other ', 45), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 42), (' bank facilities ', 40), (' Lease liabilities interest expense ', 37), (' cash credit ', 36), (' bonds ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: total , res_fuzz_match = [(' debenture ', 62), (' interest ', 62), (' Interest on leases ', 62), (' Interest expenses ', 53), ('loan ', 50), (' debt ', 50), (' borrowings ', 50), (' Interest accrued on lease liabilities ', 50), (' interest income', 50), (' Other interest expense ', 48), (' Interest accrued on loans ', 47), (' Interest on bank overdrafts and loans (other than those from related parties) ', 45), (' Lease interest expense ', 45), (' Interest expense on financial liabilities using the effective interest rate method - other ', 45), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 42), (' bank facilities ', 40), (' Lease liabilities interest expense ', 37), (' cash credit ', 36), (' bonds ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: balance 1 april , res_fuzz_match = [('loan ', 75), (' debenture ', 62), (' interest ', 62), (' Interest on leases ', 62), (' bank facilities ', 60), (' Interest expenses ', 53), (' borrowings ', 50), (' Interest accrued on lease liabilities ', 50), (' interest income', 50), (' Other interest expense ', 48), (' Interest on bank overdrafts and loans (other than those from related parties) ', 47), (' Interest accrued on loans ', 47), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 47), (' Lease interest expense ', 45), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Interest expense on financial liabilities using the effective interest rate method - other ', 38), (' Lease liabilities interest expense ', 37), (' cash credit ', 36), (' debt ', 25), (' bonds ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: net profit for the year , res_fuzz_match = [(' debenture ', 62), (' interest ', 62), (' Interest on leases ', 62), (' Interest expenses ', 53), ('loan ', 50), (' debt ', 50), (' borrowings ', 50), (' Interest accrued on lease liabilities ', 50), (' interest income', 50), (' Other interest expense ', 48), (' Interest accrued on loans ', 47), (' Interest on bank overdrafts and loans (other than those from related parties) ', 45), (' Lease interest expense ', 45), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 45), (' Discount unwind on the provision for asset retirement obligation ', 44), (' Interest expense on financial liabilities using the effective interest rate method - other ', 43), (' Lease liabilities interest expense ', 41), (' bank facilities ', 40), (' cash credit ', 36), (' bonds ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: balance 31 march , res_fuzz_match = [('loan ', 75), (' debenture ', 62), (' interest ', 62), (' Interest on leases ', 62), (' Interest expenses ', 53), (' borrowings ', 50), (' bank facilities ', 50), (' Interest accrued on lease liabilities ', 50), (' interest income', 50), (' Other interest expense ', 48), (' Interest accrued on loans ', 47), (' Interest on bank overdrafts and loans (other than those from related parties) ', 45), (' Lease interest expense ', 45), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 44), (' Discount unwind on the provision for asset retirement obligation ', 38), (' Lease liabilities interest expense ', 37), (' cash credit ', 36), (' Interest expense on financial liabilities using the effective interest rate method - other ', 36), (' debt ', 25), (' bonds ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = franked dividends total , res_fuzz_match = [('loan ', 50), (' debt ', 50), (' debenture ', 50), (' bank facilities ', 50), (' bonds ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 45), (' Interest expense on financial liabilities using the effective interest rate method - other ', 45), (' Discount unwind on the provision for asset retirement obligation ', 40), (' interest ', 38), (' Interest on leases ', 38), (' cash credit ', 36), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 35), (' Lease liabilities interest expense ', 35), (' Interest accrued on loans ', 32), (' Lease interest expense ', 31), (' Other interest expense ', 30), (' Interest accrued on lease liabilities ', 30), (' interest income', 29), (' Interest expenses ', 27), (' borrowings ', 17)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = franked dividends total , res_fuzz_match = [('loan ', 50), (' debt ', 50), (' debenture ', 50), (' bank facilities ', 50), (' bonds ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 45), (' Interest expense on financial liabilities using the effective interest rate method - other ', 45), (' Discount unwind on the provision for asset retirement obligation ', 40), (' interest ', 38), (' Interest on leases ', 38), (' cash credit ', 36), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 35), (' Lease liabilities interest expense ', 35), (' Interest accrued on loans ', 32), (' Lease interest expense ', 31), (' Other interest expense ', 30), (' Interest accrued on lease liabilities ', 30), (' interest income', 29), (' Interest expenses ', 27), (' borrowings ', 17)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = franked dividends franking credits available for subsequent reporting periods based on a tax rate of 30.0% (2022 30.0%) , res_fuzz_match = [(' cash credit ', 73), ('loan ', 50), (' debt ', 50), (' debenture ', 50), (' bank facilities ', 50), (' bonds ', 50), (' Discount unwind on the provision for asset retirement obligation ', 48), (' Interest expenses ', 47), (' Interest on leases ', 46), (' Interest expense on financial liabilities using the effective interest rate method - other ', 45), (' Interest on bank overdrafts and loans (other than those from related parties) ', 44), (' Other interest expense ', 43), (' interest income', 43), (' Interest accrued on loans ', 42), (' Interest accrued on lease liabilities ', 42), (' Lease liabilities interest expense ', 41), (' Lease interest expense ', 40), (' interest ', 38), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 36), (' borrowings ', 33)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:53+0530 - sLogger - DEBUG - keywords = ['interest income'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = none foreign currency translation , res_fuzz_match = [('interest income', 43)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = foreign currency translation opening balance , res_fuzz_match = [('interest income', 50)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = foreign currency translation currency translation differences arising during the year , res_fuzz_match = [('interest income', 50)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = foreign currency translation balance 31 march , res_fuzz_match = [('interest income', 50)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: total , res_fuzz_match = [('interest income', 50)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: total , res_fuzz_match = [('interest income', 50)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: balance 1 april , res_fuzz_match = [('interest income', 50)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: net profit for the year , res_fuzz_match = [('interest income', 50)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: balance 31 march , res_fuzz_match = [('interest income', 50)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = franked dividends total , res_fuzz_match = [('interest income', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = franked dividends total , res_fuzz_match = [('interest income', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = franked dividends franking credits available for subsequent reporting periods based on a tax rate of 30.0% (2022 30.0%) , res_fuzz_match = [('interest income', 43)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = none foreign currency translation , res_fuzz_match = [('interest income', 43)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = foreign currency translation opening balance , res_fuzz_match = [('interest income', 50)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = foreign currency translation currency translation differences arising during the year , res_fuzz_match = [('interest income', 50)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = foreign currency translation balance 31 march , res_fuzz_match = [('interest income', 50)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: total , res_fuzz_match = [('interest income', 50)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: total , res_fuzz_match = [('interest income', 50)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: balance 1 april , res_fuzz_match = [('interest income', 50)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: net profit for the year , res_fuzz_match = [('interest income', 50)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: balance 31 march , res_fuzz_match = [('interest income', 50)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = franked dividends total , res_fuzz_match = [('interest income', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = franked dividends total , res_fuzz_match = [('interest income', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = franked dividends franking credits available for subsequent reporting periods based on a tax rate of 30.0% (2022 30.0%) , res_fuzz_match = [('interest income', 43)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest income', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:53+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-18 14:48:53+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories']
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:53+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-18 14:48:53+0530 - sLogger - DEBUG - list_target_keywords = ['Accretion expense ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Asset impairment ', ' commission revenue ', ' dividend from other parties ', ' effective portion of changes in fair value of cash flow ', ' foreign exchange gain ', ' government grants ', ' Impairment loss ', ' insurance proceeds ', ' Interest on unwinding of discount in provisions ', ' Investment in joint venture ', ' japan recoveries ', ' Loss on loan refinancing ', ' Loss on sale of disposal of assets ', ' margin charge income ', ' net (loss)/profit on disposal of non-current assets ', ' net foreign exchange (loss)/gain ', ' net foreign exchange gain ', ' net foreign exchange gains/(losses) ', ' net gain / loss on disposal of property plant and equipment ', ' Net loss on disposal of property ', ' net of tax ', ' Net other foreign exchange (losses)/gains ', ' net ppe disposal (loss)/gain ', ' other ', ' other income ', ' other miscellaneous - net (loss)/gain ', ' paid by customers - at amortised cost ', ' plant and equipment ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' profit from discontinued operation ', ' Profit on sale of assets ', ' quota lease income ', ' Remuneration from services linked to newly acquired entities ', ' secondment income (tw recovery) ', ' Share of gain/(loss) of joint venture ', ' share of jv income ', ' Sub-lease rental income ', ' sundry income ', ' other revenue']
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:53+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-18 14:48:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:53+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' other income and revenue ', 52), (' interest revenue ', 51), (' Profit from discontinued operation ', 51), (' share of profit of equity accounted investees ', 42), (' other opertaing income ', 40), (' Share of gain/(loss) of joint venture ', 40), (' net finance costs ', 38), (' finance income and costs ', 38), (' Finance income and costs ', 38), (' Loss on revaluation of inventories', 38), (' other income ', 37), (' finance income and finance cost ', 37), (' Other income ', 37), (' Finance income and finance costs ', 37), (' Impairement (expenses)/reversal ', 35), ('finance cost ', 33), (' other gains/losses ', 30), (' interest gains and losses ', 26), (' finance expenses', 22), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 16), (' Impairment loss ', 14)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' Share of gain/(loss) of joint venture ', 38), (' net finance costs ', 33), (' other gains/losses ', 33), (' Loss on revaluation of inventories', 33), ('finance cost ', 30), (' other opertaing income ', 30), (' other income ', 30), (' Other income ', 30), (' share of profit of equity accounted investees ', 27), (' finance income and costs ', 27), (' Finance income and costs ', 27), (' interest gains and losses ', 26), (' other income and revenue ', 26), (' net of tax ', 25), (' net of tax ', 25), (' finance income and finance cost ', 22), (' Finance income and finance costs ', 22), (' Profit from discontinued operation ', 22), (' Impairement (expenses)/reversal ', 21), (' Impairment loss ', 20), (' finance expenses', 18), (' interest revenue ', 17), (' expenses ', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other income ', 100), (' Other income ', 100), (' other opertaing income ', 76), (' other gains/losses ', 69), (' other income and revenue ', 67), (' Profit from discontinued operation ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' interest revenue ', 38), (' Loss on revaluation of inventories', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' net of tax ', 33), (' net of tax ', 33), (' Impairement (expenses)/reversal ', 32), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' share of profit of equity accounted investees ', 30), ('finance cost ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' expenses ', 12)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' other gains/losses ', 69), (' other opertaing income ', 62), (' other income ', 56), (' Other income ', 56), (' net of tax ', 48), (' net of tax ', 48), (' other income and revenue ', 44), (' Share of gain/(loss) of joint venture ', 43), (' net finance costs ', 41), (' share of profit of equity accounted investees ', 41), (' finance income and costs ', 34), (' interest revenue ', 34), (' Profit from discontinued operation ', 34), (' Finance income and costs ', 34), (' Loss on revaluation of inventories', 34), (' interest gains and losses ', 33), ('finance cost ', 32), (' Impairment loss ', 32), (' finance income and finance cost ', 29), (' Impairement (expenses)/reversal ', 29), (' Finance income and finance costs ', 29), (' finance expenses', 22), (' expenses ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' expenses ', 100), (' finance expenses', 63), (' Impairement (expenses)/reversal ', 46), (' net of tax ', 31), (' net of tax ', 31), (' interest revenue ', 29), (' Impairment loss ', 24), (' Loss on revaluation of inventories', 22), (' interest gains and losses ', 21), (' other income and revenue ', 21), (' other gains/losses ', 19), (' Share of gain/(loss) of joint venture ', 18), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' finance income and costs ', 15), (' Finance income and costs ', 15), ('finance cost ', 12), (' other income ', 12), (' finance income and finance cost ', 12), (' Other income ', 12), (' Finance income and finance costs ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [('finance cost ', 48), (' net finance costs ', 48), (' share of profit of equity accounted investees ', 41), (' other income ', 40), (' Other income ', 40), (' other opertaing income ', 38), (' Share of gain/(loss) of joint venture ', 38), (' other gains/losses ', 34), (' finance income and costs ', 34), (' Profit from discontinued operation ', 34), (' Finance income and costs ', 34), (' Loss on revaluation of inventories', 34), (' finance income and finance cost ', 33), (' other income and revenue ', 33), (' Finance income and finance costs ', 33), (' net of tax ', 29), (' net of tax ', 29), (' interest revenue ', 28), (' interest gains and losses ', 28), (' Impairment loss ', 24), (' Impairement (expenses)/reversal ', 24), (' finance expenses', 22), (' expenses ', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('finance cost ', 55), (' net finance costs ', 46), (' other opertaing income ', 41), (' share of profit of equity accounted investees ', 39), (' Impairement (expenses)/reversal ', 39), (' finance income and costs ', 38), (' interest revenue ', 38), (' Finance income and costs ', 38), (' Profit from discontinued operation ', 37), (' other income ', 36), (' other income and revenue ', 36), (' Other income ', 36), (' expenses ', 35), (' other gains/losses ', 31), (' finance income and finance cost ', 31), (' Finance income and finance costs ', 31), (' Loss on revaluation of inventories', 31), (' Impairment loss ', 27), (' Share of gain/(loss) of joint venture ', 26), (' finance expenses', 25), (' interest gains and losses ', 24), (' net of tax ', 22), (' net of tax ', 22)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' net finance costs ', 58), ('finance cost ', 52), (' finance income and costs ', 43), (' Finance income and costs ', 43), (' finance income and finance cost ', 41), (' Finance income and finance costs ', 41), (' other income ', 37), (' Other income ', 37), (' other opertaing income ', 35), (' net of tax ', 35), (' net of tax ', 35), (' Impairement (expenses)/reversal ', 33), (' Profit from discontinued operation ', 33), (' other gains/losses ', 32), (' interest gains and losses ', 32), (' share of profit of equity accounted investees ', 31), (' Impairment loss ', 30), (' finance expenses', 28), (' Share of gain/(loss) of joint venture ', 27), (' interest revenue ', 26), (' other income and revenue ', 26), (' Loss on revaluation of inventories', 22), (' expenses ', 18)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest revenue ', 40), (' Loss on revaluation of inventories', 39), (' Impairment loss ', 38), (' other opertaing income ', 36), (' share of profit of equity accounted investees ', 36), (' net of tax ', 36), (' net of tax ', 36), (' Impairement (expenses)/reversal ', 34), (' other gains/losses ', 33), (' Share of gain/(loss) of joint venture ', 33), (' interest gains and losses ', 32), (' other income and revenue ', 32), (' other income ', 31), (' Other income ', 31), (' finance expenses', 29), (' expenses ', 29), (' Profit from discontinued operation ', 29), (' finance income and costs ', 28), (' Finance income and costs ', 28), (' net finance costs ', 27), (' finance income and finance cost ', 23), (' Finance income and finance costs ', 23), ('finance cost ', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' other gains/losses ', 50), (' interest gains and losses ', 45), (' interest revenue ', 42), (' other income ', 40), (' Other income ', 40), (' other income and revenue ', 39), (' Share of gain/(loss) of joint venture ', 38), (' finance income and costs ', 33), (' Finance income and costs ', 33), (' Loss on revaluation of inventories', 33), (' other opertaing income ', 30), (' Impairment loss ', 30), (' Profit from discontinued operation ', 28), (' expenses ', 27), (' finance income and finance cost ', 27), (' share of profit of equity accounted investees ', 27), (' Finance income and finance costs ', 27), (' net finance costs ', 25), (' net of tax ', 25), (' net of tax ', 25), (' Impairement (expenses)/reversal ', 21), ('finance cost ', 20), (' finance expenses', 18)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance income and costs ', 69), (' Finance income and costs ', 69), (' finance expenses', 67), (' finance income and finance cost ', 56), (' Finance income and finance costs ', 56), (' share of profit of equity accounted investees ', 35), (' net of tax ', 33), (' net of tax ', 33), (' Profit from discontinued operation ', 32), (' interest revenue ', 31), (' other income and revenue ', 30), (' other opertaing income ', 28), (' other income ', 27), (' Other income ', 27), (' Share of gain/(loss) of joint venture ', 26), (' Impairement (expenses)/reversal ', 26), (' Loss on revaluation of inventories', 25), (' interest gains and losses ', 24), (' other gains/losses ', 23), (' Impairment loss ', 18), (' expenses ', 12)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' other opertaing income ', 55), (' Profit from discontinued operation ', 49), (' other income ', 48), (' Other income ', 48), (' share of profit of equity accounted investees ', 46), (' other income and revenue ', 45), (' net of tax ', 41), (' net of tax ', 41), (' net finance costs ', 38), (' Loss on revaluation of inventories', 37), ('finance cost ', 36), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' finance expenses', 34), (' finance income and costs ', 33), (' Impairement (expenses)/reversal ', 33), (' Finance income and costs ', 33), (' other gains/losses ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Impairment loss ', 30), (' interest revenue ', 27), (' expenses ', 14)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' Impairement (expenses)/reversal ', 56), (' expenses ', 55), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' other income and revenue ', 47), (' net finance costs ', 45), (' finance income and costs ', 43), (' net of tax ', 43), (' net of tax ', 43), (' Finance income and costs ', 43), ('finance cost ', 37), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' Profit from discontinued operation ', 33), (' other gains/losses ', 32), (' interest revenue ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 27), (' Impairment loss ', 22)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' other opertaing income ', 54), (' other income ', 47), (' Other income ', 47), (' share of profit of equity accounted investees ', 44), (' Share of gain/(loss) of joint venture ', 43), (' Profit from discontinued operation ', 43), (' other gains/losses ', 41), (' other income and revenue ', 39), (' Impairement (expenses)/reversal ', 36), (' net finance costs ', 35), (' Loss on revaluation of inventories', 35), ('finance cost ', 33), (' net of tax ', 31), (' net of tax ', 31), (' interest revenue ', 29), (' interest gains and losses ', 29), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' finance income and costs ', 25), (' Finance income and costs ', 25), (' Impairment loss ', 20), (' expenses ', 16)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other income ', 67), (' Other income ', 67), (' other income and revenue ', 59), (' other opertaing income ', 55), (' net finance costs ', 49), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' finance expenses', 46), (' Profit from discontinued operation ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' share of profit of equity accounted investees ', 39), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' Impairment loss ', 30), (' expenses ', 29), (' Loss on revaluation of inventories', 28), (' interest revenue ', 27), (' net of tax ', 21), (' net of tax ', 21)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' Profit from discontinued operation ', 48), (' Loss on revaluation of inventories', 42), (' other opertaing income ', 41), (' other income and revenue ', 41), (' interest gains and losses ', 38), (' Share of gain/(loss) of joint venture ', 38), (' finance expenses', 37), (' Impairement (expenses)/reversal ', 36), (' interest revenue ', 35), (' finance income and finance cost ', 34), (' share of profit of equity accounted investees ', 34), (' Finance income and finance costs ', 34), (' finance income and costs ', 32), (' Finance income and costs ', 32), (' net finance costs ', 31), (' other gains/losses ', 31), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' expenses ', 29), (' Impairment loss ', 26), (' net of tax ', 23), (' net of tax ', 23)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' other income and revenue ', 46), (' other opertaing income ', 45), (' net finance costs ', 44), (' other income ', 43), (' share of profit of equity accounted investees ', 43), (' Other income ', 43), (' Profit from discontinued operation ', 42), (' Impairement (expenses)/reversal ', 40), (' finance income and costs ', 39), (' Finance income and costs ', 39), (' finance expenses', 38), (' Share of gain/(loss) of joint venture ', 38), (' other gains/losses ', 36), (' Loss on revaluation of inventories', 36), ('finance cost ', 35), (' finance income and finance cost ', 35), (' Finance income and finance costs ', 35), (' interest gains and losses ', 32), (' interest revenue ', 28), (' net of tax ', 24), (' net of tax ', 24), (' Impairment loss ', 22), (' expenses ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' other income and revenue ', 52), (' interest revenue ', 51), (' Profit from discontinued operation ', 51), (' share of profit of equity accounted investees ', 42), (' other opertaing income ', 40), (' Share of gain/(loss) of joint venture ', 40), (' net finance costs ', 38), (' finance income and costs ', 38), (' Finance income and costs ', 38), (' Loss on revaluation of inventories', 38), (' other income ', 37), (' finance income and finance cost ', 37), (' Other income ', 37), (' Finance income and finance costs ', 37), (' Impairement (expenses)/reversal ', 35), ('finance cost ', 33), (' other gains/losses ', 30), (' interest gains and losses ', 26), (' finance expenses', 22), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 16), (' Impairment loss ', 14)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' Share of gain/(loss) of joint venture ', 38), (' net finance costs ', 33), (' other gains/losses ', 33), (' Loss on revaluation of inventories', 33), ('finance cost ', 30), (' other opertaing income ', 30), (' other income ', 30), (' Other income ', 30), (' share of profit of equity accounted investees ', 27), (' finance income and costs ', 27), (' Finance income and costs ', 27), (' interest gains and losses ', 26), (' other income and revenue ', 26), (' net of tax ', 25), (' net of tax ', 25), (' finance income and finance cost ', 22), (' Finance income and finance costs ', 22), (' Profit from discontinued operation ', 22), (' Impairement (expenses)/reversal ', 21), (' Impairment loss ', 20), (' finance expenses', 18), (' interest revenue ', 17), (' expenses ', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other income ', 100), (' Other income ', 100), (' other opertaing income ', 76), (' other gains/losses ', 69), (' other income and revenue ', 67), (' Profit from discontinued operation ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' interest revenue ', 38), (' Loss on revaluation of inventories', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' net of tax ', 33), (' net of tax ', 33), (' Impairement (expenses)/reversal ', 32), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' share of profit of equity accounted investees ', 30), ('finance cost ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' expenses ', 12)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' other gains/losses ', 69), (' other opertaing income ', 62), (' other income ', 56), (' Other income ', 56), (' net of tax ', 48), (' net of tax ', 48), (' other income and revenue ', 44), (' Share of gain/(loss) of joint venture ', 43), (' net finance costs ', 41), (' share of profit of equity accounted investees ', 41), (' finance income and costs ', 34), (' interest revenue ', 34), (' Profit from discontinued operation ', 34), (' Finance income and costs ', 34), (' Loss on revaluation of inventories', 34), (' interest gains and losses ', 33), ('finance cost ', 32), (' Impairment loss ', 32), (' finance income and finance cost ', 29), (' Impairement (expenses)/reversal ', 29), (' Finance income and finance costs ', 29), (' finance expenses', 22), (' expenses ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' expenses ', 100), (' finance expenses', 63), (' Impairement (expenses)/reversal ', 46), (' net of tax ', 31), (' net of tax ', 31), (' interest revenue ', 29), (' Impairment loss ', 24), (' Loss on revaluation of inventories', 22), (' interest gains and losses ', 21), (' other income and revenue ', 21), (' other gains/losses ', 19), (' Share of gain/(loss) of joint venture ', 18), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' finance income and costs ', 15), (' Finance income and costs ', 15), ('finance cost ', 12), (' other income ', 12), (' finance income and finance cost ', 12), (' Other income ', 12), (' Finance income and finance costs ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [('finance cost ', 48), (' net finance costs ', 48), (' share of profit of equity accounted investees ', 41), (' other income ', 40), (' Other income ', 40), (' other opertaing income ', 38), (' Share of gain/(loss) of joint venture ', 38), (' other gains/losses ', 34), (' finance income and costs ', 34), (' Profit from discontinued operation ', 34), (' Finance income and costs ', 34), (' Loss on revaluation of inventories', 34), (' finance income and finance cost ', 33), (' other income and revenue ', 33), (' Finance income and finance costs ', 33), (' net of tax ', 29), (' net of tax ', 29), (' interest revenue ', 28), (' interest gains and losses ', 28), (' Impairment loss ', 24), (' Impairement (expenses)/reversal ', 24), (' finance expenses', 22), (' expenses ', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('finance cost ', 55), (' net finance costs ', 46), (' other opertaing income ', 41), (' share of profit of equity accounted investees ', 39), (' Impairement (expenses)/reversal ', 39), (' finance income and costs ', 38), (' interest revenue ', 38), (' Finance income and costs ', 38), (' Profit from discontinued operation ', 37), (' other income ', 36), (' other income and revenue ', 36), (' Other income ', 36), (' expenses ', 35), (' other gains/losses ', 31), (' finance income and finance cost ', 31), (' Finance income and finance costs ', 31), (' Loss on revaluation of inventories', 31), (' Impairment loss ', 27), (' Share of gain/(loss) of joint venture ', 26), (' finance expenses', 25), (' interest gains and losses ', 24), (' net of tax ', 22), (' net of tax ', 22)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' net finance costs ', 58), ('finance cost ', 52), (' finance income and costs ', 43), (' Finance income and costs ', 43), (' finance income and finance cost ', 41), (' Finance income and finance costs ', 41), (' other income ', 37), (' Other income ', 37), (' other opertaing income ', 35), (' net of tax ', 35), (' net of tax ', 35), (' Impairement (expenses)/reversal ', 33), (' Profit from discontinued operation ', 33), (' other gains/losses ', 32), (' interest gains and losses ', 32), (' share of profit of equity accounted investees ', 31), (' Impairment loss ', 30), (' finance expenses', 28), (' Share of gain/(loss) of joint venture ', 27), (' interest revenue ', 26), (' other income and revenue ', 26), (' Loss on revaluation of inventories', 22), (' expenses ', 18)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest revenue ', 40), (' Loss on revaluation of inventories', 39), (' Impairment loss ', 38), (' other opertaing income ', 36), (' share of profit of equity accounted investees ', 36), (' net of tax ', 36), (' net of tax ', 36), (' Impairement (expenses)/reversal ', 34), (' other gains/losses ', 33), (' Share of gain/(loss) of joint venture ', 33), (' interest gains and losses ', 32), (' other income and revenue ', 32), (' other income ', 31), (' Other income ', 31), (' finance expenses', 29), (' expenses ', 29), (' Profit from discontinued operation ', 29), (' finance income and costs ', 28), (' Finance income and costs ', 28), (' net finance costs ', 27), (' finance income and finance cost ', 23), (' Finance income and finance costs ', 23), ('finance cost ', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' other gains/losses ', 50), (' interest gains and losses ', 45), (' interest revenue ', 42), (' other income ', 40), (' Other income ', 40), (' other income and revenue ', 39), (' Share of gain/(loss) of joint venture ', 38), (' finance income and costs ', 33), (' Finance income and costs ', 33), (' Loss on revaluation of inventories', 33), (' other opertaing income ', 30), (' Impairment loss ', 30), (' Profit from discontinued operation ', 28), (' expenses ', 27), (' finance income and finance cost ', 27), (' share of profit of equity accounted investees ', 27), (' Finance income and finance costs ', 27), (' net finance costs ', 25), (' net of tax ', 25), (' net of tax ', 25), (' Impairement (expenses)/reversal ', 21), ('finance cost ', 20), (' finance expenses', 18)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance income and costs ', 69), (' Finance income and costs ', 69), (' finance expenses', 67), (' finance income and finance cost ', 56), (' Finance income and finance costs ', 56), (' share of profit of equity accounted investees ', 35), (' net of tax ', 33), (' net of tax ', 33), (' Profit from discontinued operation ', 32), (' interest revenue ', 31), (' other income and revenue ', 30), (' other opertaing income ', 28), (' other income ', 27), (' Other income ', 27), (' Share of gain/(loss) of joint venture ', 26), (' Impairement (expenses)/reversal ', 26), (' Loss on revaluation of inventories', 25), (' interest gains and losses ', 24), (' other gains/losses ', 23), (' Impairment loss ', 18), (' expenses ', 12)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' other opertaing income ', 55), (' Profit from discontinued operation ', 49), (' other income ', 48), (' Other income ', 48), (' share of profit of equity accounted investees ', 46), (' other income and revenue ', 45), (' net of tax ', 41), (' net of tax ', 41), (' net finance costs ', 38), (' Loss on revaluation of inventories', 37), ('finance cost ', 36), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' finance expenses', 34), (' finance income and costs ', 33), (' Impairement (expenses)/reversal ', 33), (' Finance income and costs ', 33), (' other gains/losses ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Impairment loss ', 30), (' interest revenue ', 27), (' expenses ', 14)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' Impairement (expenses)/reversal ', 56), (' expenses ', 55), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' other income and revenue ', 47), (' net finance costs ', 45), (' finance income and costs ', 43), (' net of tax ', 43), (' net of tax ', 43), (' Finance income and costs ', 43), ('finance cost ', 37), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' Profit from discontinued operation ', 33), (' other gains/losses ', 32), (' interest revenue ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 27), (' Impairment loss ', 22)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' other opertaing income ', 54), (' other income ', 47), (' Other income ', 47), (' share of profit of equity accounted investees ', 44), (' Share of gain/(loss) of joint venture ', 43), (' Profit from discontinued operation ', 43), (' other gains/losses ', 41), (' other income and revenue ', 39), (' Impairement (expenses)/reversal ', 36), (' net finance costs ', 35), (' Loss on revaluation of inventories', 35), ('finance cost ', 33), (' net of tax ', 31), (' net of tax ', 31), (' interest revenue ', 29), (' interest gains and losses ', 29), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' finance income and costs ', 25), (' Finance income and costs ', 25), (' Impairment loss ', 20), (' expenses ', 16)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other income ', 67), (' Other income ', 67), (' other income and revenue ', 59), (' other opertaing income ', 55), (' net finance costs ', 49), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' finance expenses', 46), (' Profit from discontinued operation ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' share of profit of equity accounted investees ', 39), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' Impairment loss ', 30), (' expenses ', 29), (' Loss on revaluation of inventories', 28), (' interest revenue ', 27), (' net of tax ', 21), (' net of tax ', 21)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' Profit from discontinued operation ', 48), (' Loss on revaluation of inventories', 42), (' other opertaing income ', 41), (' other income and revenue ', 41), (' interest gains and losses ', 38), (' Share of gain/(loss) of joint venture ', 38), (' finance expenses', 37), (' Impairement (expenses)/reversal ', 36), (' interest revenue ', 35), (' finance income and finance cost ', 34), (' share of profit of equity accounted investees ', 34), (' Finance income and finance costs ', 34), (' finance income and costs ', 32), (' Finance income and costs ', 32), (' net finance costs ', 31), (' other gains/losses ', 31), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' expenses ', 29), (' Impairment loss ', 26), (' net of tax ', 23), (' net of tax ', 23)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' other income and revenue ', 46), (' other opertaing income ', 45), (' net finance costs ', 44), (' other income ', 43), (' share of profit of equity accounted investees ', 43), (' Other income ', 43), (' Profit from discontinued operation ', 42), (' Impairement (expenses)/reversal ', 40), (' finance income and costs ', 39), (' Finance income and costs ', 39), (' finance expenses', 38), (' Share of gain/(loss) of joint venture ', 38), (' other gains/losses ', 36), (' Loss on revaluation of inventories', 36), ('finance cost ', 35), (' finance income and finance cost ', 35), (' Finance income and finance costs ', 35), (' interest gains and losses ', 32), (' interest revenue ', 28), (' net of tax ', 24), (' net of tax ', 24), (' Impairment loss ', 22), (' expenses ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 10, 19, 21, 27], 'score': 100, 'value': 1389706.0, 'line_item_label': ['Other income', 'Expenses', 'Finance costs', 'Other income', 'Expenses', 'Finance costs'], 'note_numbers': ['4', nan, '5(b)', '4', nan, '5(b)'], 'line_item_value': [697369.0, 0.0, -2516.0, 697369.0, 0.0, -2516.0]}
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:53+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' other income and revenue ', 52), (' interest revenue ', 51), (' Profit from discontinued operation ', 51), (' share of profit of equity accounted investees ', 42), (' other opertaing income ', 40), (' Share of gain/(loss) of joint venture ', 40), (' net finance costs ', 38), (' finance income and costs ', 38), (' Finance income and costs ', 38), (' Loss on revaluation of inventories', 38), (' other income ', 37), (' finance income and finance cost ', 37), (' Other income ', 37), (' Finance income and finance costs ', 37), (' Impairement (expenses)/reversal ', 35), ('finance cost ', 33), (' other gains/losses ', 30), (' interest gains and losses ', 26), (' finance expenses', 22), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 16), (' Impairment loss ', 14)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' Share of gain/(loss) of joint venture ', 38), (' net finance costs ', 33), (' other gains/losses ', 33), (' Loss on revaluation of inventories', 33), ('finance cost ', 30), (' other opertaing income ', 30), (' other income ', 30), (' Other income ', 30), (' share of profit of equity accounted investees ', 27), (' finance income and costs ', 27), (' Finance income and costs ', 27), (' interest gains and losses ', 26), (' other income and revenue ', 26), (' net of tax ', 25), (' net of tax ', 25), (' finance income and finance cost ', 22), (' Finance income and finance costs ', 22), (' Profit from discontinued operation ', 22), (' Impairement (expenses)/reversal ', 21), (' Impairment loss ', 20), (' finance expenses', 18), (' interest revenue ', 17), (' expenses ', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other income ', 100), (' Other income ', 100), (' other opertaing income ', 76), (' other gains/losses ', 69), (' other income and revenue ', 67), (' Profit from discontinued operation ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' interest revenue ', 38), (' Loss on revaluation of inventories', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' net of tax ', 33), (' net of tax ', 33), (' Impairement (expenses)/reversal ', 32), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' share of profit of equity accounted investees ', 30), ('finance cost ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' expenses ', 12)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' other gains/losses ', 69), (' other opertaing income ', 62), (' other income ', 56), (' Other income ', 56), (' net of tax ', 48), (' net of tax ', 48), (' other income and revenue ', 44), (' Share of gain/(loss) of joint venture ', 43), (' net finance costs ', 41), (' share of profit of equity accounted investees ', 41), (' finance income and costs ', 34), (' interest revenue ', 34), (' Profit from discontinued operation ', 34), (' Finance income and costs ', 34), (' Loss on revaluation of inventories', 34), (' interest gains and losses ', 33), ('finance cost ', 32), (' Impairment loss ', 32), (' finance income and finance cost ', 29), (' Impairement (expenses)/reversal ', 29), (' Finance income and finance costs ', 29), (' finance expenses', 22), (' expenses ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' expenses ', 100), (' finance expenses', 63), (' Impairement (expenses)/reversal ', 46), (' net of tax ', 31), (' net of tax ', 31), (' interest revenue ', 29), (' Impairment loss ', 24), (' Loss on revaluation of inventories', 22), (' interest gains and losses ', 21), (' other income and revenue ', 21), (' other gains/losses ', 19), (' Share of gain/(loss) of joint venture ', 18), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' finance income and costs ', 15), (' Finance income and costs ', 15), ('finance cost ', 12), (' other income ', 12), (' finance income and finance cost ', 12), (' Other income ', 12), (' Finance income and finance costs ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [('finance cost ', 48), (' net finance costs ', 48), (' share of profit of equity accounted investees ', 41), (' other income ', 40), (' Other income ', 40), (' other opertaing income ', 38), (' Share of gain/(loss) of joint venture ', 38), (' other gains/losses ', 34), (' finance income and costs ', 34), (' Profit from discontinued operation ', 34), (' Finance income and costs ', 34), (' Loss on revaluation of inventories', 34), (' finance income and finance cost ', 33), (' other income and revenue ', 33), (' Finance income and finance costs ', 33), (' net of tax ', 29), (' net of tax ', 29), (' interest revenue ', 28), (' interest gains and losses ', 28), (' Impairment loss ', 24), (' Impairement (expenses)/reversal ', 24), (' finance expenses', 22), (' expenses ', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('finance cost ', 55), (' net finance costs ', 46), (' other opertaing income ', 41), (' share of profit of equity accounted investees ', 39), (' Impairement (expenses)/reversal ', 39), (' finance income and costs ', 38), (' interest revenue ', 38), (' Finance income and costs ', 38), (' Profit from discontinued operation ', 37), (' other income ', 36), (' other income and revenue ', 36), (' Other income ', 36), (' expenses ', 35), (' other gains/losses ', 31), (' finance income and finance cost ', 31), (' Finance income and finance costs ', 31), (' Loss on revaluation of inventories', 31), (' Impairment loss ', 27), (' Share of gain/(loss) of joint venture ', 26), (' finance expenses', 25), (' interest gains and losses ', 24), (' net of tax ', 22), (' net of tax ', 22)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' net finance costs ', 58), ('finance cost ', 52), (' finance income and costs ', 43), (' Finance income and costs ', 43), (' finance income and finance cost ', 41), (' Finance income and finance costs ', 41), (' other income ', 37), (' Other income ', 37), (' other opertaing income ', 35), (' net of tax ', 35), (' net of tax ', 35), (' Impairement (expenses)/reversal ', 33), (' Profit from discontinued operation ', 33), (' other gains/losses ', 32), (' interest gains and losses ', 32), (' share of profit of equity accounted investees ', 31), (' Impairment loss ', 30), (' finance expenses', 28), (' Share of gain/(loss) of joint venture ', 27), (' interest revenue ', 26), (' other income and revenue ', 26), (' Loss on revaluation of inventories', 22), (' expenses ', 18)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest revenue ', 40), (' Loss on revaluation of inventories', 39), (' Impairment loss ', 38), (' other opertaing income ', 36), (' share of profit of equity accounted investees ', 36), (' net of tax ', 36), (' net of tax ', 36), (' Impairement (expenses)/reversal ', 34), (' other gains/losses ', 33), (' Share of gain/(loss) of joint venture ', 33), (' interest gains and losses ', 32), (' other income and revenue ', 32), (' other income ', 31), (' Other income ', 31), (' finance expenses', 29), (' expenses ', 29), (' Profit from discontinued operation ', 29), (' finance income and costs ', 28), (' Finance income and costs ', 28), (' net finance costs ', 27), (' finance income and finance cost ', 23), (' Finance income and finance costs ', 23), ('finance cost ', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' other gains/losses ', 50), (' interest gains and losses ', 45), (' interest revenue ', 42), (' other income ', 40), (' Other income ', 40), (' other income and revenue ', 39), (' Share of gain/(loss) of joint venture ', 38), (' finance income and costs ', 33), (' Finance income and costs ', 33), (' Loss on revaluation of inventories', 33), (' other opertaing income ', 30), (' Impairment loss ', 30), (' Profit from discontinued operation ', 28), (' expenses ', 27), (' finance income and finance cost ', 27), (' share of profit of equity accounted investees ', 27), (' Finance income and finance costs ', 27), (' net finance costs ', 25), (' net of tax ', 25), (' net of tax ', 25), (' Impairement (expenses)/reversal ', 21), ('finance cost ', 20), (' finance expenses', 18)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance income and costs ', 69), (' Finance income and costs ', 69), (' finance expenses', 67), (' finance income and finance cost ', 56), (' Finance income and finance costs ', 56), (' share of profit of equity accounted investees ', 35), (' net of tax ', 33), (' net of tax ', 33), (' Profit from discontinued operation ', 32), (' interest revenue ', 31), (' other income and revenue ', 30), (' other opertaing income ', 28), (' other income ', 27), (' Other income ', 27), (' Share of gain/(loss) of joint venture ', 26), (' Impairement (expenses)/reversal ', 26), (' Loss on revaluation of inventories', 25), (' interest gains and losses ', 24), (' other gains/losses ', 23), (' Impairment loss ', 18), (' expenses ', 12)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' other opertaing income ', 55), (' Profit from discontinued operation ', 49), (' other income ', 48), (' Other income ', 48), (' share of profit of equity accounted investees ', 46), (' other income and revenue ', 45), (' net of tax ', 41), (' net of tax ', 41), (' net finance costs ', 38), (' Loss on revaluation of inventories', 37), ('finance cost ', 36), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' finance expenses', 34), (' finance income and costs ', 33), (' Impairement (expenses)/reversal ', 33), (' Finance income and costs ', 33), (' other gains/losses ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Impairment loss ', 30), (' interest revenue ', 27), (' expenses ', 14)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' Impairement (expenses)/reversal ', 56), (' expenses ', 55), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' other income and revenue ', 47), (' net finance costs ', 45), (' finance income and costs ', 43), (' net of tax ', 43), (' net of tax ', 43), (' Finance income and costs ', 43), ('finance cost ', 37), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' Profit from discontinued operation ', 33), (' other gains/losses ', 32), (' interest revenue ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 27), (' Impairment loss ', 22)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' other opertaing income ', 54), (' other income ', 47), (' Other income ', 47), (' share of profit of equity accounted investees ', 44), (' Share of gain/(loss) of joint venture ', 43), (' Profit from discontinued operation ', 43), (' other gains/losses ', 41), (' other income and revenue ', 39), (' Impairement (expenses)/reversal ', 36), (' net finance costs ', 35), (' Loss on revaluation of inventories', 35), ('finance cost ', 33), (' net of tax ', 31), (' net of tax ', 31), (' interest revenue ', 29), (' interest gains and losses ', 29), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' finance income and costs ', 25), (' Finance income and costs ', 25), (' Impairment loss ', 20), (' expenses ', 16)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other income ', 67), (' Other income ', 67), (' other income and revenue ', 59), (' other opertaing income ', 55), (' net finance costs ', 49), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' finance expenses', 46), (' Profit from discontinued operation ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' share of profit of equity accounted investees ', 39), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' Impairment loss ', 30), (' expenses ', 29), (' Loss on revaluation of inventories', 28), (' interest revenue ', 27), (' net of tax ', 21), (' net of tax ', 21)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' Profit from discontinued operation ', 48), (' Loss on revaluation of inventories', 42), (' other opertaing income ', 41), (' other income and revenue ', 41), (' interest gains and losses ', 38), (' Share of gain/(loss) of joint venture ', 38), (' finance expenses', 37), (' Impairement (expenses)/reversal ', 36), (' interest revenue ', 35), (' finance income and finance cost ', 34), (' share of profit of equity accounted investees ', 34), (' Finance income and finance costs ', 34), (' finance income and costs ', 32), (' Finance income and costs ', 32), (' net finance costs ', 31), (' other gains/losses ', 31), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' expenses ', 29), (' Impairment loss ', 26), (' net of tax ', 23), (' net of tax ', 23)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' other income and revenue ', 46), (' other opertaing income ', 45), (' net finance costs ', 44), (' other income ', 43), (' share of profit of equity accounted investees ', 43), (' Other income ', 43), (' Profit from discontinued operation ', 42), (' Impairement (expenses)/reversal ', 40), (' finance income and costs ', 39), (' Finance income and costs ', 39), (' finance expenses', 38), (' Share of gain/(loss) of joint venture ', 38), (' other gains/losses ', 36), (' Loss on revaluation of inventories', 36), ('finance cost ', 35), (' finance income and finance cost ', 35), (' Finance income and finance costs ', 35), (' interest gains and losses ', 32), (' interest revenue ', 28), (' net of tax ', 24), (' net of tax ', 24), (' Impairment loss ', 22), (' expenses ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' other income and revenue ', 52), (' interest revenue ', 51), (' Profit from discontinued operation ', 51), (' share of profit of equity accounted investees ', 42), (' other opertaing income ', 40), (' Share of gain/(loss) of joint venture ', 40), (' net finance costs ', 38), (' finance income and costs ', 38), (' Finance income and costs ', 38), (' Loss on revaluation of inventories', 38), (' other income ', 37), (' finance income and finance cost ', 37), (' Other income ', 37), (' Finance income and finance costs ', 37), (' Impairement (expenses)/reversal ', 35), ('finance cost ', 33), (' other gains/losses ', 30), (' interest gains and losses ', 26), (' finance expenses', 22), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 16), (' Impairment loss ', 14)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' Share of gain/(loss) of joint venture ', 38), (' net finance costs ', 33), (' other gains/losses ', 33), (' Loss on revaluation of inventories', 33), ('finance cost ', 30), (' other opertaing income ', 30), (' other income ', 30), (' Other income ', 30), (' share of profit of equity accounted investees ', 27), (' finance income and costs ', 27), (' Finance income and costs ', 27), (' interest gains and losses ', 26), (' other income and revenue ', 26), (' net of tax ', 25), (' net of tax ', 25), (' finance income and finance cost ', 22), (' Finance income and finance costs ', 22), (' Profit from discontinued operation ', 22), (' Impairement (expenses)/reversal ', 21), (' Impairment loss ', 20), (' finance expenses', 18), (' interest revenue ', 17), (' expenses ', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other income ', 100), (' Other income ', 100), (' other opertaing income ', 76), (' other gains/losses ', 69), (' other income and revenue ', 67), (' Profit from discontinued operation ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' interest revenue ', 38), (' Loss on revaluation of inventories', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' net of tax ', 33), (' net of tax ', 33), (' Impairement (expenses)/reversal ', 32), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' share of profit of equity accounted investees ', 30), ('finance cost ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' expenses ', 12)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' other gains/losses ', 69), (' other opertaing income ', 62), (' other income ', 56), (' Other income ', 56), (' net of tax ', 48), (' net of tax ', 48), (' other income and revenue ', 44), (' Share of gain/(loss) of joint venture ', 43), (' net finance costs ', 41), (' share of profit of equity accounted investees ', 41), (' finance income and costs ', 34), (' interest revenue ', 34), (' Profit from discontinued operation ', 34), (' Finance income and costs ', 34), (' Loss on revaluation of inventories', 34), (' interest gains and losses ', 33), ('finance cost ', 32), (' Impairment loss ', 32), (' finance income and finance cost ', 29), (' Impairement (expenses)/reversal ', 29), (' Finance income and finance costs ', 29), (' finance expenses', 22), (' expenses ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' expenses ', 100), (' finance expenses', 63), (' Impairement (expenses)/reversal ', 46), (' net of tax ', 31), (' net of tax ', 31), (' interest revenue ', 29), (' Impairment loss ', 24), (' Loss on revaluation of inventories', 22), (' interest gains and losses ', 21), (' other income and revenue ', 21), (' other gains/losses ', 19), (' Share of gain/(loss) of joint venture ', 18), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' finance income and costs ', 15), (' Finance income and costs ', 15), ('finance cost ', 12), (' other income ', 12), (' finance income and finance cost ', 12), (' Other income ', 12), (' Finance income and finance costs ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [('finance cost ', 48), (' net finance costs ', 48), (' share of profit of equity accounted investees ', 41), (' other income ', 40), (' Other income ', 40), (' other opertaing income ', 38), (' Share of gain/(loss) of joint venture ', 38), (' other gains/losses ', 34), (' finance income and costs ', 34), (' Profit from discontinued operation ', 34), (' Finance income and costs ', 34), (' Loss on revaluation of inventories', 34), (' finance income and finance cost ', 33), (' other income and revenue ', 33), (' Finance income and finance costs ', 33), (' net of tax ', 29), (' net of tax ', 29), (' interest revenue ', 28), (' interest gains and losses ', 28), (' Impairment loss ', 24), (' Impairement (expenses)/reversal ', 24), (' finance expenses', 22), (' expenses ', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('finance cost ', 55), (' net finance costs ', 46), (' other opertaing income ', 41), (' share of profit of equity accounted investees ', 39), (' Impairement (expenses)/reversal ', 39), (' finance income and costs ', 38), (' interest revenue ', 38), (' Finance income and costs ', 38), (' Profit from discontinued operation ', 37), (' other income ', 36), (' other income and revenue ', 36), (' Other income ', 36), (' expenses ', 35), (' other gains/losses ', 31), (' finance income and finance cost ', 31), (' Finance income and finance costs ', 31), (' Loss on revaluation of inventories', 31), (' Impairment loss ', 27), (' Share of gain/(loss) of joint venture ', 26), (' finance expenses', 25), (' interest gains and losses ', 24), (' net of tax ', 22), (' net of tax ', 22)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' net finance costs ', 58), ('finance cost ', 52), (' finance income and costs ', 43), (' Finance income and costs ', 43), (' finance income and finance cost ', 41), (' Finance income and finance costs ', 41), (' other income ', 37), (' Other income ', 37), (' other opertaing income ', 35), (' net of tax ', 35), (' net of tax ', 35), (' Impairement (expenses)/reversal ', 33), (' Profit from discontinued operation ', 33), (' other gains/losses ', 32), (' interest gains and losses ', 32), (' share of profit of equity accounted investees ', 31), (' Impairment loss ', 30), (' finance expenses', 28), (' Share of gain/(loss) of joint venture ', 27), (' interest revenue ', 26), (' other income and revenue ', 26), (' Loss on revaluation of inventories', 22), (' expenses ', 18)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest revenue ', 40), (' Loss on revaluation of inventories', 39), (' Impairment loss ', 38), (' other opertaing income ', 36), (' share of profit of equity accounted investees ', 36), (' net of tax ', 36), (' net of tax ', 36), (' Impairement (expenses)/reversal ', 34), (' other gains/losses ', 33), (' Share of gain/(loss) of joint venture ', 33), (' interest gains and losses ', 32), (' other income and revenue ', 32), (' other income ', 31), (' Other income ', 31), (' finance expenses', 29), (' expenses ', 29), (' Profit from discontinued operation ', 29), (' finance income and costs ', 28), (' Finance income and costs ', 28), (' net finance costs ', 27), (' finance income and finance cost ', 23), (' Finance income and finance costs ', 23), ('finance cost ', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' other gains/losses ', 50), (' interest gains and losses ', 45), (' interest revenue ', 42), (' other income ', 40), (' Other income ', 40), (' other income and revenue ', 39), (' Share of gain/(loss) of joint venture ', 38), (' finance income and costs ', 33), (' Finance income and costs ', 33), (' Loss on revaluation of inventories', 33), (' other opertaing income ', 30), (' Impairment loss ', 30), (' Profit from discontinued operation ', 28), (' expenses ', 27), (' finance income and finance cost ', 27), (' share of profit of equity accounted investees ', 27), (' Finance income and finance costs ', 27), (' net finance costs ', 25), (' net of tax ', 25), (' net of tax ', 25), (' Impairement (expenses)/reversal ', 21), ('finance cost ', 20), (' finance expenses', 18)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance income and costs ', 69), (' Finance income and costs ', 69), (' finance expenses', 67), (' finance income and finance cost ', 56), (' Finance income and finance costs ', 56), (' share of profit of equity accounted investees ', 35), (' net of tax ', 33), (' net of tax ', 33), (' Profit from discontinued operation ', 32), (' interest revenue ', 31), (' other income and revenue ', 30), (' other opertaing income ', 28), (' other income ', 27), (' Other income ', 27), (' Share of gain/(loss) of joint venture ', 26), (' Impairement (expenses)/reversal ', 26), (' Loss on revaluation of inventories', 25), (' interest gains and losses ', 24), (' other gains/losses ', 23), (' Impairment loss ', 18), (' expenses ', 12)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' other opertaing income ', 55), (' Profit from discontinued operation ', 49), (' other income ', 48), (' Other income ', 48), (' share of profit of equity accounted investees ', 46), (' other income and revenue ', 45), (' net of tax ', 41), (' net of tax ', 41), (' net finance costs ', 38), (' Loss on revaluation of inventories', 37), ('finance cost ', 36), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' finance expenses', 34), (' finance income and costs ', 33), (' Impairement (expenses)/reversal ', 33), (' Finance income and costs ', 33), (' other gains/losses ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Impairment loss ', 30), (' interest revenue ', 27), (' expenses ', 14)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' Impairement (expenses)/reversal ', 56), (' expenses ', 55), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' other income and revenue ', 47), (' net finance costs ', 45), (' finance income and costs ', 43), (' net of tax ', 43), (' net of tax ', 43), (' Finance income and costs ', 43), ('finance cost ', 37), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' Profit from discontinued operation ', 33), (' other gains/losses ', 32), (' interest revenue ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 27), (' Impairment loss ', 22)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' other opertaing income ', 54), (' other income ', 47), (' Other income ', 47), (' share of profit of equity accounted investees ', 44), (' Share of gain/(loss) of joint venture ', 43), (' Profit from discontinued operation ', 43), (' other gains/losses ', 41), (' other income and revenue ', 39), (' Impairement (expenses)/reversal ', 36), (' net finance costs ', 35), (' Loss on revaluation of inventories', 35), ('finance cost ', 33), (' net of tax ', 31), (' net of tax ', 31), (' interest revenue ', 29), (' interest gains and losses ', 29), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' finance income and costs ', 25), (' Finance income and costs ', 25), (' Impairment loss ', 20), (' expenses ', 16)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other income ', 67), (' Other income ', 67), (' other income and revenue ', 59), (' other opertaing income ', 55), (' net finance costs ', 49), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' finance expenses', 46), (' Profit from discontinued operation ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' share of profit of equity accounted investees ', 39), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' Impairment loss ', 30), (' expenses ', 29), (' Loss on revaluation of inventories', 28), (' interest revenue ', 27), (' net of tax ', 21), (' net of tax ', 21)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' Profit from discontinued operation ', 48), (' Loss on revaluation of inventories', 42), (' other opertaing income ', 41), (' other income and revenue ', 41), (' interest gains and losses ', 38), (' Share of gain/(loss) of joint venture ', 38), (' finance expenses', 37), (' Impairement (expenses)/reversal ', 36), (' interest revenue ', 35), (' finance income and finance cost ', 34), (' share of profit of equity accounted investees ', 34), (' Finance income and finance costs ', 34), (' finance income and costs ', 32), (' Finance income and costs ', 32), (' net finance costs ', 31), (' other gains/losses ', 31), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' expenses ', 29), (' Impairment loss ', 26), (' net of tax ', 23), (' net of tax ', 23)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' other income and revenue ', 46), (' other opertaing income ', 45), (' net finance costs ', 44), (' other income ', 43), (' share of profit of equity accounted investees ', 43), (' Other income ', 43), (' Profit from discontinued operation ', 42), (' Impairement (expenses)/reversal ', 40), (' finance income and costs ', 39), (' Finance income and costs ', 39), (' finance expenses', 38), (' Share of gain/(loss) of joint venture ', 38), (' other gains/losses ', 36), (' Loss on revaluation of inventories', 36), ('finance cost ', 35), (' finance income and finance cost ', 35), (' Finance income and finance costs ', 35), (' interest gains and losses ', 32), (' interest revenue ', 28), (' net of tax ', 24), (' net of tax ', 24), (' Impairment loss ', 22), (' expenses ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4, 10, 19, 21, 27], 'score': 100, 'value': 900662.0, 'line_item_label': ['Other income', 'Expenses', 'Finance costs', 'Other income', 'Expenses', 'Finance costs'], 'note_numbers': ['4', nan, '5(b)', '4', nan, '5(b)'], 'line_item_value': [453175.0, 0.0, -2844.0, 453175.0, 0.0, -2844.0]}
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:53+0530 - sLogger - DEBUG - keywords = ['Accretion expense ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Asset impairment ', ' commission revenue ', ' dividend from other parties ', ' effective portion of changes in fair value of cash flow ', ' foreign exchange gain ', ' government grants ', ' Impairment loss ', ' insurance proceeds ', ' Interest on unwinding of discount in provisions ', ' Investment in joint venture ', ' japan recoveries ', ' Loss on loan refinancing ', ' Loss on sale of disposal of assets ', ' margin charge income ', ' net (loss)/profit on disposal of non-current assets ', ' net foreign exchange (loss)/gain ', ' net foreign exchange gain ', ' net foreign exchange gains/(losses) ', ' net gain / loss on disposal of property plant and equipment ', ' Net loss on disposal of property ', ' net of tax ', ' Net other foreign exchange (losses)/gains ', ' net ppe disposal (loss)/gain ', ' other ', ' other income ', ' other miscellaneous - net (loss)/gain ', ' paid by customers - at amortised cost ', ' plant and equipment ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' profit from discontinued operation ', ' Profit on sale of assets ', ' quota lease income ', ' Remuneration from services linked to newly acquired entities ', ' secondment income (tw recovery) ', ' Share of gain/(loss) of joint venture ', ' share of jv income ', ' Sub-lease rental income ', ' sundry income ', ' other revenue'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [(' other income ', 73), (' share of jv income ', 73), (' other ', 60), (' Interest on unwinding of discount in provisions ', 58), (' Sub-lease rental income ', 58), (' sundry income ', 58), (' net of tax ', 57), (' quota lease income ', 56), (' margin charge income ', 50), (' net gain / loss on disposal of property plant and equipment ', 47), (' Net other foreign exchange (losses)/gains ', 47), (' Power purchase agreement realised gain ', 47), (' Power purchase agreement unrelaised gain ', 47), (' secondment income (tw recovery) ', 47), (' Loss on loan refinancing ', 44), (' Asset impairment ', 43), (' Investment in joint venture ', 43), (' Arising from inventory of cranes ', 42), (' dividend from other parties ', 42), (' foreign exchange gain ', 42), (' government grants ', 42), (' net foreign exchange (loss)/gain ', 42), (' net foreign exchange gain ', 42), (' net foreign exchange gains/(losses) ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' profit from discontinued operation ', 42), (' Remuneration from services linked to newly acquired entities ', 42), (' Share of gain/(loss) of joint venture ', 42), (' other revenue', 42), ('Accretion expense ', 40), (' net ppe disposal (loss)/gain ', 38), (' Arising from inventory of spare parts ', 37), (' effective portion of changes in fair value of cash flow ', 37), (' net (loss)/profit on disposal of non-current assets ', 37), (' Net loss on disposal of property ', 37), (' paid by customers - at amortised cost ', 37), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' Profit on sale of assets ', 35), (' plant and equipment ', 33), (' Loss on sale of disposal of assets ', 32), (' commission revenue ', 29), (' Impairment loss ', 27)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = none commission rebate , res_fuzz_match = [(' commission revenue ', 74), (' other income ', 55), (' other miscellaneous - net (loss)/gain ', 51), (' net (loss)/profit on disposal of non-current assets ', 50), (' Net loss on disposal of property ', 50), (' secondment income (tw recovery) ', 50), (' insurance proceeds ', 45), (' share of jv income ', 45), (' Arising from inventory of cranes ', 44), (' Arising from inventory of spare parts ', 44), (' dividend from other parties ', 44), (' Investment in joint venture ', 44), (' Loss on sale of disposal of assets ', 44), (' net foreign exchange (loss)/gain ', 44), (' net foreign exchange gain ', 44), (' net foreign exchange gains/(losses) ', 44), (' net gain / loss on disposal of property plant and equipment ', 44), (' paid by customers - at amortised cost ', 44), (' Power purchase agreement realised gain ', 44), (' Power purchase agreement unrelaised gain ', 44), (' Remuneration from services linked to newly acquired entities ', 44), (' Share of gain/(loss) of joint venture ', 44), (' net of tax ', 43), (' Asset impairment ', 42), (' government grants ', 42), (' Loss on loan refinancing ', 42), (' sundry income ', 42), (' Profit on sale of assets ', 41), (' Net other foreign exchange (losses)/gains ', 40), (' net ppe disposal (loss)/gain ', 40), (' other ', 40), (' effective portion of changes in fair value of cash flow ', 39), (' Interest on unwinding of discount in provisions ', 39), (' profit from discontinued operation ', 39), (' quota lease income ', 38), (' Impairment loss ', 36), (' foreign exchange gain ', 33), (' Sub-lease rental income ', 33), (' other revenue', 33), ('Accretion expense ', 31), (' japan recoveries ', 29), (' margin charge income ', 28), (' plant and equipment ', 27)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = none other income , res_fuzz_match = [(' other ', 100), (' other income ', 100), (' share of jv income ', 73), (' margin charge income ', 62), (' Net other foreign exchange (losses)/gains ', 62), (' other revenue', 61), (' sundry income ', 58), (' net of tax ', 57), (' dividend from other parties ', 56), (' quota lease income ', 56), (' Sub-lease rental income ', 56), (' net foreign exchange (loss)/gain ', 50), (' net foreign exchange gain ', 50), (' net foreign exchange gains/(losses) ', 50), (' other miscellaneous - net (loss)/gain ', 50), (' Remuneration from services linked to newly acquired entities ', 50), (' secondment income (tw recovery) ', 50), (' Arising from inventory of cranes ', 44), (' effective portion of changes in fair value of cash flow ', 44), (' Interest on unwinding of discount in provisions ', 44), (' Investment in joint venture ', 44), (' Loss on loan refinancing ', 44), (' net gain / loss on disposal of property plant and equipment ', 44), (' Net loss on disposal of property ', 44), (' net ppe disposal (loss)/gain ', 44), (' paid by customers - at amortised cost ', 44), (' profit from discontinued operation ', 44), (' Share of gain/(loss) of joint venture ', 44), (' japan recoveries ', 43), (' government grants ', 42), (' Arising from inventory of spare parts ', 38), (' foreign exchange gain ', 38), (' Loss on sale of disposal of assets ', 38), (' net (loss)/profit on disposal of non-current assets ', 38), (' Power purchase agreement realised gain ', 38), (' Power purchase agreement unrelaised gain ', 38), (' insurance proceeds ', 36), (' Asset impairment ', 35), (' plant and equipment ', 33), ('Accretion expense ', 31), (' commission revenue ', 29), (' Impairment loss ', 27), (' Profit on sale of assets ', 26)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' net of tax ', 71), (' net (loss)/profit on disposal of non-current assets ', 50), (' net gain / loss on disposal of property plant and equipment ', 50), (' Net other foreign exchange (losses)/gains ', 50), (' other miscellaneous - net (loss)/gain ', 50), (' Sub-lease rental income ', 50), (' Arising from inventory of cranes ', 40), (' Arising from inventory of spare parts ', 40), (' dividend from other parties ', 40), (' effective portion of changes in fair value of cash flow ', 40), (' government grants ', 40), (' Interest on unwinding of discount in provisions ', 40), (' Investment in joint venture ', 40), (' Loss on loan refinancing ', 40), (' Loss on sale of disposal of assets ', 40), (' net foreign exchange (loss)/gain ', 40), (' net foreign exchange gain ', 40), (' net foreign exchange gains/(losses) ', 40), (' Net loss on disposal of property ', 40), (' net ppe disposal (loss)/gain ', 40), (' other ', 40), (' other income ', 40), (' paid by customers - at amortised cost ', 40), (' Power purchase agreement realised gain ', 40), (' Power purchase agreement unrelaised gain ', 40), (' profit from discontinued operation ', 40), (' Profit on sale of assets ', 40), (' quota lease income ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' secondment income (tw recovery) ', 40), (' Share of gain/(loss) of joint venture ', 40), (' Asset impairment ', 30), (' foreign exchange gain ', 30), (' insurance proceeds ', 30), (' japan recoveries ', 30), (' margin charge income ', 30), (' plant and equipment ', 30), (' share of jv income ', 30), (' sundry income ', 30), (' other revenue', 30), (' Impairment loss ', 21), ('Accretion expense ', 20), (' commission revenue ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [(' other income ', 73), (' share of jv income ', 73), (' other ', 60), (' Interest on unwinding of discount in provisions ', 58), (' Sub-lease rental income ', 58), (' sundry income ', 58), (' net of tax ', 57), (' quota lease income ', 56), (' margin charge income ', 50), (' net gain / loss on disposal of property plant and equipment ', 47), (' Net other foreign exchange (losses)/gains ', 47), (' Power purchase agreement realised gain ', 47), (' Power purchase agreement unrelaised gain ', 47), (' secondment income (tw recovery) ', 47), (' Loss on loan refinancing ', 44), (' Asset impairment ', 43), (' Investment in joint venture ', 43), (' Arising from inventory of cranes ', 42), (' dividend from other parties ', 42), (' foreign exchange gain ', 42), (' government grants ', 42), (' net foreign exchange (loss)/gain ', 42), (' net foreign exchange gain ', 42), (' net foreign exchange gains/(losses) ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' profit from discontinued operation ', 42), (' Remuneration from services linked to newly acquired entities ', 42), (' Share of gain/(loss) of joint venture ', 42), (' other revenue', 42), ('Accretion expense ', 40), (' net ppe disposal (loss)/gain ', 38), (' Arising from inventory of spare parts ', 37), (' effective portion of changes in fair value of cash flow ', 37), (' net (loss)/profit on disposal of non-current assets ', 37), (' Net loss on disposal of property ', 37), (' paid by customers - at amortised cost ', 37), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' Profit on sale of assets ', 35), (' plant and equipment ', 33), (' Loss on sale of disposal of assets ', 32), (' commission revenue ', 29), (' Impairment loss ', 27)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = none commission rebate , res_fuzz_match = [(' commission revenue ', 74), (' other income ', 55), (' other miscellaneous - net (loss)/gain ', 51), (' net (loss)/profit on disposal of non-current assets ', 50), (' Net loss on disposal of property ', 50), (' secondment income (tw recovery) ', 50), (' insurance proceeds ', 45), (' share of jv income ', 45), (' Arising from inventory of cranes ', 44), (' Arising from inventory of spare parts ', 44), (' dividend from other parties ', 44), (' Investment in joint venture ', 44), (' Loss on sale of disposal of assets ', 44), (' net foreign exchange (loss)/gain ', 44), (' net foreign exchange gain ', 44), (' net foreign exchange gains/(losses) ', 44), (' net gain / loss on disposal of property plant and equipment ', 44), (' paid by customers - at amortised cost ', 44), (' Power purchase agreement realised gain ', 44), (' Power purchase agreement unrelaised gain ', 44), (' Remuneration from services linked to newly acquired entities ', 44), (' Share of gain/(loss) of joint venture ', 44), (' net of tax ', 43), (' Asset impairment ', 42), (' government grants ', 42), (' Loss on loan refinancing ', 42), (' sundry income ', 42), (' Profit on sale of assets ', 41), (' Net other foreign exchange (losses)/gains ', 40), (' net ppe disposal (loss)/gain ', 40), (' other ', 40), (' effective portion of changes in fair value of cash flow ', 39), (' Interest on unwinding of discount in provisions ', 39), (' profit from discontinued operation ', 39), (' quota lease income ', 38), (' Impairment loss ', 36), (' foreign exchange gain ', 33), (' Sub-lease rental income ', 33), (' other revenue', 33), ('Accretion expense ', 31), (' japan recoveries ', 29), (' margin charge income ', 28), (' plant and equipment ', 27)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = none other income , res_fuzz_match = [(' other ', 100), (' other income ', 100), (' share of jv income ', 73), (' margin charge income ', 62), (' Net other foreign exchange (losses)/gains ', 62), (' other revenue', 61), (' sundry income ', 58), (' net of tax ', 57), (' dividend from other parties ', 56), (' quota lease income ', 56), (' Sub-lease rental income ', 56), (' net foreign exchange (loss)/gain ', 50), (' net foreign exchange gain ', 50), (' net foreign exchange gains/(losses) ', 50), (' other miscellaneous - net (loss)/gain ', 50), (' Remuneration from services linked to newly acquired entities ', 50), (' secondment income (tw recovery) ', 50), (' Arising from inventory of cranes ', 44), (' effective portion of changes in fair value of cash flow ', 44), (' Interest on unwinding of discount in provisions ', 44), (' Investment in joint venture ', 44), (' Loss on loan refinancing ', 44), (' net gain / loss on disposal of property plant and equipment ', 44), (' Net loss on disposal of property ', 44), (' net ppe disposal (loss)/gain ', 44), (' paid by customers - at amortised cost ', 44), (' profit from discontinued operation ', 44), (' Share of gain/(loss) of joint venture ', 44), (' japan recoveries ', 43), (' government grants ', 42), (' Arising from inventory of spare parts ', 38), (' foreign exchange gain ', 38), (' Loss on sale of disposal of assets ', 38), (' net (loss)/profit on disposal of non-current assets ', 38), (' Power purchase agreement realised gain ', 38), (' Power purchase agreement unrelaised gain ', 38), (' insurance proceeds ', 36), (' Asset impairment ', 35), (' plant and equipment ', 33), ('Accretion expense ', 31), (' commission revenue ', 29), (' Impairment loss ', 27), (' Profit on sale of assets ', 26)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' net of tax ', 71), (' net (loss)/profit on disposal of non-current assets ', 50), (' net gain / loss on disposal of property plant and equipment ', 50), (' Net other foreign exchange (losses)/gains ', 50), (' other miscellaneous - net (loss)/gain ', 50), (' Sub-lease rental income ', 50), (' Arising from inventory of cranes ', 40), (' Arising from inventory of spare parts ', 40), (' dividend from other parties ', 40), (' effective portion of changes in fair value of cash flow ', 40), (' government grants ', 40), (' Interest on unwinding of discount in provisions ', 40), (' Investment in joint venture ', 40), (' Loss on loan refinancing ', 40), (' Loss on sale of disposal of assets ', 40), (' net foreign exchange (loss)/gain ', 40), (' net foreign exchange gain ', 40), (' net foreign exchange gains/(losses) ', 40), (' Net loss on disposal of property ', 40), (' net ppe disposal (loss)/gain ', 40), (' other ', 40), (' other income ', 40), (' paid by customers - at amortised cost ', 40), (' Power purchase agreement realised gain ', 40), (' Power purchase agreement unrelaised gain ', 40), (' profit from discontinued operation ', 40), (' Profit on sale of assets ', 40), (' quota lease income ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' secondment income (tw recovery) ', 40), (' Share of gain/(loss) of joint venture ', 40), (' Asset impairment ', 30), (' foreign exchange gain ', 30), (' insurance proceeds ', 30), (' japan recoveries ', 30), (' margin charge income ', 30), (' plant and equipment ', 30), (' share of jv income ', 30), (' sundry income ', 30), (' other revenue', 30), (' Impairment loss ', 21), ('Accretion expense ', 20), (' commission revenue ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 6], 'score': [100, 100], 'value': [96756.0, 28313.0], 'label': ['None Other income', 'None Other income'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:53+0530 - sLogger - DEBUG - keywords = ['Accretion expense ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Asset impairment ', ' commission revenue ', ' dividend from other parties ', ' effective portion of changes in fair value of cash flow ', ' foreign exchange gain ', ' government grants ', ' Impairment loss ', ' insurance proceeds ', ' Interest on unwinding of discount in provisions ', ' Investment in joint venture ', ' japan recoveries ', ' Loss on loan refinancing ', ' Loss on sale of disposal of assets ', ' margin charge income ', ' net (loss)/profit on disposal of non-current assets ', ' net foreign exchange (loss)/gain ', ' net foreign exchange gain ', ' net foreign exchange gains/(losses) ', ' net gain / loss on disposal of property plant and equipment ', ' Net loss on disposal of property ', ' net of tax ', ' Net other foreign exchange (losses)/gains ', ' net ppe disposal (loss)/gain ', ' other ', ' other income ', ' other miscellaneous - net (loss)/gain ', ' paid by customers - at amortised cost ', ' plant and equipment ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' profit from discontinued operation ', ' Profit on sale of assets ', ' quota lease income ', ' Remuneration from services linked to newly acquired entities ', ' secondment income (tw recovery) ', ' Share of gain/(loss) of joint venture ', ' share of jv income ', ' Sub-lease rental income ', ' sundry income ', ' other revenue'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: prepaid insurance nan , res_fuzz_match = [(' japan recoveries ', 57), (' insurance proceeds ', 55), (' Arising from inventory of spare parts ', 53), (' Arising from inventory of cranes ', 52), (' Asset impairment ', 50), (' commission revenue ', 50), (' quota lease income ', 50), (' Power purchase agreement realised gain ', 49), (' profit from discontinued operation ', 48), (' secondment income (tw recovery) ', 48), (' Profit on sale of assets ', 47), ('Accretion expense ', 46), (' paid by customers - at amortised cost ', 46), (' Power purchase agreement unrelaised gain ', 46), (' Impairment loss ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' share of jv income ', 45), (' dividend from other parties ', 44), (' margin charge income ', 44), (' Share of gain/(loss) of joint venture ', 43), (' government grants ', 42), (' Investment in joint venture ', 42), (' net (loss)/profit on disposal of non-current assets ', 42), (' net foreign exchange gain ', 42), (' Net loss on disposal of property ', 42), (' net ppe disposal (loss)/gain ', 42), (' sundry income ', 42), (' net foreign exchange (loss)/gain ', 41), (' Net other foreign exchange (losses)/gains ', 41), (' foreign exchange gain ', 40), (' net gain / loss on disposal of property plant and equipment ', 40), (' other ', 40), (' plant and equipment ', 40), (' Sub-lease rental income ', 40), (' Interest on unwinding of discount in provisions ', 39), (' Loss on loan refinancing ', 39), (' Remuneration from services linked to newly acquired entities ', 39), (' net foreign exchange gains/(losses) ', 38), (' Loss on sale of disposal of assets ', 36), (' other income ', 36), (' effective portion of changes in fair value of cash flow ', 35), (' other revenue', 33), (' net of tax ', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: trade accounts receivable nan , res_fuzz_match = [(' japan recoveries ', 57), (' net of tax ', 57), (' Arising from inventory of cranes ', 56), ('Accretion expense ', 54), (' Loss on loan refinancing ', 51), (' Arising from inventory of spare parts ', 50), (' Asset impairment ', 50), (' commission revenue ', 50), (' other revenue', 50), (' secondment income (tw recovery) ', 48), (' Power purchase agreement unrelaised gain ', 47), (' Profit on sale of assets ', 47), (' paid by customers - at amortised cost ', 46), (' Power purchase agreement realised gain ', 46), (' Impairment loss ', 45), (' insurance proceeds ', 45), (' Interest on unwinding of discount in provisions ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' share of jv income ', 45), (' dividend from other parties ', 44), (' margin charge income ', 44), (' profit from discontinued operation ', 44), (' Share of gain/(loss) of joint venture ', 43), (' government grants ', 42), (' net (loss)/profit on disposal of non-current assets ', 42), (' net foreign exchange gain ', 42), (' Net loss on disposal of property ', 42), (' Remuneration from services linked to newly acquired entities ', 41), (' foreign exchange gain ', 40), (' net gain / loss on disposal of property plant and equipment ', 40), (' other ', 40), (' plant and equipment ', 40), (' Sub-lease rental income ', 40), (' net foreign exchange gains/(losses) ', 39), (' effective portion of changes in fair value of cash flow ', 38), (' net foreign exchange (loss)/gain ', 38), (' Net other foreign exchange (losses)/gains ', 38), (' net ppe disposal (loss)/gain ', 38), (' quota lease income ', 38), (' Investment in joint venture ', 37), (' Loss on sale of disposal of assets ', 36), (' other income ', 36), (' sundry income ', 33)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: accrued interest receivable nan , res_fuzz_match = [(' japan recoveries ', 57), (' Arising from inventory of cranes ', 52), (' Arising from inventory of spare parts ', 50), (' Asset impairment ', 50), (' commission revenue ', 50), (' margin charge income ', 50), (' other revenue', 50), (' secondment income (tw recovery) ', 48), (' Investment in joint venture ', 47), (' Profit on sale of assets ', 47), ('Accretion expense ', 46), (' Loss on loan refinancing ', 46), (' net foreign exchange gain ', 46), (' paid by customers - at amortised cost ', 46), (' Power purchase agreement unrelaised gain ', 46), (' Impairment loss ', 45), (' insurance proceeds ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' share of jv income ', 45), (' dividend from other parties ', 44), (' profit from discontinued operation ', 44), (' quota lease income ', 44), (' net of tax ', 43), (' Power purchase agreement realised gain ', 43), (' Share of gain/(loss) of joint venture ', 43), (' government grants ', 42), (' net (loss)/profit on disposal of non-current assets ', 42), (' Net loss on disposal of property ', 42), (' Remuneration from services linked to newly acquired entities ', 41), (' foreign exchange gain ', 40), (' net gain / loss on disposal of property plant and equipment ', 40), (' other ', 40), (' Sub-lease rental income ', 40), (' Interest on unwinding of discount in provisions ', 39), (' effective portion of changes in fair value of cash flow ', 38), (' net foreign exchange (loss)/gain ', 38), (' net foreign exchange gains/(losses) ', 38), (' net ppe disposal (loss)/gain ', 38), (' Net other foreign exchange (losses)/gains ', 37), (' Loss on sale of disposal of assets ', 36), (' other income ', 36), (' plant and equipment ', 33), (' sundry income ', 33)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: total nan , res_fuzz_match = [(' japan recoveries ', 57), (' Asset impairment ', 50), (' commission revenue ', 50), (' Arising from inventory of cranes ', 48), (' secondment income (tw recovery) ', 48), (' Arising from inventory of spare parts ', 47), (' Profit on sale of assets ', 47), (' paid by customers - at amortised cost ', 46), (' Impairment loss ', 45), (' insurance proceeds ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' share of jv income ', 45), (' dividend from other parties ', 44), (' profit from discontinued operation ', 44), (' quota lease income ', 44), (' net of tax ', 43), (' Power purchase agreement realised gain ', 43), (' Share of gain/(loss) of joint venture ', 43), (' government grants ', 42), (' net (loss)/profit on disposal of non-current assets ', 42), (' net foreign exchange gain ', 42), (' Net loss on disposal of property ', 42), (' sundry income ', 42), (' other revenue', 42), (' foreign exchange gain ', 40), (' other ', 40), (' Sub-lease rental income ', 40), (' Loss on loan refinancing ', 39), (' margin charge income ', 39), (' Remuneration from services linked to newly acquired entities ', 39), ('Accretion expense ', 38), (' effective portion of changes in fair value of cash flow ', 38), (' net foreign exchange gains/(losses) ', 38), (' net gain / loss on disposal of property plant and equipment ', 38), (' Net other foreign exchange (losses)/gains ', 38), (' net ppe disposal (loss)/gain ', 38), (' Power purchase agreement unrelaised gain ', 38), (' Investment in joint venture ', 37), (' Loss on sale of disposal of assets ', 36), (' other income ', 36), (' Interest on unwinding of discount in provisions ', 35), (' net foreign exchange (loss)/gain ', 35), (' plant and equipment ', 33)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: set-off of deferred tax assets pursuant to set-off provisions nan , res_fuzz_match = [(' net of tax ', 71), (' Asset impairment ', 67), (' japan recoveries ', 57), (' Profit on sale of assets ', 53), (' commission revenue ', 50), (' government grants ', 50), (' Net loss on disposal of property ', 50), (' Arising from inventory of cranes ', 48), (' Interest on unwinding of discount in provisions ', 48), (' other miscellaneous - net (loss)/gain ', 48), (' secondment income (tw recovery) ', 48), (' Arising from inventory of spare parts ', 47), ('Accretion expense ', 46), (' Loss on loan refinancing ', 46), (' net ppe disposal (loss)/gain ', 46), (' paid by customers - at amortised cost ', 46), (' Power purchase agreement realised gain ', 46), (' Impairment loss ', 45), (' insurance proceeds ', 45), (' Loss on sale of disposal of assets ', 45), (' net foreign exchange (loss)/gain ', 45), (' share of jv income ', 45), (' dividend from other parties ', 44), (' margin charge income ', 44), (' net (loss)/profit on disposal of non-current assets ', 44), (' Power purchase agreement unrelaised gain ', 44), (' profit from discontinued operation ', 44), (' Share of gain/(loss) of joint venture ', 43), (' Investment in joint venture ', 42), (' net foreign exchange gain ', 42), (' sundry income ', 42), (' other revenue', 42), (' effective portion of changes in fair value of cash flow ', 40), (' foreign exchange gain ', 40), (' net gain / loss on disposal of property plant and equipment ', 40), (' Net other foreign exchange (losses)/gains ', 40), (' other ', 40), (' Sub-lease rental income ', 40), (' Remuneration from services linked to newly acquired entities ', 39), (' net foreign exchange gains/(losses) ', 38), (' quota lease income ', 38), (' other income ', 36), (' plant and equipment ', 33)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = total trade accounts receivable movements $ at 1 april 2021 3,796 accrued interest receivable $ (278) , res_fuzz_match = [('Accretion expense ', 62), (' net of tax ', 57), (' government grants ', 50), (' japan recoveries ', 50), (' margin charge income ', 50), (' net foreign exchange gain ', 50), (' sundry income ', 50), (' other revenue', 50), (' Arising from inventory of cranes ', 48), (' secondment income (tw recovery) ', 48), (' Arising from inventory of spare parts ', 47), (' paid by customers - at amortised cost ', 46), (' Power purchase agreement realised gain ', 46), (' Power purchase agreement unrelaised gain ', 46), (' foreign exchange gain ', 45), (' insurance proceeds ', 45), (' Interest on unwinding of discount in provisions ', 45), (' net foreign exchange (loss)/gain ', 45), (' net foreign exchange gains/(losses) ', 45), (' share of jv income ', 45), (' quota lease income ', 44), (' Remuneration from services linked to newly acquired entities ', 44), (' commission revenue ', 43), (' Net other foreign exchange (losses)/gains ', 43), (' Share of gain/(loss) of joint venture ', 43), (' Asset impairment ', 42), (' Investment in joint venture ', 42), (' net ppe disposal (loss)/gain ', 42), (' other miscellaneous - net (loss)/gain ', 41), (' profit from discontinued operation ', 41), (' Profit on sale of assets ', 41), (' dividend from other parties ', 40), (' other ', 40), (' plant and equipment ', 40), (' Sub-lease rental income ', 40), (' Loss on loan refinancing ', 39), (' effective portion of changes in fair value of cash flow ', 38), (' net gain / loss on disposal of property plant and equipment ', 38), (' Net loss on disposal of property ', 38), (' Impairment loss ', 36), (' Loss on sale of disposal of assets ', 36), (' net (loss)/profit on disposal of non-current assets ', 36), (' other income ', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = total trade accounts receivable movements $ at 1 april 2021 3,796 accrued interest receivable $ (278) , res_fuzz_match = [('Accretion expense ', 62), (' net of tax ', 57), (' government grants ', 50), (' japan recoveries ', 50), (' margin charge income ', 50), (' net foreign exchange gain ', 50), (' sundry income ', 50), (' other revenue', 50), (' Arising from inventory of cranes ', 48), (' secondment income (tw recovery) ', 48), (' Arising from inventory of spare parts ', 47), (' paid by customers - at amortised cost ', 46), (' Power purchase agreement realised gain ', 46), (' Power purchase agreement unrelaised gain ', 46), (' foreign exchange gain ', 45), (' insurance proceeds ', 45), (' Interest on unwinding of discount in provisions ', 45), (' net foreign exchange (loss)/gain ', 45), (' net foreign exchange gains/(losses) ', 45), (' share of jv income ', 45), (' quota lease income ', 44), (' Remuneration from services linked to newly acquired entities ', 44), (' commission revenue ', 43), (' Net other foreign exchange (losses)/gains ', 43), (' Share of gain/(loss) of joint venture ', 43), (' Asset impairment ', 42), (' Investment in joint venture ', 42), (' net ppe disposal (loss)/gain ', 42), (' other miscellaneous - net (loss)/gain ', 41), (' profit from discontinued operation ', 41), (' Profit on sale of assets ', 41), (' dividend from other parties ', 40), (' other ', 40), (' plant and equipment ', 40), (' Sub-lease rental income ', 40), (' Loss on loan refinancing ', 39), (' effective portion of changes in fair value of cash flow ', 38), (' net gain / loss on disposal of property plant and equipment ', 38), (' Net loss on disposal of property ', 38), (' Impairment loss ', 36), (' Loss on sale of disposal of assets ', 36), (' net (loss)/profit on disposal of non-current assets ', 36), (' other income ', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) -profit or loss (3,782) 706 , res_fuzz_match = [(' Impairment loss ', 64), (' Profit on sale of assets ', 61), ('Accretion expense ', 54), (' net ppe disposal (loss)/gain ', 51), (' Net other foreign exchange (losses)/gains ', 50), (' other miscellaneous - net (loss)/gain ', 50), (' net (loss)/profit on disposal of non-current assets ', 46), (' net foreign exchange gains/(losses) ', 46), (' Power purchase agreement realised gain ', 46), (' Power purchase agreement unrelaised gain ', 46), (' Share of gain/(loss) of joint venture ', 46), (' insurance proceeds ', 45), (' share of jv income ', 45), (' margin charge income ', 44), (' net of tax ', 43), (' paid by customers - at amortised cost ', 43), (' Arising from inventory of spare parts ', 42), (' Asset impairment ', 42), (' effective portion of changes in fair value of cash flow ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Loss on sale of disposal of assets ', 42), (' net foreign exchange (loss)/gain ', 42), (' net gain / loss on disposal of property plant and equipment ', 42), (' profit from discontinued operation ', 42), (' other revenue', 42), (' other ', 40), (' Sub-lease rental income ', 40), (' Investment in joint venture ', 39), (' Arising from inventory of cranes ', 38), (' japan recoveries ', 36), (' other income ', 36), (' secondment income (tw recovery) ', 34), (' government grants ', 33), (' Loss on loan refinancing ', 33), (' Net loss on disposal of property ', 33), (' plant and equipment ', 33), (' Remuneration from services linked to newly acquired entities ', 33), (' sundry income ', 33), (' quota lease income ', 31), (' commission revenue ', 29), (' dividend from other parties ', 29), (' foreign exchange gain ', 26), (' net foreign exchange gain ', 26)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 31 march 2022 14 428 , res_fuzz_match = [(' Asset impairment ', 52), (' effective portion of changes in fair value of cash flow ', 50), (' Net other foreign exchange (losses)/gains ', 50), (' Power purchase agreement realised gain ', 50), (' Power purchase agreement unrelaised gain ', 50), ('Accretion expense ', 46), (' margin charge income ', 46), (' share of jv income ', 45), (' net of tax ', 43), (' other revenue', 42), (' net foreign exchange (loss)/gain ', 40), (' net foreign exchange gains/(losses) ', 40), (' other ', 40), (' Arising from inventory of cranes ', 39), (' Arising from inventory of spare parts ', 39), (' Loss on loan refinancing ', 39), (' net foreign exchange gain ', 39), (' paid by customers - at amortised cost ', 39), (' Remuneration from services linked to newly acquired entities ', 39), (' Sub-lease rental income ', 39), (' Impairment loss ', 36), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' other income ', 36), (' foreign exchange gain ', 34), (' dividend from other parties ', 33), (' government grants ', 33), (' Interest on unwinding of discount in provisions ', 33), (' Loss on sale of disposal of assets ', 33), (' net gain / loss on disposal of property plant and equipment ', 33), (' other miscellaneous - net (loss)/gain ', 33), (' profit from discontinued operation ', 33), (' secondment income (tw recovery) ', 33), (' Share of gain/(loss) of joint venture ', 33), (' sundry income ', 33), (' quota lease income ', 31), (' commission revenue ', 29), (' Profit on sale of assets ', 29), (' Investment in joint venture ', 28), (' net (loss)/profit on disposal of non-current assets ', 28), (' Net loss on disposal of property ', 28), (' net ppe disposal (loss)/gain ', 28), (' plant and equipment ', 27)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 1 april 2022 14 428 , res_fuzz_match = [(' net of tax ', 57), ('Accretion expense ', 54), (' effective portion of changes in fair value of cash flow ', 50), (' Power purchase agreement realised gain ', 50), (' Power purchase agreement unrelaised gain ', 50), (' margin charge income ', 46), (' share of jv income ', 45), (' Interest on unwinding of discount in provisions ', 44), (' net foreign exchange (loss)/gain ', 44), (' net foreign exchange gains/(losses) ', 44), (' Net other foreign exchange (losses)/gains ', 44), (' paid by customers - at amortised cost ', 44), (' Share of gain/(loss) of joint venture ', 44), (' Asset impairment ', 43), (' other revenue', 42), (' other ', 40), (' profit from discontinued operation ', 40), (' Arising from inventory of cranes ', 39), (' Arising from inventory of spare parts ', 39), (' dividend from other parties ', 39), (' foreign exchange gain ', 39), (' net foreign exchange gain ', 39), (' net gain / loss on disposal of property plant and equipment ', 39), (' Net loss on disposal of property ', 39), (' other miscellaneous - net (loss)/gain ', 39), (' Remuneration from services linked to newly acquired entities ', 39), (' Sub-lease rental income ', 39), (' insurance proceeds ', 38), (' Impairment loss ', 36), (' japan recoveries ', 36), (' other income ', 36), (' Profit on sale of assets ', 35), (' secondment income (tw recovery) ', 34), (' government grants ', 33), (' Loss on loan refinancing ', 33), (' Loss on sale of disposal of assets ', 33), (' net (loss)/profit on disposal of non-current assets ', 33), (' net ppe disposal (loss)/gain ', 33), (' plant and equipment ', 33), (' sundry income ', 33), (' quota lease income ', 31), (' commission revenue ', 29), (' Investment in joint venture ', 28)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) profit or loss 3,519 (428) , res_fuzz_match = [(' Impairment loss ', 64), (' Profit on sale of assets ', 61), ('Accretion expense ', 54), (' net ppe disposal (loss)/gain ', 51), (' Net other foreign exchange (losses)/gains ', 50), (' other miscellaneous - net (loss)/gain ', 50), (' net (loss)/profit on disposal of non-current assets ', 46), (' net foreign exchange gains/(losses) ', 46), (' Power purchase agreement realised gain ', 46), (' Power purchase agreement unrelaised gain ', 46), (' Share of gain/(loss) of joint venture ', 46), (' insurance proceeds ', 45), (' share of jv income ', 45), (' margin charge income ', 44), (' net of tax ', 43), (' paid by customers - at amortised cost ', 43), (' Arising from inventory of spare parts ', 42), (' Asset impairment ', 42), (' effective portion of changes in fair value of cash flow ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Loss on sale of disposal of assets ', 42), (' net foreign exchange (loss)/gain ', 42), (' net gain / loss on disposal of property plant and equipment ', 42), (' profit from discontinued operation ', 42), (' other revenue', 42), (' other ', 40), (' Sub-lease rental income ', 40), (' Investment in joint venture ', 39), (' Arising from inventory of cranes ', 38), (' japan recoveries ', 36), (' other income ', 36), (' secondment income (tw recovery) ', 34), (' government grants ', 33), (' Loss on loan refinancing ', 33), (' Net loss on disposal of property ', 33), (' plant and equipment ', 33), (' Remuneration from services linked to newly acquired entities ', 33), (' sundry income ', 33), (' quota lease income ', 31), (' commission revenue ', 29), (' dividend from other parties ', 29), (' foreign exchange gain ', 26), (' net foreign exchange gain ', 26)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 31 march 2023 3,533 nan , res_fuzz_match = [(' Asset impairment ', 50), (' effective portion of changes in fair value of cash flow ', 50), (' Net other foreign exchange (losses)/gains ', 50), ('Accretion expense ', 46), (' foreign exchange gain ', 46), (' Impairment loss ', 45), (' net foreign exchange gain ', 45), (' net foreign exchange gains/(losses) ', 45), (' Power purchase agreement realised gain ', 45), (' Power purchase agreement unrelaised gain ', 45), (' share of jv income ', 45), (' margin charge income ', 44), (' net of tax ', 43), (' Profit on sale of assets ', 42), (' other revenue', 42), (' net foreign exchange (loss)/gain ', 41), (' net gain / loss on disposal of property plant and equipment ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' Loss on loan refinancing ', 40), (' Sub-lease rental income ', 40), (' Arising from inventory of cranes ', 36), (' Arising from inventory of spare parts ', 36), (' commission revenue ', 36), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' net (loss)/profit on disposal of non-current assets ', 36), (' net ppe disposal (loss)/gain ', 36), (' other income ', 36), (' paid by customers - at amortised cost ', 36), (' profit from discontinued operation ', 36), (' Share of gain/(loss) of joint venture ', 36), (' government grants ', 33), (' sundry income ', 33), (' dividend from other parties ', 32), (' quota lease income ', 31), (' secondment income (tw recovery) ', 31), (' Interest on unwinding of discount in provisions ', 27), (' Loss on sale of disposal of assets ', 27), (' plant and equipment ', 27), (' Investment in joint venture ', 26), (' Net loss on disposal of property ', 23), (' other ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = share capital 2023 shares 2022 shares , res_fuzz_match = [(' share of jv income ', 64), (' Profit on sale of assets ', 59), (' Arising from inventory of spare parts ', 49), (' Share of gain/(loss) of joint venture ', 48), ('Accretion expense ', 46), (' insurance proceeds ', 45), (' margin charge income ', 44), (' effective portion of changes in fair value of cash flow ', 43), (' net gain / loss on disposal of property plant and equipment ', 43), (' net of tax ', 43), (' Power purchase agreement realised gain ', 43), (' Power purchase agreement unrelaised gain ', 43), (' Asset impairment ', 42), (' other revenue', 42), (' foreign exchange gain ', 40), (' other ', 40), (' plant and equipment ', 40), (' Arising from inventory of cranes ', 39), (' net (loss)/profit on disposal of non-current assets ', 39), (' net foreign exchange (loss)/gain ', 39), (' net foreign exchange gains/(losses) ', 39), (' Net other foreign exchange (losses)/gains ', 39), (' other miscellaneous - net (loss)/gain ', 39), (' paid by customers - at amortised cost ', 39), (' Loss on sale of disposal of assets ', 38), (' Investment in joint venture ', 37), (' commission revenue ', 36), (' dividend from other parties ', 36), (' Impairment loss ', 36), (' japan recoveries ', 36), (' net foreign exchange gain ', 36), (' other income ', 36), (' Interest on unwinding of discount in provisions ', 35), (' Net loss on disposal of property ', 35), (' net ppe disposal (loss)/gain ', 35), (' Remuneration from services linked to newly acquired entities ', 35), (' Sub-lease rental income ', 35), (' government grants ', 33), (' Loss on loan refinancing ', 33), (' secondment income (tw recovery) ', 33), (' sundry income ', 33), (' profit from discontinued operation ', 30), (' quota lease income ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = share capital 2023 shares 2022 shares , res_fuzz_match = [(' share of jv income ', 64), (' Profit on sale of assets ', 59), (' Arising from inventory of spare parts ', 49), (' Share of gain/(loss) of joint venture ', 48), ('Accretion expense ', 46), (' insurance proceeds ', 45), (' margin charge income ', 44), (' effective portion of changes in fair value of cash flow ', 43), (' net gain / loss on disposal of property plant and equipment ', 43), (' net of tax ', 43), (' Power purchase agreement realised gain ', 43), (' Power purchase agreement unrelaised gain ', 43), (' Asset impairment ', 42), (' other revenue', 42), (' foreign exchange gain ', 40), (' other ', 40), (' plant and equipment ', 40), (' Arising from inventory of cranes ', 39), (' net (loss)/profit on disposal of non-current assets ', 39), (' net foreign exchange (loss)/gain ', 39), (' net foreign exchange gains/(losses) ', 39), (' Net other foreign exchange (losses)/gains ', 39), (' other miscellaneous - net (loss)/gain ', 39), (' paid by customers - at amortised cost ', 39), (' Loss on sale of disposal of assets ', 38), (' Investment in joint venture ', 37), (' commission revenue ', 36), (' dividend from other parties ', 36), (' Impairment loss ', 36), (' japan recoveries ', 36), (' net foreign exchange gain ', 36), (' other income ', 36), (' Interest on unwinding of discount in provisions ', 35), (' Net loss on disposal of property ', 35), (' net ppe disposal (loss)/gain ', 35), (' Remuneration from services linked to newly acquired entities ', 35), (' Sub-lease rental income ', 35), (' government grants ', 33), (' Loss on loan refinancing ', 33), (' secondment income (tw recovery) ', 33), (' sundry income ', 33), (' profit from discontinued operation ', 30), (' quota lease income ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = ordinary shares fully paid 25,467,389 25467389 , res_fuzz_match = [(' share of jv income ', 64), (' insurance proceeds ', 55), (' Arising from inventory of spare parts ', 52), (' Asset impairment ', 50), (' margin charge income ', 50), (' net foreign exchange (loss)/gain ', 49), (' Net other foreign exchange (losses)/gains ', 49), (' effective portion of changes in fair value of cash flow ', 48), (' Power purchase agreement unrelaised gain ', 48), (' dividend from other parties ', 45), (' foreign exchange gain ', 45), (' Impairment loss ', 45), (' Power purchase agreement realised gain ', 44), (' net foreign exchange gain ', 42), (' other revenue', 42), (' net foreign exchange gains/(losses) ', 41), (' Profit on sale of assets ', 41), (' net gain / loss on disposal of property plant and equipment ', 40), (' other ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' plant and equipment ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' Loss on loan refinancing ', 39), ('Accretion expense ', 38), (' Loss on sale of disposal of assets ', 38), (' secondment income (tw recovery) ', 38), (' Arising from inventory of cranes ', 37), (' commission revenue ', 36), (' Interest on unwinding of discount in provisions ', 36), (' other income ', 36), (' profit from discontinued operation ', 36), (' Sub-lease rental income ', 35), (' paid by customers - at amortised cost ', 34), (' Net loss on disposal of property ', 33), (' net ppe disposal (loss)/gain ', 33), (' sundry income ', 33), (' Investment in joint venture ', 32), (' net (loss)/profit on disposal of non-current assets ', 32), (' Share of gain/(loss) of joint venture ', 32), (' quota lease income ', 31), (' japan recoveries ', 29), (' net of tax ', 29), (' government grants ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: prepaid insurance nan , res_fuzz_match = [(' japan recoveries ', 57), (' insurance proceeds ', 55), (' Arising from inventory of spare parts ', 53), (' Arising from inventory of cranes ', 52), (' Asset impairment ', 50), (' commission revenue ', 50), (' quota lease income ', 50), (' Power purchase agreement realised gain ', 49), (' profit from discontinued operation ', 48), (' secondment income (tw recovery) ', 48), (' Profit on sale of assets ', 47), ('Accretion expense ', 46), (' paid by customers - at amortised cost ', 46), (' Power purchase agreement unrelaised gain ', 46), (' Impairment loss ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' share of jv income ', 45), (' dividend from other parties ', 44), (' margin charge income ', 44), (' Share of gain/(loss) of joint venture ', 43), (' government grants ', 42), (' Investment in joint venture ', 42), (' net (loss)/profit on disposal of non-current assets ', 42), (' net foreign exchange gain ', 42), (' Net loss on disposal of property ', 42), (' net ppe disposal (loss)/gain ', 42), (' sundry income ', 42), (' net foreign exchange (loss)/gain ', 41), (' Net other foreign exchange (losses)/gains ', 41), (' foreign exchange gain ', 40), (' net gain / loss on disposal of property plant and equipment ', 40), (' other ', 40), (' plant and equipment ', 40), (' Sub-lease rental income ', 40), (' Interest on unwinding of discount in provisions ', 39), (' Loss on loan refinancing ', 39), (' Remuneration from services linked to newly acquired entities ', 39), (' net foreign exchange gains/(losses) ', 38), (' Loss on sale of disposal of assets ', 36), (' other income ', 36), (' effective portion of changes in fair value of cash flow ', 35), (' other revenue', 33), (' net of tax ', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: trade accounts receivable nan , res_fuzz_match = [(' japan recoveries ', 57), (' net of tax ', 57), (' Arising from inventory of cranes ', 56), ('Accretion expense ', 54), (' Loss on loan refinancing ', 51), (' Arising from inventory of spare parts ', 50), (' Asset impairment ', 50), (' commission revenue ', 50), (' other revenue', 50), (' secondment income (tw recovery) ', 48), (' Power purchase agreement unrelaised gain ', 47), (' Profit on sale of assets ', 47), (' paid by customers - at amortised cost ', 46), (' Power purchase agreement realised gain ', 46), (' Impairment loss ', 45), (' insurance proceeds ', 45), (' Interest on unwinding of discount in provisions ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' share of jv income ', 45), (' dividend from other parties ', 44), (' margin charge income ', 44), (' profit from discontinued operation ', 44), (' Share of gain/(loss) of joint venture ', 43), (' government grants ', 42), (' net (loss)/profit on disposal of non-current assets ', 42), (' net foreign exchange gain ', 42), (' Net loss on disposal of property ', 42), (' Remuneration from services linked to newly acquired entities ', 41), (' foreign exchange gain ', 40), (' net gain / loss on disposal of property plant and equipment ', 40), (' other ', 40), (' plant and equipment ', 40), (' Sub-lease rental income ', 40), (' net foreign exchange gains/(losses) ', 39), (' effective portion of changes in fair value of cash flow ', 38), (' net foreign exchange (loss)/gain ', 38), (' Net other foreign exchange (losses)/gains ', 38), (' net ppe disposal (loss)/gain ', 38), (' quota lease income ', 38), (' Investment in joint venture ', 37), (' Loss on sale of disposal of assets ', 36), (' other income ', 36), (' sundry income ', 33)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: accrued interest receivable nan , res_fuzz_match = [(' japan recoveries ', 57), (' Arising from inventory of cranes ', 52), (' Arising from inventory of spare parts ', 50), (' Asset impairment ', 50), (' commission revenue ', 50), (' margin charge income ', 50), (' other revenue', 50), (' secondment income (tw recovery) ', 48), (' Investment in joint venture ', 47), (' Profit on sale of assets ', 47), ('Accretion expense ', 46), (' Loss on loan refinancing ', 46), (' net foreign exchange gain ', 46), (' paid by customers - at amortised cost ', 46), (' Power purchase agreement unrelaised gain ', 46), (' Impairment loss ', 45), (' insurance proceeds ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' share of jv income ', 45), (' dividend from other parties ', 44), (' profit from discontinued operation ', 44), (' quota lease income ', 44), (' net of tax ', 43), (' Power purchase agreement realised gain ', 43), (' Share of gain/(loss) of joint venture ', 43), (' government grants ', 42), (' net (loss)/profit on disposal of non-current assets ', 42), (' Net loss on disposal of property ', 42), (' Remuneration from services linked to newly acquired entities ', 41), (' foreign exchange gain ', 40), (' net gain / loss on disposal of property plant and equipment ', 40), (' other ', 40), (' Sub-lease rental income ', 40), (' Interest on unwinding of discount in provisions ', 39), (' effective portion of changes in fair value of cash flow ', 38), (' net foreign exchange (loss)/gain ', 38), (' net foreign exchange gains/(losses) ', 38), (' net ppe disposal (loss)/gain ', 38), (' Net other foreign exchange (losses)/gains ', 37), (' Loss on sale of disposal of assets ', 36), (' other income ', 36), (' plant and equipment ', 33), (' sundry income ', 33)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: total nan , res_fuzz_match = [(' japan recoveries ', 57), (' Asset impairment ', 50), (' commission revenue ', 50), (' Arising from inventory of cranes ', 48), (' secondment income (tw recovery) ', 48), (' Arising from inventory of spare parts ', 47), (' Profit on sale of assets ', 47), (' paid by customers - at amortised cost ', 46), (' Impairment loss ', 45), (' insurance proceeds ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' share of jv income ', 45), (' dividend from other parties ', 44), (' profit from discontinued operation ', 44), (' quota lease income ', 44), (' net of tax ', 43), (' Power purchase agreement realised gain ', 43), (' Share of gain/(loss) of joint venture ', 43), (' government grants ', 42), (' net (loss)/profit on disposal of non-current assets ', 42), (' net foreign exchange gain ', 42), (' Net loss on disposal of property ', 42), (' sundry income ', 42), (' other revenue', 42), (' foreign exchange gain ', 40), (' other ', 40), (' Sub-lease rental income ', 40), (' Loss on loan refinancing ', 39), (' margin charge income ', 39), (' Remuneration from services linked to newly acquired entities ', 39), ('Accretion expense ', 38), (' effective portion of changes in fair value of cash flow ', 38), (' net foreign exchange gains/(losses) ', 38), (' net gain / loss on disposal of property plant and equipment ', 38), (' Net other foreign exchange (losses)/gains ', 38), (' net ppe disposal (loss)/gain ', 38), (' Power purchase agreement unrelaised gain ', 38), (' Investment in joint venture ', 37), (' Loss on sale of disposal of assets ', 36), (' other income ', 36), (' Interest on unwinding of discount in provisions ', 35), (' net foreign exchange (loss)/gain ', 35), (' plant and equipment ', 33)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary differences attributable to: set-off of deferred tax assets pursuant to set-off provisions nan , res_fuzz_match = [(' net of tax ', 71), (' Asset impairment ', 67), (' japan recoveries ', 57), (' Profit on sale of assets ', 53), (' commission revenue ', 50), (' government grants ', 50), (' Net loss on disposal of property ', 50), (' Arising from inventory of cranes ', 48), (' Interest on unwinding of discount in provisions ', 48), (' other miscellaneous - net (loss)/gain ', 48), (' secondment income (tw recovery) ', 48), (' Arising from inventory of spare parts ', 47), ('Accretion expense ', 46), (' Loss on loan refinancing ', 46), (' net ppe disposal (loss)/gain ', 46), (' paid by customers - at amortised cost ', 46), (' Power purchase agreement realised gain ', 46), (' Impairment loss ', 45), (' insurance proceeds ', 45), (' Loss on sale of disposal of assets ', 45), (' net foreign exchange (loss)/gain ', 45), (' share of jv income ', 45), (' dividend from other parties ', 44), (' margin charge income ', 44), (' net (loss)/profit on disposal of non-current assets ', 44), (' Power purchase agreement unrelaised gain ', 44), (' profit from discontinued operation ', 44), (' Share of gain/(loss) of joint venture ', 43), (' Investment in joint venture ', 42), (' net foreign exchange gain ', 42), (' sundry income ', 42), (' other revenue', 42), (' effective portion of changes in fair value of cash flow ', 40), (' foreign exchange gain ', 40), (' net gain / loss on disposal of property plant and equipment ', 40), (' Net other foreign exchange (losses)/gains ', 40), (' other ', 40), (' Sub-lease rental income ', 40), (' Remuneration from services linked to newly acquired entities ', 39), (' net foreign exchange gains/(losses) ', 38), (' quota lease income ', 38), (' other income ', 36), (' plant and equipment ', 33)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = total trade accounts receivable movements $ at 1 april 2021 3,796 accrued interest receivable $ (278) , res_fuzz_match = [('Accretion expense ', 62), (' net of tax ', 57), (' government grants ', 50), (' japan recoveries ', 50), (' margin charge income ', 50), (' net foreign exchange gain ', 50), (' sundry income ', 50), (' other revenue', 50), (' Arising from inventory of cranes ', 48), (' secondment income (tw recovery) ', 48), (' Arising from inventory of spare parts ', 47), (' paid by customers - at amortised cost ', 46), (' Power purchase agreement realised gain ', 46), (' Power purchase agreement unrelaised gain ', 46), (' foreign exchange gain ', 45), (' insurance proceeds ', 45), (' Interest on unwinding of discount in provisions ', 45), (' net foreign exchange (loss)/gain ', 45), (' net foreign exchange gains/(losses) ', 45), (' share of jv income ', 45), (' quota lease income ', 44), (' Remuneration from services linked to newly acquired entities ', 44), (' commission revenue ', 43), (' Net other foreign exchange (losses)/gains ', 43), (' Share of gain/(loss) of joint venture ', 43), (' Asset impairment ', 42), (' Investment in joint venture ', 42), (' net ppe disposal (loss)/gain ', 42), (' other miscellaneous - net (loss)/gain ', 41), (' profit from discontinued operation ', 41), (' Profit on sale of assets ', 41), (' dividend from other parties ', 40), (' other ', 40), (' plant and equipment ', 40), (' Sub-lease rental income ', 40), (' Loss on loan refinancing ', 39), (' effective portion of changes in fair value of cash flow ', 38), (' net gain / loss on disposal of property plant and equipment ', 38), (' Net loss on disposal of property ', 38), (' Impairment loss ', 36), (' Loss on sale of disposal of assets ', 36), (' net (loss)/profit on disposal of non-current assets ', 36), (' other income ', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = total trade accounts receivable movements $ at 1 april 2021 3,796 accrued interest receivable $ (278) , res_fuzz_match = [('Accretion expense ', 62), (' net of tax ', 57), (' government grants ', 50), (' japan recoveries ', 50), (' margin charge income ', 50), (' net foreign exchange gain ', 50), (' sundry income ', 50), (' other revenue', 50), (' Arising from inventory of cranes ', 48), (' secondment income (tw recovery) ', 48), (' Arising from inventory of spare parts ', 47), (' paid by customers - at amortised cost ', 46), (' Power purchase agreement realised gain ', 46), (' Power purchase agreement unrelaised gain ', 46), (' foreign exchange gain ', 45), (' insurance proceeds ', 45), (' Interest on unwinding of discount in provisions ', 45), (' net foreign exchange (loss)/gain ', 45), (' net foreign exchange gains/(losses) ', 45), (' share of jv income ', 45), (' quota lease income ', 44), (' Remuneration from services linked to newly acquired entities ', 44), (' commission revenue ', 43), (' Net other foreign exchange (losses)/gains ', 43), (' Share of gain/(loss) of joint venture ', 43), (' Asset impairment ', 42), (' Investment in joint venture ', 42), (' net ppe disposal (loss)/gain ', 42), (' other miscellaneous - net (loss)/gain ', 41), (' profit from discontinued operation ', 41), (' Profit on sale of assets ', 41), (' dividend from other parties ', 40), (' other ', 40), (' plant and equipment ', 40), (' Sub-lease rental income ', 40), (' Loss on loan refinancing ', 39), (' effective portion of changes in fair value of cash flow ', 38), (' net gain / loss on disposal of property plant and equipment ', 38), (' Net loss on disposal of property ', 38), (' Impairment loss ', 36), (' Loss on sale of disposal of assets ', 36), (' net (loss)/profit on disposal of non-current assets ', 36), (' other income ', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) -profit or loss (3,782) 706 , res_fuzz_match = [(' Impairment loss ', 64), (' Profit on sale of assets ', 61), ('Accretion expense ', 54), (' net ppe disposal (loss)/gain ', 51), (' Net other foreign exchange (losses)/gains ', 50), (' other miscellaneous - net (loss)/gain ', 50), (' net (loss)/profit on disposal of non-current assets ', 46), (' net foreign exchange gains/(losses) ', 46), (' Power purchase agreement realised gain ', 46), (' Power purchase agreement unrelaised gain ', 46), (' Share of gain/(loss) of joint venture ', 46), (' insurance proceeds ', 45), (' share of jv income ', 45), (' margin charge income ', 44), (' net of tax ', 43), (' paid by customers - at amortised cost ', 43), (' Arising from inventory of spare parts ', 42), (' Asset impairment ', 42), (' effective portion of changes in fair value of cash flow ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Loss on sale of disposal of assets ', 42), (' net foreign exchange (loss)/gain ', 42), (' net gain / loss on disposal of property plant and equipment ', 42), (' profit from discontinued operation ', 42), (' other revenue', 42), (' other ', 40), (' Sub-lease rental income ', 40), (' Investment in joint venture ', 39), (' Arising from inventory of cranes ', 38), (' japan recoveries ', 36), (' other income ', 36), (' secondment income (tw recovery) ', 34), (' government grants ', 33), (' Loss on loan refinancing ', 33), (' Net loss on disposal of property ', 33), (' plant and equipment ', 33), (' Remuneration from services linked to newly acquired entities ', 33), (' sundry income ', 33), (' quota lease income ', 31), (' commission revenue ', 29), (' dividend from other parties ', 29), (' foreign exchange gain ', 26), (' net foreign exchange gain ', 26)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 31 march 2022 14 428 , res_fuzz_match = [(' Asset impairment ', 52), (' effective portion of changes in fair value of cash flow ', 50), (' Net other foreign exchange (losses)/gains ', 50), (' Power purchase agreement realised gain ', 50), (' Power purchase agreement unrelaised gain ', 50), ('Accretion expense ', 46), (' margin charge income ', 46), (' share of jv income ', 45), (' net of tax ', 43), (' other revenue', 42), (' net foreign exchange (loss)/gain ', 40), (' net foreign exchange gains/(losses) ', 40), (' other ', 40), (' Arising from inventory of cranes ', 39), (' Arising from inventory of spare parts ', 39), (' Loss on loan refinancing ', 39), (' net foreign exchange gain ', 39), (' paid by customers - at amortised cost ', 39), (' Remuneration from services linked to newly acquired entities ', 39), (' Sub-lease rental income ', 39), (' Impairment loss ', 36), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' other income ', 36), (' foreign exchange gain ', 34), (' dividend from other parties ', 33), (' government grants ', 33), (' Interest on unwinding of discount in provisions ', 33), (' Loss on sale of disposal of assets ', 33), (' net gain / loss on disposal of property plant and equipment ', 33), (' other miscellaneous - net (loss)/gain ', 33), (' profit from discontinued operation ', 33), (' secondment income (tw recovery) ', 33), (' Share of gain/(loss) of joint venture ', 33), (' sundry income ', 33), (' quota lease income ', 31), (' commission revenue ', 29), (' Profit on sale of assets ', 29), (' Investment in joint venture ', 28), (' net (loss)/profit on disposal of non-current assets ', 28), (' Net loss on disposal of property ', 28), (' net ppe disposal (loss)/gain ', 28), (' plant and equipment ', 27)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 1 april 2022 14 428 , res_fuzz_match = [(' net of tax ', 57), ('Accretion expense ', 54), (' effective portion of changes in fair value of cash flow ', 50), (' Power purchase agreement realised gain ', 50), (' Power purchase agreement unrelaised gain ', 50), (' margin charge income ', 46), (' share of jv income ', 45), (' Interest on unwinding of discount in provisions ', 44), (' net foreign exchange (loss)/gain ', 44), (' net foreign exchange gains/(losses) ', 44), (' Net other foreign exchange (losses)/gains ', 44), (' paid by customers - at amortised cost ', 44), (' Share of gain/(loss) of joint venture ', 44), (' Asset impairment ', 43), (' other revenue', 42), (' other ', 40), (' profit from discontinued operation ', 40), (' Arising from inventory of cranes ', 39), (' Arising from inventory of spare parts ', 39), (' dividend from other parties ', 39), (' foreign exchange gain ', 39), (' net foreign exchange gain ', 39), (' net gain / loss on disposal of property plant and equipment ', 39), (' Net loss on disposal of property ', 39), (' other miscellaneous - net (loss)/gain ', 39), (' Remuneration from services linked to newly acquired entities ', 39), (' Sub-lease rental income ', 39), (' insurance proceeds ', 38), (' Impairment loss ', 36), (' japan recoveries ', 36), (' other income ', 36), (' Profit on sale of assets ', 35), (' secondment income (tw recovery) ', 34), (' government grants ', 33), (' Loss on loan refinancing ', 33), (' Loss on sale of disposal of assets ', 33), (' net (loss)/profit on disposal of non-current assets ', 33), (' net ppe disposal (loss)/gain ', 33), (' plant and equipment ', 33), (' sundry income ', 33), (' quota lease income ', 31), (' commission revenue ', 29), (' Investment in joint venture ', 28)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) profit or loss 3,519 (428) , res_fuzz_match = [(' Impairment loss ', 64), (' Profit on sale of assets ', 61), ('Accretion expense ', 54), (' net ppe disposal (loss)/gain ', 51), (' Net other foreign exchange (losses)/gains ', 50), (' other miscellaneous - net (loss)/gain ', 50), (' net (loss)/profit on disposal of non-current assets ', 46), (' net foreign exchange gains/(losses) ', 46), (' Power purchase agreement realised gain ', 46), (' Power purchase agreement unrelaised gain ', 46), (' Share of gain/(loss) of joint venture ', 46), (' insurance proceeds ', 45), (' share of jv income ', 45), (' margin charge income ', 44), (' net of tax ', 43), (' paid by customers - at amortised cost ', 43), (' Arising from inventory of spare parts ', 42), (' Asset impairment ', 42), (' effective portion of changes in fair value of cash flow ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Loss on sale of disposal of assets ', 42), (' net foreign exchange (loss)/gain ', 42), (' net gain / loss on disposal of property plant and equipment ', 42), (' profit from discontinued operation ', 42), (' other revenue', 42), (' other ', 40), (' Sub-lease rental income ', 40), (' Investment in joint venture ', 39), (' Arising from inventory of cranes ', 38), (' japan recoveries ', 36), (' other income ', 36), (' secondment income (tw recovery) ', 34), (' government grants ', 33), (' Loss on loan refinancing ', 33), (' Net loss on disposal of property ', 33), (' plant and equipment ', 33), (' Remuneration from services linked to newly acquired entities ', 33), (' sundry income ', 33), (' quota lease income ', 31), (' commission revenue ', 29), (' dividend from other parties ', 29), (' foreign exchange gain ', 26), (' net foreign exchange gain ', 26)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = charged/(credited) at 31 march 2023 3,533 nan , res_fuzz_match = [(' Asset impairment ', 50), (' effective portion of changes in fair value of cash flow ', 50), (' Net other foreign exchange (losses)/gains ', 50), ('Accretion expense ', 46), (' foreign exchange gain ', 46), (' Impairment loss ', 45), (' net foreign exchange gain ', 45), (' net foreign exchange gains/(losses) ', 45), (' Power purchase agreement realised gain ', 45), (' Power purchase agreement unrelaised gain ', 45), (' share of jv income ', 45), (' margin charge income ', 44), (' net of tax ', 43), (' Profit on sale of assets ', 42), (' other revenue', 42), (' net foreign exchange (loss)/gain ', 41), (' net gain / loss on disposal of property plant and equipment ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' Loss on loan refinancing ', 40), (' Sub-lease rental income ', 40), (' Arising from inventory of cranes ', 36), (' Arising from inventory of spare parts ', 36), (' commission revenue ', 36), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' net (loss)/profit on disposal of non-current assets ', 36), (' net ppe disposal (loss)/gain ', 36), (' other income ', 36), (' paid by customers - at amortised cost ', 36), (' profit from discontinued operation ', 36), (' Share of gain/(loss) of joint venture ', 36), (' government grants ', 33), (' sundry income ', 33), (' dividend from other parties ', 32), (' quota lease income ', 31), (' secondment income (tw recovery) ', 31), (' Interest on unwinding of discount in provisions ', 27), (' Loss on sale of disposal of assets ', 27), (' plant and equipment ', 27), (' Investment in joint venture ', 26), (' Net loss on disposal of property ', 23), (' other ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = share capital 2023 shares 2022 shares , res_fuzz_match = [(' share of jv income ', 64), (' Profit on sale of assets ', 59), (' Arising from inventory of spare parts ', 49), (' Share of gain/(loss) of joint venture ', 48), ('Accretion expense ', 46), (' insurance proceeds ', 45), (' margin charge income ', 44), (' effective portion of changes in fair value of cash flow ', 43), (' net gain / loss on disposal of property plant and equipment ', 43), (' net of tax ', 43), (' Power purchase agreement realised gain ', 43), (' Power purchase agreement unrelaised gain ', 43), (' Asset impairment ', 42), (' other revenue', 42), (' foreign exchange gain ', 40), (' other ', 40), (' plant and equipment ', 40), (' Arising from inventory of cranes ', 39), (' net (loss)/profit on disposal of non-current assets ', 39), (' net foreign exchange (loss)/gain ', 39), (' net foreign exchange gains/(losses) ', 39), (' Net other foreign exchange (losses)/gains ', 39), (' other miscellaneous - net (loss)/gain ', 39), (' paid by customers - at amortised cost ', 39), (' Loss on sale of disposal of assets ', 38), (' Investment in joint venture ', 37), (' commission revenue ', 36), (' dividend from other parties ', 36), (' Impairment loss ', 36), (' japan recoveries ', 36), (' net foreign exchange gain ', 36), (' other income ', 36), (' Interest on unwinding of discount in provisions ', 35), (' Net loss on disposal of property ', 35), (' net ppe disposal (loss)/gain ', 35), (' Remuneration from services linked to newly acquired entities ', 35), (' Sub-lease rental income ', 35), (' government grants ', 33), (' Loss on loan refinancing ', 33), (' secondment income (tw recovery) ', 33), (' sundry income ', 33), (' profit from discontinued operation ', 30), (' quota lease income ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = share capital 2023 shares 2022 shares , res_fuzz_match = [(' share of jv income ', 64), (' Profit on sale of assets ', 59), (' Arising from inventory of spare parts ', 49), (' Share of gain/(loss) of joint venture ', 48), ('Accretion expense ', 46), (' insurance proceeds ', 45), (' margin charge income ', 44), (' effective portion of changes in fair value of cash flow ', 43), (' net gain / loss on disposal of property plant and equipment ', 43), (' net of tax ', 43), (' Power purchase agreement realised gain ', 43), (' Power purchase agreement unrelaised gain ', 43), (' Asset impairment ', 42), (' other revenue', 42), (' foreign exchange gain ', 40), (' other ', 40), (' plant and equipment ', 40), (' Arising from inventory of cranes ', 39), (' net (loss)/profit on disposal of non-current assets ', 39), (' net foreign exchange (loss)/gain ', 39), (' net foreign exchange gains/(losses) ', 39), (' Net other foreign exchange (losses)/gains ', 39), (' other miscellaneous - net (loss)/gain ', 39), (' paid by customers - at amortised cost ', 39), (' Loss on sale of disposal of assets ', 38), (' Investment in joint venture ', 37), (' commission revenue ', 36), (' dividend from other parties ', 36), (' Impairment loss ', 36), (' japan recoveries ', 36), (' net foreign exchange gain ', 36), (' other income ', 36), (' Interest on unwinding of discount in provisions ', 35), (' Net loss on disposal of property ', 35), (' net ppe disposal (loss)/gain ', 35), (' Remuneration from services linked to newly acquired entities ', 35), (' Sub-lease rental income ', 35), (' government grants ', 33), (' Loss on loan refinancing ', 33), (' secondment income (tw recovery) ', 33), (' sundry income ', 33), (' profit from discontinued operation ', 30), (' quota lease income ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = ordinary shares fully paid 25,467,389 25467389 , res_fuzz_match = [(' share of jv income ', 64), (' insurance proceeds ', 55), (' Arising from inventory of spare parts ', 52), (' Asset impairment ', 50), (' margin charge income ', 50), (' net foreign exchange (loss)/gain ', 49), (' Net other foreign exchange (losses)/gains ', 49), (' effective portion of changes in fair value of cash flow ', 48), (' Power purchase agreement unrelaised gain ', 48), (' dividend from other parties ', 45), (' foreign exchange gain ', 45), (' Impairment loss ', 45), (' Power purchase agreement realised gain ', 44), (' net foreign exchange gain ', 42), (' other revenue', 42), (' net foreign exchange gains/(losses) ', 41), (' Profit on sale of assets ', 41), (' net gain / loss on disposal of property plant and equipment ', 40), (' other ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' plant and equipment ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' Loss on loan refinancing ', 39), ('Accretion expense ', 38), (' Loss on sale of disposal of assets ', 38), (' secondment income (tw recovery) ', 38), (' Arising from inventory of cranes ', 37), (' commission revenue ', 36), (' Interest on unwinding of discount in provisions ', 36), (' other income ', 36), (' profit from discontinued operation ', 36), (' Sub-lease rental income ', 35), (' paid by customers - at amortised cost ', 34), (' Net loss on disposal of property ', 33), (' net ppe disposal (loss)/gain ', 33), (' sundry income ', 33), (' Investment in joint venture ', 32), (' net (loss)/profit on disposal of non-current assets ', 32), (' Share of gain/(loss) of joint venture ', 32), (' quota lease income ', 31), (' japan recoveries ', 29), (' net of tax ', 29), (' government grants ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:53+0530 - sLogger - DEBUG - keywords = ['Accretion expense ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Asset impairment ', ' commission revenue ', ' dividend from other parties ', ' effective portion of changes in fair value of cash flow ', ' foreign exchange gain ', ' government grants ', ' Impairment loss ', ' insurance proceeds ', ' Interest on unwinding of discount in provisions ', ' Investment in joint venture ', ' japan recoveries ', ' Loss on loan refinancing ', ' Loss on sale of disposal of assets ', ' margin charge income ', ' net (loss)/profit on disposal of non-current assets ', ' net foreign exchange (loss)/gain ', ' net foreign exchange gain ', ' net foreign exchange gains/(losses) ', ' net gain / loss on disposal of property plant and equipment ', ' Net loss on disposal of property ', ' net of tax ', ' Net other foreign exchange (losses)/gains ', ' net ppe disposal (loss)/gain ', ' other ', ' other income ', ' other miscellaneous - net (loss)/gain ', ' paid by customers - at amortised cost ', ' plant and equipment ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' profit from discontinued operation ', ' Profit on sale of assets ', ' quota lease income ', ' Remuneration from services linked to newly acquired entities ', ' secondment income (tw recovery) ', ' Share of gain/(loss) of joint venture ', ' share of jv income ', ' Sub-lease rental income ', ' sundry income ', ' other revenue'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = none foreign currency translation , res_fuzz_match = [(' net foreign exchange gain ', 67), (' foreign exchange gain ', 65), (' net foreign exchange (loss)/gain ', 60), (' net foreign exchange gains/(losses) ', 60), (' Net other foreign exchange (losses)/gains ', 59), (' government grants ', 58), (' net of tax ', 57), (' insurance proceeds ', 55), (' other revenue', 50), (' Investment in joint venture ', 47), ('Accretion expense ', 46), (' effective portion of changes in fair value of cash flow ', 45), (' other income ', 45), (' Power purchase agreement realised gain ', 45), (' Power purchase agreement unrelaised gain ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' share of jv income ', 45), (' Arising from inventory of cranes ', 44), (' Loss on loan refinancing ', 44), (' margin charge income ', 44), (' commission revenue ', 43), (' japan recoveries ', 43), (' secondment income (tw recovery) ', 43), (' Interest on unwinding of discount in provisions ', 42), (' Arising from inventory of spare parts ', 41), (' net (loss)/profit on disposal of non-current assets ', 41), (' other ', 40), (' Sub-lease rental income ', 40), (' other miscellaneous - net (loss)/gain ', 39), (' Share of gain/(loss) of joint venture ', 39), (' net gain / loss on disposal of property plant and equipment ', 38), (' Net loss on disposal of property ', 38), (' net ppe disposal (loss)/gain ', 38), (' dividend from other parties ', 36), (' Profit on sale of assets ', 35), (' paid by customers - at amortised cost ', 33), (' profit from discontinued operation ', 33), (' sundry income ', 33), (' Loss on sale of disposal of assets ', 32), (' quota lease income ', 31), (' Impairment loss ', 27), (' plant and equipment ', 27), (' Asset impairment ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = foreign currency translation opening balance , res_fuzz_match = [(' foreign exchange gain ', 65), (' government grants ', 58), (' net of tax ', 57), (' insurance proceeds ', 55), (' net foreign exchange gain ', 54), (' net foreign exchange (loss)/gain ', 52), (' net foreign exchange gains/(losses) ', 52), (' Loss on loan refinancing ', 50), (' Sub-lease rental income ', 50), (' Net other foreign exchange (losses)/gains ', 49), ('Accretion expense ', 46), (' Power purchase agreement realised gain ', 46), (' other income ', 45), (' margin charge income ', 44), (' Arising from inventory of spare parts ', 43), (' commission revenue ', 43), (' japan recoveries ', 43), (' Asset impairment ', 42), (' Investment in joint venture ', 42), (' Power purchase agreement unrelaised gain ', 42), (' other revenue', 42), (' other miscellaneous - net (loss)/gain ', 41), (' profit from discontinued operation ', 41), (' Arising from inventory of cranes ', 40), (' other ', 40), (' plant and equipment ', 40), (' effective portion of changes in fair value of cash flow ', 39), (' net gain / loss on disposal of property plant and equipment ', 39), (' Remuneration from services linked to newly acquired entities ', 39), (' Share of gain/(loss) of joint venture ', 39), (' net ppe disposal (loss)/gain ', 38), (' paid by customers - at amortised cost ', 38), (' quota lease income ', 38), (' secondment income (tw recovery) ', 38), (' dividend from other parties ', 36), (' share of jv income ', 36), (' Interest on unwinding of discount in provisions ', 35), (' Profit on sale of assets ', 35), (' net (loss)/profit on disposal of non-current assets ', 34), (' Net loss on disposal of property ', 33), (' sundry income ', 33), (' Loss on sale of disposal of assets ', 32), (' Impairment loss ', 27)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = foreign currency translation currency translation differences arising during the year , res_fuzz_match = [(' foreign exchange gain ', 65), (' other ', 60), (' government grants ', 58), (' net of tax ', 57), (' insurance proceeds ', 55), (' Sub-lease rental income ', 50), (' dividend from other parties ', 48), (' net foreign exchange gain ', 46), (' Power purchase agreement unrelaised gain ', 46), (' Loss on sale of disposal of assets ', 45), (' net foreign exchange (loss)/gain ', 45), (' other income ', 45), (' share of jv income ', 45), (' Arising from inventory of cranes ', 44), (' Arising from inventory of spare parts ', 44), (' Loss on loan refinancing ', 44), (' margin charge income ', 44), (' commission revenue ', 43), (' japan recoveries ', 43), (' Power purchase agreement realised gain ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' Share of gain/(loss) of joint venture ', 43), (' Asset impairment ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Investment in joint venture ', 42), (' sundry income ', 42), (' other revenue', 42), (' net foreign exchange gains/(losses) ', 41), (' profit from discontinued operation ', 41), (' Profit on sale of assets ', 41), (' effective portion of changes in fair value of cash flow ', 40), (' Net other foreign exchange (losses)/gains ', 40), (' plant and equipment ', 40), (' net (loss)/profit on disposal of non-current assets ', 39), ('Accretion expense ', 38), (' net gain / loss on disposal of property plant and equipment ', 38), (' Net loss on disposal of property ', 38), (' other miscellaneous - net (loss)/gain ', 38), (' paid by customers - at amortised cost ', 38), (' quota lease income ', 38), (' secondment income (tw recovery) ', 38), (' Impairment loss ', 36), (' net ppe disposal (loss)/gain ', 33)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = foreign currency translation balance 31 march , res_fuzz_match = [(' foreign exchange gain ', 65), (' government grants ', 58), (' net of tax ', 57), (' insurance proceeds ', 55), (' net foreign exchange gain ', 54), (' net foreign exchange (loss)/gain ', 52), (' net foreign exchange gains/(losses) ', 52), (' plant and equipment ', 47), (' Net other foreign exchange (losses)/gains ', 46), (' other income ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' share of jv income ', 45), (' Sub-lease rental income ', 45), (' Loss on loan refinancing ', 44), (' margin charge income ', 44), (' quota lease income ', 44), (' commission revenue ', 43), (' effective portion of changes in fair value of cash flow ', 43), (' japan recoveries ', 43), (' Power purchase agreement realised gain ', 43), (' Asset impairment ', 42), (' other revenue', 42), (' Power purchase agreement unrelaised gain ', 41), (' Arising from inventory of cranes ', 40), (' Arising from inventory of spare parts ', 40), (' other ', 40), ('Accretion expense ', 38), (' net gain / loss on disposal of property plant and equipment ', 38), (' net ppe disposal (loss)/gain ', 38), (' Remuneration from services linked to newly acquired entities ', 38), (' secondment income (tw recovery) ', 38), (' Investment in joint venture ', 37), (' dividend from other parties ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Interest on unwinding of discount in provisions ', 35), (' Profit on sale of assets ', 35), (' net (loss)/profit on disposal of non-current assets ', 33), (' paid by customers - at amortised cost ', 33), (' sundry income ', 33), (' profit from discontinued operation ', 30), (' Net loss on disposal of property ', 29), (' Impairment loss ', 27), (' Loss on sale of disposal of assets ', 27)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: total , res_fuzz_match = [(' net of tax ', 71), (' government grants ', 58), (' net foreign exchange (loss)/gain ', 52), (' net foreign exchange gains/(losses) ', 52), (' foreign exchange gain ', 50), (' net foreign exchange gain ', 50), (' effective portion of changes in fair value of cash flow ', 47), (' Investment in joint venture ', 47), (' plant and equipment ', 47), ('Accretion expense ', 46), (' Net other foreign exchange (losses)/gains ', 46), (' insurance proceeds ', 45), (' Loss on loan refinancing ', 44), (' margin charge income ', 44), (' commission revenue ', 43), (' japan recoveries ', 43), (' Asset impairment ', 42), (' net ppe disposal (loss)/gain ', 42), (' other revenue', 42), (' other miscellaneous - net (loss)/gain ', 41), (' Power purchase agreement unrelaised gain ', 41), (' dividend from other parties ', 40), (' other ', 40), (' Power purchase agreement realised gain ', 40), (' Sub-lease rental income ', 40), (' Interest on unwinding of discount in provisions ', 39), (' quota lease income ', 38), (' secondment income (tw recovery) ', 38), (' Arising from inventory of spare parts ', 37), (' net gain / loss on disposal of property plant and equipment ', 37), (' Remuneration from services linked to newly acquired entities ', 37), (' Arising from inventory of cranes ', 36), (' Impairment loss ', 36), (' other income ', 36), (' Share of gain/(loss) of joint venture ', 36), (' share of jv income ', 36), (' Profit on sale of assets ', 35), (' Net loss on disposal of property ', 33), (' paid by customers - at amortised cost ', 33), (' sundry income ', 33), (' net (loss)/profit on disposal of non-current assets ', 31), (' profit from discontinued operation ', 30), (' Loss on sale of disposal of assets ', 27)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: total , res_fuzz_match = [(' net of tax ', 71), (' government grants ', 58), (' net foreign exchange (loss)/gain ', 52), (' net foreign exchange gains/(losses) ', 52), (' foreign exchange gain ', 50), (' net foreign exchange gain ', 50), (' effective portion of changes in fair value of cash flow ', 47), (' Investment in joint venture ', 47), (' plant and equipment ', 47), ('Accretion expense ', 46), (' Net other foreign exchange (losses)/gains ', 46), (' insurance proceeds ', 45), (' Loss on loan refinancing ', 44), (' margin charge income ', 44), (' commission revenue ', 43), (' japan recoveries ', 43), (' Asset impairment ', 42), (' net ppe disposal (loss)/gain ', 42), (' other revenue', 42), (' other miscellaneous - net (loss)/gain ', 41), (' Power purchase agreement unrelaised gain ', 41), (' dividend from other parties ', 40), (' other ', 40), (' Power purchase agreement realised gain ', 40), (' Sub-lease rental income ', 40), (' Interest on unwinding of discount in provisions ', 39), (' quota lease income ', 38), (' secondment income (tw recovery) ', 38), (' Arising from inventory of spare parts ', 37), (' net gain / loss on disposal of property plant and equipment ', 37), (' Remuneration from services linked to newly acquired entities ', 37), (' Arising from inventory of cranes ', 36), (' Impairment loss ', 36), (' other income ', 36), (' Share of gain/(loss) of joint venture ', 36), (' share of jv income ', 36), (' Profit on sale of assets ', 35), (' Net loss on disposal of property ', 33), (' paid by customers - at amortised cost ', 33), (' sundry income ', 33), (' net (loss)/profit on disposal of non-current assets ', 31), (' profit from discontinued operation ', 30), (' Loss on sale of disposal of assets ', 27)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: balance 1 april , res_fuzz_match = [(' government grants ', 58), (' net of tax ', 57), (' net foreign exchange (loss)/gain ', 55), (' net foreign exchange gains/(losses) ', 52), (' foreign exchange gain ', 50), (' Loss on loan refinancing ', 50), (' net foreign exchange gain ', 50), (' Net other foreign exchange (losses)/gains ', 49), (' Investment in joint venture ', 47), (' plant and equipment ', 47), ('Accretion expense ', 46), (' effective portion of changes in fair value of cash flow ', 45), (' insurance proceeds ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' commission revenue ', 43), (' japan recoveries ', 43), (' Power purchase agreement realised gain ', 43), (' Power purchase agreement unrelaised gain ', 43), (' Asset impairment ', 42), (' net ppe disposal (loss)/gain ', 42), (' other revenue', 42), (' Arising from inventory of cranes ', 40), (' dividend from other parties ', 40), (' Interest on unwinding of discount in provisions ', 40), (' net gain / loss on disposal of property plant and equipment ', 40), (' other ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' Sub-lease rental income ', 40), (' margin charge income ', 39), (' Net loss on disposal of property ', 38), (' quota lease income ', 38), (' secondment income (tw recovery) ', 38), (' Arising from inventory of spare parts ', 37), (' Impairment loss ', 36), (' net (loss)/profit on disposal of non-current assets ', 36), (' other income ', 36), (' Share of gain/(loss) of joint venture ', 36), (' share of jv income ', 36), (' Profit on sale of assets ', 35), (' profit from discontinued operation ', 33), (' sundry income ', 33), (' Loss on sale of disposal of assets ', 32), (' paid by customers - at amortised cost ', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: net profit for the year , res_fuzz_match = [(' net of tax ', 71), (' other ', 60), (' Profit on sale of assets ', 59), (' government grants ', 58), (' net foreign exchange (loss)/gain ', 55), (' net foreign exchange gains/(losses) ', 52), (' profit from discontinued operation ', 52), (' foreign exchange gain ', 50), (' net foreign exchange gain ', 50), (' other revenue', 50), (' Arising from inventory of cranes ', 48), (' dividend from other parties ', 48), (' Interest on unwinding of discount in provisions ', 48), (' Arising from inventory of spare parts ', 47), (' Investment in joint venture ', 47), (' net (loss)/profit on disposal of non-current assets ', 47), (' plant and equipment ', 47), (' Net other foreign exchange (losses)/gains ', 46), (' effective portion of changes in fair value of cash flow ', 45), (' insurance proceeds ', 45), (' other income ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' Loss on loan refinancing ', 44), (' japan recoveries ', 43), (' Power purchase agreement realised gain ', 43), (' Asset impairment ', 42), (' Net loss on disposal of property ', 42), (' net ppe disposal (loss)/gain ', 42), (' Loss on sale of disposal of assets ', 41), (' Power purchase agreement unrelaised gain ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' net gain / loss on disposal of property plant and equipment ', 40), (' Sub-lease rental income ', 40), (' margin charge income ', 39), (' Share of gain/(loss) of joint venture ', 39), ('Accretion expense ', 38), (' quota lease income ', 38), (' secondment income (tw recovery) ', 38), (' commission revenue ', 36), (' Impairment loss ', 36), (' share of jv income ', 36), (' paid by customers - at amortised cost ', 33), (' sundry income ', 33)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: balance 31 march , res_fuzz_match = [(' government grants ', 58), (' net of tax ', 57), (' net foreign exchange (loss)/gain ', 55), (' net foreign exchange gains/(losses) ', 52), (' foreign exchange gain ', 50), (' Loss on loan refinancing ', 50), (' net foreign exchange gain ', 50), (' Net other foreign exchange (losses)/gains ', 49), (' Investment in joint venture ', 47), (' plant and equipment ', 47), ('Accretion expense ', 46), (' effective portion of changes in fair value of cash flow ', 45), (' insurance proceeds ', 45), (' other income ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' quota lease income ', 44), (' commission revenue ', 43), (' japan recoveries ', 43), (' Power purchase agreement realised gain ', 43), (' Power purchase agreement unrelaised gain ', 43), (' Asset impairment ', 42), (' net ppe disposal (loss)/gain ', 42), (' other revenue', 42), (' Arising from inventory of cranes ', 40), (' dividend from other parties ', 40), (' other ', 40), (' Sub-lease rental income ', 40), (' Interest on unwinding of discount in provisions ', 39), (' margin charge income ', 39), (' net gain / loss on disposal of property plant and equipment ', 38), (' secondment income (tw recovery) ', 38), (' Arising from inventory of spare parts ', 37), (' Remuneration from services linked to newly acquired entities ', 37), (' Impairment loss ', 36), (' Share of gain/(loss) of joint venture ', 36), (' share of jv income ', 36), (' Profit on sale of assets ', 35), (' net (loss)/profit on disposal of non-current assets ', 34), (' Net loss on disposal of property ', 33), (' sundry income ', 33), (' Loss on sale of disposal of assets ', 32), (' profit from discontinued operation ', 30), (' paid by customers - at amortised cost ', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = franked dividends total , res_fuzz_match = [(' dividend from other parties ', 55), (' Arising from inventory of cranes ', 50), (' Arising from inventory of spare parts ', 50), (' profit from discontinued operation ', 45), (' net of tax ', 43), (' government grants ', 42), (' sundry income ', 42), (' foreign exchange gain ', 40), (' net foreign exchange (loss)/gain ', 40), (' net foreign exchange gain ', 40), (' net foreign exchange gains/(losses) ', 40), (' Net other foreign exchange (losses)/gains ', 40), (' other ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' plant and equipment ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' Share of gain/(loss) of joint venture ', 40), (' Investment in joint venture ', 38), (' Impairment loss ', 36), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' effective portion of changes in fair value of cash flow ', 35), (' Interest on unwinding of discount in provisions ', 35), (' net gain / loss on disposal of property plant and equipment ', 35), (' paid by customers - at amortised cost ', 35), (' Power purchase agreement realised gain ', 35), (' Sub-lease rental income ', 35), (' Asset impairment ', 33), (' Loss on loan refinancing ', 33), (' margin charge income ', 33), (' other revenue', 33), (' Loss on sale of disposal of assets ', 32), ('Accretion expense ', 31), (' net (loss)/profit on disposal of non-current assets ', 30), (' Net loss on disposal of property ', 30), (' net ppe disposal (loss)/gain ', 30), (' Power purchase agreement unrelaised gain ', 30), (' secondment income (tw recovery) ', 30), (' commission revenue ', 29), (' Profit on sale of assets ', 29), (' other income ', 27), (' share of jv income ', 27), (' quota lease income ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = franked dividends total , res_fuzz_match = [(' dividend from other parties ', 55), (' Arising from inventory of cranes ', 50), (' Arising from inventory of spare parts ', 50), (' profit from discontinued operation ', 45), (' net of tax ', 43), (' government grants ', 42), (' sundry income ', 42), (' foreign exchange gain ', 40), (' net foreign exchange (loss)/gain ', 40), (' net foreign exchange gain ', 40), (' net foreign exchange gains/(losses) ', 40), (' Net other foreign exchange (losses)/gains ', 40), (' other ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' plant and equipment ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' Share of gain/(loss) of joint venture ', 40), (' Investment in joint venture ', 38), (' Impairment loss ', 36), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' effective portion of changes in fair value of cash flow ', 35), (' Interest on unwinding of discount in provisions ', 35), (' net gain / loss on disposal of property plant and equipment ', 35), (' paid by customers - at amortised cost ', 35), (' Power purchase agreement realised gain ', 35), (' Sub-lease rental income ', 35), (' Asset impairment ', 33), (' Loss on loan refinancing ', 33), (' margin charge income ', 33), (' other revenue', 33), (' Loss on sale of disposal of assets ', 32), ('Accretion expense ', 31), (' net (loss)/profit on disposal of non-current assets ', 30), (' Net loss on disposal of property ', 30), (' net ppe disposal (loss)/gain ', 30), (' Power purchase agreement unrelaised gain ', 30), (' secondment income (tw recovery) ', 30), (' commission revenue ', 29), (' Profit on sale of assets ', 29), (' other income ', 27), (' share of jv income ', 27), (' quota lease income ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = franked dividends franking credits available for subsequent reporting periods based on a tax rate of 30.0% (2022 30.0%) , res_fuzz_match = [(' net of tax ', 71), (' dividend from other parties ', 60), (' other ', 60), (' government grants ', 58), (' Sub-lease rental income ', 55), (' Profit on sale of assets ', 53), (' Asset impairment ', 50), (' japan recoveries ', 50), (' quota lease income ', 50), (' Arising from inventory of spare parts ', 47), (' net gain / loss on disposal of property plant and equipment ', 47), (' plant and equipment ', 47), ('Accretion expense ', 46), (' Net loss on disposal of property ', 46), (' net ppe disposal (loss)/gain ', 46), (' foreign exchange gain ', 45), (' Impairment loss ', 45), (' insurance proceeds ', 45), (' Loss on sale of disposal of assets ', 45), (' net foreign exchange gains/(losses) ', 45), (' other income ', 45), (' Arising from inventory of cranes ', 44), (' net (loss)/profit on disposal of non-current assets ', 44), (' profit from discontinued operation ', 44), (' commission revenue ', 43), (' secondment income (tw recovery) ', 43), (' Share of gain/(loss) of joint venture ', 43), (' net foreign exchange gain ', 42), (' paid by customers - at amortised cost ', 42), (' sundry income ', 42), (' other revenue', 42), (' net foreign exchange (loss)/gain ', 41), (' effective portion of changes in fair value of cash flow ', 40), (' Power purchase agreement realised gain ', 40), (' Interest on unwinding of discount in provisions ', 39), (' Loss on loan refinancing ', 39), (' margin charge income ', 39), (' Remuneration from services linked to newly acquired entities ', 39), (' other miscellaneous - net (loss)/gain ', 38), (' Power purchase agreement unrelaised gain ', 38), (' Investment in joint venture ', 37), (' Net other foreign exchange (losses)/gains ', 37), (' share of jv income ', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = none foreign currency translation , res_fuzz_match = [(' net foreign exchange gain ', 67), (' foreign exchange gain ', 65), (' net foreign exchange (loss)/gain ', 60), (' net foreign exchange gains/(losses) ', 60), (' Net other foreign exchange (losses)/gains ', 59), (' government grants ', 58), (' net of tax ', 57), (' insurance proceeds ', 55), (' other revenue', 50), (' Investment in joint venture ', 47), ('Accretion expense ', 46), (' effective portion of changes in fair value of cash flow ', 45), (' other income ', 45), (' Power purchase agreement realised gain ', 45), (' Power purchase agreement unrelaised gain ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' share of jv income ', 45), (' Arising from inventory of cranes ', 44), (' Loss on loan refinancing ', 44), (' margin charge income ', 44), (' commission revenue ', 43), (' japan recoveries ', 43), (' secondment income (tw recovery) ', 43), (' Interest on unwinding of discount in provisions ', 42), (' Arising from inventory of spare parts ', 41), (' net (loss)/profit on disposal of non-current assets ', 41), (' other ', 40), (' Sub-lease rental income ', 40), (' other miscellaneous - net (loss)/gain ', 39), (' Share of gain/(loss) of joint venture ', 39), (' net gain / loss on disposal of property plant and equipment ', 38), (' Net loss on disposal of property ', 38), (' net ppe disposal (loss)/gain ', 38), (' dividend from other parties ', 36), (' Profit on sale of assets ', 35), (' paid by customers - at amortised cost ', 33), (' profit from discontinued operation ', 33), (' sundry income ', 33), (' Loss on sale of disposal of assets ', 32), (' quota lease income ', 31), (' Impairment loss ', 27), (' plant and equipment ', 27), (' Asset impairment ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = foreign currency translation opening balance , res_fuzz_match = [(' foreign exchange gain ', 65), (' government grants ', 58), (' net of tax ', 57), (' insurance proceeds ', 55), (' net foreign exchange gain ', 54), (' net foreign exchange (loss)/gain ', 52), (' net foreign exchange gains/(losses) ', 52), (' Loss on loan refinancing ', 50), (' Sub-lease rental income ', 50), (' Net other foreign exchange (losses)/gains ', 49), ('Accretion expense ', 46), (' Power purchase agreement realised gain ', 46), (' other income ', 45), (' margin charge income ', 44), (' Arising from inventory of spare parts ', 43), (' commission revenue ', 43), (' japan recoveries ', 43), (' Asset impairment ', 42), (' Investment in joint venture ', 42), (' Power purchase agreement unrelaised gain ', 42), (' other revenue', 42), (' other miscellaneous - net (loss)/gain ', 41), (' profit from discontinued operation ', 41), (' Arising from inventory of cranes ', 40), (' other ', 40), (' plant and equipment ', 40), (' effective portion of changes in fair value of cash flow ', 39), (' net gain / loss on disposal of property plant and equipment ', 39), (' Remuneration from services linked to newly acquired entities ', 39), (' Share of gain/(loss) of joint venture ', 39), (' net ppe disposal (loss)/gain ', 38), (' paid by customers - at amortised cost ', 38), (' quota lease income ', 38), (' secondment income (tw recovery) ', 38), (' dividend from other parties ', 36), (' share of jv income ', 36), (' Interest on unwinding of discount in provisions ', 35), (' Profit on sale of assets ', 35), (' net (loss)/profit on disposal of non-current assets ', 34), (' Net loss on disposal of property ', 33), (' sundry income ', 33), (' Loss on sale of disposal of assets ', 32), (' Impairment loss ', 27)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = foreign currency translation currency translation differences arising during the year , res_fuzz_match = [(' foreign exchange gain ', 65), (' other ', 60), (' government grants ', 58), (' net of tax ', 57), (' insurance proceeds ', 55), (' Sub-lease rental income ', 50), (' dividend from other parties ', 48), (' net foreign exchange gain ', 46), (' Power purchase agreement unrelaised gain ', 46), (' Loss on sale of disposal of assets ', 45), (' net foreign exchange (loss)/gain ', 45), (' other income ', 45), (' share of jv income ', 45), (' Arising from inventory of cranes ', 44), (' Arising from inventory of spare parts ', 44), (' Loss on loan refinancing ', 44), (' margin charge income ', 44), (' commission revenue ', 43), (' japan recoveries ', 43), (' Power purchase agreement realised gain ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' Share of gain/(loss) of joint venture ', 43), (' Asset impairment ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Investment in joint venture ', 42), (' sundry income ', 42), (' other revenue', 42), (' net foreign exchange gains/(losses) ', 41), (' profit from discontinued operation ', 41), (' Profit on sale of assets ', 41), (' effective portion of changes in fair value of cash flow ', 40), (' Net other foreign exchange (losses)/gains ', 40), (' plant and equipment ', 40), (' net (loss)/profit on disposal of non-current assets ', 39), ('Accretion expense ', 38), (' net gain / loss on disposal of property plant and equipment ', 38), (' Net loss on disposal of property ', 38), (' other miscellaneous - net (loss)/gain ', 38), (' paid by customers - at amortised cost ', 38), (' quota lease income ', 38), (' secondment income (tw recovery) ', 38), (' Impairment loss ', 36), (' net ppe disposal (loss)/gain ', 33)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = foreign currency translation balance 31 march , res_fuzz_match = [(' foreign exchange gain ', 65), (' government grants ', 58), (' net of tax ', 57), (' insurance proceeds ', 55), (' net foreign exchange gain ', 54), (' net foreign exchange (loss)/gain ', 52), (' net foreign exchange gains/(losses) ', 52), (' plant and equipment ', 47), (' Net other foreign exchange (losses)/gains ', 46), (' other income ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' share of jv income ', 45), (' Sub-lease rental income ', 45), (' Loss on loan refinancing ', 44), (' margin charge income ', 44), (' quota lease income ', 44), (' commission revenue ', 43), (' effective portion of changes in fair value of cash flow ', 43), (' japan recoveries ', 43), (' Power purchase agreement realised gain ', 43), (' Asset impairment ', 42), (' other revenue', 42), (' Power purchase agreement unrelaised gain ', 41), (' Arising from inventory of cranes ', 40), (' Arising from inventory of spare parts ', 40), (' other ', 40), ('Accretion expense ', 38), (' net gain / loss on disposal of property plant and equipment ', 38), (' net ppe disposal (loss)/gain ', 38), (' Remuneration from services linked to newly acquired entities ', 38), (' secondment income (tw recovery) ', 38), (' Investment in joint venture ', 37), (' dividend from other parties ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Interest on unwinding of discount in provisions ', 35), (' Profit on sale of assets ', 35), (' net (loss)/profit on disposal of non-current assets ', 33), (' paid by customers - at amortised cost ', 33), (' sundry income ', 33), (' profit from discontinued operation ', 30), (' Net loss on disposal of property ', 29), (' Impairment loss ', 27), (' Loss on sale of disposal of assets ', 27)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: total , res_fuzz_match = [(' net of tax ', 71), (' government grants ', 58), (' net foreign exchange (loss)/gain ', 52), (' net foreign exchange gains/(losses) ', 52), (' foreign exchange gain ', 50), (' net foreign exchange gain ', 50), (' effective portion of changes in fair value of cash flow ', 47), (' Investment in joint venture ', 47), (' plant and equipment ', 47), ('Accretion expense ', 46), (' Net other foreign exchange (losses)/gains ', 46), (' insurance proceeds ', 45), (' Loss on loan refinancing ', 44), (' margin charge income ', 44), (' commission revenue ', 43), (' japan recoveries ', 43), (' Asset impairment ', 42), (' net ppe disposal (loss)/gain ', 42), (' other revenue', 42), (' other miscellaneous - net (loss)/gain ', 41), (' Power purchase agreement unrelaised gain ', 41), (' dividend from other parties ', 40), (' other ', 40), (' Power purchase agreement realised gain ', 40), (' Sub-lease rental income ', 40), (' Interest on unwinding of discount in provisions ', 39), (' quota lease income ', 38), (' secondment income (tw recovery) ', 38), (' Arising from inventory of spare parts ', 37), (' net gain / loss on disposal of property plant and equipment ', 37), (' Remuneration from services linked to newly acquired entities ', 37), (' Arising from inventory of cranes ', 36), (' Impairment loss ', 36), (' other income ', 36), (' Share of gain/(loss) of joint venture ', 36), (' share of jv income ', 36), (' Profit on sale of assets ', 35), (' Net loss on disposal of property ', 33), (' paid by customers - at amortised cost ', 33), (' sundry income ', 33), (' net (loss)/profit on disposal of non-current assets ', 31), (' profit from discontinued operation ', 30), (' Loss on sale of disposal of assets ', 27)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: total , res_fuzz_match = [(' net of tax ', 71), (' government grants ', 58), (' net foreign exchange (loss)/gain ', 52), (' net foreign exchange gains/(losses) ', 52), (' foreign exchange gain ', 50), (' net foreign exchange gain ', 50), (' effective portion of changes in fair value of cash flow ', 47), (' Investment in joint venture ', 47), (' plant and equipment ', 47), ('Accretion expense ', 46), (' Net other foreign exchange (losses)/gains ', 46), (' insurance proceeds ', 45), (' Loss on loan refinancing ', 44), (' margin charge income ', 44), (' commission revenue ', 43), (' japan recoveries ', 43), (' Asset impairment ', 42), (' net ppe disposal (loss)/gain ', 42), (' other revenue', 42), (' other miscellaneous - net (loss)/gain ', 41), (' Power purchase agreement unrelaised gain ', 41), (' dividend from other parties ', 40), (' other ', 40), (' Power purchase agreement realised gain ', 40), (' Sub-lease rental income ', 40), (' Interest on unwinding of discount in provisions ', 39), (' quota lease income ', 38), (' secondment income (tw recovery) ', 38), (' Arising from inventory of spare parts ', 37), (' net gain / loss on disposal of property plant and equipment ', 37), (' Remuneration from services linked to newly acquired entities ', 37), (' Arising from inventory of cranes ', 36), (' Impairment loss ', 36), (' other income ', 36), (' Share of gain/(loss) of joint venture ', 36), (' share of jv income ', 36), (' Profit on sale of assets ', 35), (' Net loss on disposal of property ', 33), (' paid by customers - at amortised cost ', 33), (' sundry income ', 33), (' net (loss)/profit on disposal of non-current assets ', 31), (' profit from discontinued operation ', 30), (' Loss on sale of disposal of assets ', 27)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: balance 1 april , res_fuzz_match = [(' government grants ', 58), (' net of tax ', 57), (' net foreign exchange (loss)/gain ', 55), (' net foreign exchange gains/(losses) ', 52), (' foreign exchange gain ', 50), (' Loss on loan refinancing ', 50), (' net foreign exchange gain ', 50), (' Net other foreign exchange (losses)/gains ', 49), (' Investment in joint venture ', 47), (' plant and equipment ', 47), ('Accretion expense ', 46), (' effective portion of changes in fair value of cash flow ', 45), (' insurance proceeds ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' commission revenue ', 43), (' japan recoveries ', 43), (' Power purchase agreement realised gain ', 43), (' Power purchase agreement unrelaised gain ', 43), (' Asset impairment ', 42), (' net ppe disposal (loss)/gain ', 42), (' other revenue', 42), (' Arising from inventory of cranes ', 40), (' dividend from other parties ', 40), (' Interest on unwinding of discount in provisions ', 40), (' net gain / loss on disposal of property plant and equipment ', 40), (' other ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' Sub-lease rental income ', 40), (' margin charge income ', 39), (' Net loss on disposal of property ', 38), (' quota lease income ', 38), (' secondment income (tw recovery) ', 38), (' Arising from inventory of spare parts ', 37), (' Impairment loss ', 36), (' net (loss)/profit on disposal of non-current assets ', 36), (' other income ', 36), (' Share of gain/(loss) of joint venture ', 36), (' share of jv income ', 36), (' Profit on sale of assets ', 35), (' profit from discontinued operation ', 33), (' sundry income ', 33), (' Loss on sale of disposal of assets ', 32), (' paid by customers - at amortised cost ', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: net profit for the year , res_fuzz_match = [(' net of tax ', 71), (' other ', 60), (' Profit on sale of assets ', 59), (' government grants ', 58), (' net foreign exchange (loss)/gain ', 55), (' net foreign exchange gains/(losses) ', 52), (' profit from discontinued operation ', 52), (' foreign exchange gain ', 50), (' net foreign exchange gain ', 50), (' other revenue', 50), (' Arising from inventory of cranes ', 48), (' dividend from other parties ', 48), (' Interest on unwinding of discount in provisions ', 48), (' Arising from inventory of spare parts ', 47), (' Investment in joint venture ', 47), (' net (loss)/profit on disposal of non-current assets ', 47), (' plant and equipment ', 47), (' Net other foreign exchange (losses)/gains ', 46), (' effective portion of changes in fair value of cash flow ', 45), (' insurance proceeds ', 45), (' other income ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' Loss on loan refinancing ', 44), (' japan recoveries ', 43), (' Power purchase agreement realised gain ', 43), (' Asset impairment ', 42), (' Net loss on disposal of property ', 42), (' net ppe disposal (loss)/gain ', 42), (' Loss on sale of disposal of assets ', 41), (' Power purchase agreement unrelaised gain ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' net gain / loss on disposal of property plant and equipment ', 40), (' Sub-lease rental income ', 40), (' margin charge income ', 39), (' Share of gain/(loss) of joint venture ', 39), ('Accretion expense ', 38), (' quota lease income ', 38), (' secondment income (tw recovery) ', 38), (' commission revenue ', 36), (' Impairment loss ', 36), (' share of jv income ', 36), (' paid by customers - at amortised cost ', 33), (' sundry income ', 33)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = movements in retained earnings were as follows: balance 31 march , res_fuzz_match = [(' government grants ', 58), (' net of tax ', 57), (' net foreign exchange (loss)/gain ', 55), (' net foreign exchange gains/(losses) ', 52), (' foreign exchange gain ', 50), (' Loss on loan refinancing ', 50), (' net foreign exchange gain ', 50), (' Net other foreign exchange (losses)/gains ', 49), (' Investment in joint venture ', 47), (' plant and equipment ', 47), ('Accretion expense ', 46), (' effective portion of changes in fair value of cash flow ', 45), (' insurance proceeds ', 45), (' other income ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' quota lease income ', 44), (' commission revenue ', 43), (' japan recoveries ', 43), (' Power purchase agreement realised gain ', 43), (' Power purchase agreement unrelaised gain ', 43), (' Asset impairment ', 42), (' net ppe disposal (loss)/gain ', 42), (' other revenue', 42), (' Arising from inventory of cranes ', 40), (' dividend from other parties ', 40), (' other ', 40), (' Sub-lease rental income ', 40), (' Interest on unwinding of discount in provisions ', 39), (' margin charge income ', 39), (' net gain / loss on disposal of property plant and equipment ', 38), (' secondment income (tw recovery) ', 38), (' Arising from inventory of spare parts ', 37), (' Remuneration from services linked to newly acquired entities ', 37), (' Impairment loss ', 36), (' Share of gain/(loss) of joint venture ', 36), (' share of jv income ', 36), (' Profit on sale of assets ', 35), (' net (loss)/profit on disposal of non-current assets ', 34), (' Net loss on disposal of property ', 33), (' sundry income ', 33), (' Loss on sale of disposal of assets ', 32), (' profit from discontinued operation ', 30), (' paid by customers - at amortised cost ', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = franked dividends total , res_fuzz_match = [(' dividend from other parties ', 55), (' Arising from inventory of cranes ', 50), (' Arising from inventory of spare parts ', 50), (' profit from discontinued operation ', 45), (' net of tax ', 43), (' government grants ', 42), (' sundry income ', 42), (' foreign exchange gain ', 40), (' net foreign exchange (loss)/gain ', 40), (' net foreign exchange gain ', 40), (' net foreign exchange gains/(losses) ', 40), (' Net other foreign exchange (losses)/gains ', 40), (' other ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' plant and equipment ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' Share of gain/(loss) of joint venture ', 40), (' Investment in joint venture ', 38), (' Impairment loss ', 36), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' effective portion of changes in fair value of cash flow ', 35), (' Interest on unwinding of discount in provisions ', 35), (' net gain / loss on disposal of property plant and equipment ', 35), (' paid by customers - at amortised cost ', 35), (' Power purchase agreement realised gain ', 35), (' Sub-lease rental income ', 35), (' Asset impairment ', 33), (' Loss on loan refinancing ', 33), (' margin charge income ', 33), (' other revenue', 33), (' Loss on sale of disposal of assets ', 32), ('Accretion expense ', 31), (' net (loss)/profit on disposal of non-current assets ', 30), (' Net loss on disposal of property ', 30), (' net ppe disposal (loss)/gain ', 30), (' Power purchase agreement unrelaised gain ', 30), (' secondment income (tw recovery) ', 30), (' commission revenue ', 29), (' Profit on sale of assets ', 29), (' other income ', 27), (' share of jv income ', 27), (' quota lease income ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = franked dividends total , res_fuzz_match = [(' dividend from other parties ', 55), (' Arising from inventory of cranes ', 50), (' Arising from inventory of spare parts ', 50), (' profit from discontinued operation ', 45), (' net of tax ', 43), (' government grants ', 42), (' sundry income ', 42), (' foreign exchange gain ', 40), (' net foreign exchange (loss)/gain ', 40), (' net foreign exchange gain ', 40), (' net foreign exchange gains/(losses) ', 40), (' Net other foreign exchange (losses)/gains ', 40), (' other ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' plant and equipment ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' Share of gain/(loss) of joint venture ', 40), (' Investment in joint venture ', 38), (' Impairment loss ', 36), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' effective portion of changes in fair value of cash flow ', 35), (' Interest on unwinding of discount in provisions ', 35), (' net gain / loss on disposal of property plant and equipment ', 35), (' paid by customers - at amortised cost ', 35), (' Power purchase agreement realised gain ', 35), (' Sub-lease rental income ', 35), (' Asset impairment ', 33), (' Loss on loan refinancing ', 33), (' margin charge income ', 33), (' other revenue', 33), (' Loss on sale of disposal of assets ', 32), ('Accretion expense ', 31), (' net (loss)/profit on disposal of non-current assets ', 30), (' Net loss on disposal of property ', 30), (' net ppe disposal (loss)/gain ', 30), (' Power purchase agreement unrelaised gain ', 30), (' secondment income (tw recovery) ', 30), (' commission revenue ', 29), (' Profit on sale of assets ', 29), (' other income ', 27), (' share of jv income ', 27), (' quota lease income ', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = franked dividends franking credits available for subsequent reporting periods based on a tax rate of 30.0% (2022 30.0%) , res_fuzz_match = [(' net of tax ', 71), (' dividend from other parties ', 60), (' other ', 60), (' government grants ', 58), (' Sub-lease rental income ', 55), (' Profit on sale of assets ', 53), (' Asset impairment ', 50), (' japan recoveries ', 50), (' quota lease income ', 50), (' Arising from inventory of spare parts ', 47), (' net gain / loss on disposal of property plant and equipment ', 47), (' plant and equipment ', 47), ('Accretion expense ', 46), (' Net loss on disposal of property ', 46), (' net ppe disposal (loss)/gain ', 46), (' foreign exchange gain ', 45), (' Impairment loss ', 45), (' insurance proceeds ', 45), (' Loss on sale of disposal of assets ', 45), (' net foreign exchange gains/(losses) ', 45), (' other income ', 45), (' Arising from inventory of cranes ', 44), (' net (loss)/profit on disposal of non-current assets ', 44), (' profit from discontinued operation ', 44), (' commission revenue ', 43), (' secondment income (tw recovery) ', 43), (' Share of gain/(loss) of joint venture ', 43), (' net foreign exchange gain ', 42), (' paid by customers - at amortised cost ', 42), (' sundry income ', 42), (' other revenue', 42), (' net foreign exchange (loss)/gain ', 41), (' effective portion of changes in fair value of cash flow ', 40), (' Power purchase agreement realised gain ', 40), (' Interest on unwinding of discount in provisions ', 39), (' Loss on loan refinancing ', 39), (' margin charge income ', 39), (' Remuneration from services linked to newly acquired entities ', 39), (' other miscellaneous - net (loss)/gain ', 38), (' Power purchase agreement unrelaised gain ', 38), (' Investment in joint venture ', 37), (' Net other foreign exchange (losses)/gains ', 37), (' share of jv income ', 36)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Accretion expense ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Asset impairment ', 0), (' commission revenue ', 0), (' dividend from other parties ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' foreign exchange gain ', 0), (' government grants ', 0), (' Impairment loss ', 0), (' insurance proceeds ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Investment in joint venture ', 0), (' japan recoveries ', 0), (' Loss on loan refinancing ', 0), (' Loss on sale of disposal of assets ', 0), (' margin charge income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net foreign exchange (loss)/gain ', 0), (' net foreign exchange gain ', 0), (' net foreign exchange gains/(losses) ', 0), (' net gain / loss on disposal of property plant and equipment ', 0), (' Net loss on disposal of property ', 0), (' net of tax ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' net ppe disposal (loss)/gain ', 0), (' other ', 0), (' other income ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' paid by customers - at amortised cost ', 0), (' plant and equipment ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' profit from discontinued operation ', 0), (' Profit on sale of assets ', 0), (' quota lease income ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' secondment income (tw recovery) ', 0), (' Share of gain/(loss) of joint venture ', 0), (' share of jv income ', 0), (' Sub-lease rental income ', 0), (' sundry income ', 0), (' other revenue', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:53+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-18 14:48:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:53+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-18 14:48:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:53+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-18 14:48:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:53+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('NULL', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('NULL', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('NULL', 21)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [('NULL', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('NULL', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('NULL', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('NULL', 21)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [('NULL', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:53+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('NULL', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('NULL', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('NULL', 21)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [('NULL', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('NULL', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('NULL', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('NULL', 21)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [('NULL', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-18 14:48:53+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit']
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-18 14:48:53+0530 - sLogger - DEBUG - list_target_keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement']
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-18 14:48:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:53+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), (' income tax benefit', 33), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), (' income tax expense', 29), (' income tax', 29), ('prior year ', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('deferred tax', 33), (' income tax', 33), ('provision for taxation previous year', 32), ('prior year ', 32), ('earlier year', 29), (' income tax expense', 24), (' income tax benefit', 23), ('amount transferred to retained earnings', 22), (' tax (expense)/benefit', 22), ('current tax', 20), (' income tax benefit/(expense)', 18), ('minimum alternate tax credit entitlement', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('amount transferred to retained earnings', 44), (' income tax benefit', 39), ('earlier year', 38), ('provision for taxation previous year', 37), ('prior year ', 33), (' income tax expense', 33), ('current tax', 32), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 31), ('deferred tax', 26), ('minimum alternate tax credit entitlement', 26), (' income tax', 26)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' income tax expense', 55), (' tax (expense)/benefit', 50), (' income tax benefit/(expense)', 40), ('deferred tax', 27), (' income tax benefit', 26), ('prior year ', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16), (' income tax', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' income tax', 35), ('provision for taxation previous year', 33), (' income tax expense', 33), ('current tax', 32), (' income tax benefit', 32), ('amount transferred to retained earnings', 29), ('deferred tax', 26), (' income tax benefit/(expense)', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('earlier year', 23), ('minimum alternate tax credit entitlement', 22)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), (' tax (expense)/benefit', 34), (' income tax', 30), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), ('current tax', 27), (' income tax expense', 22), (' income tax benefit', 21), ('earlier year', 17), ('deferred tax', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' income tax', 48), ('amount transferred to retained earnings', 47), (' income tax expense', 38), ('current tax', 37), (' income tax benefit', 36), (' tax (expense)/benefit', 35), ('minimum alternate tax credit entitlement', 33), ('provision for taxation previous year', 31), (' income tax benefit/(expense)', 30), ('deferred tax', 24), ('prior year ', 23), ('earlier year', 21)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax (expense)/benefit', 67), (' income tax benefit', 56), (' income tax benefit/(expense)', 56), ('earlier year', 37), ('minimum alternate tax credit entitlement', 34), ('provision for taxation previous year', 32), ('prior year ', 32), ('current tax', 31), ('amount transferred to retained earnings', 29), (' income tax expense', 26), ('deferred tax', 25), (' income tax', 17)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [('minimum alternate tax credit entitlement', 34), ('amount transferred to retained earnings', 33), (' income tax', 33), (' tax (expense)/benefit', 30), ('earlier year', 29), ('provision for taxation previous year', 26), (' income tax expense', 24), (' income tax benefit/(expense)', 24), (' income tax benefit', 23), ('deferred tax', 22), ('prior year ', 21), ('current tax', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' income tax', 40), ('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax benefit', 36), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' income tax benefit', 67), ('provision for taxation previous year', 59), (' income tax expense', 58), (' income tax', 58), (' income tax benefit/(expense)', 57), (' tax (expense)/benefit', 50), ('deferred tax', 45), ('current tax', 42), ('minimum alternate tax credit entitlement', 41), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('earlier year', 35)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' income tax expense', 100), (' income tax benefit/(expense)', 80), (' income tax benefit', 73), (' income tax', 72), (' tax (expense)/benefit', 59), ('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('amount transferred to retained earnings', 48), ('provision for taxation previous year', 43), (' income tax benefit/(expense)', 40), (' income tax expense', 38), (' tax (expense)/benefit', 37), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 34), ('earlier year', 33), ('current tax', 30), (' income tax', 27), ('prior year ', 26)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' income tax expense', 51), ('provision for taxation previous year', 47), (' income tax benefit', 46), (' income tax benefit/(expense)', 44), ('prior year ', 40), ('amount transferred to retained earnings', 39), ('earlier year', 38), ('minimum alternate tax credit entitlement', 36), (' income tax', 36), ('current tax', 35), (' tax (expense)/benefit', 34), ('deferred tax', 27)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), (' income tax benefit', 33), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), (' income tax expense', 29), (' income tax', 29), ('prior year ', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('deferred tax', 33), (' income tax', 33), ('provision for taxation previous year', 32), ('prior year ', 32), ('earlier year', 29), (' income tax expense', 24), (' income tax benefit', 23), ('amount transferred to retained earnings', 22), (' tax (expense)/benefit', 22), ('current tax', 20), (' income tax benefit/(expense)', 18), ('minimum alternate tax credit entitlement', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('amount transferred to retained earnings', 44), (' income tax benefit', 39), ('earlier year', 38), ('provision for taxation previous year', 37), ('prior year ', 33), (' income tax expense', 33), ('current tax', 32), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 31), ('deferred tax', 26), ('minimum alternate tax credit entitlement', 26), (' income tax', 26)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' income tax expense', 55), (' tax (expense)/benefit', 50), (' income tax benefit/(expense)', 40), ('deferred tax', 27), (' income tax benefit', 26), ('prior year ', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16), (' income tax', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' income tax', 35), ('provision for taxation previous year', 33), (' income tax expense', 33), ('current tax', 32), (' income tax benefit', 32), ('amount transferred to retained earnings', 29), ('deferred tax', 26), (' income tax benefit/(expense)', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('earlier year', 23), ('minimum alternate tax credit entitlement', 22)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), (' tax (expense)/benefit', 34), (' income tax', 30), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), ('current tax', 27), (' income tax expense', 22), (' income tax benefit', 21), ('earlier year', 17), ('deferred tax', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' income tax', 48), ('amount transferred to retained earnings', 47), (' income tax expense', 38), ('current tax', 37), (' income tax benefit', 36), (' tax (expense)/benefit', 35), ('minimum alternate tax credit entitlement', 33), ('provision for taxation previous year', 31), (' income tax benefit/(expense)', 30), ('deferred tax', 24), ('prior year ', 23), ('earlier year', 21)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax (expense)/benefit', 67), (' income tax benefit', 56), (' income tax benefit/(expense)', 56), ('earlier year', 37), ('minimum alternate tax credit entitlement', 34), ('provision for taxation previous year', 32), ('prior year ', 32), ('current tax', 31), ('amount transferred to retained earnings', 29), (' income tax expense', 26), ('deferred tax', 25), (' income tax', 17)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [('minimum alternate tax credit entitlement', 34), ('amount transferred to retained earnings', 33), (' income tax', 33), (' tax (expense)/benefit', 30), ('earlier year', 29), ('provision for taxation previous year', 26), (' income tax expense', 24), (' income tax benefit/(expense)', 24), (' income tax benefit', 23), ('deferred tax', 22), ('prior year ', 21), ('current tax', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' income tax', 40), ('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax benefit', 36), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' income tax benefit', 67), ('provision for taxation previous year', 59), (' income tax expense', 58), (' income tax', 58), (' income tax benefit/(expense)', 57), (' tax (expense)/benefit', 50), ('deferred tax', 45), ('current tax', 42), ('minimum alternate tax credit entitlement', 41), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('earlier year', 35)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' income tax expense', 100), (' income tax benefit/(expense)', 80), (' income tax benefit', 73), (' income tax', 72), (' tax (expense)/benefit', 59), ('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('amount transferred to retained earnings', 48), ('provision for taxation previous year', 43), (' income tax benefit/(expense)', 40), (' income tax expense', 38), (' tax (expense)/benefit', 37), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 34), ('earlier year', 33), ('current tax', 30), (' income tax', 27), ('prior year ', 26)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' income tax expense', 51), ('provision for taxation previous year', 47), (' income tax benefit', 46), (' income tax benefit/(expense)', 44), ('prior year ', 40), ('amount transferred to retained earnings', 39), ('earlier year', 38), ('minimum alternate tax credit entitlement', 36), (' income tax', 36), ('current tax', 35), (' tax (expense)/benefit', 34), ('deferred tax', 27)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 29], 'score': 100, 'value': -522788.0, 'line_item_label': ['Income tax expense', 'Income tax expense'], 'note_numbers': ['6', '6'], 'line_item_value': [-261394.0, -261394.0]}
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:53+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), (' income tax benefit', 33), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), (' income tax expense', 29), (' income tax', 29), ('prior year ', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('deferred tax', 33), (' income tax', 33), ('provision for taxation previous year', 32), ('prior year ', 32), ('earlier year', 29), (' income tax expense', 24), (' income tax benefit', 23), ('amount transferred to retained earnings', 22), (' tax (expense)/benefit', 22), ('current tax', 20), (' income tax benefit/(expense)', 18), ('minimum alternate tax credit entitlement', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('amount transferred to retained earnings', 44), (' income tax benefit', 39), ('earlier year', 38), ('provision for taxation previous year', 37), ('prior year ', 33), (' income tax expense', 33), ('current tax', 32), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 31), ('deferred tax', 26), ('minimum alternate tax credit entitlement', 26), (' income tax', 26)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' income tax expense', 55), (' tax (expense)/benefit', 50), (' income tax benefit/(expense)', 40), ('deferred tax', 27), (' income tax benefit', 26), ('prior year ', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16), (' income tax', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' income tax', 35), ('provision for taxation previous year', 33), (' income tax expense', 33), ('current tax', 32), (' income tax benefit', 32), ('amount transferred to retained earnings', 29), ('deferred tax', 26), (' income tax benefit/(expense)', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('earlier year', 23), ('minimum alternate tax credit entitlement', 22)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), (' tax (expense)/benefit', 34), (' income tax', 30), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), ('current tax', 27), (' income tax expense', 22), (' income tax benefit', 21), ('earlier year', 17), ('deferred tax', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' income tax', 48), ('amount transferred to retained earnings', 47), (' income tax expense', 38), ('current tax', 37), (' income tax benefit', 36), (' tax (expense)/benefit', 35), ('minimum alternate tax credit entitlement', 33), ('provision for taxation previous year', 31), (' income tax benefit/(expense)', 30), ('deferred tax', 24), ('prior year ', 23), ('earlier year', 21)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax (expense)/benefit', 67), (' income tax benefit', 56), (' income tax benefit/(expense)', 56), ('earlier year', 37), ('minimum alternate tax credit entitlement', 34), ('provision for taxation previous year', 32), ('prior year ', 32), ('current tax', 31), ('amount transferred to retained earnings', 29), (' income tax expense', 26), ('deferred tax', 25), (' income tax', 17)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [('minimum alternate tax credit entitlement', 34), ('amount transferred to retained earnings', 33), (' income tax', 33), (' tax (expense)/benefit', 30), ('earlier year', 29), ('provision for taxation previous year', 26), (' income tax expense', 24), (' income tax benefit/(expense)', 24), (' income tax benefit', 23), ('deferred tax', 22), ('prior year ', 21), ('current tax', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' income tax', 40), ('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax benefit', 36), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' income tax benefit', 67), ('provision for taxation previous year', 59), (' income tax expense', 58), (' income tax', 58), (' income tax benefit/(expense)', 57), (' tax (expense)/benefit', 50), ('deferred tax', 45), ('current tax', 42), ('minimum alternate tax credit entitlement', 41), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('earlier year', 35)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' income tax expense', 100), (' income tax benefit/(expense)', 80), (' income tax benefit', 73), (' income tax', 72), (' tax (expense)/benefit', 59), ('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('amount transferred to retained earnings', 48), ('provision for taxation previous year', 43), (' income tax benefit/(expense)', 40), (' income tax expense', 38), (' tax (expense)/benefit', 37), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 34), ('earlier year', 33), ('current tax', 30), (' income tax', 27), ('prior year ', 26)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' income tax expense', 51), ('provision for taxation previous year', 47), (' income tax benefit', 46), (' income tax benefit/(expense)', 44), ('prior year ', 40), ('amount transferred to retained earnings', 39), ('earlier year', 38), ('minimum alternate tax credit entitlement', 36), (' income tax', 36), ('current tax', 35), (' tax (expense)/benefit', 34), ('deferred tax', 27)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), (' income tax benefit', 33), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), (' income tax expense', 29), (' income tax', 29), ('prior year ', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('deferred tax', 33), (' income tax', 33), ('provision for taxation previous year', 32), ('prior year ', 32), ('earlier year', 29), (' income tax expense', 24), (' income tax benefit', 23), ('amount transferred to retained earnings', 22), (' tax (expense)/benefit', 22), ('current tax', 20), (' income tax benefit/(expense)', 18), ('minimum alternate tax credit entitlement', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('amount transferred to retained earnings', 44), (' income tax benefit', 39), ('earlier year', 38), ('provision for taxation previous year', 37), ('prior year ', 33), (' income tax expense', 33), ('current tax', 32), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 31), ('deferred tax', 26), ('minimum alternate tax credit entitlement', 26), (' income tax', 26)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [(' income tax expense', 55), (' tax (expense)/benefit', 50), (' income tax benefit/(expense)', 40), ('deferred tax', 27), (' income tax benefit', 26), ('prior year ', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16), (' income tax', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' income tax', 35), ('provision for taxation previous year', 33), (' income tax expense', 33), ('current tax', 32), (' income tax benefit', 32), ('amount transferred to retained earnings', 29), ('deferred tax', 26), (' income tax benefit/(expense)', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('earlier year', 23), ('minimum alternate tax credit entitlement', 22)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), (' tax (expense)/benefit', 34), (' income tax', 30), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), ('current tax', 27), (' income tax expense', 22), (' income tax benefit', 21), ('earlier year', 17), ('deferred tax', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' income tax', 48), ('amount transferred to retained earnings', 47), (' income tax expense', 38), ('current tax', 37), (' income tax benefit', 36), (' tax (expense)/benefit', 35), ('minimum alternate tax credit entitlement', 33), ('provision for taxation previous year', 31), (' income tax benefit/(expense)', 30), ('deferred tax', 24), ('prior year ', 23), ('earlier year', 21)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax (expense)/benefit', 67), (' income tax benefit', 56), (' income tax benefit/(expense)', 56), ('earlier year', 37), ('minimum alternate tax credit entitlement', 34), ('provision for taxation previous year', 32), ('prior year ', 32), ('current tax', 31), ('amount transferred to retained earnings', 29), (' income tax expense', 26), ('deferred tax', 25), (' income tax', 17)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [('minimum alternate tax credit entitlement', 34), ('amount transferred to retained earnings', 33), (' income tax', 33), (' tax (expense)/benefit', 30), ('earlier year', 29), ('provision for taxation previous year', 26), (' income tax expense', 24), (' income tax benefit/(expense)', 24), (' income tax benefit', 23), ('deferred tax', 22), ('prior year ', 21), ('current tax', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' income tax', 40), ('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax benefit', 36), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' income tax benefit', 67), ('provision for taxation previous year', 59), (' income tax expense', 58), (' income tax', 58), (' income tax benefit/(expense)', 57), (' tax (expense)/benefit', 50), ('deferred tax', 45), ('current tax', 42), ('minimum alternate tax credit entitlement', 41), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('earlier year', 35)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' income tax expense', 100), (' income tax benefit/(expense)', 80), (' income tax benefit', 73), (' income tax', 72), (' tax (expense)/benefit', 59), ('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('amount transferred to retained earnings', 48), ('provision for taxation previous year', 43), (' income tax benefit/(expense)', 40), (' income tax expense', 38), (' tax (expense)/benefit', 37), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 34), ('earlier year', 33), ('current tax', 30), (' income tax', 27), ('prior year ', 26)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' income tax expense', 51), ('provision for taxation previous year', 47), (' income tax benefit', 46), (' income tax benefit/(expense)', 44), ('prior year ', 40), ('amount transferred to retained earnings', 39), ('earlier year', 38), ('minimum alternate tax credit entitlement', 36), (' income tax', 36), ('current tax', 35), (' tax (expense)/benefit', 34), ('deferred tax', 27)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 29], 'score': 100, 'value': -798504.0, 'line_item_label': ['Income tax expense', 'Income tax expense'], 'note_numbers': ['6', '6'], 'line_item_value': [-399252.0, -399252.0]}
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-18 14:48:53+0530 - sLogger - DEBUG - keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement'] , match_type = partial , conf_score_thresh =80
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = current tax current tax on profits for the year , res_fuzz_match = [(' current income tax', 65), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 54), ('income tax expense', 50), (' total income tax expense / (benefit)', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' deferred income tax', 40)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = current tax total current tax expense , res_fuzz_match = [('income tax expense', 75), (' total income tax expense / (benefit)', 67), (' current income tax', 65), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 45), (' total tax (expense)/benefit in income statement', 44), (' deferred income tax', 40)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = deferred income tax (increase) in deferred tax assets (note 13) , res_fuzz_match = [(' deferred income tax', 100), ('income tax expense', 69), (' current income tax', 65), (' total income tax expense / (benefit)', 57), (' income tax expense on continuing operations', 52), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' total tax (expense)/benefit in income statement', 44)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = deferred income tax (decrease )increase in deferred tax liabilities (note 16) , res_fuzz_match = [(' deferred income tax', 100), ('income tax expense', 75), (' income tax expense on continuing operations', 62), (' total income tax expense / (benefit)', 60), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 49), (' current income tax', 47), (' total tax (expense)/benefit in income statement', 42)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = deferred income tax total deferred tax (benefit) , res_fuzz_match = [(' deferred income tax', 100), (' current income tax', 65), ('income tax expense', 62), (' total income tax expense / (benefit)', 60), (' income tax expense on continuing operations', 55), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 54), (' total tax (expense)/benefit in income statement', 44)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = deferred income tax income tax expense , res_fuzz_match = [('income tax expense', 100), (' deferred income tax', 100), (' current income tax', 71), (' total income tax expense / (benefit)', 67), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 62), (' income tax expense on continuing operations', 62), (' total tax (expense)/benefit in income statement', 55)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense to prima facie tax payable total , res_fuzz_match = [('income tax expense', 100), (' current income tax', 71), (' total income tax expense / (benefit)', 70), (' income tax expense on continuing operations', 69), (' deferred income tax', 67), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 52), (' total tax (expense)/benefit in income statement', 52)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense to prima facie tax payable total , res_fuzz_match = [('income tax expense', 100), (' current income tax', 71), (' total income tax expense / (benefit)', 70), (' income tax expense on continuing operations', 69), (' deferred income tax', 67), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 52), (' total tax (expense)/benefit in income statement', 52)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense to prima facie tax payable profit from continuing operations before income tax expense , res_fuzz_match = [('income tax expense', 100), (' deferred income tax', 87), (' current income tax', 71), (' total income tax expense / (benefit)', 70), (' income tax expense on continuing operations', 69), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 60), (' total tax (expense)/benefit in income statement', 55)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense to prima facie tax payable tax at the australian tax rate of 30.0% (2022 - 30.0%) , res_fuzz_match = [('income tax expense', 100), (' current income tax', 71), (' total income tax expense / (benefit)', 70), (' income tax expense on continuing operations', 69), (' deferred income tax', 67), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 53), (' total tax (expense)/benefit in income statement', 50)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = in calculating taxable income: entertainment , res_fuzz_match = [(' deferred income tax', 60), (' current income tax', 59), ('income tax expense', 56), (' total tax (expense)/benefit in income statement', 52), (' total income tax expense / (benefit)', 50), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 46)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = in calculating taxable income: sundry items , res_fuzz_match = [(' current income tax', 59), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' deferred income tax', 47), (' total income tax expense / (benefit)', 47), (' income tax expense on continuing operations', 46), ('income tax expense', 44)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = in calculating taxable income: impact of foreign jurisdiction differences , res_fuzz_match = [(' current income tax', 59), (' deferred income tax', 53), ('income tax expense', 50), (' total income tax expense / (benefit)', 50), (' income tax expense on continuing operations', 45), (' total tax (expense)/benefit in income statement', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 43)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = in calculating taxable income: income tax expense , res_fuzz_match = [('income tax expense', 100), (' total income tax expense / (benefit)', 69), (' deferred income tax', 67), (' current income tax', 65), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 56), (' total tax (expense)/benefit in income statement', 56), (' income tax expense on continuing operations', 55)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = current tax current tax on profits for the year , res_fuzz_match = [(' current income tax', 65), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 54), ('income tax expense', 50), (' total income tax expense / (benefit)', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' deferred income tax', 40)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = current tax total current tax expense , res_fuzz_match = [('income tax expense', 75), (' total income tax expense / (benefit)', 67), (' current income tax', 65), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 45), (' total tax (expense)/benefit in income statement', 44), (' deferred income tax', 40)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = deferred income tax (increase) in deferred tax assets (note 13) , res_fuzz_match = [(' deferred income tax', 100), ('income tax expense', 69), (' current income tax', 65), (' total income tax expense / (benefit)', 57), (' income tax expense on continuing operations', 52), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' total tax (expense)/benefit in income statement', 44)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = deferred income tax (decrease )increase in deferred tax liabilities (note 16) , res_fuzz_match = [(' deferred income tax', 100), ('income tax expense', 75), (' income tax expense on continuing operations', 62), (' total income tax expense / (benefit)', 60), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 49), (' current income tax', 47), (' total tax (expense)/benefit in income statement', 42)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = deferred income tax total deferred tax (benefit) , res_fuzz_match = [(' deferred income tax', 100), (' current income tax', 65), ('income tax expense', 62), (' total income tax expense / (benefit)', 60), (' income tax expense on continuing operations', 55), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 54), (' total tax (expense)/benefit in income statement', 44)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = deferred income tax income tax expense , res_fuzz_match = [('income tax expense', 100), (' deferred income tax', 100), (' current income tax', 71), (' total income tax expense / (benefit)', 67), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 62), (' income tax expense on continuing operations', 62), (' total tax (expense)/benefit in income statement', 55)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense to prima facie tax payable total , res_fuzz_match = [('income tax expense', 100), (' current income tax', 71), (' total income tax expense / (benefit)', 70), (' income tax expense on continuing operations', 69), (' deferred income tax', 67), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 52), (' total tax (expense)/benefit in income statement', 52)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense to prima facie tax payable total , res_fuzz_match = [('income tax expense', 100), (' current income tax', 71), (' total income tax expense / (benefit)', 70), (' income tax expense on continuing operations', 69), (' deferred income tax', 67), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 52), (' total tax (expense)/benefit in income statement', 52)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense to prima facie tax payable profit from continuing operations before income tax expense , res_fuzz_match = [('income tax expense', 100), (' deferred income tax', 87), (' current income tax', 71), (' total income tax expense / (benefit)', 70), (' income tax expense on continuing operations', 69), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 60), (' total tax (expense)/benefit in income statement', 55)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = numerical reconciliation of income tax expense to prima facie tax payable tax at the australian tax rate of 30.0% (2022 - 30.0%) , res_fuzz_match = [('income tax expense', 100), (' current income tax', 71), (' total income tax expense / (benefit)', 70), (' income tax expense on continuing operations', 69), (' deferred income tax', 67), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 53), (' total tax (expense)/benefit in income statement', 50)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = in calculating taxable income: entertainment , res_fuzz_match = [(' deferred income tax', 60), (' current income tax', 59), ('income tax expense', 56), (' total tax (expense)/benefit in income statement', 52), (' total income tax expense / (benefit)', 50), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 46)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = in calculating taxable income: sundry items , res_fuzz_match = [(' current income tax', 59), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' deferred income tax', 47), (' total income tax expense / (benefit)', 47), (' income tax expense on continuing operations', 46), ('income tax expense', 44)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = in calculating taxable income: impact of foreign jurisdiction differences , res_fuzz_match = [(' current income tax', 59), (' deferred income tax', 53), ('income tax expense', 50), (' total income tax expense / (benefit)', 50), (' income tax expense on continuing operations', 45), (' total tax (expense)/benefit in income statement', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 43)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows = in calculating taxable income: income tax expense , res_fuzz_match = [('income tax expense', 100), (' total income tax expense / (benefit)', 69), (' deferred income tax', 67), (' current income tax', 65), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 56), (' total tax (expense)/benefit in income statement', 56), (' income tax expense on continuing operations', 55)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3, 4, 5, 6, 7, 8, 9, 13, 16, 17, 18, 19, 20, 21, 22, 23, 27], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [-3696.0, 2845.0, -851.0, 399252.0, 2023.0, 0.0, 1858472.0, 557542.0, 399252.0, -6236.0, -2461.0, -8697.0, 252697.0, 2022.0, 0.0, 1306901.0, 392070.0, 252697.0], 'label': ['Deferred income tax (Increase) in deferred tax assets (note 13)', 'Deferred income tax (Decrease )increase in deferred tax liabilities (note 16)', 'Deferred income tax Total deferred tax (benefit)', 'Deferred income tax Income tax expense', '(b) Numerical reconciliation of income tax expense to prima facie tax payable Total', '(b) Numerical reconciliation of income tax expense to prima facie tax payable Total', '(b) Numerical reconciliation of income tax expense to prima facie tax payable Profit from continuing operations before income tax expense', '(b) Numerical reconciliation of income tax expense to prima facie tax payable Tax at the Australian tax rate of 30.0% (2022 - 30.0%)', 'in calculating taxable income: Income tax expense', 'Deferred income tax (Increase) in deferred tax assets (note 13)', 'Deferred income tax (Decrease )increase in deferred tax liabilities (note 16)', 'Deferred income tax Total deferred tax (benefit)', 'Deferred income tax Income tax expense', '(b) Numerical reconciliation of income tax expense to prima facie tax payable Total', '(b) Numerical reconciliation of income tax expense to prima facie tax payable Total', '(b) Numerical reconciliation of income tax expense to prima facie tax payable Profit from continuing operations before income tax expense', '(b) Numerical reconciliation of income tax expense to prima facie tax payable Tax at the Australian tax rate of 30.0% (2022 - 30.0%)', 'in calculating taxable income: Income tax expense'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-18 14:48:53+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-18 14:48:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-18 14:48:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:53+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('share of', 32), ('share in', 32)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [('share of', 32), ('share in', 32)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('share of', 38), ('share in', 38)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('share of', 32), ('share in', 32)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [('share of', 32), ('share in', 32)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('share of', 38), ('share in', 38)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:53+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('share of', 32), ('share in', 32)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [('share of', 32), ('share in', 32)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('share of', 38), ('share in', 38)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('share of', 32), ('share in', 32)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [('share of', 32), ('share in', 32)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('share of', 38), ('share in', 38)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-18 14:48:53+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation']
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-18 14:48:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-18 14:48:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:53+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 35), (' prior period ', 27), ('exceptional ', 16)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' prior period ', 29), (' Actuarial gains / (losses) on retirement benefit obligation', 22), ('exceptional ', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' prior period ', 31), (' Actuarial gains / (losses) on retirement benefit obligation', 31), ('exceptional ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional ', 50), (' prior period ', 22), (' Actuarial gains / (losses) on retirement benefit obligation', 19)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 31), (' prior period ', 23), ('exceptional ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 18), (' prior period ', 14)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 37), ('exceptional ', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), (' prior period ', 29), ('exceptional ', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 29), (' prior period ', 26), ('exceptional ', 24)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' prior period ', 47), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional ', 36), (' prior period ', 36), (' Actuarial gains / (losses) on retirement benefit obligation', 30)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 32), ('exceptional ', 16)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' prior period ', 41), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 21)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 36), ('exceptional ', 29), (' prior period ', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 34), ('exceptional ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 35), (' prior period ', 27), ('exceptional ', 16)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' prior period ', 29), (' Actuarial gains / (losses) on retirement benefit obligation', 22), ('exceptional ', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' prior period ', 31), (' Actuarial gains / (losses) on retirement benefit obligation', 31), ('exceptional ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional ', 50), (' prior period ', 22), (' Actuarial gains / (losses) on retirement benefit obligation', 19)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 31), (' prior period ', 23), ('exceptional ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 18), (' prior period ', 14)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 37), ('exceptional ', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), (' prior period ', 29), ('exceptional ', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 29), (' prior period ', 26), ('exceptional ', 24)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' prior period ', 47), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional ', 36), (' prior period ', 36), (' Actuarial gains / (losses) on retirement benefit obligation', 30)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 32), ('exceptional ', 16)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' prior period ', 41), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 21)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 36), ('exceptional ', 29), (' prior period ', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 34), ('exceptional ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:53+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 35), (' prior period ', 27), ('exceptional ', 16)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' prior period ', 29), (' Actuarial gains / (losses) on retirement benefit obligation', 22), ('exceptional ', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' prior period ', 31), (' Actuarial gains / (losses) on retirement benefit obligation', 31), ('exceptional ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional ', 50), (' prior period ', 22), (' Actuarial gains / (losses) on retirement benefit obligation', 19)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 31), (' prior period ', 23), ('exceptional ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 18), (' prior period ', 14)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 37), ('exceptional ', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), (' prior period ', 29), ('exceptional ', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 29), (' prior period ', 26), ('exceptional ', 24)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' prior period ', 47), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional ', 36), (' prior period ', 36), (' Actuarial gains / (losses) on retirement benefit obligation', 30)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 32), ('exceptional ', 16)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' prior period ', 41), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 21)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 36), ('exceptional ', 29), (' prior period ', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 34), ('exceptional ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 35), (' prior period ', 27), ('exceptional ', 16)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [(' prior period ', 29), (' Actuarial gains / (losses) on retirement benefit obligation', 22), ('exceptional ', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [(' prior period ', 31), (' Actuarial gains / (losses) on retirement benefit obligation', 31), ('exceptional ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional ', 50), (' prior period ', 22), (' Actuarial gains / (losses) on retirement benefit obligation', 19)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 31), (' prior period ', 23), ('exceptional ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 18), (' prior period ', 14)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 37), ('exceptional ', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), (' prior period ', 29), ('exceptional ', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 29), (' prior period ', 26), ('exceptional ', 24)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' prior period ', 47), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional ', 36), (' prior period ', 36), (' Actuarial gains / (losses) on retirement benefit obligation', 30)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 32), ('exceptional ', 16)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' prior period ', 41), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 21)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 36), ('exceptional ', 29), (' prior period ', 29)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 34), ('exceptional ', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-18 14:48:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-18 14:48:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-18 14:48:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-18 14:48:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-18 14:48:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-18 14:48:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:53+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('NULL', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('NULL', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('NULL', 21)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [('NULL', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('NULL', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('NULL', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('NULL', 21)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [('NULL', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-18 14:48:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-18 14:48:53+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('NULL', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('NULL', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('NULL', 21)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [('NULL', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = sale of goods , res_fuzz_match = [('NULL', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other (losses) - net , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = cost of sales of goods , res_fuzz_match = [('NULL', 11)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = premises cost , res_fuzz_match = [('NULL', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = management staff cost , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('NULL', 21)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = administration , res_fuzz_match = [('NULL', 15)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-18 14:48:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
