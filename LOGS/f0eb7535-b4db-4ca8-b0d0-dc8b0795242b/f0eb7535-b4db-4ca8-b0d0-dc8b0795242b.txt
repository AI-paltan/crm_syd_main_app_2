2023-08-25 12:21:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-25 12:21:10+0530 - sLogger - DEBUG - process_main_pages started
2023-08-25 12:21:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-25 12:21:10+0530 - sLogger - DEBUG - start_refactoring started
2023-08-25 12:21:10+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-25 12:21:10+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: get_standardize_main_pages CCF
2023-08-25 12:21:10+0530 - sLogger - ERROR - error occured: 'year_list'
2023-08-25 12:21:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-25 12:21:10+0530 - sLogger - DEBUG - start_refactoring started
2023-08-25 12:21:10+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-25 12:21:10+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: get_standardize_main_pages CBS
2023-08-25 12:21:10+0530 - sLogger - ERROR - error occured: 'year_list'
2023-08-25 12:21:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-25 12:21:10+0530 - sLogger - DEBUG - start_refactoring started
2023-08-25 12:21:10+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-25 12:21:10+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: get_standardize_main_pages CPL
2023-08-25 12:21:10+0530 - sLogger - ERROR - error occured: 'year_list'
2023-08-25 12:21:10+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CBS
2023-08-25 12:21:10+0530 - sLogger - ERROR - error occured: 'headers'
2023-08-25 12:21:10+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL
2023-08-25 12:21:10+0530 - sLogger - ERROR - error occured: 'headers'
2023-08-25 12:21:10+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CCF
2023-08-25 12:21:10+0530 - sLogger - ERROR - error occured: 'headers'
2023-08-25 12:21:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-25 12:21:10+0530 - sLogger - DEBUG - set_section_details started
2023-08-25 12:21:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-25 12:21:10+0530 - sLogger - DEBUG - set_section_details started
2023-08-25 12:21:10+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-25 12:21:10+0530 - sLogger - DEBUG - set_section_details started
2023-08-25 12:21:10+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: set_sections_subsections  CCF
2023-08-25 12:21:10+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-25 12:21:29+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-08-25 12:21:29+0530 - sLogger - DEBUG - TE process file started
2023-08-25 12:24:54+0530 - sLogger - DEBUG - TE Proces file completed
2023-08-25 12:24:54+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-25 12:24:54+0530 - sLogger - DEBUG - process_main_pages started
2023-08-25 12:24:54+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-25 12:24:54+0530 - sLogger - DEBUG - start_refactoring started
2023-08-25 12:24:54+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-25 12:24:54+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-25 12:24:54+0530 - sLogger - DEBUG - start_refactoring started
2023-08-25 12:24:54+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-25 12:24:54+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-25 12:24:54+0530 - sLogger - DEBUG - start_refactoring started
2023-08-25 12:24:54+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-25 12:24:54+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-25 12:24:54+0530 - sLogger - DEBUG - set_section_details started
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('currentassets', 59), ('current assets', 56), ('noncurrent assets', 56), ('noncurrentassets', 50), ('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentassets | score 90
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentliabilities | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equityandliabilities | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equityandliabilities', 38), ('equity liabilities', 35), ('equityliabilities', 34), ('noncurrentassets', 33), ('assets', 31), ('currentassets', 30), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrentliabilities', 24), ('noncurrent liabilities', 23), ('liabilities', 22), ('currentliabilities', 20)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentassets | score 37
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentliabilities | score 35
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equityandliabilities | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Restricted deposits | [('current assets', 41), ('equity', 36), ('equity and liabilities', 36), ('noncurrentliabilities', 36), ('noncurrent assets', 34), ('equity liabilities', 34), ('equityliabilities', 33), ('noncurrentassets', 32), ('currentliabilities', 32), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current liabilities', 27), ('noncurrent liabilities', 27), ('liabilities', 18)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Restricted deposits | MATCH WORD current assets | score 42
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Restricted deposits | MATCH WORD currentassets | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Restricted deposits | MATCH WORD current liabilities | score 37
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Restricted deposits | MATCH WORD currentliabilities | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Restricted deposits | MATCH WORD noncurrent assets | score 39
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Restricted deposits | MATCH WORD noncurrentassets | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Restricted deposits | MATCH WORD noncurrent liabilities | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Restricted deposits | MATCH WORD non current assets | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Restricted deposits | MATCH WORD non current liabilities | score 33
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Restricted deposits | MATCH WORD noncurrentliabilities | score 35
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Restricted deposits | MATCH WORD noncurrentassets | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Restricted deposits | MATCH WORD noncurrentliabilities | score 35
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Restricted deposits | MATCH WORD equity and liabilities | score 39
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Restricted deposits | MATCH WORD equity | score 43
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Restricted deposits | MATCH WORD equityandliabilities | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Total current a sse ts | [('currentassets', 76), ('noncurrentassets', 69), ('current liabilities', 65), ('currentliabilities', 62), ('noncurrentliabilities', 55), ('current assets', 47), ('assets', 36), ('equity and liabilities', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('equityandliabilities', 29), ('noncurrent liabilities', 26), ('equityliabilities', 24), ('liabilities', 17), ('equity', 17)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current a sse ts | MATCH WORD current assets | score 86
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current a sse ts | MATCH WORD currentassets | score 76
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current a sse ts | MATCH WORD current liabilities | score 56
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current a sse ts | MATCH WORD currentliabilities | score 52
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current a sse ts | MATCH WORD noncurrent assets | score 77
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current a sse ts | MATCH WORD noncurrentassets | score 74
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current a sse ts | MATCH WORD noncurrent liabilities | score 55
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current a sse ts | MATCH WORD non current assets | score 80
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current a sse ts | MATCH WORD non current liabilities | score 58
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current a sse ts | MATCH WORD noncurrentliabilities | score 51
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current a sse ts | MATCH WORD noncurrentassets | score 74
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current a sse ts | MATCH WORD noncurrentliabilities | score 51
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current a sse ts | MATCH WORD equity and liabilities | score 39
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current a sse ts | MATCH WORD equity | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current a sse ts | MATCH WORD equityandliabilities | score 29
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('equityandliabilities', 23), ('noncurrent liabilities', 21), ('equity', 19), ('currentliabilities', 17), ('equityliabilities', 17), ('noncurrentliabilities', 15), ('liabilities', 10)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentassets | score 62
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentliabilities | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equityandliabilities | score 31
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equityliabilities', 26), ('currentliabilities', 25), ('equityandliabilities', 23), ('noncurrentliabilities', 22), ('liabilities', 19)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentassets | score 53
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentliabilities | score 29
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equityandliabilities | score 27
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Total noncurrent a sse ts | [('noncurrentassets', 69), ('noncurrentliabilities', 69), ('currentassets', 55), ('currentliabilities', 54), ('current liabilities', 52), ('noncurrent assets', 47), ('noncurrent liabilities', 45), ('current assets', 40), ('assets', 36), ('equity and liabilities', 35), ('equityandliabilities', 29), ('equity liabilities', 27), ('equityliabilities', 24), ('liabilities', 17), ('equity', 17)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent a sse ts | MATCH WORD current assets | score 77
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent a sse ts | MATCH WORD currentassets | score 76
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent a sse ts | MATCH WORD current liabilities | score 52
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent a sse ts | MATCH WORD currentliabilities | score 48
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent a sse ts | MATCH WORD noncurrent assets | score 81
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent a sse ts | MATCH WORD noncurrentassets | score 79
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent a sse ts | MATCH WORD noncurrent liabilities | score 61
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent a sse ts | MATCH WORD non current assets | score 79
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent a sse ts | MATCH WORD non current liabilities | score 58
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent a sse ts | MATCH WORD noncurrentliabilities | score 58
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent a sse ts | MATCH WORD noncurrentassets | score 79
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent a sse ts | MATCH WORD noncurrentliabilities | score 58
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent a sse ts | MATCH WORD equity and liabilities | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent a sse ts | MATCH WORD equity | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent a sse ts | MATCH WORD equityandliabilities | score 27
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Total a ssets | [('assets', 53), ('current assets', 52), ('noncurrent assets', 52), ('equity liabilities', 43), ('current liabilities', 42), ('equityandliabilities', 38), ('equity and liabilities', 37), ('currentassets', 36), ('equityliabilities', 33), ('noncurrentassets', 32), ('currentliabilities', 32), ('noncurrentliabilities', 27), ('liabilities', 25), ('equity', 25), ('noncurrent liabilities', 17)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total a ssets | MATCH WORD current assets | score 59
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total a ssets | MATCH WORD currentassets | score 54
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total a ssets | MATCH WORD current liabilities | score 31
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total a ssets | MATCH WORD currentliabilities | score 32
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total a ssets | MATCH WORD noncurrent assets | score 60
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total a ssets | MATCH WORD noncurrentassets | score 55
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total a ssets | MATCH WORD noncurrent liabilities | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total a ssets | MATCH WORD non current assets | score 58
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total a ssets | MATCH WORD non current liabilities | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total a ssets | MATCH WORD noncurrentliabilities | score 35
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total a ssets | MATCH WORD noncurrentassets | score 55
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total a ssets | MATCH WORD noncurrentliabilities | score 35
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total a ssets | MATCH WORD equity and liabilities | score 39
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total a ssets | MATCH WORD equity | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total a ssets | MATCH WORD equityandliabilities | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equityandliabilities', 35), ('equity', 33), ('equityliabilities', 29), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11), ('currentassets', 11), ('noncurrentassets', 10)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentassets | score 25
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentliabilities | score 90
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equityandliabilities | score 90
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('equityliabilities', 35), ('current liabilities', 34), ('currentliabilities', 33), ('equityandliabilities', 31), ('currentassets', 30), ('noncurrentliabilities', 30), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('noncurrentassets', 27), ('assets', 20)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentassets | score 33
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentliabilities | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equityandliabilities | score 32
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Current tax payables | [('current liabilities', 69), ('currentassets', 60), ('currentliabilities', 59), ('noncurrentassets', 55), ('noncurrentliabilities', 53), ('current assets', 45), ('equity liabilities', 39), ('equity and liabilities', 34), ('equityandliabilities', 34), ('equityliabilities', 31), ('noncurrent assets', 26), ('liabilities', 25), ('noncurrent liabilities', 25), ('assets', 17), ('equity', 17)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Current tax payables | MATCH WORD current assets | score 65
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Current tax payables | MATCH WORD currentassets | score 61
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Current tax payables | MATCH WORD current liabilities | score 67
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Current tax payables | MATCH WORD currentliabilities | score 63
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Current tax payables | MATCH WORD noncurrent assets | score 59
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Current tax payables | MATCH WORD noncurrentassets | score 56
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Current tax payables | MATCH WORD noncurrent liabilities | score 62
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Current tax payables | MATCH WORD non current assets | score 60
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Current tax payables | MATCH WORD non current liabilities | score 62
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Current tax payables | MATCH WORD noncurrentliabilities | score 59
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Current tax payables | MATCH WORD noncurrentassets | score 56
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Current tax payables | MATCH WORD noncurrentliabilities | score 59
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Current tax payables | MATCH WORD equity and liabilities | score 48
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Current tax payables | MATCH WORD equity | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Current tax payables | MATCH WORD equityandliabilities | score 40
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Lease obligation | [('liabilities', 50), ('equityandliabilities', 38), ('noncurrent assets', 35), ('equity liabilities', 35), ('current liabilities', 33), ('noncurrent liabilities', 33), ('equityliabilities', 33), ('currentliabilities', 32), ('equity and liabilities', 30), ('assets', 27), ('currentassets', 27), ('noncurrentliabilities', 27), ('current assets', 26), ('equity', 25), ('noncurrentassets', 24)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD current assets | score 33
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD currentassets | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD current liabilities | score 40
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD currentliabilities | score 41
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD noncurrent assets | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD noncurrentassets | score 31
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD noncurrent liabilities | score 45
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD non current assets | score 39
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD non current liabilities | score 44
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD noncurrentliabilities | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD noncurrentassets | score 31
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD noncurrentliabilities | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD equity and liabilities | score 42
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD equity | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD equityandliabilities | score 39
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('currentliabilities', 62), ('currentassets', 56), ('noncurrentliabilities', 56), ('equity liabilities', 55), ('noncurrentassets', 51), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('equityandliabilities', 32), ('equityliabilities', 29), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentassets | score 56
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentliabilities | score 84
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equityandliabilities | score 62
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('equityliabilities', 35), ('current liabilities', 34), ('currentliabilities', 33), ('equityandliabilities', 31), ('currentassets', 30), ('noncurrentliabilities', 30), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('noncurrentassets', 27), ('assets', 20)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentassets | score 33
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentliabilities | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equityandliabilities | score 32
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Lease obligation | [('liabilities', 50), ('equityandliabilities', 38), ('noncurrent assets', 35), ('equity liabilities', 35), ('current liabilities', 33), ('noncurrent liabilities', 33), ('equityliabilities', 33), ('currentliabilities', 32), ('equity and liabilities', 30), ('assets', 27), ('currentassets', 27), ('noncurrentliabilities', 27), ('current assets', 26), ('equity', 25), ('noncurrentassets', 24)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD current assets | score 33
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD currentassets | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD current liabilities | score 40
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD currentliabilities | score 41
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD noncurrent assets | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD noncurrentassets | score 31
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD noncurrent liabilities | score 45
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD non current assets | score 39
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD non current liabilities | score 44
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD noncurrentliabilities | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD noncurrentassets | score 31
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD noncurrentliabilities | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD equity and liabilities | score 42
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD equity | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Lease obligation | MATCH WORD equityandliabilities | score 39
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Total noncurrent lia bilities | [('noncurrent liabilities', 63), ('noncurrentliabilities', 50), ('noncurrent assets', 49), ('noncurrentassets', 46), ('equity liabilities', 43), ('equity and liabilities', 39), ('current assets', 38), ('current liabilities', 37), ('currentliabilities', 36), ('currentassets', 33), ('equityandliabilities', 29), ('liabilities', 27), ('equityliabilities', 25), ('equity', 20), ('assets', 14)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent lia bilities | MATCH WORD current assets | score 58
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent lia bilities | MATCH WORD currentassets | score 56
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent lia bilities | MATCH WORD current liabilities | score 86
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent lia bilities | MATCH WORD currentliabilities | score 80
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent lia bilities | MATCH WORD noncurrent assets | score 86
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent lia bilities | MATCH WORD noncurrentassets | score 62
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent lia bilities | MATCH WORD noncurrent liabilities | score 86
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent lia bilities | MATCH WORD non current assets | score 60
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent lia bilities | MATCH WORD non current liabilities | score 85
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent lia bilities | MATCH WORD noncurrentliabilities | score 84
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent lia bilities | MATCH WORD noncurrentassets | score 62
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent lia bilities | MATCH WORD noncurrentliabilities | score 84
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent lia bilities | MATCH WORD equity and liabilities | score 59
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent lia bilities | MATCH WORD equity | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total noncurrent lia bilities | MATCH WORD equityandliabilities | score 57
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Net a ssets | [('assets', 62), ('noncurrentassets', 61), ('currentassets', 60), ('current assets', 48), ('noncurrent assets', 38), ('equity and liabilities', 32), ('noncurrentliabilities', 30), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 27), ('equityliabilities', 25), ('currentliabilities', 24), ('equityandliabilities', 21), ('noncurrent liabilities', 9), ('liabilities', 0)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Net a ssets | MATCH WORD current assets | score 72
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Net a ssets | MATCH WORD currentassets | score 67
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Net a ssets | MATCH WORD current liabilities | score 40
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Net a ssets | MATCH WORD currentliabilities | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Net a ssets | MATCH WORD noncurrent assets | score 77
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Net a ssets | MATCH WORD noncurrentassets | score 67
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Net a ssets | MATCH WORD noncurrent liabilities | score 42
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Net a ssets | MATCH WORD non current assets | score 77
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Net a ssets | MATCH WORD non current liabilities | score 41
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Net a ssets | MATCH WORD noncurrentliabilities | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Net a ssets | MATCH WORD noncurrentassets | score 67
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Net a ssets | MATCH WORD noncurrentliabilities | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Net a ssets | MATCH WORD equity and liabilities | score 42
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Net a ssets | MATCH WORD equity | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Net a ssets | MATCH WORD equityandliabilities | score 32
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentassets | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentliabilities | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equityandliabilities | score 90
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Issued capital | [('assets', 40), ('equity', 38), ('equity and liabilities', 37), ('currentassets', 36), ('current assets', 35), ('noncurrent assets', 35), ('equity liabilities', 35), ('current liabilities', 33), ('noncurrent liabilities', 33), ('equityliabilities', 33), ('noncurrentassets', 32), ('currentliabilities', 32), ('equityandliabilities', 29), ('noncurrentliabilities', 27), ('liabilities', 25)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current assets | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD currentassets | score 42
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current liabilities | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD currentliabilities | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent assets | score 32
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrentassets | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent liabilities | score 39
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current assets | score 31
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current liabilities | score 39
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrentliabilities | score 32
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrentassets | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrentliabilities | score 32
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity and liabilities | score 39
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equityandliabilities | score 33
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Retained earnings | [('equity and liabilities', 50), ('currentliabilities', 50), ('current liabilities', 48), ('currentassets', 43), ('noncurrentliabilities', 43), ('current assets', 42), ('assets', 38), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equity', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('equityliabilities', 32), ('liabilities', 24), ('noncurrent liabilities', 24)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentassets | score 40
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 39
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentliabilities | score 40
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 35
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 46
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equityandliabilities | score 43
2023-08-25 12:24:54+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentassets | score 32
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentliabilities | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-08-25 12:24:54+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equityandliabilities | score 57
2023-08-25 12:24:54+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-25 12:24:54+0530 - sLogger - DEBUG - set_section_details started
2023-08-25 12:24:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-08-25 12:24:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash receipts from customers | adiustments for movements in working capital
2023-08-25 12:24:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash paid to suppliers and employees | changes in operating assets and liabilities
2023-08-25 12:24:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Lease interest paid | adjustments for increase decrease in operating liabilities
2023-08-25 12:24:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-08-25 12:24:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net income taxes paid | changes in operating assets and liabilities
2023-08-25 12:24:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash generated I (used in) from operating activities | adjustments for increase decrease in operating assets
2023-08-25 12:24:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-08-25 12:24:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of property, plant and equipment | changes in operating assets and liabilities
2023-08-25 12:24:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceed from sale of property, plant and equipment | operating profit before changes in assets and liabilities
2023-08-25 12:24:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in investing activities | adjustments for increase decrease in operating liabilities
2023-08-25 12:24:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from financing activities | operating cash flow before working capital changes
2023-08-25 12:24:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments into restricted deposits | adiustments for movements in working capital
2023-08-25 12:24:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividends Paid | changes in assets liabilities
2023-08-25 12:24:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment of lease principal | adjustments for increase decrease in operating assets
2023-08-25 12:24:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in financing activities | adjustments for increase decrease in operating assets
2023-08-25 12:24:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase / (decrease) in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-08-25 12:24:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the beginning of the year | changes in operating assets and liabilities
2023-08-25 12:24:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the end of the year | changes in operating assets and liabilities
2023-08-25 12:24:56+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits ', ' Cash']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset ', ' Term deposit']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:56+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits ', ' Cash'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), (' Cash', 44), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits ', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits ', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33), (' Cash', 32)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = restricted deposits , res_fuzz_match = [('cash and short term deposits', 51), ('Cash and short term deposits ', 51), ('cash asset', 31), ('cash and cash equivalents', 27), ('other bank balances', 24), ('bank balances other than cash and cash equivalents', 23), ('bank balances other than above', 23), ('cash and bank balances', 17), (' Cash', 10)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits ', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31), (' Cash', 15)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits ', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14), (' Cash', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = total current a sse ts , res_fuzz_match = [('cash and cash equivalents', 37), ('cash asset', 37), ('bank balances other than cash and cash equivalents', 33), ('bank balances other than above', 32), ('cash and short term deposits', 32), ('Cash and short term deposits ', 32), ('other bank balances', 29), ('cash and bank balances', 22), (' Cash', 19)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 38), ('Cash and short term deposits ', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), ('other bank balances', 25), ('cash and bank balances', 23), (' Cash', 21)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('Cash and short term deposits ', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36), ('cash asset', 24), (' Cash', 7)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 33), ('Cash and short term deposits ', 33), (' Cash', 32), ('cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = total non-current a sse ts , res_fuzz_match = [('cash and cash equivalents', 37), ('cash asset', 37), ('bank balances other than cash and cash equivalents', 36), ('bank balances other than above', 36), ('other bank balances', 35), ('cash and bank balances', 32), ('cash and short term deposits', 32), ('Cash and short term deposits ', 32), (' Cash', 19)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 5423.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['10'], 'line_item_value': [5423.0]}
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:56+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits ', ' Cash'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), (' Cash', 44), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits ', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits ', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33), (' Cash', 32)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = restricted deposits , res_fuzz_match = [('cash and short term deposits', 51), ('Cash and short term deposits ', 51), ('cash asset', 31), ('cash and cash equivalents', 27), ('other bank balances', 24), ('bank balances other than cash and cash equivalents', 23), ('bank balances other than above', 23), ('cash and bank balances', 17), (' Cash', 10)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits ', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31), (' Cash', 15)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits ', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14), (' Cash', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = total current a sse ts , res_fuzz_match = [('cash and cash equivalents', 37), ('cash asset', 37), ('bank balances other than cash and cash equivalents', 33), ('bank balances other than above', 32), ('cash and short term deposits', 32), ('Cash and short term deposits ', 32), ('other bank balances', 29), ('cash and bank balances', 22), (' Cash', 19)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 38), ('Cash and short term deposits ', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), ('other bank balances', 25), ('cash and bank balances', 23), (' Cash', 21)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('Cash and short term deposits ', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36), ('cash asset', 24), (' Cash', 7)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash asset', 56), ('cash and short term deposits', 33), ('Cash and short term deposits ', 33), (' Cash', 32), ('cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = total non-current a sse ts , res_fuzz_match = [('cash and cash equivalents', 37), ('cash asset', 37), ('bank balances other than cash and cash equivalents', 36), ('bank balances other than above', 36), ('other bank balances', 35), ('cash and bank balances', 32), ('cash and short term deposits', 32), ('Cash and short term deposits ', 32), (' Cash', 19)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 8374.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['10'], 'line_item_value': [8374.0]}
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:56+0530 - sLogger - DEBUG - keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset ', ' Term deposit'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = none bank balances , res_fuzz_match = [(' bank balances ', 100), ('  cash and bank balances ', 81), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash on hand and at bank ', 50), (' cash at bank ', 44), (' cash and cash equivalents ', 38), ('cash on hand ', 33), (' cash asset ', 30), (' short term deposits ', 19), (' Term deposit', 17)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset ', 0), (' Term deposit', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = none cash and cash equivalents in the statement of cash flows , res_fuzz_match = [(' cash and cash equivalents ', 100), ('cash on hand ', 89), (' cash at bank ', 78), (' cash on hand and at bank ', 61), ('  cash and bank balances ', 60), (' cash asset ', 60), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 46), (' short term deposits ', 39), (' bank balances ', 36), (' Term deposit', 33)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset ', 0), (' Term deposit', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = none bank balances , res_fuzz_match = [(' bank balances ', 100), ('  cash and bank balances ', 81), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), (' cash on hand and at bank ', 50), (' cash at bank ', 44), (' cash and cash equivalents ', 38), ('cash on hand ', 33), (' cash asset ', 30), (' short term deposits ', 19), (' Term deposit', 17)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset ', 0), (' Term deposit', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = none cash and cash equivalents in the statement of cash flows , res_fuzz_match = [(' cash and cash equivalents ', 100), ('cash on hand ', 89), (' cash at bank ', 78), (' cash on hand and at bank ', 61), ('  cash and bank balances ', 60), (' cash asset ', 60), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 46), (' short term deposits ', 39), (' bank balances ', 36), (' Term deposit', 33)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('cash on hand ', 0), (' cash at bank ', 0), (' cash at bank and on hand ', 0), (' short term deposits ', 0), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 0), (' cash and cash equivalents ', 0), (' cash on hand and at bank ', 0), (' bank balances ', 0), ('  cash and bank balances ', 0), (' cash asset ', 0), (' Term deposit', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3], 'score': [100, 100, 100, 100], 'value': [8374.0, 8374.0, 5423.0, 5423.0], 'label': ['None Bank balances', 'None Cash and cash equivalents in the statement of cash flows', 'None Bank balances', 'None Cash and cash equivalents in the statement of cash flows'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-25 12:24:56+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['inventories ', ' Contract assets']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' spare parts at cost ', ' parts and accessories (at cost) ', ' stock in transit ', ' Stock in transit at cost ', ' allowance for obsolescence ', ' Finished goods in transit']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:56+0530 - sLogger - DEBUG - keywords = ['inventories ', ' Contract assets'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' Contract assets', 100), ('inventories ', 40)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' Contract assets', 36), ('inventories ', 22)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = restricted deposits , res_fuzz_match = [(' Contract assets', 50), ('inventories ', 33)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' Contract assets', 36), ('inventories ', 33)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories ', 100), (' Contract assets', 33)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = total current a sse ts , res_fuzz_match = [(' Contract assets', 54), ('inventories ', 33)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' Contract assets', 57), ('inventories ', 22)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' Contract assets', 43), ('inventories ', 33)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' Contract assets', 50), ('inventories ', 33)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = total non-current a sse ts , res_fuzz_match = [(' Contract assets', 52), ('inventories ', 33)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4], 'score': 100, 'value': 11455.0, 'line_item_label': ['Assets', 'Inventories'], 'note_numbers': [nan, '12'], 'line_item_value': [0.0, 11455.0]}
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:56+0530 - sLogger - DEBUG - keywords = ['inventories ', ' Contract assets'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' Contract assets', 100), ('inventories ', 40)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' Contract assets', 36), ('inventories ', 22)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = restricted deposits , res_fuzz_match = [(' Contract assets', 50), ('inventories ', 33)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' Contract assets', 36), ('inventories ', 33)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories ', 100), (' Contract assets', 33)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = total current a sse ts , res_fuzz_match = [(' Contract assets', 54), ('inventories ', 33)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' Contract assets', 57), ('inventories ', 22)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' Contract assets', 43), ('inventories ', 33)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' Contract assets', 50), ('inventories ', 33)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = total non-current a sse ts , res_fuzz_match = [(' Contract assets', 52), ('inventories ', 33)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4], 'score': 100, 'value': 10662.0, 'line_item_label': ['Assets', 'Inventories'], 'note_numbers': [nan, '12'], 'line_item_value': [0.0, 10662.0]}
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:56+0530 - sLogger - DEBUG - keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' spare parts at cost ', ' parts and accessories (at cost) ', ' stock in transit ', ' Stock in transit at cost ', ' allowance for obsolescence ', ' Finished goods in transit'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = none finished goods at cost , res_fuzz_match = [(' finished goods ', 100), (' finished goods at cost ', 100), (' Finished goods in transit', 80), (' goods in transit ', 58), (' stores and other consumables at cost ', 52), (' spare parts at cost ', 47), (' Stock in transit at cost ', 44), (' provision for inventory obsolescence ', 43), (' parts and accessories (at cost) ', 43), (' allowance for obsolescence ', 39), (' cranes - in transit ', 38), (' stock in transit ', 38), (' inventories ', 33), (' work in progress ', 31), ('raw materials ', 20), (' raw materials ', 20), (' cranes ', 20), (' spare parts ', 20)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' spare parts at cost ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit ', 0), (' Stock in transit at cost ', 0), (' allowance for obsolescence ', 0), (' Finished goods in transit', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = none less: provision for stock obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 81), (' allowance for obsolescence ', 67), (' stock in transit ', 54), (' finished goods at cost ', 50), (' Stock in transit at cost ', 50), (' parts and accessories (at cost) ', 48), (' spare parts at cost ', 47), (' work in progress ', 46), (' finished goods ', 45), (' goods in transit ', 42), (' stores and other consumables at cost ', 41), (' spare parts ', 40), (' cranes - in transit ', 38), (' Finished goods in transit', 37), (' inventories ', 33), ('raw materials ', 30), (' raw materials ', 30), (' cranes ', 20)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' spare parts at cost ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit ', 0), (' Stock in transit at cost ', 0), (' allowance for obsolescence ', 0), (' Finished goods in transit', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' spare parts at cost ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit ', 40), (' Stock in transit at cost ', 40), (' allowance for obsolescence ', 40), (' Finished goods in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' spare parts at cost ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit ', 0), (' Stock in transit at cost ', 0), (' allowance for obsolescence ', 0), (' Finished goods in transit', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = none finished goods at cost , res_fuzz_match = [(' finished goods ', 100), (' finished goods at cost ', 100), (' Finished goods in transit', 80), (' goods in transit ', 58), (' stores and other consumables at cost ', 52), (' spare parts at cost ', 47), (' Stock in transit at cost ', 44), (' provision for inventory obsolescence ', 43), (' parts and accessories (at cost) ', 43), (' allowance for obsolescence ', 39), (' cranes - in transit ', 38), (' stock in transit ', 38), (' inventories ', 33), (' work in progress ', 31), ('raw materials ', 20), (' raw materials ', 20), (' cranes ', 20), (' spare parts ', 20)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' spare parts at cost ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit ', 0), (' Stock in transit at cost ', 0), (' allowance for obsolescence ', 0), (' Finished goods in transit', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = none less: provision for stock obsolescence , res_fuzz_match = [(' provision for inventory obsolescence ', 81), (' allowance for obsolescence ', 67), (' stock in transit ', 54), (' finished goods at cost ', 50), (' Stock in transit at cost ', 50), (' parts and accessories (at cost) ', 48), (' spare parts at cost ', 47), (' work in progress ', 46), (' finished goods ', 45), (' goods in transit ', 42), (' stores and other consumables at cost ', 41), (' spare parts ', 40), (' cranes - in transit ', 38), (' Finished goods in transit', 37), (' inventories ', 33), ('raw materials ', 30), (' raw materials ', 30), (' cranes ', 20)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' spare parts at cost ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit ', 0), (' Stock in transit at cost ', 0), (' allowance for obsolescence ', 0), (' Finished goods in transit', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' stores and other consumables at cost ', 50), (' cranes - in transit ', 50), (' inventories ', 44), (' finished goods at cost ', 40), (' goods in transit ', 40), (' provision for inventory obsolescence ', 40), (' cranes ', 40), (' spare parts at cost ', 40), (' parts and accessories (at cost) ', 40), (' stock in transit ', 40), (' Stock in transit at cost ', 40), (' allowance for obsolescence ', 40), (' Finished goods in transit', 40), (' finished goods ', 32), (' work in progress ', 30), (' spare parts ', 30), ('raw materials ', 21), (' raw materials ', 21)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('raw materials ', 0), (' finished goods ', 0), (' finished goods at cost ', 0), (' stores and other consumables at cost ', 0), (' raw materials ', 0), (' work in progress ', 0), (' goods in transit ', 0), (' provision for inventory obsolescence ', 0), (' inventories ', 0), (' cranes ', 0), (' cranes - in transit ', 0), (' spare parts ', 0), (' spare parts at cost ', 0), (' parts and accessories (at cost) ', 0), (' stock in transit ', 0), (' Stock in transit at cost ', 0), (' allowance for obsolescence ', 0), (' Finished goods in transit', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 3, 4], 'score': [100, 81, 100, 81], 'value': [11130.0, -468.0, 11911.0, -456.0], 'label': ['None Finished goods at cost', 'None Less: Provision for stock obsolescence', 'None Finished goods at cost', 'None Less: Provision for stock obsolescence'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-25 12:24:56+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables ']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['current ', ' prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:56+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables '] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables ', 22), (' prepayments ', 18)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables ', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = restricted deposits , res_fuzz_match = [(' other current financial assets ', 42), (' trade and other receivables ', 42), (' other current assets ', 40), ('other assets ', 37), (' other financial assets ', 34), (' prepayments ', 27)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables ', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables ', 26), (' prepayments ', 13)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = total current a sse ts , res_fuzz_match = [(' other current assets ', 56), (' other current financial assets ', 50), ('other assets ', 43), (' trade and other receivables ', 36), (' other financial assets ', 33), (' prepayments ', 26)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 53), (' other financial assets ', 53), (' other current financial assets ', 48), (' trade and other receivables ', 43), (' prepayments ', 19)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade and other receivables ', 43), (' other current assets ', 42), (' other financial assets ', 42), ('other assets ', 40), (' other current financial assets ', 39), (' prepayments ', 20)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets ', 54), (' other current assets ', 53), (' other financial assets ', 47), (' other current financial assets ', 43), (' trade and other receivables ', 32), (' prepayments ', 10)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = total non-current a sse ts , res_fuzz_match = [(' other current assets ', 44), ('other assets ', 43), (' trade and other receivables ', 41), (' other current financial assets ', 36), (' other financial assets ', 33), (' prepayments ', 26)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 4004.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['11'], 'line_item_value': [4004.0]}
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:56+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables '] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables ', 22), (' prepayments ', 18)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables ', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = restricted deposits , res_fuzz_match = [(' other current financial assets ', 42), (' trade and other receivables ', 42), (' other current assets ', 40), ('other assets ', 37), (' other financial assets ', 34), (' prepayments ', 27)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables ', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables ', 26), (' prepayments ', 13)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = total current a sse ts , res_fuzz_match = [(' other current assets ', 56), (' other current financial assets ', 50), ('other assets ', 43), (' trade and other receivables ', 36), (' other financial assets ', 33), (' prepayments ', 26)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 53), (' other financial assets ', 53), (' other current financial assets ', 48), (' trade and other receivables ', 43), (' prepayments ', 19)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade and other receivables ', 43), (' other current assets ', 42), (' other financial assets ', 42), ('other assets ', 40), (' other current financial assets ', 39), (' prepayments ', 20)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets ', 54), (' other current assets ', 53), (' other financial assets ', 47), (' other current financial assets ', 43), (' trade and other receivables ', 32), (' prepayments ', 10)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = total non-current a sse ts , res_fuzz_match = [(' other current assets ', 44), ('other assets ', 43), (' trade and other receivables ', 41), (' other current financial assets ', 36), (' other financial assets ', 33), (' prepayments ', 26)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 5420.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['11'], 'line_item_value': [5420.0]}
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:56+0530 - sLogger - DEBUG - keywords = ['current ', ' prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current trade receivables , res_fuzz_match = [('current ', 100), (' other receivables and prepayments ', 46), (' prepaid expenditure ', 44), (' prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' other prepayments ', 42), (' charges paid in advance', 41), (' prepayments ', 33), (' in advance ', 33)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current ', 0), (' prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current less: allowance for impairment , res_fuzz_match = [('current ', 100), (' prepaid ', 43), (' prepaid ', 43), (' other prepayments ', 42), (' other receivables and prepayments ', 39), (' prepaid expense ', 36), (' charges paid in advance', 35), (' prepayments ', 33), (' prepaid expenditure ', 28), (' in advance ', 17)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current ', 0), (' prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current other receivables and prepayments , res_fuzz_match = [('current ', 100), (' prepayments ', 100), (' other receivables and prepayments ', 100), (' prepaid ', 77), (' prepaid ', 77), (' other prepayments ', 67), (' in advance ', 50), (' prepaid expense ', 43), (' charges paid in advance', 41), (' prepaid expenditure ', 39)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current ', 0), (' prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [('current ', 100), (' other receivables and prepayments ', 38), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 31), (' prepaid ', 29), (' prepaid ', 29), (' prepaid expense ', 23), (' prepaid expenditure ', 23), (' in advance ', 17)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current ', 0), (' prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current trade receivables , res_fuzz_match = [('current ', 100), (' other receivables and prepayments ', 46), (' prepaid expenditure ', 44), (' prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' other prepayments ', 42), (' charges paid in advance', 41), (' prepayments ', 33), (' in advance ', 33)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current ', 0), (' prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current less: allowance for impairment , res_fuzz_match = [('current ', 100), (' prepaid ', 43), (' prepaid ', 43), (' other prepayments ', 42), (' other receivables and prepayments ', 39), (' prepaid expense ', 36), (' charges paid in advance', 35), (' prepayments ', 33), (' prepaid expenditure ', 28), (' in advance ', 17)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current ', 0), (' prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current other receivables and prepayments , res_fuzz_match = [('current ', 100), (' prepayments ', 100), (' other receivables and prepayments ', 100), (' prepaid ', 77), (' prepaid ', 77), (' other prepayments ', 67), (' in advance ', 50), (' prepaid expense ', 43), (' charges paid in advance', 41), (' prepaid expenditure ', 39)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current ', 0), (' prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [('current ', 100), (' other receivables and prepayments ', 38), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 31), (' prepaid ', 29), (' prepaid ', 29), (' prepaid expense ', 23), (' prepaid expenditure ', 23), (' in advance ', 17)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current ', 0), (' prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [4827.0, -110.0, 703.0, 5420.0, 3222.0, -105.0, 887.0, 4004.0], 'label': ['Current Trade receivables', 'Current Less: Allowance for impairment', 'Current Other receivables and prepayments', 'Current Total', 'Current Trade receivables', 'Current Less: Allowance for impairment', 'Current Other receivables and prepayments', 'Current Total'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-25 12:24:56+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables ', ' Restricted deposits ', ' Capitalised contract cost ', ' Income tax refund due ', ' Other investment including derivatives ', ' Income tax receivable']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments ', ' Capitalised contract cost ', ' Debtors retention ', ' Prepaid subscription ', ' Income tax refund due ', ' Fuel tax credits ', ' GST receivable ', ' Deposits ', ' Intercompany receivable ', ' Accrued income ', ' accrued interest receivable ', ' other receivables ', ' Forward exchange contracts used for hedging keyword']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:56+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables ', ' Restricted deposits ', ' Capitalised contract cost ', ' Income tax refund due ', ' Other investment including derivatives ', ' Income tax receivable'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' Restricted deposits ', 29), (' Capitalised contract cost ', 29), (' trade and other receivables ', 22), (' Income tax receivable', 19), (' income tax receivable from related parties ', 16), (' Income tax refund due ', 16), (' deferred operating expenditure ', 15), (' Other investment including derivatives ', 13)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables ', 51), (' Income tax receivable', 43), (' biological assets ', 36), (' financial assets ', 35), (' Income tax refund due ', 34), (' income tax receivable from related parties ', 33), (' Capitalised contract cost ', 32), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' Other investment including derivatives ', 30), (' Restricted deposits ', 27), (' deferred operating expenditure ', 19)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = restricted deposits , res_fuzz_match = [(' Restricted deposits ', 100), (' deferred operating expenditure ', 43), (' trade and other receivables ', 42), (' Capitalised contract cost ', 41), ('other current assets ', 40), (' Income tax refund due ', 39), (' Other investment including derivatives ', 39), (' Income tax receivable', 38), (' other assets ', 37), (' financial assets ', 34), (' other financial assets ', 34), (' income tax receivable from related parties ', 33), (' biological assets ', 29)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables ', 100), (' Income tax receivable', 63), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' Income tax refund due ', 43), (' Other investment including derivatives ', 43), (' other assets ', 42), (' Restricted deposits ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' Capitalised contract cost ', 36), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' Other investment including derivatives ', 41), (' other assets ', 40), (' Restricted deposits ', 40), (' Income tax receivable', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' Income tax refund due ', 34), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables ', 26), (' Capitalised contract cost ', 25), (' income tax receivable from related parties ', 24)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = total current a sse ts , res_fuzz_match = [('other current assets ', 56), (' other assets ', 43), (' Income tax refund due ', 43), (' Income tax receivable', 42), (' biological assets ', 41), (' income tax receivable from related parties ', 36), (' trade and other receivables ', 36), (' Restricted deposits ', 36), (' Capitalised contract cost ', 35), (' financial assets ', 33), (' other financial assets ', 33), (' Other investment including derivatives ', 33), (' deferred operating expenditure ', 32)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' other assets ', 62), (' financial assets ', 57), ('other current assets ', 53), (' other financial assets ', 53), (' Income tax refund due ', 46), (' Income tax receivable', 45), (' biological assets ', 44), (' trade and other receivables ', 43), (' income tax receivable from related parties ', 42), (' deferred operating expenditure ', 39), (' Restricted deposits ', 39), (' Capitalised contract cost ', 32), (' Other investment including derivatives ', 30)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure ', 49), (' Restricted deposits ', 45), (' Other investment including derivatives ', 45), (' trade and other receivables ', 43), ('other current assets ', 42), (' other financial assets ', 42), (' other assets ', 40), (' income tax receivable from related parties ', 39), (' Income tax refund due ', 36), (' Capitalised contract cost ', 34), (' financial assets ', 32), (' Income tax receivable', 30), (' biological assets ', 28)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets ', 59), (' other assets ', 54), ('other current assets ', 53), (' financial assets ', 50), (' other financial assets ', 47), (' Restricted deposits ', 39), (' Capitalised contract cost ', 37), (' Income tax refund due ', 34), (' trade and other receivables ', 32), (' deferred operating expenditure ', 28), (' Income tax receivable', 26), (' income tax receivable from related parties ', 25), (' Other investment including derivatives ', 25)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = total non-current a sse ts , res_fuzz_match = [('other current assets ', 44), (' other assets ', 43), (' Income tax receivable', 42), (' biological assets ', 41), (' trade and other receivables ', 41), (' income tax receivable from related parties ', 40), (' Income tax refund due ', 38), (' Other investment including derivatives ', 38), (' financial assets ', 33), (' other financial assets ', 33), (' Restricted deposits ', 30), (' Capitalised contract cost ', 30), (' deferred operating expenditure ', 26)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3], 'score': 100, 'value': 4657.0, 'line_item_label': ['Restricted deposits', 'Trade and other receivables'], 'note_numbers': [nan, '11'], 'line_item_value': [653.0, 4004.0]}
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:56+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables ', ' Restricted deposits ', ' Capitalised contract cost ', ' Income tax refund due ', ' Other investment including derivatives ', ' Income tax receivable'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' Restricted deposits ', 29), (' Capitalised contract cost ', 29), (' trade and other receivables ', 22), (' Income tax receivable', 19), (' income tax receivable from related parties ', 16), (' Income tax refund due ', 16), (' deferred operating expenditure ', 15), (' Other investment including derivatives ', 13)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables ', 51), (' Income tax receivable', 43), (' biological assets ', 36), (' financial assets ', 35), (' Income tax refund due ', 34), (' income tax receivable from related parties ', 33), (' Capitalised contract cost ', 32), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' Other investment including derivatives ', 30), (' Restricted deposits ', 27), (' deferred operating expenditure ', 19)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = restricted deposits , res_fuzz_match = [(' Restricted deposits ', 100), (' deferred operating expenditure ', 43), (' trade and other receivables ', 42), (' Capitalised contract cost ', 41), ('other current assets ', 40), (' Income tax refund due ', 39), (' Other investment including derivatives ', 39), (' Income tax receivable', 38), (' other assets ', 37), (' financial assets ', 34), (' other financial assets ', 34), (' income tax receivable from related parties ', 33), (' biological assets ', 29)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables ', 100), (' Income tax receivable', 63), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' Income tax refund due ', 43), (' Other investment including derivatives ', 43), (' other assets ', 42), (' Restricted deposits ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' Capitalised contract cost ', 36), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' Other investment including derivatives ', 41), (' other assets ', 40), (' Restricted deposits ', 40), (' Income tax receivable', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' Income tax refund due ', 34), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables ', 26), (' Capitalised contract cost ', 25), (' income tax receivable from related parties ', 24)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = total current a sse ts , res_fuzz_match = [('other current assets ', 56), (' other assets ', 43), (' Income tax refund due ', 43), (' Income tax receivable', 42), (' biological assets ', 41), (' income tax receivable from related parties ', 36), (' trade and other receivables ', 36), (' Restricted deposits ', 36), (' Capitalised contract cost ', 35), (' financial assets ', 33), (' other financial assets ', 33), (' Other investment including derivatives ', 33), (' deferred operating expenditure ', 32)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' other assets ', 62), (' financial assets ', 57), ('other current assets ', 53), (' other financial assets ', 53), (' Income tax refund due ', 46), (' Income tax receivable', 45), (' biological assets ', 44), (' trade and other receivables ', 43), (' income tax receivable from related parties ', 42), (' deferred operating expenditure ', 39), (' Restricted deposits ', 39), (' Capitalised contract cost ', 32), (' Other investment including derivatives ', 30)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure ', 49), (' Restricted deposits ', 45), (' Other investment including derivatives ', 45), (' trade and other receivables ', 43), ('other current assets ', 42), (' other financial assets ', 42), (' other assets ', 40), (' income tax receivable from related parties ', 39), (' Income tax refund due ', 36), (' Capitalised contract cost ', 34), (' financial assets ', 32), (' Income tax receivable', 30), (' biological assets ', 28)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets ', 59), (' other assets ', 54), ('other current assets ', 53), (' financial assets ', 50), (' other financial assets ', 47), (' Restricted deposits ', 39), (' Capitalised contract cost ', 37), (' Income tax refund due ', 34), (' trade and other receivables ', 32), (' deferred operating expenditure ', 28), (' Income tax receivable', 26), (' income tax receivable from related parties ', 25), (' Other investment including derivatives ', 25)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_particular = total non-current a sse ts , res_fuzz_match = [('other current assets ', 44), (' other assets ', 43), (' Income tax receivable', 42), (' biological assets ', 41), (' trade and other receivables ', 41), (' income tax receivable from related parties ', 40), (' Income tax refund due ', 38), (' Other investment including derivatives ', 38), (' financial assets ', 33), (' other financial assets ', 33), (' Restricted deposits ', 30), (' Capitalised contract cost ', 30), (' deferred operating expenditure ', 26)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3], 'score': 100, 'value': 6075.0, 'line_item_label': ['Restricted deposits', 'Trade and other receivables'], 'note_numbers': [nan, '11'], 'line_item_value': [655.0, 5420.0]}
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:56+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments ', ' Capitalised contract cost ', ' Debtors retention ', ' Prepaid subscription ', ' Income tax refund due ', ' Fuel tax credits ', ' GST receivable ', ' Deposits ', ' Intercompany receivable ', ' Accrued income ', ' accrued interest receivable ', ' other receivables ', ' Forward exchange contracts used for hedging keyword'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current trade receivables , res_fuzz_match = [('current', 100), (' other receivables ', 75), (' interest receivable', 73), (' GST receivable ', 70), (' related party receivable', 67), (' accrued interest receivable ', 67), (' current investments', 64), (' Intercompany receivable ', 58), (' income tax receivable from related parties', 55), (' other deposits receivable - related party', 55), (' rental bond', 55), (' Fuel tax credits ', 53), (' long service leave receivable', 51), ('foreign exchange derivatives at fair value', 50), (' amount receivable from controlling entity', 50), (' other debtors and prepayments ', 46), (' Debtors retention ', 46), (' other receivables - related party', 45), (' accrued rebates', 45), (' Forward exchange contracts used for hedging keyword', 45), (' Income tax refund due ', 44), (' accrued interest', 43), (' condensate', 43), (' share of jv prepayments', 42), (' Prepaid subscription ', 41), (' electricity derivatives at fair value', 40), (' other', 40), (' derivative contracts - fair value', 40), (' foreign exchange forward contracts', 40), (' forward exchange contracts', 40), (' Capitalised contract cost ', 40), (' bank guarantee', 38), ('other assets', 36), (' related party disclosures', 35), (' lng', 33), (' deposits', 29), (' Deposits ', 29), (' Accrued income ', 27)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments ', 0), (' Capitalised contract cost ', 0), (' Debtors retention ', 0), (' Prepaid subscription ', 0), (' Income tax refund due ', 0), (' Fuel tax credits ', 0), (' GST receivable ', 0), (' Deposits ', 0), (' Intercompany receivable ', 0), (' Accrued income ', 0), (' accrued interest receivable ', 0), (' other receivables ', 0), (' Forward exchange contracts used for hedging keyword', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current less: allowance for impairment , res_fuzz_match = [('current', 100), (' current investments', 71), (' rental bond', 55), (' accrued rebates', 45), (' accrued interest', 43), (' condensate', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 41), (' income tax receivable from related parties', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' other debtors and prepayments ', 39), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' Forward exchange contracts used for hedging keyword', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' Accrued income ', 36), (' long service leave receivable', 35), (' Capitalised contract cost ', 35), (' Prepaid subscription ', 35), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' forward exchange contracts', 33), (' Fuel tax credits ', 33), (' accrued interest receivable ', 33), (' other receivables ', 33), (' Intercompany receivable ', 32), (' bank guarantee', 31), (' Debtors retention ', 31), (' Income tax refund due ', 30), (' GST receivable ', 30), (' deposits', 29), (' Deposits ', 29)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments ', 0), (' Capitalised contract cost ', 0), (' Debtors retention ', 0), (' Prepaid subscription ', 0), (' Income tax refund due ', 0), (' Fuel tax credits ', 0), (' GST receivable ', 0), (' Deposits ', 0), (' Intercompany receivable ', 0), (' Accrued income ', 0), (' accrued interest receivable ', 0), (' other receivables ', 0), (' Forward exchange contracts used for hedging keyword', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current other receivables and prepayments , res_fuzz_match = [('current', 100), (' other', 100), (' other receivables ', 100), (' other debtors and prepayments ', 78), (' interest receivable', 73), (' other receivables - related party', 72), (' GST receivable ', 70), (' related party receivable', 67), (' share of jv prepayments', 67), ('other assets', 64), (' current investments', 64), (' accrued interest receivable ', 62), (' Intercompany receivable ', 58), (' other deposits receivable - related party', 55), (' rental bond', 55), (' Debtors retention ', 54), (' income tax receivable from related parties', 52), (' long service leave receivable', 48), (' Fuel tax credits ', 47), (' electricity derivatives at fair value', 45), (' amount receivable from controlling entity', 45), (' accrued rebates', 45), (' Income tax refund due ', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' forward exchange contracts', 43), (' Deposits ', 43), ('foreign exchange derivatives at fair value', 42), (' Forward exchange contracts used for hedging keyword', 42), (' Prepaid subscription ', 41), (' foreign exchange forward contracts', 39), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' bank guarantee', 38), (' Accrued income ', 36), (' Capitalised contract cost ', 35), (' lng', 33)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments ', 0), (' Capitalised contract cost ', 0), (' Debtors retention ', 0), (' Prepaid subscription ', 0), (' Income tax refund due ', 0), (' Fuel tax credits ', 0), (' GST receivable ', 0), (' Deposits ', 0), (' Intercompany receivable ', 0), (' Accrued income ', 0), (' accrued interest receivable ', 0), (' other receivables ', 0), (' Forward exchange contracts used for hedging keyword', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [('current', 100), (' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' Capitalised contract cost ', 46), (' Forward exchange contracts used for hedging keyword', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), (' Debtors retention ', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments ', 38), (' Fuel tax credits ', 38), (' accrued interest receivable ', 38), (' Accrued income ', 36), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' Income tax refund due ', 31), (' deposits', 29), (' Deposits ', 29), ('other assets', 27), (' other receivables ', 25), (' long service leave receivable', 23), (' related party receivable', 23), (' Prepaid subscription ', 23), (' Intercompany receivable ', 23), (' GST receivable ', 21)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments ', 0), (' Capitalised contract cost ', 0), (' Debtors retention ', 0), (' Prepaid subscription ', 0), (' Income tax refund due ', 0), (' Fuel tax credits ', 0), (' GST receivable ', 0), (' Deposits ', 0), (' Intercompany receivable ', 0), (' Accrued income ', 0), (' accrued interest receivable ', 0), (' other receivables ', 0), (' Forward exchange contracts used for hedging keyword', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current trade receivables , res_fuzz_match = [('current', 100), (' other receivables ', 75), (' interest receivable', 73), (' GST receivable ', 70), (' related party receivable', 67), (' accrued interest receivable ', 67), (' current investments', 64), (' Intercompany receivable ', 58), (' income tax receivable from related parties', 55), (' other deposits receivable - related party', 55), (' rental bond', 55), (' Fuel tax credits ', 53), (' long service leave receivable', 51), ('foreign exchange derivatives at fair value', 50), (' amount receivable from controlling entity', 50), (' other debtors and prepayments ', 46), (' Debtors retention ', 46), (' other receivables - related party', 45), (' accrued rebates', 45), (' Forward exchange contracts used for hedging keyword', 45), (' Income tax refund due ', 44), (' accrued interest', 43), (' condensate', 43), (' share of jv prepayments', 42), (' Prepaid subscription ', 41), (' electricity derivatives at fair value', 40), (' other', 40), (' derivative contracts - fair value', 40), (' foreign exchange forward contracts', 40), (' forward exchange contracts', 40), (' Capitalised contract cost ', 40), (' bank guarantee', 38), ('other assets', 36), (' related party disclosures', 35), (' lng', 33), (' deposits', 29), (' Deposits ', 29), (' Accrued income ', 27)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments ', 0), (' Capitalised contract cost ', 0), (' Debtors retention ', 0), (' Prepaid subscription ', 0), (' Income tax refund due ', 0), (' Fuel tax credits ', 0), (' GST receivable ', 0), (' Deposits ', 0), (' Intercompany receivable ', 0), (' Accrued income ', 0), (' accrued interest receivable ', 0), (' other receivables ', 0), (' Forward exchange contracts used for hedging keyword', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current less: allowance for impairment , res_fuzz_match = [('current', 100), (' current investments', 71), (' rental bond', 55), (' accrued rebates', 45), (' accrued interest', 43), (' condensate', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 41), (' income tax receivable from related parties', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' other debtors and prepayments ', 39), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' Forward exchange contracts used for hedging keyword', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' Accrued income ', 36), (' long service leave receivable', 35), (' Capitalised contract cost ', 35), (' Prepaid subscription ', 35), (' interest receivable', 33), (' related party receivable', 33), (' lng', 33), (' forward exchange contracts', 33), (' Fuel tax credits ', 33), (' accrued interest receivable ', 33), (' other receivables ', 33), (' Intercompany receivable ', 32), (' bank guarantee', 31), (' Debtors retention ', 31), (' Income tax refund due ', 30), (' GST receivable ', 30), (' deposits', 29), (' Deposits ', 29)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments ', 0), (' Capitalised contract cost ', 0), (' Debtors retention ', 0), (' Prepaid subscription ', 0), (' Income tax refund due ', 0), (' Fuel tax credits ', 0), (' GST receivable ', 0), (' Deposits ', 0), (' Intercompany receivable ', 0), (' Accrued income ', 0), (' accrued interest receivable ', 0), (' other receivables ', 0), (' Forward exchange contracts used for hedging keyword', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current other receivables and prepayments , res_fuzz_match = [('current', 100), (' other', 100), (' other receivables ', 100), (' other debtors and prepayments ', 78), (' interest receivable', 73), (' other receivables - related party', 72), (' GST receivable ', 70), (' related party receivable', 67), (' share of jv prepayments', 67), ('other assets', 64), (' current investments', 64), (' accrued interest receivable ', 62), (' Intercompany receivable ', 58), (' other deposits receivable - related party', 55), (' rental bond', 55), (' Debtors retention ', 54), (' income tax receivable from related parties', 52), (' long service leave receivable', 48), (' Fuel tax credits ', 47), (' electricity derivatives at fair value', 45), (' amount receivable from controlling entity', 45), (' accrued rebates', 45), (' Income tax refund due ', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' forward exchange contracts', 43), (' Deposits ', 43), ('foreign exchange derivatives at fair value', 42), (' Forward exchange contracts used for hedging keyword', 42), (' Prepaid subscription ', 41), (' foreign exchange forward contracts', 39), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' bank guarantee', 38), (' Accrued income ', 36), (' Capitalised contract cost ', 35), (' lng', 33)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments ', 0), (' Capitalised contract cost ', 0), (' Debtors retention ', 0), (' Prepaid subscription ', 0), (' Income tax refund due ', 0), (' Fuel tax credits ', 0), (' GST receivable ', 0), (' Deposits ', 0), (' Intercompany receivable ', 0), (' Accrued income ', 0), (' accrued interest receivable ', 0), (' other receivables ', 0), (' Forward exchange contracts used for hedging keyword', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [('current', 100), (' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' Capitalised contract cost ', 46), (' Forward exchange contracts used for hedging keyword', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), (' Debtors retention ', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments ', 38), (' Fuel tax credits ', 38), (' accrued interest receivable ', 38), (' Accrued income ', 36), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' Income tax refund due ', 31), (' deposits', 29), (' Deposits ', 29), ('other assets', 27), (' other receivables ', 25), (' long service leave receivable', 23), (' related party receivable', 23), (' Prepaid subscription ', 23), (' Intercompany receivable ', 23), (' GST receivable ', 21)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('current', 0), ('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments ', 0), (' Capitalised contract cost ', 0), (' Debtors retention ', 0), (' Prepaid subscription ', 0), (' Income tax refund due ', 0), (' Fuel tax credits ', 0), (' GST receivable ', 0), (' Deposits ', 0), (' Intercompany receivable ', 0), (' Accrued income ', 0), (' accrued interest receivable ', 0), (' other receivables ', 0), (' Forward exchange contracts used for hedging keyword', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [4827.0, -110.0, 703.0, 5420.0, 3222.0, -105.0, 887.0, 4004.0], 'label': ['Current Trade receivables', 'Current Less: Allowance for impairment', 'Current Other receivables and prepayments', 'Current Total', 'Current Trade receivables', 'Current Less: Allowance for impairment', 'Current Other receivables and prepayments', 'Current Total'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:56+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current trade receivables , res_fuzz_match = [(' ', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current less: allowance for impairment , res_fuzz_match = [(' ', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current other receivables and prepayments , res_fuzz_match = [(' ', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current trade receivables , res_fuzz_match = [(' ', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current less: allowance for impairment , res_fuzz_match = [(' ', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current other receivables and prepayments , res_fuzz_match = [(' ', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100)]
2023-08-25 12:24:56+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [4827.0, -110.0, 703.0, 5420.0, 3222.0, -105.0, 887.0, 4004.0], 'label': ["$'000", "$'000", "$'000", "$'000", "$'000", "$'000", "$'000", "$'000"], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-25 12:24:56+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-25 12:24:56+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-25 12:24:56+0530 - sLogger - ERROR - error occured: can only concatenate str (not "int") to str
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-25 12:24:56+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-25 12:24:56+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment ']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['depreciation', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:56+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:56+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:56+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:56+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['construction in progress ', ' work in progress ', ' capital works in progress']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:56+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:56+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:56+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:56+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:56+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:56+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:56+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-25 12:24:56+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['Other intangibles ', ' development and software ', ' goodwill ', ' software ', ' carrying amounts ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method ', ' Other investment including derivatives']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year ', ' Interest swap']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method ', ' Other investment including derivatives'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method ', ' Other investment including derivatives'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: calculate_other_non_current_assets
2023-08-25 12:24:57+0530 - sLogger - ERROR - error occured: 2022
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash ', ' Lease obligation ']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft ', ' current ', ' obligations under finance lease ', ' bank loans']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash ', ' Lease obligation '] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' Lease obligation ', 50), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' cash ', 20), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' Lease obligation ', 31), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15), (' cash ', 15)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' Lease obligation ', 24), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' borrowings ', 19), (' cash ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = current tax payables , res_fuzz_match = [(' interest bearing liabilites ', 45), (' lease liabilities ', 34), (' cash and cash equivalents ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' Lease obligation ', 29), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' cash ', 18), (' borrowings ', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' Lease obligation ', 25), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [(' Lease obligation ', 100), (' lease liabilities ', 67), ('  leases ', 57), (' interest bearing liabilites ', 44), (' loans and borrowings ', 32), (' cash ', 29), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), ('short term debt ', 24), (' shortterm borrowings ', 15), (' borrowings ', 12)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 1723.0, 'line_item_label': ['Lease obligation'], 'note_numbers': [nan], 'line_item_value': [1723.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash ', ' Lease obligation '] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' Lease obligation ', 50), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' cash ', 20), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' Lease obligation ', 31), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15), (' cash ', 15)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' Lease obligation ', 24), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' borrowings ', 19), (' cash ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = current tax payables , res_fuzz_match = [(' interest bearing liabilites ', 45), (' lease liabilities ', 34), (' cash and cash equivalents ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' Lease obligation ', 29), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' cash ', 18), (' borrowings ', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' Lease obligation ', 25), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [(' Lease obligation ', 100), (' lease liabilities ', 67), ('  leases ', 57), (' interest bearing liabilites ', 44), (' loans and borrowings ', 32), (' cash ', 29), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), ('short term debt ', 24), (' shortterm borrowings ', 15), (' borrowings ', 12)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 1988.0, 'line_item_label': ['Lease obligation'], 'note_numbers': [nan], 'line_item_value': [1988.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = current tax payables , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = current tax payables , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = current tax payables , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = current tax payables , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'trade payable', 'other trade payables']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', ' payables ', ' accounts payable - trade ', ' ', ' Related party payables ', ' trade payables - related parties ', ' Trade payable due to related partiees']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = current tax payables , res_fuzz_match = [('other trade payables', 61), ('trade and other payables', 60), ('trade payable', 60)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [('trade and other payables', 31), ('other trade payables', 29), ('trade payable', 27)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 2028.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [2028.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = current tax payables , res_fuzz_match = [('other trade payables', 61), ('trade and other payables', 60), ('trade payable', 60)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [('trade and other payables', 31), ('other trade payables', 29), ('trade payable', 27)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 3017.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [3017.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', ' payables ', ' accounts payable - trade ', ' ', ' Related party payables ', ' trade payables - related parties ', ' Trade payable due to related partiees'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none trade payables due to related parties , res_fuzz_match = [(' trade payables ', 100), (' payables ', 100), (' Trade payable due to related partiees', 98), (' other trade payables ', 83), (' trade payables - related parties ', 83), (' payables to related parties ', 78), (' trade payables - other parties ', 71), (' Related party payables ', 63), (' trade and other payables ', 55), (' accounts payable - trade ', 55), ('trade creditors ', 50), (' amounts payable to controlling entity ', 50), (' ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100), ('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), (' payables ', 0), (' accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties ', 0), (' Trade payable due to related partiees', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none other trade payables and accrued expenses , res_fuzz_match = [(' trade payables ', 100), (' other trade payables ', 100), (' payables ', 100), (' trade payables - related parties ', 71), (' trade payables - other parties ', 67), (' Trade payable due to related partiees', 66), (' payables to related parties ', 61), (' Related party payables ', 56), (' trade and other payables ', 55), (' accounts payable - trade ', 55), (' amounts payable to controlling entity ', 50), ('trade creditors ', 43), (' ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100), ('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), (' payables ', 0), (' accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties ', 0), (' Trade payable due to related partiees', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none non-trade payables and accrued ex penses , res_fuzz_match = [(' payables ', 100), (' trade payables ', 92), (' other trade payables ', 78), (' trade payables - related parties ', 67), (' accounts payable - trade ', 65), (' Trade payable due to related partiees', 65), (' trade payables - other parties ', 62), (' payables to related parties ', 61), (' amounts payable to controlling entity ', 57), (' Related party payables ', 56), (' trade and other payables ', 50), ('trade creditors ', 43), (' ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100), ('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), (' payables ', 0), (' accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties ', 0), (' Trade payable due to related partiees', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' amounts payable to controlling entity ', 50), (' other trade payables ', 50), ('trade creditors ', 40), (' trade and other payables ', 40), (' trade payables ', 40), (' trade payables - other parties ', 40), (' accounts payable - trade ', 40), (' payables ', 33), (' payables to related parties ', 30), (' Related party payables ', 30), (' trade payables - related parties ', 30), (' Trade payable due to related partiees', 30), (' ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100), ('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), (' payables ', 0), (' accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties ', 0), (' Trade payable due to related partiees', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none trade payables due to related parties , res_fuzz_match = [(' trade payables ', 100), (' payables ', 100), (' Trade payable due to related partiees', 98), (' other trade payables ', 83), (' trade payables - related parties ', 83), (' payables to related parties ', 78), (' trade payables - other parties ', 71), (' Related party payables ', 63), (' trade and other payables ', 55), (' accounts payable - trade ', 55), ('trade creditors ', 50), (' amounts payable to controlling entity ', 50), (' ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100), ('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), (' payables ', 0), (' accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties ', 0), (' Trade payable due to related partiees', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none other trade payables and accrued expenses , res_fuzz_match = [(' trade payables ', 100), (' other trade payables ', 100), (' payables ', 100), (' trade payables - related parties ', 71), (' trade payables - other parties ', 67), (' Trade payable due to related partiees', 66), (' payables to related parties ', 61), (' Related party payables ', 56), (' trade and other payables ', 55), (' accounts payable - trade ', 55), (' amounts payable to controlling entity ', 50), ('trade creditors ', 43), (' ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100), ('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), (' payables ', 0), (' accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties ', 0), (' Trade payable due to related partiees', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none non-trade payables and accrued ex penses , res_fuzz_match = [(' payables ', 100), (' trade payables ', 92), (' other trade payables ', 78), (' trade payables - related parties ', 67), (' accounts payable - trade ', 65), (' Trade payable due to related partiees', 65), (' trade payables - other parties ', 62), (' payables to related parties ', 61), (' amounts payable to controlling entity ', 57), (' Related party payables ', 56), (' trade and other payables ', 50), ('trade creditors ', 43), (' ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100), ('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), (' payables ', 0), (' accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties ', 0), (' Trade payable due to related partiees', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' amounts payable to controlling entity ', 50), (' other trade payables ', 50), ('trade creditors ', 40), (' trade and other payables ', 40), (' trade payables ', 40), (' trade payables - other parties ', 40), (' accounts payable - trade ', 40), (' payables ', 33), (' payables to related parties ', 30), (' Related party payables ', 30), (' trade payables - related parties ', 30), (' Trade payable due to related partiees', 30), (' ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [(' ', 100), ('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), (' payables ', 0), (' accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties ', 0), (' Trade payable due to related partiees', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 0, 1, 1, 2, 2, 3, 4, 4, 5, 5, 6, 6, 7], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [1538.0, 1538.0, 641.0, 641.0, 838.0, 838.0, 3017.0, 711.0, 711.0, 758.0, 758.0, 559.0, 559.0, 2028.0], 'label': ['None Trade payables due to related parties', "$'000", 'None Other trade payables and accrued expenses', "$'000", 'None Non-trade payables and accrued ex penses', "$'000", "$'000", 'None Trade payables due to related parties', "$'000", 'None Other trade payables and accrued expenses', "$'000", 'None Non-trade payables and accrued ex penses', "$'000", "$'000"], 'year': [], 'colname_found': ['rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns']}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-25 12:24:57+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses ', ' interest accrued ', ' accruals']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = current tax payables , res_fuzz_match = [('trade and other payables', 60)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [('trade and other payables', 31)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 2028.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [2028.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = current tax payables , res_fuzz_match = [('trade and other payables', 60)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [('trade and other payables', 31)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 3017.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [3017.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['accrued expenses ', ' interest accrued ', ' accruals'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none trade payables due to related parties , res_fuzz_match = [(' interest accrued ', 50), ('accrued expenses ', 33), (' accruals', 29)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued ', 0), (' accruals', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none other trade payables and accrued expenses , res_fuzz_match = [('accrued expenses ', 100), (' accruals', 71), (' interest accrued ', 50)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued ', 0), (' accruals', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none non-trade payables and accrued ex penses , res_fuzz_match = [('accrued expenses ', 91), (' accruals', 71), (' interest accrued ', 50)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued ', 0), (' accruals', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' interest accrued ', 40), (' accruals', 29), ('accrued expenses ', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued ', 0), (' accruals', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none trade payables due to related parties , res_fuzz_match = [(' interest accrued ', 50), ('accrued expenses ', 33), (' accruals', 29)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued ', 0), (' accruals', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none other trade payables and accrued expenses , res_fuzz_match = [('accrued expenses ', 100), (' accruals', 71), (' interest accrued ', 50)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued ', 0), (' accruals', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none non-trade payables and accrued ex penses , res_fuzz_match = [('accrued expenses ', 91), (' accruals', 71), (' interest accrued ', 50)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued ', 0), (' accruals', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' interest accrued ', 40), (' accruals', 29), ('accrued expenses ', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued ', 0), (' accruals', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2, 5, 6], 'score': [100, 91, 100, 91], 'value': [641.0, 838.0, 758.0, 559.0], 'label': ['None Other trade payables and accrued expenses', 'None Non-trade payables and accrued ex penses', 'None Other trade payables and accrued expenses', 'None Non-trade payables and accrued ex penses'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-25 12:24:57+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision ', ' Current tax payables ', ' Trade and other payables']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision ', ' Current tax payables ', ' Trade and other payables'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' Current tax payables ', 50), (' Trade and other payables', 50), (' tax ', 33), (' provision ', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' Trade and other payables', 100), (' tax ', 67), (' income tax payable ', 62), (' Current tax payables ', 61), ('current tax liabilities ', 44), (' provision ', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision ', 33), ('current tax liabilities ', 27), (' income tax payable ', 27), (' Current tax payables ', 27), (' Trade and other payables', 27)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = current tax payables , res_fuzz_match = [(' tax ', 100), (' Current tax payables ', 100), ('current tax liabilities ', 83), (' income tax payable ', 75), (' Trade and other payables', 61), (' provision ', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision ', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' Current tax payables ', 17), (' Trade and other payables', 17), (' tax ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [('current tax liabilities ', 40), (' income tax payable ', 40), (' Current tax payables ', 40), (' Trade and other payables', 40), (' tax ', 33), (' provision ', 33)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 3, 4], 'score': 100, 'value': 3218.0, 'line_item_label': ['Liabilities', 'Trade and other payables', 'Current tax payables', 'Provisions'], 'note_numbers': [nan, '15', nan, '18'], 'line_item_value': [0.0, 2028.0, 224.0, 966.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision ', ' Current tax payables ', ' Trade and other payables'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' Current tax payables ', 50), (' Trade and other payables', 50), (' tax ', 33), (' provision ', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' Trade and other payables', 100), (' tax ', 67), (' income tax payable ', 62), (' Current tax payables ', 61), ('current tax liabilities ', 44), (' provision ', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision ', 33), ('current tax liabilities ', 27), (' income tax payable ', 27), (' Current tax payables ', 27), (' Trade and other payables', 27)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = current tax payables , res_fuzz_match = [(' tax ', 100), (' Current tax payables ', 100), ('current tax liabilities ', 83), (' income tax payable ', 75), (' Trade and other payables', 61), (' provision ', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision ', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' Current tax payables ', 17), (' Trade and other payables', 17), (' tax ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [('current tax liabilities ', 40), (' income tax payable ', 40), (' Current tax payables ', 40), (' Trade and other payables', 40), (' tax ', 33), (' provision ', 33)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 3, 4], 'score': 100, 'value': 4204.0, 'line_item_label': ['Liabilities', 'Trade and other payables', 'Current tax payables', 'Provisions'], 'note_numbers': [nan, '15', nan, '18'], 'line_item_value': [0.0, 3017.0, 291.0, 896.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none trade payables due to related parties , res_fuzz_match = [(' tax receivable/payable', 59), ('income tax (refundable)/payable ', 57), (' provision for income tax ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none other trade payables and accrued expenses , res_fuzz_match = [(' tax receivable/payable', 65), ('income tax (refundable)/payable ', 61), (' provision for income tax ', 30)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none non-trade payables and accrued ex penses , res_fuzz_match = [(' tax receivable/payable', 53), ('income tax (refundable)/payable ', 52), (' provision for income tax ', 30)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('income tax (refundable)/payable ', 50), (' provision for income tax ', 50), (' tax receivable/payable', 40)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none trade payables due to related parties , res_fuzz_match = [(' tax receivable/payable', 59), ('income tax (refundable)/payable ', 57), (' provision for income tax ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none other trade payables and accrued expenses , res_fuzz_match = [(' tax receivable/payable', 65), ('income tax (refundable)/payable ', 61), (' provision for income tax ', 30)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none non-trade payables and accrued ex penses , res_fuzz_match = [(' tax receivable/payable', 53), ('income tax (refundable)/payable ', 52), (' provision for income tax ', 30)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('income tax (refundable)/payable ', 50), (' provision for income tax ', 50), (' tax receivable/payable', 40)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none balance at 1 april 2022 , res_fuzz_match = [('income tax (refundable)/payable ', 41), (' provision for income tax ', 35), (' tax receivable/payable', 30)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [('income tax (refundable)/payable ', 38), (' tax receivable/payable', 38), (' provision for income tax ', 32)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none provisions made during the year , res_fuzz_match = [(' provision for income tax ', 50), (' tax receivable/payable', 47), ('income tax (refundable)/payable ', 41)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [('income tax (refundable)/payable ', 38), (' tax receivable/payable', 38), (' provision for income tax ', 32)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none provisions used during the year , res_fuzz_match = [(' provision for income tax ', 50), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [('income tax (refundable)/payable ', 38), (' tax receivable/payable', 38), (' provision for income tax ', 32)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none balance at 31 march 2023 , res_fuzz_match = [('income tax (refundable)/payable ', 35), (' provision for income tax ', 35), (' tax receivable/payable', 24)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [('income tax (refundable)/payable ', 38), (' tax receivable/payable', 38), (' provision for income tax ', 32)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none current , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax ', 33), (' tax receivable/payable', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [('income tax (refundable)/payable ', 38), (' tax receivable/payable', 38), (' provision for income tax ', 32)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none non-current , res_fuzz_match = [(' provision for income tax ', 42), ('income tax (refundable)/payable ', 33), (' tax receivable/payable', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [('income tax (refundable)/payable ', 38), (' tax receivable/payable', 38), (' provision for income tax ', 32)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('income tax (refundable)/payable ', 50), (' provision for income tax ', 50), (' tax receivable/payable', 40)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [('income tax (refundable)/payable ', 38), (' tax receivable/payable', 38), (' provision for income tax ', 32)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none balance at 1 april 2022 , res_fuzz_match = [('income tax (refundable)/payable ', 41), (' provision for income tax ', 35), (' tax receivable/payable', 30)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [('income tax (refundable)/payable ', 25), (' provision for income tax ', 25), (' tax receivable/payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none provisions made during the year , res_fuzz_match = [(' provision for income tax ', 50), (' tax receivable/payable', 47), ('income tax (refundable)/payable ', 41)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [('income tax (refundable)/payable ', 25), (' provision for income tax ', 25), (' tax receivable/payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none provisions used during the year , res_fuzz_match = [(' provision for income tax ', 50), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [('income tax (refundable)/payable ', 25), (' provision for income tax ', 25), (' tax receivable/payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none balance at 31 march 2023 , res_fuzz_match = [('income tax (refundable)/payable ', 35), (' provision for income tax ', 35), (' tax receivable/payable', 24)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [('income tax (refundable)/payable ', 25), (' provision for income tax ', 25), (' tax receivable/payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none current , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax ', 33), (' tax receivable/payable', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [('income tax (refundable)/payable ', 25), (' provision for income tax ', 25), (' tax receivable/payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none non-current , res_fuzz_match = [(' provision for income tax ', 42), ('income tax (refundable)/payable ', 33), (' tax receivable/payable', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [('income tax (refundable)/payable ', 25), (' provision for income tax ', 25), (' tax receivable/payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('income tax (refundable)/payable ', 50), (' provision for income tax ', 50), (' tax receivable/payable', 40)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [('income tax (refundable)/payable ', 25), (' provision for income tax ', 25), (' tax receivable/payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none balance at 1 april 2022 , res_fuzz_match = [('income tax (refundable)/payable ', 41), (' provision for income tax ', 35), (' tax receivable/payable', 30)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax ', 40), (' tax receivable/payable', 40)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none provisions made during the year , res_fuzz_match = [(' provision for income tax ', 50), (' tax receivable/payable', 47), ('income tax (refundable)/payable ', 41)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax ', 40), (' tax receivable/payable', 40)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none provisions used during the year , res_fuzz_match = [(' provision for income tax ', 50), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax ', 40), (' tax receivable/payable', 40)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none balance at 31 march 2023 , res_fuzz_match = [('income tax (refundable)/payable ', 35), (' provision for income tax ', 35), (' tax receivable/payable', 24)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax ', 40), (' tax receivable/payable', 40)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none current , res_fuzz_match = [('income tax (refundable)/payable ', 42), (' provision for income tax ', 33), (' tax receivable/payable', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax ', 40), (' tax receivable/payable', 40)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none non-current , res_fuzz_match = [(' provision for income tax ', 42), ('income tax (refundable)/payable ', 33), (' tax receivable/payable', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax ', 40), (' tax receivable/payable', 40)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('income tax (refundable)/payable ', 50), (' provision for income tax ', 50), (' tax receivable/payable', 40)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' provision for income tax ', 40), (' tax receivable/payable', 40)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-25 12:24:57+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability ', ' derivative liabilities ', ' Provision ', ' Contract Liabilities ', ' Derivative financial instruments ', ' Deferred income']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits ', ' Current- liability for annual leave ', ' current- liability for long service leave ', ' provision for annual and long service leave ', ' Trade payables ', ' accrued expenses ', ' Warranty and after sales service ', ' Employee entitlements ', ' service contracts ', ' others ', ' Forward currency contract ', ' Employee payables ', ' Stock and feright payables ', ' Deferred income ', ' GST Payable']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability ', ' derivative liabilities ', ' Provision ', ' Contract Liabilities ', ' Derivative financial instruments ', ' Deferred income'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' derivative liabilities ', 67), (' financial liabilities', 60), (' Contract Liabilities ', 57), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability ', 32), (' employee benefits', 29), (' trade and other payables', 21), (' Derivative financial instruments ', 20), ('provisions', 17), (' Provision ', 17), (' Deferred income', 12), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' derivative liabilities ', 41), (' Derivative financial instruments ', 39), (' Contract Liabilities ', 38), (' deferred revenue', 35), (' foreign exchange contract liability ', 34), (' financial liabilities', 33), (' employee benefits', 32), (' Deferred income', 24), (' customer deposits', 22), ('provisions', 14), (' Provision ', 14)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' Derivative financial instruments ', 31), (' Deferred income', 31), (' derivative liabilities ', 30), (' financial liabilities', 28), (' Contract Liabilities ', 27), (' foreign exchange contract liability ', 26), ('provisions', 19), (' Provision ', 19)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = current tax payables , res_fuzz_match = [('other current liabilities', 68), (' other current liabilities', 68), (' trade and other payables', 60), (' Contract Liabilities ', 42), (' customer deposits', 38), (' other financial liabilities', 37), (' foreign exchange contract liability ', 37), (' employee benefits', 36), (' derivative liabilities ', 33), (' financial liabilities', 31), (' deferred revenue', 27), (' Derivative financial instruments ', 24), (' Deferred income', 14), ('provisions', 8), (' Provision ', 8)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' Provision ', 100), (' derivative liabilities ', 33), (' customer deposits', 30), (' Derivative financial instruments ', 27), (' Deferred income', 24), (' deferred revenue', 22), (' employee benefits', 19), (' Contract Liabilities ', 19), (' foreign exchange contract liability ', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [(' derivative liabilities ', 36), (' financial liabilities', 33), (' customer deposits', 33), (' Contract Liabilities ', 32), (' trade and other payables', 31), (' foreign exchange contract liability ', 29), (' Deferred income', 29), ('other current liabilities', 27), (' other current liabilities', 27), (' other financial liabilities', 27), ('provisions', 25), (' Provision ', 25), (' employee benefits', 24), (' Derivative financial instruments ', 24), (' deferred revenue', 18)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2, 4], 'score': 100, 'value': 4068.0, 'line_item_label': ['Trade and other payables', 'Employee benefits', 'Provisions'], 'note_numbers': ['15', '16', '18'], 'line_item_value': [2028.0, 1074.0, 966.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability ', ' derivative liabilities ', ' Provision ', ' Contract Liabilities ', ' Derivative financial instruments ', ' Deferred income'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' derivative liabilities ', 67), (' financial liabilities', 60), (' Contract Liabilities ', 57), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability ', 32), (' employee benefits', 29), (' trade and other payables', 21), (' Derivative financial instruments ', 20), ('provisions', 17), (' Provision ', 17), (' Deferred income', 12), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' derivative liabilities ', 41), (' Derivative financial instruments ', 39), (' Contract Liabilities ', 38), (' deferred revenue', 35), (' foreign exchange contract liability ', 34), (' financial liabilities', 33), (' employee benefits', 32), (' Deferred income', 24), (' customer deposits', 22), ('provisions', 14), (' Provision ', 14)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' Derivative financial instruments ', 31), (' Deferred income', 31), (' derivative liabilities ', 30), (' financial liabilities', 28), (' Contract Liabilities ', 27), (' foreign exchange contract liability ', 26), ('provisions', 19), (' Provision ', 19)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = current tax payables , res_fuzz_match = [('other current liabilities', 68), (' other current liabilities', 68), (' trade and other payables', 60), (' Contract Liabilities ', 42), (' customer deposits', 38), (' other financial liabilities', 37), (' foreign exchange contract liability ', 37), (' employee benefits', 36), (' derivative liabilities ', 33), (' financial liabilities', 31), (' deferred revenue', 27), (' Derivative financial instruments ', 24), (' Deferred income', 14), ('provisions', 8), (' Provision ', 8)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' Provision ', 100), (' derivative liabilities ', 33), (' customer deposits', 30), (' Derivative financial instruments ', 27), (' Deferred income', 24), (' deferred revenue', 22), (' employee benefits', 19), (' Contract Liabilities ', 19), (' foreign exchange contract liability ', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [(' derivative liabilities ', 36), (' financial liabilities', 33), (' customer deposits', 33), (' Contract Liabilities ', 32), (' trade and other payables', 31), (' foreign exchange contract liability ', 29), (' Deferred income', 29), ('other current liabilities', 27), (' other current liabilities', 27), (' other financial liabilities', 27), ('provisions', 25), (' Provision ', 25), (' employee benefits', 24), (' Derivative financial instruments ', 24), (' deferred revenue', 18)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2, 4], 'score': 100, 'value': 5018.0, 'line_item_label': ['Trade and other payables', 'Employee benefits', 'Provisions'], 'note_numbers': ['15', '16', '18'], 'line_item_value': [3017.0, 1105.0, 896.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits ', ' Current- liability for annual leave ', ' current- liability for long service leave ', ' provision for annual and long service leave ', ' Trade payables ', ' accrued expenses ', ' Warranty and after sales service ', ' Employee entitlements ', ' service contracts ', ' others ', ' Forward currency contract ', ' Employee payables ', ' Stock and feright payables ', ' Deferred income ', ' GST Payable'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none trade payables due to related parties , res_fuzz_match = [(' Trade payables ', 100), (' rebates', 80), (' other related parties', 76), (' gst payables', 70), (' GST Payable', 70), (' loans from related party', 67), (' Employee payables ', 64), (' loan payable to relayed party under tax funding agreement', 61), (' gst payable and accruals', 59), (' contract liabilites - current', 52), (' warranty', 50), (' ultimate parent entity', 49), (' Stock and feright payables ', 46), (' employee benefits - payroll', 45), (' other creditors', 43), (' other creditors', 43), (' other creditors', 43), ('other creditors and accruals', 42), (' derivative contracts - at fair value', 42), (' provision for annual and long service leave ', 42), (' Forward currency contract ', 42), (' Warranty and after sales service ', 41), (' employee benefits - current', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' others ', 40), (' current - liability for annual and long service leave', 39), (' secured long-term bank loans', 38), (' make good provisions', 38), (' total current employee benefits ', 38), (' Current- liability for annual leave ', 37), (' provisions - current', 36), (' share of joint venture payables', 36), (' current- liability for long service leave ', 36), (' Employee entitlements ', 36), (' Deferred income ', 36), (' abandonment and decommissioning costs', 35), (' gst', 33), (' forward exchange contracts', 33), (' accrued expenses ', 33), (' service contracts ', 33), (' arising from service contracts', 32), (' provision for associate funding', 27)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none other trade payables and accrued expenses , res_fuzz_match = [(' other', 100), (' Trade payables ', 100), (' accrued expenses ', 100), (' others ', 100), (' gst payable and accruals', 77), (' gst payables', 70), (' GST Payable', 70), (' other related parties', 65), ('other creditors and accruals', 62), (' other creditors', 57), (' other creditors', 57), (' other creditors', 57), (' Employee payables ', 57), (' share of joint venture payables', 56), (' Stock and feright payables ', 54), (' secured long-term bank loans', 50), (' restructuring', 50), (' loans from related party', 48), (' loan payable to relayed party under tax funding agreement', 45), (' employee benefits - payroll', 45), (' contract liabilites - current', 44), (' Current- liability for annual leave ', 43), (' Warranty and after sales service ', 43), (' derivative contracts - at fair value', 42), (' provision for annual and long service leave ', 42), (' abandonment and decommissioning costs', 40), (' rebates', 40), (' service contracts ', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 38), (' forward exchange contracts', 38), (' warranty', 38), (' total current employee benefits ', 38), (' ultimate parent entity', 37), (' current- liability for long service leave ', 37), (' provisions - current', 36), (' provision for associate funding', 36), (' Employee entitlements ', 36), (' Deferred income ', 36), (' gst', 33), (' Forward currency contract ', 33), (' arising from service contracts', 32), (' make good provisions', 31), (' gst liabilities', 30)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none non-trade payables and accrued ex penses , res_fuzz_match = [(' Trade payables ', 92), (' accrued expenses ', 91), (' gst payable and accruals', 77), (' gst payables', 70), (' GST Payable', 70), (' Employee payables ', 57), ('other creditors and accruals', 54), (' share of joint venture payables', 52), (' secured long-term bank loans', 50), (' contract liabilites - current', 48), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 47), (' provision for annual and long service leave ', 47), (' service contracts ', 47), (' derivative contracts - at fair value', 46), (' Stock and feright payables ', 46), (' employee benefits - payroll', 45), (' current - liability for annual and long service leave', 44), (' loans from related party', 43), (' Current- liability for annual leave ', 43), (' forward exchange contracts', 42), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' Warranty and after sales service ', 40), (' others ', 40), (' employee benefits - current', 39), (' abandonment and decommissioning costs', 38), (' make good provisions', 38), (' warranty', 38), (' total current employee benefits ', 38), (' current- liability for long service leave ', 38), (' Forward currency contract ', 38), (' ultimate parent entity', 37), (' other creditors', 36), (' other creditors', 36), (' provisions - current', 36), (' provision for associate funding', 36), (' other creditors', 36), (' Deferred income ', 36), (' gst', 33), (' arising from service contracts', 32), (' restructuring', 30), (' Employee entitlements ', 29)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Employee entitlements ', 60), (' loan payable to relayed party under tax funding agreement', 50), (' contract liabilites - current', 50), (' abandonment and decommissioning costs', 50), (' forward exchange contracts', 50), (' Forward currency contract ', 50), (' Employee payables ', 50), ('other creditors and accruals', 40), (' ultimate parent entity', 40), (' other related parties', 40), (' derivative contracts - at fair value', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' rebates', 40), (' other', 40), (' Current- liability for annual leave ', 40), (' current- liability for long service leave ', 40), (' provision for annual and long service leave ', 40), (' Trade payables ', 40), (' Warranty and after sales service ', 40), (' service contracts ', 40), (' others ', 40), (' gst', 33), (' gst payables', 32), (' GST Payable', 32), (' other creditors', 30), (' other creditors', 30), (' employee benefits - current', 30), (' make good provisions', 30), (' gst liabilities', 30), (' other creditors', 30), (' restructuring', 30), (' total current employee benefits ', 30), (' Stock and feright payables ', 30), (' Deferred income ', 30), (' warranty', 25), (' provisions - current', 20), (' accrued expenses ', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none trade payables due to related parties , res_fuzz_match = [(' Trade payables ', 100), (' rebates', 80), (' other related parties', 76), (' gst payables', 70), (' GST Payable', 70), (' loans from related party', 67), (' Employee payables ', 64), (' loan payable to relayed party under tax funding agreement', 61), (' gst payable and accruals', 59), (' contract liabilites - current', 52), (' warranty', 50), (' ultimate parent entity', 49), (' Stock and feright payables ', 46), (' employee benefits - payroll', 45), (' other creditors', 43), (' other creditors', 43), (' other creditors', 43), ('other creditors and accruals', 42), (' derivative contracts - at fair value', 42), (' provision for annual and long service leave ', 42), (' Forward currency contract ', 42), (' Warranty and after sales service ', 41), (' employee benefits - current', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' others ', 40), (' current - liability for annual and long service leave', 39), (' secured long-term bank loans', 38), (' make good provisions', 38), (' total current employee benefits ', 38), (' Current- liability for annual leave ', 37), (' provisions - current', 36), (' share of joint venture payables', 36), (' current- liability for long service leave ', 36), (' Employee entitlements ', 36), (' Deferred income ', 36), (' abandonment and decommissioning costs', 35), (' gst', 33), (' forward exchange contracts', 33), (' accrued expenses ', 33), (' service contracts ', 33), (' arising from service contracts', 32), (' provision for associate funding', 27)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none other trade payables and accrued expenses , res_fuzz_match = [(' other', 100), (' Trade payables ', 100), (' accrued expenses ', 100), (' others ', 100), (' gst payable and accruals', 77), (' gst payables', 70), (' GST Payable', 70), (' other related parties', 65), ('other creditors and accruals', 62), (' other creditors', 57), (' other creditors', 57), (' other creditors', 57), (' Employee payables ', 57), (' share of joint venture payables', 56), (' Stock and feright payables ', 54), (' secured long-term bank loans', 50), (' restructuring', 50), (' loans from related party', 48), (' loan payable to relayed party under tax funding agreement', 45), (' employee benefits - payroll', 45), (' contract liabilites - current', 44), (' Current- liability for annual leave ', 43), (' Warranty and after sales service ', 43), (' derivative contracts - at fair value', 42), (' provision for annual and long service leave ', 42), (' abandonment and decommissioning costs', 40), (' rebates', 40), (' service contracts ', 40), (' employee benefits - current', 39), (' current - liability for annual and long service leave', 38), (' forward exchange contracts', 38), (' warranty', 38), (' total current employee benefits ', 38), (' ultimate parent entity', 37), (' current- liability for long service leave ', 37), (' provisions - current', 36), (' provision for associate funding', 36), (' Employee entitlements ', 36), (' Deferred income ', 36), (' gst', 33), (' Forward currency contract ', 33), (' arising from service contracts', 32), (' make good provisions', 31), (' gst liabilities', 30)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none non-trade payables and accrued ex penses , res_fuzz_match = [(' Trade payables ', 92), (' accrued expenses ', 91), (' gst payable and accruals', 77), (' gst payables', 70), (' GST Payable', 70), (' Employee payables ', 57), ('other creditors and accruals', 54), (' share of joint venture payables', 52), (' secured long-term bank loans', 50), (' contract liabilites - current', 48), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 47), (' provision for annual and long service leave ', 47), (' service contracts ', 47), (' derivative contracts - at fair value', 46), (' Stock and feright payables ', 46), (' employee benefits - payroll', 45), (' current - liability for annual and long service leave', 44), (' loans from related party', 43), (' Current- liability for annual leave ', 43), (' forward exchange contracts', 42), (' gst liabilities', 40), (' rebates', 40), (' other', 40), (' Warranty and after sales service ', 40), (' others ', 40), (' employee benefits - current', 39), (' abandonment and decommissioning costs', 38), (' make good provisions', 38), (' warranty', 38), (' total current employee benefits ', 38), (' current- liability for long service leave ', 38), (' Forward currency contract ', 38), (' ultimate parent entity', 37), (' other creditors', 36), (' other creditors', 36), (' provisions - current', 36), (' provision for associate funding', 36), (' other creditors', 36), (' Deferred income ', 36), (' gst', 33), (' arising from service contracts', 32), (' restructuring', 30), (' Employee entitlements ', 29)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Employee entitlements ', 60), (' loan payable to relayed party under tax funding agreement', 50), (' contract liabilites - current', 50), (' abandonment and decommissioning costs', 50), (' forward exchange contracts', 50), (' Forward currency contract ', 50), (' Employee payables ', 50), ('other creditors and accruals', 40), (' ultimate parent entity', 40), (' other related parties', 40), (' derivative contracts - at fair value', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' rebates', 40), (' other', 40), (' Current- liability for annual leave ', 40), (' current- liability for long service leave ', 40), (' provision for annual and long service leave ', 40), (' Trade payables ', 40), (' Warranty and after sales service ', 40), (' service contracts ', 40), (' others ', 40), (' gst', 33), (' gst payables', 32), (' GST Payable', 32), (' other creditors', 30), (' other creditors', 30), (' employee benefits - current', 30), (' make good provisions', 30), (' gst liabilities', 30), (' other creditors', 30), (' restructuring', 30), (' total current employee benefits ', 30), (' Stock and feright payables ', 30), (' Deferred income ', 30), (' warranty', 25), (' provisions - current', 20), (' accrued expenses ', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 4, 5, 6], 'score': [100, 100, 92, 100, 100, 92], 'value': [1538.0, 641.0, 838.0, 711.0, 758.0, 559.0], 'label': ['None Trade payables due to related parties', 'None Other trade payables and accrued expenses', 'None Non-trade payables and accrued ex penses', 'None Trade payables due to related parties', 'None Other trade payables and accrued expenses', 'None Non-trade payables and accrued ex penses'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits ', ' Current- liability for annual leave ', ' current- liability for long service leave ', ' provision for annual and long service leave ', ' Trade payables ', ' accrued expenses ', ' Warranty and after sales service ', ' Employee entitlements ', ' service contracts ', ' others ', ' Forward currency contract ', ' Employee payables ', ' Stock and feright payables ', ' Deferred income ', ' GST Payable'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none liability for long service leave , res_fuzz_match = [(' current- liability for long service leave ', 91), (' gst liabilities', 70), (' current - liability for annual and long service leave', 69), (' provision for annual and long service leave ', 69), (' gst', 67), (' Current- liability for annual leave ', 63), (' arising from service contracts', 60), (' service contracts ', 53), (' Warranty and after sales service ', 50), (' secured long-term bank loans', 49), (' loans from related party', 48), (' contract liabilites - current', 48), (' loan payable to relayed party under tax funding agreement', 47), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' other creditors', 43), (' Employee entitlements ', 43), (' Trade payables ', 42), (' other related parties', 41), (' provision for associate funding', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' other', 40), (' others ', 40), (' GST Payable', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' forward exchange contracts', 38), (' total current employee benefits ', 38), (' Stock and feright payables ', 38), (' ultimate parent entity', 37), (' provisions - current', 36), (' employee benefits - payroll', 36), (' Employee payables ', 36), (' Deferred income ', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' accrued expenses ', 33), (' Forward currency contract ', 33), (' gst payable and accruals', 32), (' restructuring', 30), (' warranty', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none liability for annual leave , res_fuzz_match = [(' Current- liability for annual leave ', 89), (' current - liability for annual and long service leave', 78), (' gst liabilities', 70), (' current- liability for long service leave ', 63), (' provision for annual and long service leave ', 59), (' contract liabilites - current', 48), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' gst payable and accruals', 45), (' loan payable to relayed party under tax funding agreement', 44), (' Warranty and after sales service ', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' Employee payables ', 43), (' Trade payables ', 42), (' Stock and feright payables ', 42), (' other related parties', 41), (' gst payables', 40), (' rebates', 40), (' other', 40), (' service contracts ', 40), (' others ', 40), (' GST Payable', 40), (' derivative contracts - at fair value', 38), (' warranty', 38), (' share of joint venture payables', 37), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' Employee entitlements ', 36), (' Deferred income ', 36), (' employee benefits - current', 35), (' forward exchange contracts', 34), (' total current employee benefits ', 33), (' accrued expenses ', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' Forward currency contract ', 30), (' provisions - current', 29), (' make good provisions', 25), (' restructuring', 20), (' gst', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Employee entitlements ', 60), (' loan payable to relayed party under tax funding agreement', 50), (' contract liabilites - current', 50), (' abandonment and decommissioning costs', 50), (' forward exchange contracts', 50), (' Forward currency contract ', 50), (' Employee payables ', 50), ('other creditors and accruals', 40), (' ultimate parent entity', 40), (' other related parties', 40), (' derivative contracts - at fair value', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' rebates', 40), (' other', 40), (' Current- liability for annual leave ', 40), (' current- liability for long service leave ', 40), (' provision for annual and long service leave ', 40), (' Trade payables ', 40), (' Warranty and after sales service ', 40), (' service contracts ', 40), (' others ', 40), (' gst', 33), (' gst payables', 32), (' GST Payable', 32), (' other creditors', 30), (' other creditors', 30), (' employee benefits - current', 30), (' make good provisions', 30), (' gst liabilities', 30), (' other creditors', 30), (' restructuring', 30), (' total current employee benefits ', 30), (' Stock and feright payables ', 30), (' Deferred income ', 30), (' warranty', 25), (' provisions - current', 20), (' accrued expenses ', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = non current liability for long-service leave , res_fuzz_match = [(' current- liability for long service leave ', 99), (' gst liabilities', 80), (' Current- liability for annual leave ', 73), (' current - liability for annual and long service leave', 68), (' gst', 67), (' warranty', 62), (' provision for annual and long service leave ', 61), (' rebates', 60), (' arising from service contracts', 57), (' Warranty and after sales service ', 57), (' service contracts ', 53), (' contract liabilites - current', 52), (' total current employee benefits ', 52), (' gst payables', 50), (' Trade payables ', 50), (' GST Payable', 50), (' secured long-term bank loans', 49), (' loans from related party', 48), (' other related parties', 47), (' Forward currency contract ', 46), (' other creditors', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' provision for associate funding', 41), (' other', 40), (' others ', 40), (' loan payable to relayed party under tax funding agreement', 39), (' employee benefits - current', 39), (' make good provisions', 38), (' Stock and feright payables ', 38), (' gst payable and accruals', 36), (' share of joint venture payables', 36), (' employee benefits - payroll', 36), (' Employee entitlements ', 36), (' Employee payables ', 36), (' Deferred income ', 36), (' forward exchange contracts', 33), (' accrued expenses ', 33), (' abandonment and decommissioning costs', 31), (' restructuring', 30)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none liability for long service leave , res_fuzz_match = [(' current- liability for long service leave ', 91), (' gst liabilities', 70), (' current - liability for annual and long service leave', 69), (' provision for annual and long service leave ', 69), (' gst', 67), (' Current- liability for annual leave ', 63), (' arising from service contracts', 60), (' service contracts ', 53), (' Warranty and after sales service ', 50), (' secured long-term bank loans', 49), (' loans from related party', 48), (' contract liabilites - current', 48), (' loan payable to relayed party under tax funding agreement', 47), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' other creditors', 43), (' Employee entitlements ', 43), (' Trade payables ', 42), (' other related parties', 41), (' provision for associate funding', 41), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' other', 40), (' others ', 40), (' GST Payable', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' forward exchange contracts', 38), (' total current employee benefits ', 38), (' Stock and feright payables ', 38), (' ultimate parent entity', 37), (' provisions - current', 36), (' employee benefits - payroll', 36), (' Employee payables ', 36), (' Deferred income ', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' accrued expenses ', 33), (' Forward currency contract ', 33), (' gst payable and accruals', 32), (' restructuring', 30), (' warranty', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none liability for annual leave , res_fuzz_match = [(' Current- liability for annual leave ', 89), (' current - liability for annual and long service leave', 78), (' gst liabilities', 70), (' current- liability for long service leave ', 63), (' provision for annual and long service leave ', 59), (' contract liabilites - current', 48), ('other creditors and accruals', 46), (' secured long-term bank loans', 46), (' gst payable and accruals', 45), (' loan payable to relayed party under tax funding agreement', 44), (' Warranty and after sales service ', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' Employee payables ', 43), (' Trade payables ', 42), (' Stock and feright payables ', 42), (' other related parties', 41), (' gst payables', 40), (' rebates', 40), (' other', 40), (' service contracts ', 40), (' others ', 40), (' GST Payable', 40), (' derivative contracts - at fair value', 38), (' warranty', 38), (' share of joint venture payables', 37), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' Employee entitlements ', 36), (' Deferred income ', 36), (' employee benefits - current', 35), (' forward exchange contracts', 34), (' total current employee benefits ', 33), (' accrued expenses ', 33), (' ultimate parent entity', 32), (' abandonment and decommissioning costs', 31), (' Forward currency contract ', 30), (' provisions - current', 29), (' make good provisions', 25), (' restructuring', 20), (' gst', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Employee entitlements ', 60), (' loan payable to relayed party under tax funding agreement', 50), (' contract liabilites - current', 50), (' abandonment and decommissioning costs', 50), (' forward exchange contracts', 50), (' Forward currency contract ', 50), (' Employee payables ', 50), ('other creditors and accruals', 40), (' ultimate parent entity', 40), (' other related parties', 40), (' derivative contracts - at fair value', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' rebates', 40), (' other', 40), (' Current- liability for annual leave ', 40), (' current- liability for long service leave ', 40), (' provision for annual and long service leave ', 40), (' Trade payables ', 40), (' Warranty and after sales service ', 40), (' service contracts ', 40), (' others ', 40), (' gst', 33), (' gst payables', 32), (' GST Payable', 32), (' other creditors', 30), (' other creditors', 30), (' employee benefits - current', 30), (' make good provisions', 30), (' gst liabilities', 30), (' other creditors', 30), (' restructuring', 30), (' total current employee benefits ', 30), (' Stock and feright payables ', 30), (' Deferred income ', 30), (' warranty', 25), (' provisions - current', 20), (' accrued expenses ', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = non current liability for long-service leave , res_fuzz_match = [(' current- liability for long service leave ', 99), (' gst liabilities', 80), (' Current- liability for annual leave ', 73), (' current - liability for annual and long service leave', 68), (' gst', 67), (' warranty', 62), (' provision for annual and long service leave ', 61), (' rebates', 60), (' arising from service contracts', 57), (' Warranty and after sales service ', 57), (' service contracts ', 53), (' contract liabilites - current', 52), (' total current employee benefits ', 52), (' gst payables', 50), (' Trade payables ', 50), (' GST Payable', 50), (' secured long-term bank loans', 49), (' loans from related party', 48), (' other related parties', 47), (' Forward currency contract ', 46), (' other creditors', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' derivative contracts - at fair value', 42), (' provision for associate funding', 41), (' other', 40), (' others ', 40), (' loan payable to relayed party under tax funding agreement', 39), (' employee benefits - current', 39), (' make good provisions', 38), (' Stock and feright payables ', 38), (' gst payable and accruals', 36), (' share of joint venture payables', 36), (' employee benefits - payroll', 36), (' Employee entitlements ', 36), (' Employee payables ', 36), (' Deferred income ', 36), (' forward exchange contracts', 33), (' accrued expenses ', 33), (' abandonment and decommissioning costs', 31), (' restructuring', 30)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 3, 4, 5, 7], 'score': [91, 89, 99, 91, 89, 99], 'value': [349.0, 756.0, 84.0, 375.0, 699.0, 79.0], 'label': ['None Liability for long service leave', 'None Liability for annual leave', 'Non Current Liability for long-service leave', 'None Liability for long service leave', 'None Liability for annual leave', 'Non Current Liability for long-service leave'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits ', ' Current- liability for annual leave ', ' current- liability for long service leave ', ' provision for annual and long service leave ', ' Trade payables ', ' accrued expenses ', ' Warranty and after sales service ', ' Employee entitlements ', ' service contracts ', ' others ', ' Forward currency contract ', ' Employee payables ', ' Stock and feright payables ', ' Deferred income ', ' GST Payable'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none balance at 1 april 2022 , res_fuzz_match = [(' rebates', 60), (' other related parties', 53), (' secured long-term bank loans', 53), (' loans from related party', 48), ('other creditors and accruals', 47), (' derivative contracts - at fair value', 47), (' loan payable to relayed party under tax funding agreement', 47), (' gst payable and accruals', 47), (' current - liability for annual and long service leave', 47), (' contract liabilites - current', 47), (' employee benefits - payroll', 47), (' abandonment and decommissioning costs', 47), (' current- liability for long service leave ', 47), (' provision for annual and long service leave ', 47), (' Warranty and after sales service ', 47), (' employee benefits - current', 41), (' Stock and feright payables ', 41), (' make good provisions', 40), (' gst liabilities', 40), (' other', 40), (' others ', 40), (' warranty', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' Employee entitlements ', 36), (' Employee payables ', 36), (' Deferred income ', 36), (' share of joint venture payables', 35), (' total current employee benefits ', 35), (' Current- liability for annual leave ', 35), (' accrued expenses ', 35), (' Trade payables ', 33), (' gst payables', 30), (' GST Payable', 30), (' ultimate parent entity', 29), (' provision for associate funding', 29), (' arising from service contracts', 29), (' forward exchange contracts', 29), (' Forward currency contract ', 29), (' service contracts ', 27), (' provisions - current', 21), (' restructuring', 20), (' gst', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [(' warranty', 100), (' Warranty and after sales service ', 77), (' rebates', 60), (' total current employee benefits ', 54), (' ultimate parent entity', 46), (' other related parties', 46), (' derivative contracts - at fair value', 46), (' loan payable to relayed party under tax funding agreement', 46), (' current - liability for annual and long service leave', 46), (' share of joint venture payables', 46), (' arising from service contracts', 46), (' forward exchange contracts', 46), (' Current- liability for annual leave ', 46), (' current- liability for long service leave ', 46), (' Forward currency contract ', 46), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for annual and long service leave ', 38), (' gst', 33), (' Trade payables ', 33), (' accrued expenses ', 33), (' employee benefits - current', 31), (' provisions - current', 31), (' employee benefits - payroll', 31), (' provision for associate funding', 31), (' make good provisions', 31), (' service contracts ', 31), (' Stock and feright payables ', 31), (' gst payables', 30), (' gst liabilities', 30), (' GST Payable', 30), (' Deferred income ', 27), (' other creditors', 23), (' other creditors', 23), (' other creditors', 23), (' Employee entitlements ', 23), (' restructuring', 20), (' other', 20), (' others ', 20), (' Employee payables ', 15)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none provisions made during the year , res_fuzz_match = [(' other', 60), (' others ', 60), (' provisions - current', 57), (' make good provisions', 50), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 47), (' loans from related party', 45), (' provision for associate funding', 45), (' other creditors', 43), (' other creditors', 43), (' employee benefits - current', 43), (' other creditors', 43), (' provision for annual and long service leave ', 43), (' Warranty and after sales service ', 43), (' Stock and feright payables ', 43), (' Trade payables ', 42), (' Forward currency contract ', 42), (' contract liabilites - current', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' arising from service contracts', 40), (' rebates', 40), (' service contracts ', 40), (' GST Payable', 40), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' abandonment and decommissioning costs', 38), (' ultimate parent entity', 37), (' current - liability for annual and long service leave', 37), (' current- liability for long service leave ', 37), (' gst payable and accruals', 36), (' employee benefits - payroll', 36), (' Employee entitlements ', 36), (' Employee payables ', 36), (' Deferred income ', 36), (' total current employee benefits ', 34), (' derivative contracts - at fair value', 33), (' gst', 33), (' forward exchange contracts', 33), (' Current- liability for annual leave ', 33), (' accrued expenses ', 33), (' gst liabilities', 30), (' restructuring', 30), (' warranty', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [(' warranty', 100), (' Warranty and after sales service ', 77), (' rebates', 60), (' total current employee benefits ', 54), (' ultimate parent entity', 46), (' other related parties', 46), (' derivative contracts - at fair value', 46), (' loan payable to relayed party under tax funding agreement', 46), (' current - liability for annual and long service leave', 46), (' share of joint venture payables', 46), (' arising from service contracts', 46), (' forward exchange contracts', 46), (' Current- liability for annual leave ', 46), (' current- liability for long service leave ', 46), (' Forward currency contract ', 46), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for annual and long service leave ', 38), (' gst', 33), (' Trade payables ', 33), (' accrued expenses ', 33), (' employee benefits - current', 31), (' provisions - current', 31), (' employee benefits - payroll', 31), (' provision for associate funding', 31), (' make good provisions', 31), (' service contracts ', 31), (' Stock and feright payables ', 31), (' gst payables', 30), (' gst liabilities', 30), (' GST Payable', 30), (' Deferred income ', 27), (' other creditors', 23), (' other creditors', 23), (' other creditors', 23), (' Employee entitlements ', 23), (' restructuring', 20), (' other', 20), (' others ', 20), (' Employee payables ', 15)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none provisions used during the year , res_fuzz_match = [(' provisions - current', 64), (' other', 60), (' others ', 60), (' other related parties', 50), (' make good provisions', 50), (' loan payable to relayed party under tax funding agreement', 48), (' provision for associate funding', 45), (' provision for annual and long service leave ', 45), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' employee benefits - current', 43), (' other creditors', 43), (' Trade payables ', 42), (' share of joint venture payables', 40), (' gst payables', 40), (' arising from service contracts', 40), (' rebates', 40), (' GST Payable', 40), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' current - liability for annual and long service leave', 38), (' ultimate parent entity', 37), (' contract liabilites - current', 36), (' employee benefits - payroll', 36), (' Employee entitlements ', 36), (' Employee payables ', 36), (' Deferred income ', 36), (' derivative contracts - at fair value', 34), (' current- liability for long service leave ', 34), (' Warranty and after sales service ', 34), (' gst', 33), (' accrued expenses ', 33), (' service contracts ', 33), (' Forward currency contract ', 33), (' Stock and feright payables ', 33), (' gst payable and accruals', 32), (' Current- liability for annual leave ', 32), (' abandonment and decommissioning costs', 31), (' total current employee benefits ', 31), (' gst liabilities', 30), (' restructuring', 30), (' forward exchange contracts', 29), (' warranty', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [(' warranty', 100), (' Warranty and after sales service ', 77), (' rebates', 60), (' total current employee benefits ', 54), (' ultimate parent entity', 46), (' other related parties', 46), (' derivative contracts - at fair value', 46), (' loan payable to relayed party under tax funding agreement', 46), (' current - liability for annual and long service leave', 46), (' share of joint venture payables', 46), (' arising from service contracts', 46), (' forward exchange contracts', 46), (' Current- liability for annual leave ', 46), (' current- liability for long service leave ', 46), (' Forward currency contract ', 46), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for annual and long service leave ', 38), (' gst', 33), (' Trade payables ', 33), (' accrued expenses ', 33), (' employee benefits - current', 31), (' provisions - current', 31), (' employee benefits - payroll', 31), (' provision for associate funding', 31), (' make good provisions', 31), (' service contracts ', 31), (' Stock and feright payables ', 31), (' gst payables', 30), (' gst liabilities', 30), (' GST Payable', 30), (' Deferred income ', 27), (' other creditors', 23), (' other creditors', 23), (' other creditors', 23), (' Employee entitlements ', 23), (' restructuring', 20), (' other', 20), (' others ', 20), (' Employee payables ', 15)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none balance at 31 march 2023 , res_fuzz_match = [(' rebates', 60), (' secured long-term bank loans', 53), (' other related parties', 47), (' gst payable and accruals', 47), (' employee benefits - payroll', 47), (' abandonment and decommissioning costs', 47), (' Deferred income ', 45), (' loans from related party', 42), ('other creditors and accruals', 41), (' derivative contracts - at fair value', 41), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - current', 41), (' current - liability for annual and long service leave', 41), (' current- liability for long service leave ', 41), (' provision for annual and long service leave ', 41), (' Warranty and after sales service ', 41), (' Stock and feright payables ', 41), (' other', 40), (' others ', 40), (' warranty', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' arising from service contracts', 35), (' forward exchange contracts', 35), (' total current employee benefits ', 35), (' Current- liability for annual leave ', 35), (' Forward currency contract ', 35), (' Trade payables ', 33), (' service contracts ', 33), (' gst payables', 30), (' gst liabilities', 30), (' GST Payable', 30), (' provision for associate funding', 29), (' Employee payables ', 29), (' accrued expenses ', 26), (' make good provisions', 25), (' ultimate parent entity', 24), (' provisions - current', 21), (' Employee entitlements ', 21), (' restructuring', 20), (' gst', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [(' warranty', 100), (' Warranty and after sales service ', 77), (' rebates', 60), (' total current employee benefits ', 54), (' ultimate parent entity', 46), (' other related parties', 46), (' derivative contracts - at fair value', 46), (' loan payable to relayed party under tax funding agreement', 46), (' current - liability for annual and long service leave', 46), (' share of joint venture payables', 46), (' arising from service contracts', 46), (' forward exchange contracts', 46), (' Current- liability for annual leave ', 46), (' current- liability for long service leave ', 46), (' Forward currency contract ', 46), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for annual and long service leave ', 38), (' gst', 33), (' Trade payables ', 33), (' accrued expenses ', 33), (' employee benefits - current', 31), (' provisions - current', 31), (' employee benefits - payroll', 31), (' provision for associate funding', 31), (' make good provisions', 31), (' service contracts ', 31), (' Stock and feright payables ', 31), (' gst payables', 30), (' gst liabilities', 30), (' GST Payable', 30), (' Deferred income ', 27), (' other creditors', 23), (' other creditors', 23), (' other creditors', 23), (' Employee entitlements ', 23), (' restructuring', 20), (' other', 20), (' others ', 20), (' Employee payables ', 15)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none current , res_fuzz_match = [(' employee benefits - current', 75), (' provisions - current', 75), (' total current employee benefits ', 75), (' contract liabilites - current', 67), (' rebates', 60), ('other creditors and accruals', 58), (' other creditors', 58), (' other creditors', 58), (' other creditors', 58), (' Forward currency contract ', 58), (' warranty', 53), (' Employee entitlements ', 52), (' other related parties', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' share of joint venture payables', 50), (' employee benefits - payroll', 50), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' others ', 40), (' derivative contracts - at fair value', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' gst', 33), (' Current- liability for annual leave ', 33), (' current- liability for long service leave ', 33), (' provision for annual and long service leave ', 33), (' accrued expenses ', 33), (' Warranty and after sales service ', 33), (' service contracts ', 33), (' Stock and feright payables ', 33), (' Deferred income ', 27), (' Employee payables ', 26), (' make good provisions', 25), (' Trade payables ', 17), (' gst payables', 10), (' gst liabilities', 10), (' GST Payable', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [(' warranty', 100), (' Warranty and after sales service ', 77), (' rebates', 60), (' total current employee benefits ', 54), (' ultimate parent entity', 46), (' other related parties', 46), (' derivative contracts - at fair value', 46), (' loan payable to relayed party under tax funding agreement', 46), (' current - liability for annual and long service leave', 46), (' share of joint venture payables', 46), (' arising from service contracts', 46), (' forward exchange contracts', 46), (' Current- liability for annual leave ', 46), (' current- liability for long service leave ', 46), (' Forward currency contract ', 46), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for annual and long service leave ', 38), (' gst', 33), (' Trade payables ', 33), (' accrued expenses ', 33), (' employee benefits - current', 31), (' provisions - current', 31), (' employee benefits - payroll', 31), (' provision for associate funding', 31), (' make good provisions', 31), (' service contracts ', 31), (' Stock and feright payables ', 31), (' gst payables', 30), (' gst liabilities', 30), (' GST Payable', 30), (' Deferred income ', 27), (' other creditors', 23), (' other creditors', 23), (' other creditors', 23), (' Employee entitlements ', 23), (' restructuring', 20), (' other', 20), (' others ', 20), (' Employee payables ', 15)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none non-current , res_fuzz_match = [(' employee benefits - current', 58), (' provisions - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), (' Forward currency contract ', 50), ('other creditors and accruals', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' forward exchange contracts', 42), (' other creditors', 42), (' Current- liability for annual leave ', 42), (' provision for annual and long service leave ', 42), (' restructuring', 40), (' other', 40), (' others ', 40), (' Deferred income ', 36), (' Employee entitlements ', 35), (' other related parties', 33), (' loan payable to relayed party under tax funding agreement', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' total current employee benefits ', 33), (' current- liability for long service leave ', 33), (' service contracts ', 33), (' Stock and feright payables ', 33), (' Employee payables ', 26), (' ultimate parent entity', 25), (' warranty', 25), (' Warranty and after sales service ', 25), (' rebates', 20), (' Trade payables ', 17), (' accrued expenses ', 17), (' gst payables', 10), (' gst liabilities', 10), (' GST Payable', 10), (' gst', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [(' warranty', 100), (' Warranty and after sales service ', 77), (' rebates', 60), (' total current employee benefits ', 54), (' ultimate parent entity', 46), (' other related parties', 46), (' derivative contracts - at fair value', 46), (' loan payable to relayed party under tax funding agreement', 46), (' current - liability for annual and long service leave', 46), (' share of joint venture payables', 46), (' arising from service contracts', 46), (' forward exchange contracts', 46), (' Current- liability for annual leave ', 46), (' current- liability for long service leave ', 46), (' Forward currency contract ', 46), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for annual and long service leave ', 38), (' gst', 33), (' Trade payables ', 33), (' accrued expenses ', 33), (' employee benefits - current', 31), (' provisions - current', 31), (' employee benefits - payroll', 31), (' provision for associate funding', 31), (' make good provisions', 31), (' service contracts ', 31), (' Stock and feright payables ', 31), (' gst payables', 30), (' gst liabilities', 30), (' GST Payable', 30), (' Deferred income ', 27), (' other creditors', 23), (' other creditors', 23), (' other creditors', 23), (' Employee entitlements ', 23), (' restructuring', 20), (' other', 20), (' others ', 20), (' Employee payables ', 15)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Employee entitlements ', 60), (' loan payable to relayed party under tax funding agreement', 50), (' contract liabilites - current', 50), (' abandonment and decommissioning costs', 50), (' forward exchange contracts', 50), (' Forward currency contract ', 50), (' Employee payables ', 50), ('other creditors and accruals', 40), (' ultimate parent entity', 40), (' other related parties', 40), (' derivative contracts - at fair value', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' rebates', 40), (' other', 40), (' Current- liability for annual leave ', 40), (' current- liability for long service leave ', 40), (' provision for annual and long service leave ', 40), (' Trade payables ', 40), (' Warranty and after sales service ', 40), (' service contracts ', 40), (' others ', 40), (' gst', 33), (' gst payables', 32), (' GST Payable', 32), (' other creditors', 30), (' other creditors', 30), (' employee benefits - current', 30), (' make good provisions', 30), (' gst liabilities', 30), (' other creditors', 30), (' restructuring', 30), (' total current employee benefits ', 30), (' Stock and feright payables ', 30), (' Deferred income ', 30), (' warranty', 25), (' provisions - current', 20), (' accrued expenses ', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [(' warranty', 100), (' Warranty and after sales service ', 77), (' rebates', 60), (' total current employee benefits ', 54), (' ultimate parent entity', 46), (' other related parties', 46), (' derivative contracts - at fair value', 46), (' loan payable to relayed party under tax funding agreement', 46), (' current - liability for annual and long service leave', 46), (' share of joint venture payables', 46), (' arising from service contracts', 46), (' forward exchange contracts', 46), (' Current- liability for annual leave ', 46), (' current- liability for long service leave ', 46), (' Forward currency contract ', 46), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for annual and long service leave ', 38), (' gst', 33), (' Trade payables ', 33), (' accrued expenses ', 33), (' employee benefits - current', 31), (' provisions - current', 31), (' employee benefits - payroll', 31), (' provision for associate funding', 31), (' make good provisions', 31), (' service contracts ', 31), (' Stock and feright payables ', 31), (' gst payables', 30), (' gst liabilities', 30), (' GST Payable', 30), (' Deferred income ', 27), (' other creditors', 23), (' other creditors', 23), (' other creditors', 23), (' Employee entitlements ', 23), (' restructuring', 20), (' other', 20), (' others ', 20), (' Employee payables ', 15)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none balance at 1 april 2022 , res_fuzz_match = [(' rebates', 60), (' other related parties', 53), (' secured long-term bank loans', 53), (' loans from related party', 48), ('other creditors and accruals', 47), (' derivative contracts - at fair value', 47), (' loan payable to relayed party under tax funding agreement', 47), (' gst payable and accruals', 47), (' current - liability for annual and long service leave', 47), (' contract liabilites - current', 47), (' employee benefits - payroll', 47), (' abandonment and decommissioning costs', 47), (' current- liability for long service leave ', 47), (' provision for annual and long service leave ', 47), (' Warranty and after sales service ', 47), (' employee benefits - current', 41), (' Stock and feright payables ', 41), (' make good provisions', 40), (' gst liabilities', 40), (' other', 40), (' others ', 40), (' warranty', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' Employee entitlements ', 36), (' Employee payables ', 36), (' Deferred income ', 36), (' share of joint venture payables', 35), (' total current employee benefits ', 35), (' Current- liability for annual leave ', 35), (' accrued expenses ', 35), (' Trade payables ', 33), (' gst payables', 30), (' GST Payable', 30), (' ultimate parent entity', 29), (' provision for associate funding', 29), (' arising from service contracts', 29), (' forward exchange contracts', 29), (' Forward currency contract ', 29), (' service contracts ', 27), (' provisions - current', 21), (' restructuring', 20), (' gst', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [(' make good provisions', 100), (' forward exchange contracts', 50), (' gst', 33), ('other creditors and accruals', 25), (' other creditors', 25), (' derivative contracts - at fair value', 25), (' loan payable to relayed party under tax funding agreement', 25), (' secured long-term bank loans', 25), (' loans from related party', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' current - liability for annual and long service leave', 25), (' provisions - current', 25), (' contract liabilites - current', 25), (' share of joint venture payables', 25), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' provision for associate funding', 25), (' arising from service contracts', 25), (' gst liabilities', 25), (' other creditors', 25), (' total current employee benefits ', 25), (' Current- liability for annual leave ', 25), (' current- liability for long service leave ', 25), (' provision for annual and long service leave ', 25), (' Trade payables ', 25), (' Warranty and after sales service ', 25), (' Employee entitlements ', 25), (' service contracts ', 25), (' Forward currency contract ', 25), (' Employee payables ', 25), (' Stock and feright payables ', 25), (' Deferred income ', 25), (' GST Payable', 25), (' ultimate parent entity', 0), (' other related parties', 0), (' rebates', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' accrued expenses ', 0), (' others ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none provisions made during the year , res_fuzz_match = [(' other', 60), (' others ', 60), (' provisions - current', 57), (' make good provisions', 50), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 47), (' loans from related party', 45), (' provision for associate funding', 45), (' other creditors', 43), (' other creditors', 43), (' employee benefits - current', 43), (' other creditors', 43), (' provision for annual and long service leave ', 43), (' Warranty and after sales service ', 43), (' Stock and feright payables ', 43), (' Trade payables ', 42), (' Forward currency contract ', 42), (' contract liabilites - current', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' arising from service contracts', 40), (' rebates', 40), (' service contracts ', 40), (' GST Payable', 40), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' abandonment and decommissioning costs', 38), (' ultimate parent entity', 37), (' current - liability for annual and long service leave', 37), (' current- liability for long service leave ', 37), (' gst payable and accruals', 36), (' employee benefits - payroll', 36), (' Employee entitlements ', 36), (' Employee payables ', 36), (' Deferred income ', 36), (' total current employee benefits ', 34), (' derivative contracts - at fair value', 33), (' gst', 33), (' forward exchange contracts', 33), (' Current- liability for annual leave ', 33), (' accrued expenses ', 33), (' gst liabilities', 30), (' restructuring', 30), (' warranty', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [(' make good provisions', 100), (' forward exchange contracts', 50), (' gst', 33), ('other creditors and accruals', 25), (' other creditors', 25), (' derivative contracts - at fair value', 25), (' loan payable to relayed party under tax funding agreement', 25), (' secured long-term bank loans', 25), (' loans from related party', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' current - liability for annual and long service leave', 25), (' provisions - current', 25), (' contract liabilites - current', 25), (' share of joint venture payables', 25), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' provision for associate funding', 25), (' arising from service contracts', 25), (' gst liabilities', 25), (' other creditors', 25), (' total current employee benefits ', 25), (' Current- liability for annual leave ', 25), (' current- liability for long service leave ', 25), (' provision for annual and long service leave ', 25), (' Trade payables ', 25), (' Warranty and after sales service ', 25), (' Employee entitlements ', 25), (' service contracts ', 25), (' Forward currency contract ', 25), (' Employee payables ', 25), (' Stock and feright payables ', 25), (' Deferred income ', 25), (' GST Payable', 25), (' ultimate parent entity', 0), (' other related parties', 0), (' rebates', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' accrued expenses ', 0), (' others ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none provisions used during the year , res_fuzz_match = [(' provisions - current', 64), (' other', 60), (' others ', 60), (' other related parties', 50), (' make good provisions', 50), (' loan payable to relayed party under tax funding agreement', 48), (' provision for associate funding', 45), (' provision for annual and long service leave ', 45), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' employee benefits - current', 43), (' other creditors', 43), (' Trade payables ', 42), (' share of joint venture payables', 40), (' gst payables', 40), (' arising from service contracts', 40), (' rebates', 40), (' GST Payable', 40), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' current - liability for annual and long service leave', 38), (' ultimate parent entity', 37), (' contract liabilites - current', 36), (' employee benefits - payroll', 36), (' Employee entitlements ', 36), (' Employee payables ', 36), (' Deferred income ', 36), (' derivative contracts - at fair value', 34), (' current- liability for long service leave ', 34), (' Warranty and after sales service ', 34), (' gst', 33), (' accrued expenses ', 33), (' service contracts ', 33), (' Forward currency contract ', 33), (' Stock and feright payables ', 33), (' gst payable and accruals', 32), (' Current- liability for annual leave ', 32), (' abandonment and decommissioning costs', 31), (' total current employee benefits ', 31), (' gst liabilities', 30), (' restructuring', 30), (' forward exchange contracts', 29), (' warranty', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [(' make good provisions', 100), (' forward exchange contracts', 50), (' gst', 33), ('other creditors and accruals', 25), (' other creditors', 25), (' derivative contracts - at fair value', 25), (' loan payable to relayed party under tax funding agreement', 25), (' secured long-term bank loans', 25), (' loans from related party', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' current - liability for annual and long service leave', 25), (' provisions - current', 25), (' contract liabilites - current', 25), (' share of joint venture payables', 25), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' provision for associate funding', 25), (' arising from service contracts', 25), (' gst liabilities', 25), (' other creditors', 25), (' total current employee benefits ', 25), (' Current- liability for annual leave ', 25), (' current- liability for long service leave ', 25), (' provision for annual and long service leave ', 25), (' Trade payables ', 25), (' Warranty and after sales service ', 25), (' Employee entitlements ', 25), (' service contracts ', 25), (' Forward currency contract ', 25), (' Employee payables ', 25), (' Stock and feright payables ', 25), (' Deferred income ', 25), (' GST Payable', 25), (' ultimate parent entity', 0), (' other related parties', 0), (' rebates', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' accrued expenses ', 0), (' others ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none balance at 31 march 2023 , res_fuzz_match = [(' rebates', 60), (' secured long-term bank loans', 53), (' other related parties', 47), (' gst payable and accruals', 47), (' employee benefits - payroll', 47), (' abandonment and decommissioning costs', 47), (' Deferred income ', 45), (' loans from related party', 42), ('other creditors and accruals', 41), (' derivative contracts - at fair value', 41), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - current', 41), (' current - liability for annual and long service leave', 41), (' current- liability for long service leave ', 41), (' provision for annual and long service leave ', 41), (' Warranty and after sales service ', 41), (' Stock and feright payables ', 41), (' other', 40), (' others ', 40), (' warranty', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' arising from service contracts', 35), (' forward exchange contracts', 35), (' total current employee benefits ', 35), (' Current- liability for annual leave ', 35), (' Forward currency contract ', 35), (' Trade payables ', 33), (' service contracts ', 33), (' gst payables', 30), (' gst liabilities', 30), (' GST Payable', 30), (' provision for associate funding', 29), (' Employee payables ', 29), (' accrued expenses ', 26), (' make good provisions', 25), (' ultimate parent entity', 24), (' provisions - current', 21), (' Employee entitlements ', 21), (' restructuring', 20), (' gst', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [(' make good provisions', 100), (' forward exchange contracts', 50), (' gst', 33), ('other creditors and accruals', 25), (' other creditors', 25), (' derivative contracts - at fair value', 25), (' loan payable to relayed party under tax funding agreement', 25), (' secured long-term bank loans', 25), (' loans from related party', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' current - liability for annual and long service leave', 25), (' provisions - current', 25), (' contract liabilites - current', 25), (' share of joint venture payables', 25), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' provision for associate funding', 25), (' arising from service contracts', 25), (' gst liabilities', 25), (' other creditors', 25), (' total current employee benefits ', 25), (' Current- liability for annual leave ', 25), (' current- liability for long service leave ', 25), (' provision for annual and long service leave ', 25), (' Trade payables ', 25), (' Warranty and after sales service ', 25), (' Employee entitlements ', 25), (' service contracts ', 25), (' Forward currency contract ', 25), (' Employee payables ', 25), (' Stock and feright payables ', 25), (' Deferred income ', 25), (' GST Payable', 25), (' ultimate parent entity', 0), (' other related parties', 0), (' rebates', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' accrued expenses ', 0), (' others ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none current , res_fuzz_match = [(' employee benefits - current', 75), (' provisions - current', 75), (' total current employee benefits ', 75), (' contract liabilites - current', 67), (' rebates', 60), ('other creditors and accruals', 58), (' other creditors', 58), (' other creditors', 58), (' other creditors', 58), (' Forward currency contract ', 58), (' warranty', 53), (' Employee entitlements ', 52), (' other related parties', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' share of joint venture payables', 50), (' employee benefits - payroll', 50), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' others ', 40), (' derivative contracts - at fair value', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' gst', 33), (' Current- liability for annual leave ', 33), (' current- liability for long service leave ', 33), (' provision for annual and long service leave ', 33), (' accrued expenses ', 33), (' Warranty and after sales service ', 33), (' service contracts ', 33), (' Stock and feright payables ', 33), (' Deferred income ', 27), (' Employee payables ', 26), (' make good provisions', 25), (' Trade payables ', 17), (' gst payables', 10), (' gst liabilities', 10), (' GST Payable', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [(' make good provisions', 100), (' forward exchange contracts', 50), (' gst', 33), ('other creditors and accruals', 25), (' other creditors', 25), (' derivative contracts - at fair value', 25), (' loan payable to relayed party under tax funding agreement', 25), (' secured long-term bank loans', 25), (' loans from related party', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' current - liability for annual and long service leave', 25), (' provisions - current', 25), (' contract liabilites - current', 25), (' share of joint venture payables', 25), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' provision for associate funding', 25), (' arising from service contracts', 25), (' gst liabilities', 25), (' other creditors', 25), (' total current employee benefits ', 25), (' Current- liability for annual leave ', 25), (' current- liability for long service leave ', 25), (' provision for annual and long service leave ', 25), (' Trade payables ', 25), (' Warranty and after sales service ', 25), (' Employee entitlements ', 25), (' service contracts ', 25), (' Forward currency contract ', 25), (' Employee payables ', 25), (' Stock and feright payables ', 25), (' Deferred income ', 25), (' GST Payable', 25), (' ultimate parent entity', 0), (' other related parties', 0), (' rebates', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' accrued expenses ', 0), (' others ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none non-current , res_fuzz_match = [(' employee benefits - current', 58), (' provisions - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), (' Forward currency contract ', 50), ('other creditors and accruals', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' forward exchange contracts', 42), (' other creditors', 42), (' Current- liability for annual leave ', 42), (' provision for annual and long service leave ', 42), (' restructuring', 40), (' other', 40), (' others ', 40), (' Deferred income ', 36), (' Employee entitlements ', 35), (' other related parties', 33), (' loan payable to relayed party under tax funding agreement', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' total current employee benefits ', 33), (' current- liability for long service leave ', 33), (' service contracts ', 33), (' Stock and feright payables ', 33), (' Employee payables ', 26), (' ultimate parent entity', 25), (' warranty', 25), (' Warranty and after sales service ', 25), (' rebates', 20), (' Trade payables ', 17), (' accrued expenses ', 17), (' gst payables', 10), (' gst liabilities', 10), (' GST Payable', 10), (' gst', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [(' make good provisions', 100), (' forward exchange contracts', 50), (' gst', 33), ('other creditors and accruals', 25), (' other creditors', 25), (' derivative contracts - at fair value', 25), (' loan payable to relayed party under tax funding agreement', 25), (' secured long-term bank loans', 25), (' loans from related party', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' current - liability for annual and long service leave', 25), (' provisions - current', 25), (' contract liabilites - current', 25), (' share of joint venture payables', 25), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' provision for associate funding', 25), (' arising from service contracts', 25), (' gst liabilities', 25), (' other creditors', 25), (' total current employee benefits ', 25), (' Current- liability for annual leave ', 25), (' current- liability for long service leave ', 25), (' provision for annual and long service leave ', 25), (' Trade payables ', 25), (' Warranty and after sales service ', 25), (' Employee entitlements ', 25), (' service contracts ', 25), (' Forward currency contract ', 25), (' Employee payables ', 25), (' Stock and feright payables ', 25), (' Deferred income ', 25), (' GST Payable', 25), (' ultimate parent entity', 0), (' other related parties', 0), (' rebates', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' accrued expenses ', 0), (' others ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Employee entitlements ', 60), (' loan payable to relayed party under tax funding agreement', 50), (' contract liabilites - current', 50), (' abandonment and decommissioning costs', 50), (' forward exchange contracts', 50), (' Forward currency contract ', 50), (' Employee payables ', 50), ('other creditors and accruals', 40), (' ultimate parent entity', 40), (' other related parties', 40), (' derivative contracts - at fair value', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' rebates', 40), (' other', 40), (' Current- liability for annual leave ', 40), (' current- liability for long service leave ', 40), (' provision for annual and long service leave ', 40), (' Trade payables ', 40), (' Warranty and after sales service ', 40), (' service contracts ', 40), (' others ', 40), (' gst', 33), (' gst payables', 32), (' GST Payable', 32), (' other creditors', 30), (' other creditors', 30), (' employee benefits - current', 30), (' make good provisions', 30), (' gst liabilities', 30), (' other creditors', 30), (' restructuring', 30), (' total current employee benefits ', 30), (' Stock and feright payables ', 30), (' Deferred income ', 30), (' warranty', 25), (' provisions - current', 20), (' accrued expenses ', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [(' make good provisions', 100), (' forward exchange contracts', 50), (' gst', 33), ('other creditors and accruals', 25), (' other creditors', 25), (' derivative contracts - at fair value', 25), (' loan payable to relayed party under tax funding agreement', 25), (' secured long-term bank loans', 25), (' loans from related party', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' current - liability for annual and long service leave', 25), (' provisions - current', 25), (' contract liabilites - current', 25), (' share of joint venture payables', 25), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' provision for associate funding', 25), (' arising from service contracts', 25), (' gst liabilities', 25), (' other creditors', 25), (' total current employee benefits ', 25), (' Current- liability for annual leave ', 25), (' current- liability for long service leave ', 25), (' provision for annual and long service leave ', 25), (' Trade payables ', 25), (' Warranty and after sales service ', 25), (' Employee entitlements ', 25), (' service contracts ', 25), (' Forward currency contract ', 25), (' Employee payables ', 25), (' Stock and feright payables ', 25), (' Deferred income ', 25), (' GST Payable', 25), (' ultimate parent entity', 0), (' other related parties', 0), (' rebates', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' accrued expenses ', 0), (' others ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none balance at 1 april 2022 , res_fuzz_match = [(' rebates', 60), (' other related parties', 53), (' secured long-term bank loans', 53), (' loans from related party', 48), ('other creditors and accruals', 47), (' derivative contracts - at fair value', 47), (' loan payable to relayed party under tax funding agreement', 47), (' gst payable and accruals', 47), (' current - liability for annual and long service leave', 47), (' contract liabilites - current', 47), (' employee benefits - payroll', 47), (' abandonment and decommissioning costs', 47), (' current- liability for long service leave ', 47), (' provision for annual and long service leave ', 47), (' Warranty and after sales service ', 47), (' employee benefits - current', 41), (' Stock and feright payables ', 41), (' make good provisions', 40), (' gst liabilities', 40), (' other', 40), (' others ', 40), (' warranty', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' Employee entitlements ', 36), (' Employee payables ', 36), (' Deferred income ', 36), (' share of joint venture payables', 35), (' total current employee benefits ', 35), (' Current- liability for annual leave ', 35), (' accrued expenses ', 35), (' Trade payables ', 33), (' gst payables', 30), (' GST Payable', 30), (' ultimate parent entity', 29), (' provision for associate funding', 29), (' arising from service contracts', 29), (' forward exchange contracts', 29), (' Forward currency contract ', 29), (' service contracts ', 27), (' provisions - current', 21), (' restructuring', 20), (' gst', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [(' total current employee benefits ', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' Employee entitlements ', 60), (' service contracts ', 60), (' Forward currency contract ', 60), (' other', 44), (' others ', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' Current- liability for annual leave ', 40), (' current- liability for long service leave ', 40), (' provision for annual and long service leave ', 40), (' Trade payables ', 40), (' Warranty and after sales service ', 40), (' Employee payables ', 40), (' Stock and feright payables ', 40), (' GST Payable', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20), (' Deferred income ', 20), (' accrued expenses ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none provisions made during the year , res_fuzz_match = [(' other', 60), (' others ', 60), (' provisions - current', 57), (' make good provisions', 50), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 47), (' loans from related party', 45), (' provision for associate funding', 45), (' other creditors', 43), (' other creditors', 43), (' employee benefits - current', 43), (' other creditors', 43), (' provision for annual and long service leave ', 43), (' Warranty and after sales service ', 43), (' Stock and feright payables ', 43), (' Trade payables ', 42), (' Forward currency contract ', 42), (' contract liabilites - current', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' arising from service contracts', 40), (' rebates', 40), (' service contracts ', 40), (' GST Payable', 40), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' abandonment and decommissioning costs', 38), (' ultimate parent entity', 37), (' current - liability for annual and long service leave', 37), (' current- liability for long service leave ', 37), (' gst payable and accruals', 36), (' employee benefits - payroll', 36), (' Employee entitlements ', 36), (' Employee payables ', 36), (' Deferred income ', 36), (' total current employee benefits ', 34), (' derivative contracts - at fair value', 33), (' gst', 33), (' forward exchange contracts', 33), (' Current- liability for annual leave ', 33), (' accrued expenses ', 33), (' gst liabilities', 30), (' restructuring', 30), (' warranty', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [(' total current employee benefits ', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' Employee entitlements ', 60), (' service contracts ', 60), (' Forward currency contract ', 60), (' other', 44), (' others ', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' Current- liability for annual leave ', 40), (' current- liability for long service leave ', 40), (' provision for annual and long service leave ', 40), (' Trade payables ', 40), (' Warranty and after sales service ', 40), (' Employee payables ', 40), (' Stock and feright payables ', 40), (' GST Payable', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20), (' Deferred income ', 20), (' accrued expenses ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none provisions used during the year , res_fuzz_match = [(' provisions - current', 64), (' other', 60), (' others ', 60), (' other related parties', 50), (' make good provisions', 50), (' loan payable to relayed party under tax funding agreement', 48), (' provision for associate funding', 45), (' provision for annual and long service leave ', 45), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' employee benefits - current', 43), (' other creditors', 43), (' Trade payables ', 42), (' share of joint venture payables', 40), (' gst payables', 40), (' arising from service contracts', 40), (' rebates', 40), (' GST Payable', 40), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' current - liability for annual and long service leave', 38), (' ultimate parent entity', 37), (' contract liabilites - current', 36), (' employee benefits - payroll', 36), (' Employee entitlements ', 36), (' Employee payables ', 36), (' Deferred income ', 36), (' derivative contracts - at fair value', 34), (' current- liability for long service leave ', 34), (' Warranty and after sales service ', 34), (' gst', 33), (' accrued expenses ', 33), (' service contracts ', 33), (' Forward currency contract ', 33), (' Stock and feright payables ', 33), (' gst payable and accruals', 32), (' Current- liability for annual leave ', 32), (' abandonment and decommissioning costs', 31), (' total current employee benefits ', 31), (' gst liabilities', 30), (' restructuring', 30), (' forward exchange contracts', 29), (' warranty', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [(' total current employee benefits ', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' Employee entitlements ', 60), (' service contracts ', 60), (' Forward currency contract ', 60), (' other', 44), (' others ', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' Current- liability for annual leave ', 40), (' current- liability for long service leave ', 40), (' provision for annual and long service leave ', 40), (' Trade payables ', 40), (' Warranty and after sales service ', 40), (' Employee payables ', 40), (' Stock and feright payables ', 40), (' GST Payable', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20), (' Deferred income ', 20), (' accrued expenses ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none balance at 31 march 2023 , res_fuzz_match = [(' rebates', 60), (' secured long-term bank loans', 53), (' other related parties', 47), (' gst payable and accruals', 47), (' employee benefits - payroll', 47), (' abandonment and decommissioning costs', 47), (' Deferred income ', 45), (' loans from related party', 42), ('other creditors and accruals', 41), (' derivative contracts - at fair value', 41), (' loan payable to relayed party under tax funding agreement', 41), (' employee benefits - current', 41), (' current - liability for annual and long service leave', 41), (' current- liability for long service leave ', 41), (' provision for annual and long service leave ', 41), (' Warranty and after sales service ', 41), (' Stock and feright payables ', 41), (' other', 40), (' others ', 40), (' warranty', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' arising from service contracts', 35), (' forward exchange contracts', 35), (' total current employee benefits ', 35), (' Current- liability for annual leave ', 35), (' Forward currency contract ', 35), (' Trade payables ', 33), (' service contracts ', 33), (' gst payables', 30), (' gst liabilities', 30), (' GST Payable', 30), (' provision for associate funding', 29), (' Employee payables ', 29), (' accrued expenses ', 26), (' make good provisions', 25), (' ultimate parent entity', 24), (' provisions - current', 21), (' Employee entitlements ', 21), (' restructuring', 20), (' gst', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [(' total current employee benefits ', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' Employee entitlements ', 60), (' service contracts ', 60), (' Forward currency contract ', 60), (' other', 44), (' others ', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' Current- liability for annual leave ', 40), (' current- liability for long service leave ', 40), (' provision for annual and long service leave ', 40), (' Trade payables ', 40), (' Warranty and after sales service ', 40), (' Employee payables ', 40), (' Stock and feright payables ', 40), (' GST Payable', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20), (' Deferred income ', 20), (' accrued expenses ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none current , res_fuzz_match = [(' employee benefits - current', 75), (' provisions - current', 75), (' total current employee benefits ', 75), (' contract liabilites - current', 67), (' rebates', 60), ('other creditors and accruals', 58), (' other creditors', 58), (' other creditors', 58), (' other creditors', 58), (' Forward currency contract ', 58), (' warranty', 53), (' Employee entitlements ', 52), (' other related parties', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' share of joint venture payables', 50), (' employee benefits - payroll', 50), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' abandonment and decommissioning costs', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' others ', 40), (' derivative contracts - at fair value', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' gst', 33), (' Current- liability for annual leave ', 33), (' current- liability for long service leave ', 33), (' provision for annual and long service leave ', 33), (' accrued expenses ', 33), (' Warranty and after sales service ', 33), (' service contracts ', 33), (' Stock and feright payables ', 33), (' Deferred income ', 27), (' Employee payables ', 26), (' make good provisions', 25), (' Trade payables ', 17), (' gst payables', 10), (' gst liabilities', 10), (' GST Payable', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [(' total current employee benefits ', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' Employee entitlements ', 60), (' service contracts ', 60), (' Forward currency contract ', 60), (' other', 44), (' others ', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' Current- liability for annual leave ', 40), (' current- liability for long service leave ', 40), (' provision for annual and long service leave ', 40), (' Trade payables ', 40), (' Warranty and after sales service ', 40), (' Employee payables ', 40), (' Stock and feright payables ', 40), (' GST Payable', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20), (' Deferred income ', 20), (' accrued expenses ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none non-current , res_fuzz_match = [(' employee benefits - current', 58), (' provisions - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), (' Forward currency contract ', 50), ('other creditors and accruals', 42), (' other creditors', 42), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' forward exchange contracts', 42), (' other creditors', 42), (' Current- liability for annual leave ', 42), (' provision for annual and long service leave ', 42), (' restructuring', 40), (' other', 40), (' others ', 40), (' Deferred income ', 36), (' Employee entitlements ', 35), (' other related parties', 33), (' loan payable to relayed party under tax funding agreement', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' employee benefits - payroll', 33), (' provision for associate funding', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' total current employee benefits ', 33), (' current- liability for long service leave ', 33), (' service contracts ', 33), (' Stock and feright payables ', 33), (' Employee payables ', 26), (' ultimate parent entity', 25), (' warranty', 25), (' Warranty and after sales service ', 25), (' rebates', 20), (' Trade payables ', 17), (' accrued expenses ', 17), (' gst payables', 10), (' gst liabilities', 10), (' GST Payable', 10), (' gst', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [(' total current employee benefits ', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' Employee entitlements ', 60), (' service contracts ', 60), (' Forward currency contract ', 60), (' other', 44), (' others ', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' Current- liability for annual leave ', 40), (' current- liability for long service leave ', 40), (' provision for annual and long service leave ', 40), (' Trade payables ', 40), (' Warranty and after sales service ', 40), (' Employee payables ', 40), (' Stock and feright payables ', 40), (' GST Payable', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20), (' Deferred income ', 20), (' accrued expenses ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Employee entitlements ', 60), (' loan payable to relayed party under tax funding agreement', 50), (' contract liabilites - current', 50), (' abandonment and decommissioning costs', 50), (' forward exchange contracts', 50), (' Forward currency contract ', 50), (' Employee payables ', 50), ('other creditors and accruals', 40), (' ultimate parent entity', 40), (' other related parties', 40), (' derivative contracts - at fair value', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' rebates', 40), (' other', 40), (' Current- liability for annual leave ', 40), (' current- liability for long service leave ', 40), (' provision for annual and long service leave ', 40), (' Trade payables ', 40), (' Warranty and after sales service ', 40), (' service contracts ', 40), (' others ', 40), (' gst', 33), (' gst payables', 32), (' GST Payable', 32), (' other creditors', 30), (' other creditors', 30), (' employee benefits - current', 30), (' make good provisions', 30), (' gst liabilities', 30), (' other creditors', 30), (' restructuring', 30), (' total current employee benefits ', 30), (' Stock and feright payables ', 30), (' Deferred income ', 30), (' warranty', 25), (' provisions - current', 20), (' accrued expenses ', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [(' total current employee benefits ', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' Employee entitlements ', 60), (' service contracts ', 60), (' Forward currency contract ', 60), (' other', 44), (' others ', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' Current- liability for annual leave ', 40), (' current- liability for long service leave ', 40), (' provision for annual and long service leave ', 40), (' Trade payables ', 40), (' Warranty and after sales service ', 40), (' Employee payables ', 40), (' Stock and feright payables ', 40), (' GST Payable', 40), (' gst', 33), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20), (' Deferred income ', 20), (' accrued expenses ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [1262.0, 454.0, -614.0, 1102.0, 896.0, 206.0, 1102.0, 131.0, 60.0, -21.0, 170.0, 0.0, 170.0, 170.0, 1393.0, 514.0, -635.0, 1272.0, 896.0, 376.0, 1272.0], 'label': ["$'000 Warranties Make", "$'000 Warranties Make", "$'000 Warranties Make", "$'000 Warranties Make", "$'000 Warranties Make", "$'000 Warranties Make", "$'000 Warranties Make", "$'000 good", "$'000 good", "$'000 good", "$'000 good", "$'000 good", "$'000 good", "$'000 good", "$'000 TOTAL", "$'000 TOTAL", "$'000 TOTAL", "$'000 TOTAL", "$'000 TOTAL", "$'000 TOTAL", "$'000 TOTAL"], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-25 12:24:57+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-25 12:24:57+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-25 12:24:57+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-25 12:24:57+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-25 12:24:57+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-25 12:24:57+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: calculate_other_current_liabilities
2023-08-25 12:24:57+0530 - sLogger - ERROR - error occured: 2022
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [('long term debt', 33)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total non-current lia bilities , res_fuzz_match = [('long term debt', 42)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net a ssets , res_fuzz_match = [('long term debt', 36)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [('long term debt', 33)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total non-current lia bilities , res_fuzz_match = [('long term debt', 42)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net a ssets , res_fuzz_match = [('long term debt', 36)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' Lease obligation']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['leases ', ' secured finance debt ', ' bank loan ', ' lease liabilities ', ' lease liability ', ' lease liabilities - non-current ', ' non current ', ' later than 1 year ', ' not later than 5 years ', ' Borrowings ', ' Lease liabilities ', ' Hire purchase liabilities ', ' less : unexpired interest']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' Lease obligation'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' lease liabilities ', 45), ('interest bearing loans and borrowings ', 40), (' Lease obligation', 40), (' loans and borrowings', 27), (' borrowings ', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings ', 33), (' borrowings ', 33), (' loans and borrowings', 33), (' Lease obligation', 33), (' lease liabilities ', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [(' Lease obligation', 100), (' lease liabilities ', 70), ('interest bearing loans and borrowings ', 40), (' loans and borrowings', 40), (' borrowings ', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total non-current lia bilities , res_fuzz_match = [(' lease liabilities ', 64), (' Lease obligation', 60), (' loans and borrowings', 47), ('interest bearing loans and borrowings ', 42), (' borrowings ', 33)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net a ssets , res_fuzz_match = [('interest bearing loans and borrowings ', 50), (' lease liabilities ', 25), (' loans and borrowings', 25), (' Lease obligation', 25), (' borrowings ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 5653.0, 'line_item_label': ['Lease obligation'], 'note_numbers': [nan], 'line_item_value': [5653.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' Lease obligation'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' lease liabilities ', 45), ('interest bearing loans and borrowings ', 40), (' Lease obligation', 40), (' loans and borrowings', 27), (' borrowings ', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings ', 33), (' borrowings ', 33), (' loans and borrowings', 33), (' Lease obligation', 33), (' lease liabilities ', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [(' Lease obligation', 100), (' lease liabilities ', 70), ('interest bearing loans and borrowings ', 40), (' loans and borrowings', 40), (' borrowings ', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total non-current lia bilities , res_fuzz_match = [(' lease liabilities ', 64), (' Lease obligation', 60), (' loans and borrowings', 47), ('interest bearing loans and borrowings ', 42), (' borrowings ', 33)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net a ssets , res_fuzz_match = [('interest bearing loans and borrowings ', 50), (' lease liabilities ', 25), (' loans and borrowings', 25), (' Lease obligation', 25), (' borrowings ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 3916.0, 'line_item_label': ['Lease obligation'], 'note_numbers': [nan], 'line_item_value': [3916.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('interest bearing loans and borrowings', 36), ('(bond)', 21)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('(bond)', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [('interest bearing loans and borrowings', 26), ('(bond)', 14)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total non-current lia bilities , res_fuzz_match = [('interest bearing loans and borrowings', 38), ('(bond)', 21)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net a ssets , res_fuzz_match = [('interest bearing loans and borrowings', 27), ('(bond)', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('interest bearing loans and borrowings', 36), ('(bond)', 21)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('(bond)', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [('interest bearing loans and borrowings', 26), ('(bond)', 14)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total non-current lia bilities , res_fuzz_match = [('interest bearing loans and borrowings', 38), ('(bond)', 21)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net a ssets , res_fuzz_match = [('interest bearing loans and borrowings', 27), ('(bond)', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total non-current lia bilities , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net a ssets , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total non-current lia bilities , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net a ssets , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes ', ' deferred tax liabilities']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities ', ' total deferred tax (assets) / liabilities']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('deferred taxes ', 33), (' deferred tax liabilities', 33)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes ', 17), (' deferred tax liabilities', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [(' deferred tax liabilities', 40), ('deferred taxes ', 22)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total non-current lia bilities , res_fuzz_match = [(' deferred tax liabilities', 50), ('deferred taxes ', 33)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net a ssets , res_fuzz_match = [('deferred taxes ', 38), (' deferred tax liabilities', 38)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('deferred taxes ', 33), (' deferred tax liabilities', 33)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes ', 17), (' deferred tax liabilities', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [(' deferred tax liabilities', 40), ('deferred taxes ', 22)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total non-current lia bilities , res_fuzz_match = [(' deferred tax liabilities', 50), ('deferred taxes ', 33)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net a ssets , res_fuzz_match = [('deferred taxes ', 38), (' deferred tax liabilities', 38)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total non-current lia bilities , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net a ssets , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total non-current lia bilities , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net a ssets , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue ', ' Provisions ', ' Deferred income']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits ', ' non-current-liability for long service leave ', ' provision for long service leave ', ' Deferred income']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue ', ' Provisions ', ' Deferred income'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits ', 100), (' deferred revenue ', 37), (' other financial liabilities ', 34), ('other long term liabilities ', 32), (' trade and other payables ', 32), (' Deferred income', 31), (' other non-current liabilities ', 29), (' financial liabilities ', 28), (' provision for associate funding ', 22), (' provisions ', 19), (' Provisions ', 19)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provisions ', 100), (' Provisions ', 100), (' provision for associate funding ', 43), (' Deferred income', 24), (' deferred revenue ', 22), (' employee benefits ', 19), (' other non-current liabilities ', 15), (' trade and other payables ', 14), (' financial liabilities ', 10), (' other financial liabilities ', 8), ('other long term liabilities ', 7)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [(' financial liabilities ', 33), ('other long term liabilities ', 31), (' trade and other payables ', 31), (' provision for associate funding ', 31), (' Deferred income', 29), (' other financial liabilities ', 27), (' other non-current liabilities ', 27), (' provisions ', 25), (' Provisions ', 25), (' employee benefits ', 24), (' deferred revenue ', 18)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total non-current lia bilities , res_fuzz_match = [(' other non-current liabilities ', 68), ('other long term liabilities ', 43), (' other financial liabilities ', 41), (' financial liabilities ', 37), (' employee benefits ', 31), (' trade and other payables ', 30), (' Deferred income', 29), (' provision for associate funding ', 26), (' deferred revenue ', 17), (' provisions ', 13), (' Provisions ', 13)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net a ssets , res_fuzz_match = [(' employee benefits ', 43), (' deferred revenue ', 30), ('other long term liabilities ', 27), (' trade and other payables ', 27), (' other financial liabilities ', 21), (' other non-current liabilities ', 21), (' Deferred income', 21), (' provision for associate funding ', 20), (' financial liabilities ', 18), (' provisions ', 14), (' Provisions ', 14)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': 100, 'value': 506.0, 'line_item_label': ['Employee benefits', 'Provisions'], 'note_numbers': ['16', '18'], 'line_item_value': [79.0, 427.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue ', ' Provisions ', ' Deferred income'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits ', 100), (' deferred revenue ', 37), (' other financial liabilities ', 34), ('other long term liabilities ', 32), (' trade and other payables ', 32), (' Deferred income', 31), (' other non-current liabilities ', 29), (' financial liabilities ', 28), (' provision for associate funding ', 22), (' provisions ', 19), (' Provisions ', 19)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provisions ', 100), (' Provisions ', 100), (' provision for associate funding ', 43), (' Deferred income', 24), (' deferred revenue ', 22), (' employee benefits ', 19), (' other non-current liabilities ', 15), (' trade and other payables ', 14), (' financial liabilities ', 10), (' other financial liabilities ', 8), ('other long term liabilities ', 7)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [(' financial liabilities ', 33), ('other long term liabilities ', 31), (' trade and other payables ', 31), (' provision for associate funding ', 31), (' Deferred income', 29), (' other financial liabilities ', 27), (' other non-current liabilities ', 27), (' provisions ', 25), (' Provisions ', 25), (' employee benefits ', 24), (' deferred revenue ', 18)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total non-current lia bilities , res_fuzz_match = [(' other non-current liabilities ', 68), ('other long term liabilities ', 43), (' other financial liabilities ', 41), (' financial liabilities ', 37), (' employee benefits ', 31), (' trade and other payables ', 30), (' Deferred income', 29), (' provision for associate funding ', 26), (' deferred revenue ', 17), (' provisions ', 13), (' Provisions ', 13)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net a ssets , res_fuzz_match = [(' employee benefits ', 43), (' deferred revenue ', 30), ('other long term liabilities ', 27), (' trade and other payables ', 27), (' other financial liabilities ', 21), (' other non-current liabilities ', 21), (' Deferred income', 21), (' provision for associate funding ', 20), (' financial liabilities ', 18), (' provisions ', 14), (' Provisions ', 14)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': 100, 'value': 460.0, 'line_item_label': ['Employee benefits', 'Provisions'], 'note_numbers': ['16', '18'], 'line_item_value': [84.0, 376.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits ', ' non-current-liability for long service leave ', ' provision for long service leave ', ' Deferred income'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none liability for long service leave , res_fuzz_match = [(' non-current - liability for long-service leave ', 88), (' non-current-liability for long service leave ', 81), (' provision for long service leave ', 81), (' contract liabilites - non-current ', 52), (' trade payables - related parties ', 46), (' make good provisions ', 44), (' provision for associate funding ', 41), (' total non-current employee benefits ', 41), ('non-current trade and other payables ', 40), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' employee benefits - non current ', 37), (' employee benefits - payroll ', 36), (' Deferred income', 36), (' abandonment and decommissioning costs ', 35), (' provisions - non-current ', 29)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits ', 0), (' non-current-liability for long service leave ', 0), (' provision for long service leave ', 0), (' Deferred income', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none liability for annual leave , res_fuzz_match = [(' non-current - liability for long-service leave ', 67), (' non-current-liability for long service leave ', 56), (' contract liabilites - non-current ', 52), (' provision for long service leave ', 48), (' trade payables - related parties ', 42), ('non-current trade and other payables ', 41), (' derivative contracts - at fair value ', 38), (' electricity derivatives at fair value through oci ', 37), (' employee benefits - non current ', 37), (' total non-current employee benefits ', 37), (' provisions - non-current ', 36), (' employee benefits - payroll ', 36), (' provision for associate funding ', 36), (' Deferred income', 36), (' abandonment and decommissioning costs ', 31), (' make good provisions ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits ', 0), (' non-current-liability for long service leave ', 0), (' provision for long service leave ', 0), (' Deferred income', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('non-current trade and other payables ', 50), (' non-current - liability for long-service leave ', 50), (' contract liabilites - non-current ', 50), (' abandonment and decommissioning costs ', 50), (' non-current-liability for long service leave ', 50), (' derivative contracts - at fair value ', 40), (' employee benefits - non current ', 40), (' employee benefits - payroll ', 40), (' provision for associate funding ', 40), (' total non-current employee benefits ', 40), (' electricity derivatives at fair value through oci ', 30), (' provisions - non-current ', 30), (' make good provisions ', 30), (' trade payables - related parties ', 30), (' provision for long service leave ', 30), (' Deferred income', 30)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits ', 0), (' non-current-liability for long service leave ', 0), (' provision for long service leave ', 0), (' Deferred income', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = non current liability for long-service leave , res_fuzz_match = [(' non-current - liability for long-service leave ', 91), (' non-current-liability for long service leave ', 85), (' provision for long service leave ', 79), (' contract liabilites - non-current ', 56), ('non-current trade and other payables ', 50), (' total non-current employee benefits ', 45), (' derivative contracts - at fair value ', 42), (' trade payables - related parties ', 42), (' provision for associate funding ', 41), (' make good provisions ', 38), (' electricity derivatives at fair value through oci ', 36), (' provisions - non-current ', 36), (' employee benefits - payroll ', 36), (' Deferred income', 36), (' employee benefits - non current ', 33), (' abandonment and decommissioning costs ', 31)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits ', 0), (' non-current-liability for long service leave ', 0), (' provision for long service leave ', 0), (' Deferred income', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none liability for long service leave , res_fuzz_match = [(' non-current - liability for long-service leave ', 88), (' non-current-liability for long service leave ', 81), (' provision for long service leave ', 81), (' contract liabilites - non-current ', 52), (' trade payables - related parties ', 46), (' make good provisions ', 44), (' provision for associate funding ', 41), (' total non-current employee benefits ', 41), ('non-current trade and other payables ', 40), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' employee benefits - non current ', 37), (' employee benefits - payroll ', 36), (' Deferred income', 36), (' abandonment and decommissioning costs ', 35), (' provisions - non-current ', 29)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits ', 0), (' non-current-liability for long service leave ', 0), (' provision for long service leave ', 0), (' Deferred income', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none liability for annual leave , res_fuzz_match = [(' non-current - liability for long-service leave ', 67), (' non-current-liability for long service leave ', 56), (' contract liabilites - non-current ', 52), (' provision for long service leave ', 48), (' trade payables - related parties ', 42), ('non-current trade and other payables ', 41), (' derivative contracts - at fair value ', 38), (' electricity derivatives at fair value through oci ', 37), (' employee benefits - non current ', 37), (' total non-current employee benefits ', 37), (' provisions - non-current ', 36), (' employee benefits - payroll ', 36), (' provision for associate funding ', 36), (' Deferred income', 36), (' abandonment and decommissioning costs ', 31), (' make good provisions ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits ', 0), (' non-current-liability for long service leave ', 0), (' provision for long service leave ', 0), (' Deferred income', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('non-current trade and other payables ', 50), (' non-current - liability for long-service leave ', 50), (' contract liabilites - non-current ', 50), (' abandonment and decommissioning costs ', 50), (' non-current-liability for long service leave ', 50), (' derivative contracts - at fair value ', 40), (' employee benefits - non current ', 40), (' employee benefits - payroll ', 40), (' provision for associate funding ', 40), (' total non-current employee benefits ', 40), (' electricity derivatives at fair value through oci ', 30), (' provisions - non-current ', 30), (' make good provisions ', 30), (' trade payables - related parties ', 30), (' provision for long service leave ', 30), (' Deferred income', 30)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits ', 0), (' non-current-liability for long service leave ', 0), (' provision for long service leave ', 0), (' Deferred income', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = non current liability for long-service leave , res_fuzz_match = [(' non-current - liability for long-service leave ', 91), (' non-current-liability for long service leave ', 85), (' provision for long service leave ', 79), (' contract liabilites - non-current ', 56), ('non-current trade and other payables ', 50), (' total non-current employee benefits ', 45), (' derivative contracts - at fair value ', 42), (' trade payables - related parties ', 42), (' provision for associate funding ', 41), (' make good provisions ', 38), (' electricity derivatives at fair value through oci ', 36), (' provisions - non-current ', 36), (' employee benefits - payroll ', 36), (' Deferred income', 36), (' employee benefits - non current ', 33), (' abandonment and decommissioning costs ', 31)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits ', 0), (' non-current-liability for long service leave ', 0), (' provision for long service leave ', 0), (' Deferred income', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3, 4, 7], 'score': [88, 91, 88, 91], 'value': [349.0, 84.0, 375.0, 79.0], 'label': ['None Liability for long service leave', 'Non Current Liability for long-service leave', 'None Liability for long service leave', 'Non Current Liability for long-service leave'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits ', ' non-current-liability for long service leave ', ' provision for long service leave ', ' Deferred income'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none balance at 1 april 2022 , res_fuzz_match = [(' derivative contracts - at fair value ', 47), (' non-current - liability for long-service leave ', 47), (' contract liabilites - non-current ', 47), (' employee benefits - payroll ', 47), (' abandonment and decommissioning costs ', 47), (' non-current-liability for long service leave ', 47), (' provision for long service leave ', 47), ('non-current trade and other payables ', 41), (' trade payables - related parties ', 41), (' total non-current employee benefits ', 41), (' make good provisions ', 40), (' Deferred income', 36), (' electricity derivatives at fair value through oci ', 35), (' employee benefits - non current ', 35), (' provisions - non-current ', 29), (' provision for associate funding ', 29)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [(' derivative contracts - at fair value ', 46), (' non-current-liability for long service leave ', 46), ('non-current trade and other payables ', 38), (' electricity derivatives at fair value through oci ', 38), (' non-current - liability for long-service leave ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' trade payables - related parties ', 38), (' total non-current employee benefits ', 38), (' employee benefits - non current ', 31), (' employee benefits - payroll ', 31), (' provision for associate funding ', 31), (' make good provisions ', 31), (' provision for long service leave ', 31), (' Deferred income', 27), (' provisions - non-current ', 23)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none provisions made during the year , res_fuzz_match = [('non-current trade and other payables ', 57), (' provisions - non-current ', 57), (' make good provisions ', 50), (' provision for long service leave ', 50), (' trade payables - related parties ', 46), (' provision for associate funding ', 45), (' electricity derivatives at fair value through oci ', 40), (' abandonment and decommissioning costs ', 38), (' employee benefits - non current ', 37), (' non-current - liability for long-service leave ', 37), (' non-current-liability for long service leave ', 37), (' employee benefits - payroll ', 36), (' Deferred income', 36), (' total non-current employee benefits ', 34), (' derivative contracts - at fair value ', 33), (' contract liabilites - non-current ', 32)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [(' derivative contracts - at fair value ', 46), (' non-current-liability for long service leave ', 46), ('non-current trade and other payables ', 38), (' electricity derivatives at fair value through oci ', 38), (' non-current - liability for long-service leave ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' trade payables - related parties ', 38), (' total non-current employee benefits ', 38), (' employee benefits - non current ', 31), (' employee benefits - payroll ', 31), (' provision for associate funding ', 31), (' make good provisions ', 31), (' provision for long service leave ', 31), (' Deferred income', 27), (' provisions - non-current ', 23)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none provisions used during the year , res_fuzz_match = [(' provisions - non-current ', 64), ('non-current trade and other payables ', 52), (' provision for long service leave ', 51), (' make good provisions ', 50), (' provision for associate funding ', 45), (' non-current-liability for long service leave ', 41), (' electricity derivatives at fair value through oci ', 38), (' trade payables - related parties ', 38), (' employee benefits - non current ', 37), (' employee benefits - payroll ', 36), (' Deferred income', 36), (' derivative contracts - at fair value ', 34), (' non-current - liability for long-service leave ', 34), (' total non-current employee benefits ', 34), (' abandonment and decommissioning costs ', 31), (' contract liabilites - non-current ', 28)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [(' derivative contracts - at fair value ', 46), (' non-current-liability for long service leave ', 46), ('non-current trade and other payables ', 38), (' electricity derivatives at fair value through oci ', 38), (' non-current - liability for long-service leave ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' trade payables - related parties ', 38), (' total non-current employee benefits ', 38), (' employee benefits - non current ', 31), (' employee benefits - payroll ', 31), (' provision for associate funding ', 31), (' make good provisions ', 31), (' provision for long service leave ', 31), (' Deferred income', 27), (' provisions - non-current ', 23)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none balance at 31 march 2023 , res_fuzz_match = [(' employee benefits - payroll ', 47), (' abandonment and decommissioning costs ', 47), (' Deferred income', 45), ('non-current trade and other payables ', 41), (' derivative contracts - at fair value ', 41), (' non-current - liability for long-service leave ', 41), (' trade payables - related parties ', 41), (' non-current-liability for long service leave ', 41), (' provision for long service leave ', 41), (' electricity derivatives at fair value through oci ', 35), (' employee benefits - non current ', 35), (' contract liabilites - non-current ', 35), (' total non-current employee benefits ', 35), (' provisions - non-current ', 29), (' provision for associate funding ', 29), (' make good provisions ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [(' derivative contracts - at fair value ', 46), (' non-current-liability for long service leave ', 46), ('non-current trade and other payables ', 38), (' electricity derivatives at fair value through oci ', 38), (' non-current - liability for long-service leave ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' trade payables - related parties ', 38), (' total non-current employee benefits ', 38), (' employee benefits - non current ', 31), (' employee benefits - payroll ', 31), (' provision for associate funding ', 31), (' make good provisions ', 31), (' provision for long service leave ', 31), (' Deferred income', 27), (' provisions - non-current ', 23)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none current , res_fuzz_match = [(' employee benefits - non current ', 92), (' non-current-liability for long service leave ', 83), ('non-current trade and other payables ', 67), (' provisions - non-current ', 67), (' total non-current employee benefits ', 67), (' non-current - liability for long-service leave ', 58), (' contract liabilites - non-current ', 58), (' employee benefits - payroll ', 50), (' abandonment and decommissioning costs ', 42), (' derivative contracts - at fair value ', 33), (' provision for associate funding ', 33), (' trade payables - related parties ', 33), (' provision for long service leave ', 33), (' Deferred income', 27), (' electricity derivatives at fair value through oci ', 25), (' make good provisions ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [(' derivative contracts - at fair value ', 46), (' non-current-liability for long service leave ', 46), ('non-current trade and other payables ', 38), (' electricity derivatives at fair value through oci ', 38), (' non-current - liability for long-service leave ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' trade payables - related parties ', 38), (' total non-current employee benefits ', 38), (' employee benefits - non current ', 31), (' employee benefits - payroll ', 31), (' provision for associate funding ', 31), (' make good provisions ', 31), (' provision for long service leave ', 31), (' Deferred income', 27), (' provisions - non-current ', 23)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none non-current , res_fuzz_match = [(' provisions - non-current ', 75), (' total non-current employee benefits ', 75), (' employee benefits - non current ', 67), (' contract liabilites - non-current ', 67), ('non-current trade and other payables ', 58), (' non-current - liability for long-service leave ', 58), (' non-current-liability for long service leave ', 58), (' abandonment and decommissioning costs ', 50), (' derivative contracts - at fair value ', 42), (' Deferred income', 36), (' electricity derivatives at fair value through oci ', 33), (' employee benefits - payroll ', 33), (' provision for associate funding ', 33), (' make good provisions ', 33), (' provision for long service leave ', 33), (' trade payables - related parties ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [(' derivative contracts - at fair value ', 46), (' non-current-liability for long service leave ', 46), ('non-current trade and other payables ', 38), (' electricity derivatives at fair value through oci ', 38), (' non-current - liability for long-service leave ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' trade payables - related parties ', 38), (' total non-current employee benefits ', 38), (' employee benefits - non current ', 31), (' employee benefits - payroll ', 31), (' provision for associate funding ', 31), (' make good provisions ', 31), (' provision for long service leave ', 31), (' Deferred income', 27), (' provisions - non-current ', 23)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('non-current trade and other payables ', 50), (' non-current - liability for long-service leave ', 50), (' contract liabilites - non-current ', 50), (' abandonment and decommissioning costs ', 50), (' non-current-liability for long service leave ', 50), (' derivative contracts - at fair value ', 40), (' employee benefits - non current ', 40), (' employee benefits - payroll ', 40), (' provision for associate funding ', 40), (' total non-current employee benefits ', 40), (' electricity derivatives at fair value through oci ', 30), (' provisions - non-current ', 30), (' make good provisions ', 30), (' trade payables - related parties ', 30), (' provision for long service leave ', 30), (' Deferred income', 30)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [(' derivative contracts - at fair value ', 46), (' non-current-liability for long service leave ', 46), ('non-current trade and other payables ', 38), (' electricity derivatives at fair value through oci ', 38), (' non-current - liability for long-service leave ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' trade payables - related parties ', 38), (' total non-current employee benefits ', 38), (' employee benefits - non current ', 31), (' employee benefits - payroll ', 31), (' provision for associate funding ', 31), (' make good provisions ', 31), (' provision for long service leave ', 31), (' Deferred income', 27), (' provisions - non-current ', 23)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none balance at 1 april 2022 , res_fuzz_match = [(' derivative contracts - at fair value ', 47), (' non-current - liability for long-service leave ', 47), (' contract liabilites - non-current ', 47), (' employee benefits - payroll ', 47), (' abandonment and decommissioning costs ', 47), (' non-current-liability for long service leave ', 47), (' provision for long service leave ', 47), ('non-current trade and other payables ', 41), (' trade payables - related parties ', 41), (' total non-current employee benefits ', 41), (' make good provisions ', 40), (' Deferred income', 36), (' electricity derivatives at fair value through oci ', 35), (' employee benefits - non current ', 35), (' provisions - non-current ', 29), (' provision for associate funding ', 29)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [(' make good provisions ', 100), (' electricity derivatives at fair value through oci ', 50), ('non-current trade and other payables ', 25), (' derivative contracts - at fair value ', 25), (' employee benefits - non current ', 25), (' non-current - liability for long-service leave ', 25), (' provisions - non-current ', 25), (' contract liabilites - non-current ', 25), (' employee benefits - payroll ', 25), (' abandonment and decommissioning costs ', 25), (' provision for associate funding ', 25), (' trade payables - related parties ', 25), (' total non-current employee benefits ', 25), (' non-current-liability for long service leave ', 25), (' provision for long service leave ', 25), (' Deferred income', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none provisions made during the year , res_fuzz_match = [('non-current trade and other payables ', 57), (' provisions - non-current ', 57), (' make good provisions ', 50), (' provision for long service leave ', 50), (' trade payables - related parties ', 46), (' provision for associate funding ', 45), (' electricity derivatives at fair value through oci ', 40), (' abandonment and decommissioning costs ', 38), (' employee benefits - non current ', 37), (' non-current - liability for long-service leave ', 37), (' non-current-liability for long service leave ', 37), (' employee benefits - payroll ', 36), (' Deferred income', 36), (' total non-current employee benefits ', 34), (' derivative contracts - at fair value ', 33), (' contract liabilites - non-current ', 32)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [(' make good provisions ', 100), (' electricity derivatives at fair value through oci ', 50), ('non-current trade and other payables ', 25), (' derivative contracts - at fair value ', 25), (' employee benefits - non current ', 25), (' non-current - liability for long-service leave ', 25), (' provisions - non-current ', 25), (' contract liabilites - non-current ', 25), (' employee benefits - payroll ', 25), (' abandonment and decommissioning costs ', 25), (' provision for associate funding ', 25), (' trade payables - related parties ', 25), (' total non-current employee benefits ', 25), (' non-current-liability for long service leave ', 25), (' provision for long service leave ', 25), (' Deferred income', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none provisions used during the year , res_fuzz_match = [(' provisions - non-current ', 64), ('non-current trade and other payables ', 52), (' provision for long service leave ', 51), (' make good provisions ', 50), (' provision for associate funding ', 45), (' non-current-liability for long service leave ', 41), (' electricity derivatives at fair value through oci ', 38), (' trade payables - related parties ', 38), (' employee benefits - non current ', 37), (' employee benefits - payroll ', 36), (' Deferred income', 36), (' derivative contracts - at fair value ', 34), (' non-current - liability for long-service leave ', 34), (' total non-current employee benefits ', 34), (' abandonment and decommissioning costs ', 31), (' contract liabilites - non-current ', 28)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [(' make good provisions ', 100), (' electricity derivatives at fair value through oci ', 50), ('non-current trade and other payables ', 25), (' derivative contracts - at fair value ', 25), (' employee benefits - non current ', 25), (' non-current - liability for long-service leave ', 25), (' provisions - non-current ', 25), (' contract liabilites - non-current ', 25), (' employee benefits - payroll ', 25), (' abandonment and decommissioning costs ', 25), (' provision for associate funding ', 25), (' trade payables - related parties ', 25), (' total non-current employee benefits ', 25), (' non-current-liability for long service leave ', 25), (' provision for long service leave ', 25), (' Deferred income', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none balance at 31 march 2023 , res_fuzz_match = [(' employee benefits - payroll ', 47), (' abandonment and decommissioning costs ', 47), (' Deferred income', 45), ('non-current trade and other payables ', 41), (' derivative contracts - at fair value ', 41), (' non-current - liability for long-service leave ', 41), (' trade payables - related parties ', 41), (' non-current-liability for long service leave ', 41), (' provision for long service leave ', 41), (' electricity derivatives at fair value through oci ', 35), (' employee benefits - non current ', 35), (' contract liabilites - non-current ', 35), (' total non-current employee benefits ', 35), (' provisions - non-current ', 29), (' provision for associate funding ', 29), (' make good provisions ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [(' make good provisions ', 100), (' electricity derivatives at fair value through oci ', 50), ('non-current trade and other payables ', 25), (' derivative contracts - at fair value ', 25), (' employee benefits - non current ', 25), (' non-current - liability for long-service leave ', 25), (' provisions - non-current ', 25), (' contract liabilites - non-current ', 25), (' employee benefits - payroll ', 25), (' abandonment and decommissioning costs ', 25), (' provision for associate funding ', 25), (' trade payables - related parties ', 25), (' total non-current employee benefits ', 25), (' non-current-liability for long service leave ', 25), (' provision for long service leave ', 25), (' Deferred income', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none current , res_fuzz_match = [(' employee benefits - non current ', 92), (' non-current-liability for long service leave ', 83), ('non-current trade and other payables ', 67), (' provisions - non-current ', 67), (' total non-current employee benefits ', 67), (' non-current - liability for long-service leave ', 58), (' contract liabilites - non-current ', 58), (' employee benefits - payroll ', 50), (' abandonment and decommissioning costs ', 42), (' derivative contracts - at fair value ', 33), (' provision for associate funding ', 33), (' trade payables - related parties ', 33), (' provision for long service leave ', 33), (' Deferred income', 27), (' electricity derivatives at fair value through oci ', 25), (' make good provisions ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [(' make good provisions ', 100), (' electricity derivatives at fair value through oci ', 50), ('non-current trade and other payables ', 25), (' derivative contracts - at fair value ', 25), (' employee benefits - non current ', 25), (' non-current - liability for long-service leave ', 25), (' provisions - non-current ', 25), (' contract liabilites - non-current ', 25), (' employee benefits - payroll ', 25), (' abandonment and decommissioning costs ', 25), (' provision for associate funding ', 25), (' trade payables - related parties ', 25), (' total non-current employee benefits ', 25), (' non-current-liability for long service leave ', 25), (' provision for long service leave ', 25), (' Deferred income', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none non-current , res_fuzz_match = [(' provisions - non-current ', 75), (' total non-current employee benefits ', 75), (' employee benefits - non current ', 67), (' contract liabilites - non-current ', 67), ('non-current trade and other payables ', 58), (' non-current - liability for long-service leave ', 58), (' non-current-liability for long service leave ', 58), (' abandonment and decommissioning costs ', 50), (' derivative contracts - at fair value ', 42), (' Deferred income', 36), (' electricity derivatives at fair value through oci ', 33), (' employee benefits - payroll ', 33), (' provision for associate funding ', 33), (' make good provisions ', 33), (' provision for long service leave ', 33), (' trade payables - related parties ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [(' make good provisions ', 100), (' electricity derivatives at fair value through oci ', 50), ('non-current trade and other payables ', 25), (' derivative contracts - at fair value ', 25), (' employee benefits - non current ', 25), (' non-current - liability for long-service leave ', 25), (' provisions - non-current ', 25), (' contract liabilites - non-current ', 25), (' employee benefits - payroll ', 25), (' abandonment and decommissioning costs ', 25), (' provision for associate funding ', 25), (' trade payables - related parties ', 25), (' total non-current employee benefits ', 25), (' non-current-liability for long service leave ', 25), (' provision for long service leave ', 25), (' Deferred income', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('non-current trade and other payables ', 50), (' non-current - liability for long-service leave ', 50), (' contract liabilites - non-current ', 50), (' abandonment and decommissioning costs ', 50), (' non-current-liability for long service leave ', 50), (' derivative contracts - at fair value ', 40), (' employee benefits - non current ', 40), (' employee benefits - payroll ', 40), (' provision for associate funding ', 40), (' total non-current employee benefits ', 40), (' electricity derivatives at fair value through oci ', 30), (' provisions - non-current ', 30), (' make good provisions ', 30), (' trade payables - related parties ', 30), (' provision for long service leave ', 30), (' Deferred income', 30)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [(' make good provisions ', 100), (' electricity derivatives at fair value through oci ', 50), ('non-current trade and other payables ', 25), (' derivative contracts - at fair value ', 25), (' employee benefits - non current ', 25), (' non-current - liability for long-service leave ', 25), (' provisions - non-current ', 25), (' contract liabilites - non-current ', 25), (' employee benefits - payroll ', 25), (' abandonment and decommissioning costs ', 25), (' provision for associate funding ', 25), (' trade payables - related parties ', 25), (' total non-current employee benefits ', 25), (' non-current-liability for long service leave ', 25), (' provision for long service leave ', 25), (' Deferred income', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none balance at 1 april 2022 , res_fuzz_match = [(' derivative contracts - at fair value ', 47), (' non-current - liability for long-service leave ', 47), (' contract liabilites - non-current ', 47), (' employee benefits - payroll ', 47), (' abandonment and decommissioning costs ', 47), (' non-current-liability for long service leave ', 47), (' provision for long service leave ', 47), ('non-current trade and other payables ', 41), (' trade payables - related parties ', 41), (' total non-current employee benefits ', 41), (' make good provisions ', 40), (' Deferred income', 36), (' electricity derivatives at fair value through oci ', 35), (' employee benefits - non current ', 35), (' provisions - non-current ', 29), (' provision for associate funding ', 29)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [(' total non-current employee benefits ', 100), (' derivative contracts - at fair value ', 60), (' contract liabilites - non-current ', 60), ('non-current trade and other payables ', 40), (' electricity derivatives at fair value through oci ', 40), (' employee benefits - non current ', 40), (' non-current - liability for long-service leave ', 40), (' employee benefits - payroll ', 40), (' abandonment and decommissioning costs ', 40), (' provision for associate funding ', 40), (' trade payables - related parties ', 40), (' non-current-liability for long service leave ', 40), (' provisions - non-current ', 20), (' make good provisions ', 20), (' provision for long service leave ', 20), (' Deferred income', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none provisions made during the year , res_fuzz_match = [('non-current trade and other payables ', 57), (' provisions - non-current ', 57), (' make good provisions ', 50), (' provision for long service leave ', 50), (' trade payables - related parties ', 46), (' provision for associate funding ', 45), (' electricity derivatives at fair value through oci ', 40), (' abandonment and decommissioning costs ', 38), (' employee benefits - non current ', 37), (' non-current - liability for long-service leave ', 37), (' non-current-liability for long service leave ', 37), (' employee benefits - payroll ', 36), (' Deferred income', 36), (' total non-current employee benefits ', 34), (' derivative contracts - at fair value ', 33), (' contract liabilites - non-current ', 32)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [(' total non-current employee benefits ', 100), (' derivative contracts - at fair value ', 60), (' contract liabilites - non-current ', 60), ('non-current trade and other payables ', 40), (' electricity derivatives at fair value through oci ', 40), (' employee benefits - non current ', 40), (' non-current - liability for long-service leave ', 40), (' employee benefits - payroll ', 40), (' abandonment and decommissioning costs ', 40), (' provision for associate funding ', 40), (' trade payables - related parties ', 40), (' non-current-liability for long service leave ', 40), (' provisions - non-current ', 20), (' make good provisions ', 20), (' provision for long service leave ', 20), (' Deferred income', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none provisions used during the year , res_fuzz_match = [(' provisions - non-current ', 64), ('non-current trade and other payables ', 52), (' provision for long service leave ', 51), (' make good provisions ', 50), (' provision for associate funding ', 45), (' non-current-liability for long service leave ', 41), (' electricity derivatives at fair value through oci ', 38), (' trade payables - related parties ', 38), (' employee benefits - non current ', 37), (' employee benefits - payroll ', 36), (' Deferred income', 36), (' derivative contracts - at fair value ', 34), (' non-current - liability for long-service leave ', 34), (' total non-current employee benefits ', 34), (' abandonment and decommissioning costs ', 31), (' contract liabilites - non-current ', 28)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [(' total non-current employee benefits ', 100), (' derivative contracts - at fair value ', 60), (' contract liabilites - non-current ', 60), ('non-current trade and other payables ', 40), (' electricity derivatives at fair value through oci ', 40), (' employee benefits - non current ', 40), (' non-current - liability for long-service leave ', 40), (' employee benefits - payroll ', 40), (' abandonment and decommissioning costs ', 40), (' provision for associate funding ', 40), (' trade payables - related parties ', 40), (' non-current-liability for long service leave ', 40), (' provisions - non-current ', 20), (' make good provisions ', 20), (' provision for long service leave ', 20), (' Deferred income', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none balance at 31 march 2023 , res_fuzz_match = [(' employee benefits - payroll ', 47), (' abandonment and decommissioning costs ', 47), (' Deferred income', 45), ('non-current trade and other payables ', 41), (' derivative contracts - at fair value ', 41), (' non-current - liability for long-service leave ', 41), (' trade payables - related parties ', 41), (' non-current-liability for long service leave ', 41), (' provision for long service leave ', 41), (' electricity derivatives at fair value through oci ', 35), (' employee benefits - non current ', 35), (' contract liabilites - non-current ', 35), (' total non-current employee benefits ', 35), (' provisions - non-current ', 29), (' provision for associate funding ', 29), (' make good provisions ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [(' total non-current employee benefits ', 100), (' derivative contracts - at fair value ', 60), (' contract liabilites - non-current ', 60), ('non-current trade and other payables ', 40), (' electricity derivatives at fair value through oci ', 40), (' employee benefits - non current ', 40), (' non-current - liability for long-service leave ', 40), (' employee benefits - payroll ', 40), (' abandonment and decommissioning costs ', 40), (' provision for associate funding ', 40), (' trade payables - related parties ', 40), (' non-current-liability for long service leave ', 40), (' provisions - non-current ', 20), (' make good provisions ', 20), (' provision for long service leave ', 20), (' Deferred income', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none current , res_fuzz_match = [(' employee benefits - non current ', 92), (' non-current-liability for long service leave ', 83), ('non-current trade and other payables ', 67), (' provisions - non-current ', 67), (' total non-current employee benefits ', 67), (' non-current - liability for long-service leave ', 58), (' contract liabilites - non-current ', 58), (' employee benefits - payroll ', 50), (' abandonment and decommissioning costs ', 42), (' derivative contracts - at fair value ', 33), (' provision for associate funding ', 33), (' trade payables - related parties ', 33), (' provision for long service leave ', 33), (' Deferred income', 27), (' electricity derivatives at fair value through oci ', 25), (' make good provisions ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [(' total non-current employee benefits ', 100), (' derivative contracts - at fair value ', 60), (' contract liabilites - non-current ', 60), ('non-current trade and other payables ', 40), (' electricity derivatives at fair value through oci ', 40), (' employee benefits - non current ', 40), (' non-current - liability for long-service leave ', 40), (' employee benefits - payroll ', 40), (' abandonment and decommissioning costs ', 40), (' provision for associate funding ', 40), (' trade payables - related parties ', 40), (' non-current-liability for long service leave ', 40), (' provisions - non-current ', 20), (' make good provisions ', 20), (' provision for long service leave ', 20), (' Deferred income', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none non-current , res_fuzz_match = [(' provisions - non-current ', 75), (' total non-current employee benefits ', 75), (' employee benefits - non current ', 67), (' contract liabilites - non-current ', 67), ('non-current trade and other payables ', 58), (' non-current - liability for long-service leave ', 58), (' non-current-liability for long service leave ', 58), (' abandonment and decommissioning costs ', 50), (' derivative contracts - at fair value ', 42), (' Deferred income', 36), (' electricity derivatives at fair value through oci ', 33), (' employee benefits - payroll ', 33), (' provision for associate funding ', 33), (' make good provisions ', 33), (' provision for long service leave ', 33), (' trade payables - related parties ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [(' total non-current employee benefits ', 100), (' derivative contracts - at fair value ', 60), (' contract liabilites - non-current ', 60), ('non-current trade and other payables ', 40), (' electricity derivatives at fair value through oci ', 40), (' employee benefits - non current ', 40), (' non-current - liability for long-service leave ', 40), (' employee benefits - payroll ', 40), (' abandonment and decommissioning costs ', 40), (' provision for associate funding ', 40), (' trade payables - related parties ', 40), (' non-current-liability for long service leave ', 40), (' provisions - non-current ', 20), (' make good provisions ', 20), (' provision for long service leave ', 20), (' Deferred income', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('non-current trade and other payables ', 50), (' non-current - liability for long-service leave ', 50), (' contract liabilites - non-current ', 50), (' abandonment and decommissioning costs ', 50), (' non-current-liability for long service leave ', 50), (' derivative contracts - at fair value ', 40), (' employee benefits - non current ', 40), (' employee benefits - payroll ', 40), (' provision for associate funding ', 40), (' total non-current employee benefits ', 40), (' electricity derivatives at fair value through oci ', 30), (' provisions - non-current ', 30), (' make good provisions ', 30), (' trade payables - related parties ', 30), (' provision for long service leave ', 30), (' Deferred income', 30)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [(' total non-current employee benefits ', 100), (' derivative contracts - at fair value ', 60), (' contract liabilites - non-current ', 60), ('non-current trade and other payables ', 40), (' electricity derivatives at fair value through oci ', 40), (' employee benefits - non current ', 40), (' non-current - liability for long-service leave ', 40), (' employee benefits - payroll ', 40), (' abandonment and decommissioning costs ', 40), (' provision for associate funding ', 40), (' trade payables - related parties ', 40), (' non-current-liability for long service leave ', 40), (' provisions - non-current ', 20), (' make good provisions ', 20), (' provision for long service leave ', 20), (' Deferred income', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 7, 8, 9, 10, 11, 11, 12, 13, 14, 15, 16, 17, 18, 18, 19, 20], 'score': [92, 100, 100, 100, 100, 92, 100, 100, 100, 100, 100, 100, 100, 92, 100, 100, 100], 'value': [896.0, 131.0, 60.0, -21.0, 170.0, 0.0, 0.0, 170.0, 170.0, 1393.0, 514.0, -635.0, 1272.0, 896.0, 896.0, 376.0, 1272.0], 'label': ['None Current', "$'000 good", "$'000 good", "$'000 good", "$'000 good", 'None Current', "$'000 good", "$'000 good", "$'000 good", "$'000 TOTAL", "$'000 TOTAL", "$'000 TOTAL", "$'000 TOTAL", 'None Current', "$'000 TOTAL", "$'000 TOTAL", "$'000 TOTAL"], 'year': [], 'colname_found': ['rows', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'columns', 'columns']}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-25 12:24:57+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-25 12:24:57+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-25 12:24:57+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: calculate_other_non_current_liabilities
2023-08-25 12:24:57+0530 - sLogger - ERROR - error occured: 2022
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total non-current lia bilities , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net a ssets , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = lease obligation , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total non-current lia bilities , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net a ssets , res_fuzz_match = [('', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares ', ' fully paid ordinary shares ', ' issued and paid-up share capital ', ' retained profits ', ' ordinary shares fully paid ', ' total issued capital ', ' on issue, fully paid ', ' Fully paid Preference shares ', ' Profits captialised on redemption of preference shares']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' issued capital ', 100), (' share capital ', 67), (' share capital ', 67), (' equity share capital ', 57), (' contributed equity ', 38), (' contributed equity', 38), (' perpetual equity instrument ', 34), ('common stock ', 27)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 8000.0, 'line_item_label': ['Issued capital'], 'note_numbers': ['20'], 'line_item_value': [8000.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' issued capital ', 100), (' share capital ', 67), (' share capital ', 67), (' equity share capital ', 57), (' contributed equity ', 38), (' contributed equity', 38), (' perpetual equity instrument ', 34), ('common stock ', 27)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 8000.0, 'line_item_label': ['Issued capital'], 'note_numbers': ['20'], 'line_item_value': [8000.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-25 12:24:57+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('Share premium', 35)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('Share premium', 35)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings ', ' general reserves ', ' accumulated losses ', ' retained earnings and dividends on equity instruments ', ' movements in retained earnings']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' retained profits', 43), (' accumulated losses ', 36), (' retained earnings ', 29), ('other equity ', 27), (' reserves surplus ', 26)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 19983.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [19983.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' retained profits', 43), (' accumulated losses ', 36), (' retained earnings ', 29), ('other equity ', 27), (' reserves surplus ', 26)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 23039.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [23039.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest ', 33), (' non controlling interest ', 33), (' minority interest ', 33), (' noncontrolling interest ', 21), (' non-controlling interest', 21)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest ', 33), (' non controlling interest ', 33), (' minority interest ', 33), (' noncontrolling interest ', 21), (' non-controlling interest', 21)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve ', ' hedge reserve ', ' Foreign currency translation reserves']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve ', ' cash flow hedge reserve ', ' reserve in joint venture ', ' other reserve ', ' total other reserves ', ' tax reserve ', ' other  components of equity ', ' hedge reserve']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve ', ' hedge reserve ', ' Foreign currency translation reserves'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve ', 16), (' Foreign currency translation reserves', 16), (' hedge reserve ', 12), ('other reserves ', 11)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves ', 27), (' foreign currency translation reserve ', 24), (' Foreign currency translation reserves', 24), (' hedge reserve ', 19), (' reserves ', 12)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve ', 43), (' Foreign currency translation reserves', 43), (' hedge reserve ', 36), (' reserves ', 24)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve ', ' hedge reserve ', ' Foreign currency translation reserves'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve ', 16), (' Foreign currency translation reserves', 16), (' hedge reserve ', 12), ('other reserves ', 11)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves ', 27), (' foreign currency translation reserve ', 24), (' Foreign currency translation reserves', 24), (' hedge reserve ', 19), (' reserves ', 12)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve ', 43), (' Foreign currency translation reserves', 43), (' hedge reserve ', 36), (' reserves ', 24)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-25 12:24:57+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-25 12:24:57+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['cost ', ' gross ', ' investment property ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction ', ' Mine infrastructure ', ' Assets under construction ', ' Capitalised pre stripping costs ', ' Other assets in progress ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Freehold land ', ' Buildings ', ' Subsea ', ' Marine  Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings ', '']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers ', ' Less allowance for impairment']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = restricted deposits , res_fuzz_match = [(' receivable ', 50), (' trade receivables ', 42), (' government subsidies receivable ', 38), (' trade and other receivables', 38), ('account receivables ', 36), (' billed ', 25), (' unbilled ', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total current a sse ts , res_fuzz_match = [('account receivables ', 50), (' trade receivables ', 42), (' government subsidies receivable ', 41), (' unbilled ', 40), (' trade and other receivables', 35), (' receivable ', 33), (' billed ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' trade and other receivables', 40), (' trade receivables ', 35), (' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 22), (' billed ', 0), (' unbilled ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade receivables ', 50), (' trade and other receivables', 44), ('account receivables ', 43), (' government subsidies receivable ', 43), (' unbilled ', 40), (' receivable ', 33), (' billed ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 30), (' trade and other receivables', 27), (' trade receivables ', 26), (' billed ', 25), (' unbilled ', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total non-current a sse ts , res_fuzz_match = [(' trade and other receivables', 41), ('account receivables ', 36), (' government subsidies receivable ', 35), (' trade receivables ', 33), (' receivable ', 33), (' billed ', 25), (' unbilled ', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 4004.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['11'], 'line_item_value': [4004.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = restricted deposits , res_fuzz_match = [(' receivable ', 50), (' trade receivables ', 42), (' government subsidies receivable ', 38), (' trade and other receivables', 38), ('account receivables ', 36), (' billed ', 25), (' unbilled ', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total current a sse ts , res_fuzz_match = [('account receivables ', 50), (' trade receivables ', 42), (' government subsidies receivable ', 41), (' unbilled ', 40), (' trade and other receivables', 35), (' receivable ', 33), (' billed ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' trade and other receivables', 40), (' trade receivables ', 35), (' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 22), (' billed ', 0), (' unbilled ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' trade receivables ', 50), (' trade and other receivables', 44), ('account receivables ', 43), (' government subsidies receivable ', 43), (' unbilled ', 40), (' receivable ', 33), (' billed ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' government subsidies receivable ', 33), (' receivable ', 33), ('account receivables ', 30), (' trade and other receivables', 27), (' trade receivables ', 26), (' billed ', 25), (' unbilled ', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total non-current a sse ts , res_fuzz_match = [(' trade and other receivables', 41), ('account receivables ', 36), (' government subsidies receivable ', 35), (' trade receivables ', 33), (' receivable ', 33), (' billed ', 25), (' unbilled ', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 5420.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['11'], 'line_item_value': [5420.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers ', ' Less allowance for impairment'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = current trade receivables , res_fuzz_match = [('trade receivables ', 100), (' related party receivables ', 67), (' net trade debtors ', 62), (' share of joint venture receivables ', 60), (' trade debtors ', 58), (' other debtors ', 42), ('charges paid in advance ', 41), (' receivables from related parties ', 40), (' allowance for expected credit loss ', 35), (' trade debtors from contracts with customers ', 35), (' Less allowance for impairment', 30), (' provision for impairment losses ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = current less: allowance for impairment , res_fuzz_match = [(' Less allowance for impairment', 100), (' provision for impairment losses ', 62), (' allowance for expected credit loss ', 44), (' receivables from related parties ', 40), (' net trade debtors ', 38), (' trade debtors from contracts with customers ', 38), (' share of joint venture receivables ', 36), ('charges paid in advance ', 35), ('trade receivables ', 33), (' related party receivables ', 33), (' trade debtors ', 33), (' other debtors ', 33)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = current other receivables and prepayments , res_fuzz_match = [('trade receivables ', 75), (' related party receivables ', 67), (' other debtors ', 58), (' share of joint venture receivables ', 56), (' receivables from related parties ', 52), (' net trade debtors ', 44), ('charges paid in advance ', 41), (' provision for impairment losses ', 36), (' trade debtors from contracts with customers ', 35), (' trade debtors ', 33), (' Less allowance for impairment', 33), (' allowance for expected credit loss ', 32)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' allowance for expected credit loss ', 46), (' trade debtors from contracts with customers ', 46), (' trade debtors ', 42), (' share of joint venture receivables ', 38), (' net trade debtors ', 38), (' receivables from related parties ', 38), (' other debtors ', 33), ('charges paid in advance ', 31), (' provision for impairment losses ', 31), ('trade receivables ', 25), (' related party receivables ', 23), (' Less allowance for impairment', 23)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = current trade receivables , res_fuzz_match = [('trade receivables ', 100), (' related party receivables ', 67), (' net trade debtors ', 62), (' share of joint venture receivables ', 60), (' trade debtors ', 58), (' other debtors ', 42), ('charges paid in advance ', 41), (' receivables from related parties ', 40), (' allowance for expected credit loss ', 35), (' trade debtors from contracts with customers ', 35), (' Less allowance for impairment', 30), (' provision for impairment losses ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = current less: allowance for impairment , res_fuzz_match = [(' Less allowance for impairment', 100), (' provision for impairment losses ', 62), (' allowance for expected credit loss ', 44), (' receivables from related parties ', 40), (' net trade debtors ', 38), (' trade debtors from contracts with customers ', 38), (' share of joint venture receivables ', 36), ('charges paid in advance ', 35), ('trade receivables ', 33), (' related party receivables ', 33), (' trade debtors ', 33), (' other debtors ', 33)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = current other receivables and prepayments , res_fuzz_match = [('trade receivables ', 75), (' related party receivables ', 67), (' other debtors ', 58), (' share of joint venture receivables ', 56), (' receivables from related parties ', 52), (' net trade debtors ', 44), ('charges paid in advance ', 41), (' provision for impairment losses ', 36), (' trade debtors from contracts with customers ', 35), (' trade debtors ', 33), (' Less allowance for impairment', 33), (' allowance for expected credit loss ', 32)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' allowance for expected credit loss ', 46), (' trade debtors from contracts with customers ', 46), (' trade debtors ', 42), (' share of joint venture receivables ', 38), (' net trade debtors ', 38), (' receivables from related parties ', 38), (' other debtors ', 33), ('charges paid in advance ', 31), (' provision for impairment losses ', 31), ('trade receivables ', 25), (' related party receivables ', 23), (' Less allowance for impairment', 23)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers ', 0), (' Less allowance for impairment', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 4, 5], 'score': [100, 100, 100, 100], 'value': [4827.0, -110.0, 3222.0, -105.0], 'label': ['Current Trade receivables', 'Current Less: Allowance for impairment', 'Current Trade receivables', 'Current Less: Allowance for impairment'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-25 12:24:57+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-25 12:24:57+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities ', ' Rendering of services ', ' Revenue from rendering of services']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities ', ' Rendering of services ', ' Revenue from rendering of services'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue ', 100), (' Sales revenue ', 71), ('revenue from operations ', 55), (' revenue from continuing activities ', 39), (' Revenue from rendering of services', 39), (' revenue from contracts with customers ', 32), (' Rendering of services ', 32), (' net sales ', 29), (' sale of products ', 22), (' from trading business ', 19), (' Sale of coal ', 13), (' transmission and distribution business ', 12)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal ', 78), (' net sales ', 71), (' sale of products ', 67), (' Sales revenue ', 50), (' from trading business ', 33), (' revenue from contracts with customers ', 29), (' revenue from continuing activities ', 29), (' Rendering of services ', 27), ('revenue from operations ', 24), (' Revenue from rendering of services', 24), (' transmission and distribution business ', 22), (' Revenue ', 13)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' from trading business ', 37), ('revenue from operations ', 36), (' sale of products ', 33), (' revenue from contracts with customers ', 32), (' Rendering of services ', 32), (' Revenue from rendering of services', 27), (' transmission and distribution business ', 25), (' revenue from continuing activities ', 22), (' Sale of coal ', 19), (' Sales revenue ', 17), (' Revenue ', 11), (' net sales ', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' from trading business ', 46), ('revenue from operations ', 44), (' Sale of coal ', 40), (' revenue from contracts with customers ', 37), (' revenue from continuing activities ', 33), (' Rendering of services ', 33), (' net sales ', 32), (' Revenue from rendering of services', 28), (' Sales revenue ', 27), (' sale of products ', 26), (' transmission and distribution business ', 21), (' Revenue ', 12)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' transmission and distribution business ', 64), (' Revenue from rendering of services', 40), (' Sales revenue ', 39), (' revenue from continuing activities ', 36), (' revenue from contracts with customers ', 35), (' sale of products ', 32), (' Rendering of services ', 32), (' net sales ', 30), ('revenue from operations ', 29), (' Revenue ', 26), (' from trading business ', 25), (' Sale of coal ', 24)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' transmission and distribution business ', 45), (' revenue from continuing activities ', 44), (' Revenue from rendering of services', 39), ('revenue from operations ', 38), (' Sales revenue ', 37), (' Revenue ', 36), (' net sales ', 33), (' revenue from contracts with customers ', 33), (' sale of products ', 29), (' Rendering of services ', 28), (' from trading business ', 26), (' Sale of coal ', 24)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('revenue from operations ', 68), (' revenue from continuing activities ', 60), (' from trading business ', 49), (' revenue from contracts with customers ', 48), (' Revenue from rendering of services', 47), (' Sale of coal ', 32), (' Sales revenue ', 30), (' sale of products ', 29), (' Revenue ', 29), (' Rendering of services ', 29), (' transmission and distribution business ', 28), (' net sales ', 27)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' revenue from continuing activities ', 42), (' transmission and distribution business ', 34), (' Revenue from rendering of services', 32), (' revenue from contracts with customers ', 31), (' Rendering of services ', 31), (' from trading business ', 29), ('revenue from operations ', 21), (' net sales ', 19), (' Sale of coal ', 18), (' Sales revenue ', 17), (' sale of products ', 16), (' Revenue ', 11)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' Sales revenue ', 40), (' Rendering of services ', 37), (' transmission and distribution business ', 33), (' Revenue from rendering of services', 31), (' Revenue ', 30), (' from trading business ', 28), ('revenue from operations ', 27), (' net sales ', 27), (' revenue from contracts with customers ', 26), (' sale of products ', 23), (' revenue from continuing activities ', 21), (' Sale of coal ', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Sale of coal ', 42), (' revenue from contracts with customers ', 38), (' sale of products ', 37), (' net sales ', 35), (' revenue from continuing activities ', 35), (' from trading business ', 33), (' Revenue from rendering of services', 30), ('revenue from operations ', 26), (' transmission and distribution business ', 23), (' Sales revenue ', 23), (' Rendering of services ', 21), (' Revenue ', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' from trading business ', 43), ('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' transmission and distribution business ', 36), (' sale of products ', 35), (' Revenue from rendering of services', 34), (' revenue from continuing activities ', 30), (' Rendering of services ', 29), (' net sales ', 27), (' Sale of coal ', 26), (' Sales revenue ', 24), (' Revenue ', 14)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' from trading business ', 45), (' Sales revenue ', 37), (' Rendering of services ', 34), (' transmission and distribution business ', 32), (' Sale of coal ', 32), (' sale of products ', 29), (' revenue from contracts with customers ', 29), (' revenue from continuing activities ', 29), (' Revenue from rendering of services', 29), (' Revenue ', 27), ('revenue from operations ', 25), (' net sales ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('revenue from operations ', 49), (' sale of products ', 42), (' from trading business ', 39), (' Revenue from rendering of services', 39), (' revenue from contracts with customers ', 38), (' Rendering of services ', 35), (' transmission and distribution business ', 33), (' revenue from continuing activities ', 30), (' net sales ', 28), (' Sales revenue ', 25), (' Revenue ', 22), (' Sale of coal ', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Revenue from rendering of services', 43), (' revenue from contracts with customers ', 41), (' from trading business ', 38), (' revenue from continuing activities ', 38), ('revenue from operations ', 37), (' Sales revenue ', 36), (' Rendering of services ', 34), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' Sale of coal ', 26), (' net sales ', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [(' Sales revenue ', 42), (' from trading business ', 38), (' Revenue from rendering of services', 38), ('revenue from operations ', 37), (' revenue from contracts with customers ', 37), (' sale of products ', 35), (' revenue from continuing activities ', 34), (' Rendering of services ', 34), (' Sale of coal ', 32), (' Revenue ', 29), (' transmission and distribution business ', 28), (' net sales ', 27)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 42847.0, 'line_item_label': ['Revenue'], 'note_numbers': ['4'], 'line_item_value': [42847.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities ', ' Rendering of services ', ' Revenue from rendering of services'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue ', 100), (' Sales revenue ', 71), ('revenue from operations ', 55), (' revenue from continuing activities ', 39), (' Revenue from rendering of services', 39), (' revenue from contracts with customers ', 32), (' Rendering of services ', 32), (' net sales ', 29), (' sale of products ', 22), (' from trading business ', 19), (' Sale of coal ', 13), (' transmission and distribution business ', 12)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal ', 78), (' net sales ', 71), (' sale of products ', 67), (' Sales revenue ', 50), (' from trading business ', 33), (' revenue from contracts with customers ', 29), (' revenue from continuing activities ', 29), (' Rendering of services ', 27), ('revenue from operations ', 24), (' Revenue from rendering of services', 24), (' transmission and distribution business ', 22), (' Revenue ', 13)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' from trading business ', 37), ('revenue from operations ', 36), (' sale of products ', 33), (' revenue from contracts with customers ', 32), (' Rendering of services ', 32), (' Revenue from rendering of services', 27), (' transmission and distribution business ', 25), (' revenue from continuing activities ', 22), (' Sale of coal ', 19), (' Sales revenue ', 17), (' Revenue ', 11), (' net sales ', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' from trading business ', 46), ('revenue from operations ', 44), (' Sale of coal ', 40), (' revenue from contracts with customers ', 37), (' revenue from continuing activities ', 33), (' Rendering of services ', 33), (' net sales ', 32), (' Revenue from rendering of services', 28), (' Sales revenue ', 27), (' sale of products ', 26), (' transmission and distribution business ', 21), (' Revenue ', 12)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' transmission and distribution business ', 64), (' Revenue from rendering of services', 40), (' Sales revenue ', 39), (' revenue from continuing activities ', 36), (' revenue from contracts with customers ', 35), (' sale of products ', 32), (' Rendering of services ', 32), (' net sales ', 30), ('revenue from operations ', 29), (' Revenue ', 26), (' from trading business ', 25), (' Sale of coal ', 24)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' transmission and distribution business ', 45), (' revenue from continuing activities ', 44), (' Revenue from rendering of services', 39), ('revenue from operations ', 38), (' Sales revenue ', 37), (' Revenue ', 36), (' net sales ', 33), (' revenue from contracts with customers ', 33), (' sale of products ', 29), (' Rendering of services ', 28), (' from trading business ', 26), (' Sale of coal ', 24)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('revenue from operations ', 68), (' revenue from continuing activities ', 60), (' from trading business ', 49), (' revenue from contracts with customers ', 48), (' Revenue from rendering of services', 47), (' Sale of coal ', 32), (' Sales revenue ', 30), (' sale of products ', 29), (' Revenue ', 29), (' Rendering of services ', 29), (' transmission and distribution business ', 28), (' net sales ', 27)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' revenue from continuing activities ', 42), (' transmission and distribution business ', 34), (' Revenue from rendering of services', 32), (' revenue from contracts with customers ', 31), (' Rendering of services ', 31), (' from trading business ', 29), ('revenue from operations ', 21), (' net sales ', 19), (' Sale of coal ', 18), (' Sales revenue ', 17), (' sale of products ', 16), (' Revenue ', 11)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' Sales revenue ', 40), (' Rendering of services ', 37), (' transmission and distribution business ', 33), (' Revenue from rendering of services', 31), (' Revenue ', 30), (' from trading business ', 28), ('revenue from operations ', 27), (' net sales ', 27), (' revenue from contracts with customers ', 26), (' sale of products ', 23), (' revenue from continuing activities ', 21), (' Sale of coal ', 17)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Sale of coal ', 42), (' revenue from contracts with customers ', 38), (' sale of products ', 37), (' net sales ', 35), (' revenue from continuing activities ', 35), (' from trading business ', 33), (' Revenue from rendering of services', 30), ('revenue from operations ', 26), (' transmission and distribution business ', 23), (' Sales revenue ', 23), (' Rendering of services ', 21), (' Revenue ', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' from trading business ', 43), ('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' transmission and distribution business ', 36), (' sale of products ', 35), (' Revenue from rendering of services', 34), (' revenue from continuing activities ', 30), (' Rendering of services ', 29), (' net sales ', 27), (' Sale of coal ', 26), (' Sales revenue ', 24), (' Revenue ', 14)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' from trading business ', 45), (' Sales revenue ', 37), (' Rendering of services ', 34), (' transmission and distribution business ', 32), (' Sale of coal ', 32), (' sale of products ', 29), (' revenue from contracts with customers ', 29), (' revenue from continuing activities ', 29), (' Revenue from rendering of services', 29), (' Revenue ', 27), ('revenue from operations ', 25), (' net sales ', 25)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('revenue from operations ', 49), (' sale of products ', 42), (' from trading business ', 39), (' Revenue from rendering of services', 39), (' revenue from contracts with customers ', 38), (' Rendering of services ', 35), (' transmission and distribution business ', 33), (' revenue from continuing activities ', 30), (' net sales ', 28), (' Sales revenue ', 25), (' Revenue ', 22), (' Sale of coal ', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Revenue from rendering of services', 43), (' revenue from contracts with customers ', 41), (' from trading business ', 38), (' revenue from continuing activities ', 38), ('revenue from operations ', 37), (' Sales revenue ', 36), (' Rendering of services ', 34), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' Sale of coal ', 26), (' net sales ', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [(' Sales revenue ', 42), (' from trading business ', 38), (' Revenue from rendering of services', 38), ('revenue from operations ', 37), (' revenue from contracts with customers ', 37), (' sale of products ', 35), (' revenue from continuing activities ', 34), (' Rendering of services ', 34), (' Sale of coal ', 32), (' Revenue ', 29), (' transmission and distribution business ', 28), (' net sales ', 27)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 51175.0, 'line_item_label': ['Revenue'], 'note_numbers': ['4'], 'line_item_value': [51175.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none sale of goods , res_fuzz_match = [('Sale of goods ', 100), (' Sale of goods - Cars ', 82), (' Sale of goods - Motorcycles ', 64), (' Sale of goods - Marine ', 64), (' Condensate ', 57), (' Feed gas income ', 38), (' Sale of goods - Spareparts ', 37), (' Goods sold to customer from warehouse ', 36), (' Goods sold to customer direct from supplier ', 36), (' hedge loss / gain ', 36), (' LNG ', 33), (' Total Revenue ', 33), (' Gas transportation income ', 29), (' revenue from continuing activities ', 29), (' revenue form contracts with customers ', 29), (' contribution from joint venture', 29), (' Domgas ', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Sale of goods ', 0), (' LNG ', 0), (' Condensate ', 0), (' Domgas ', 0), (' Feed gas income ', 0), (' Gas transportation income ', 0), (' Sale of goods - Cars ', 0), (' Sale of goods - Motorcycles ', 0), (' Sale of goods - Marine ', 0), (' Sale of goods - Spareparts ', 0), (' Total Revenue ', 0), (' Goods sold to customer from warehouse ', 0), (' Goods sold to customer direct from supplier ', 0), (' revenue from continuing activities ', 0), (' revenue form contracts with customers ', 0), (' hedge loss / gain ', 0), (' contribution from joint venture', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none rendering of services , res_fuzz_match = [(' Condensate ', 57), (' Total Revenue ', 42), (' Gas transportation income ', 40), (' Sale of goods - Marine ', 40), (' Sale of goods - Spareparts ', 39), (' Goods sold to customer direct from supplier ', 39), (' Feed gas income ', 38), (' Sale of goods - Cars ', 38), (' hedge loss / gain ', 36), ('Sale of goods ', 33), (' LNG ', 33), (' Sale of goods - Motorcycles ', 33), (' revenue form contracts with customers ', 33), (' contribution from joint venture', 33), (' Goods sold to customer from warehouse ', 28), (' revenue from continuing activities ', 28), (' Domgas ', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Sale of goods ', 0), (' LNG ', 0), (' Condensate ', 0), (' Domgas ', 0), (' Feed gas income ', 0), (' Gas transportation income ', 0), (' Sale of goods - Cars ', 0), (' Sale of goods - Motorcycles ', 0), (' Sale of goods - Marine ', 0), (' Sale of goods - Spareparts ', 0), (' Total Revenue ', 0), (' Goods sold to customer from warehouse ', 0), (' Goods sold to customer direct from supplier ', 0), (' revenue from continuing activities ', 0), (' revenue form contracts with customers ', 0), (' hedge loss / gain ', 0), (' contribution from joint venture', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Total Revenue ', 50), (' Condensate ', 43), (' Domgas ', 40), (' Sale of goods - Cars ', 40), (' Sale of goods - Motorcycles ', 40), (' Sale of goods - Marine ', 40), (' Goods sold to customer from warehouse ', 40), (' Goods sold to customer direct from supplier ', 40), (' revenue from continuing activities ', 40), (' revenue form contracts with customers ', 40), (' contribution from joint venture', 40), ('Sale of goods ', 33), (' LNG ', 33), (' Gas transportation income ', 30), (' Sale of goods - Spareparts ', 30), (' hedge loss / gain ', 30), (' Feed gas income ', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Sale of goods ', 0), (' LNG ', 0), (' Condensate ', 0), (' Domgas ', 0), (' Feed gas income ', 0), (' Gas transportation income ', 0), (' Sale of goods - Cars ', 0), (' Sale of goods - Motorcycles ', 0), (' Sale of goods - Marine ', 0), (' Sale of goods - Spareparts ', 0), (' Total Revenue ', 0), (' Goods sold to customer from warehouse ', 0), (' Goods sold to customer direct from supplier ', 0), (' revenue from continuing activities ', 0), (' revenue form contracts with customers ', 0), (' hedge loss / gain ', 0), (' contribution from joint venture', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none sale of goods , res_fuzz_match = [('Sale of goods ', 100), (' Sale of goods - Cars ', 82), (' Sale of goods - Motorcycles ', 64), (' Sale of goods - Marine ', 64), (' Condensate ', 57), (' Feed gas income ', 38), (' Sale of goods - Spareparts ', 37), (' Goods sold to customer from warehouse ', 36), (' Goods sold to customer direct from supplier ', 36), (' hedge loss / gain ', 36), (' LNG ', 33), (' Total Revenue ', 33), (' Gas transportation income ', 29), (' revenue from continuing activities ', 29), (' revenue form contracts with customers ', 29), (' contribution from joint venture', 29), (' Domgas ', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Sale of goods ', 0), (' LNG ', 0), (' Condensate ', 0), (' Domgas ', 0), (' Feed gas income ', 0), (' Gas transportation income ', 0), (' Sale of goods - Cars ', 0), (' Sale of goods - Motorcycles ', 0), (' Sale of goods - Marine ', 0), (' Sale of goods - Spareparts ', 0), (' Total Revenue ', 0), (' Goods sold to customer from warehouse ', 0), (' Goods sold to customer direct from supplier ', 0), (' revenue from continuing activities ', 0), (' revenue form contracts with customers ', 0), (' hedge loss / gain ', 0), (' contribution from joint venture', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none rendering of services , res_fuzz_match = [(' Condensate ', 57), (' Total Revenue ', 42), (' Gas transportation income ', 40), (' Sale of goods - Marine ', 40), (' Sale of goods - Spareparts ', 39), (' Goods sold to customer direct from supplier ', 39), (' Feed gas income ', 38), (' Sale of goods - Cars ', 38), (' hedge loss / gain ', 36), ('Sale of goods ', 33), (' LNG ', 33), (' Sale of goods - Motorcycles ', 33), (' revenue form contracts with customers ', 33), (' contribution from joint venture', 33), (' Goods sold to customer from warehouse ', 28), (' revenue from continuing activities ', 28), (' Domgas ', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Sale of goods ', 0), (' LNG ', 0), (' Condensate ', 0), (' Domgas ', 0), (' Feed gas income ', 0), (' Gas transportation income ', 0), (' Sale of goods - Cars ', 0), (' Sale of goods - Motorcycles ', 0), (' Sale of goods - Marine ', 0), (' Sale of goods - Spareparts ', 0), (' Total Revenue ', 0), (' Goods sold to customer from warehouse ', 0), (' Goods sold to customer direct from supplier ', 0), (' revenue from continuing activities ', 0), (' revenue form contracts with customers ', 0), (' hedge loss / gain ', 0), (' contribution from joint venture', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Total Revenue ', 50), (' Condensate ', 43), (' Domgas ', 40), (' Sale of goods - Cars ', 40), (' Sale of goods - Motorcycles ', 40), (' Sale of goods - Marine ', 40), (' Goods sold to customer from warehouse ', 40), (' Goods sold to customer direct from supplier ', 40), (' revenue from continuing activities ', 40), (' revenue form contracts with customers ', 40), (' contribution from joint venture', 40), ('Sale of goods ', 33), (' LNG ', 33), (' Gas transportation income ', 30), (' Sale of goods - Spareparts ', 30), (' hedge loss / gain ', 30), (' Feed gas income ', 20)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Sale of goods ', 0), (' LNG ', 0), (' Condensate ', 0), (' Domgas ', 0), (' Feed gas income ', 0), (' Gas transportation income ', 0), (' Sale of goods - Cars ', 0), (' Sale of goods - Motorcycles ', 0), (' Sale of goods - Marine ', 0), (' Sale of goods - Spareparts ', 0), (' Total Revenue ', 0), (' Goods sold to customer from warehouse ', 0), (' Goods sold to customer direct from supplier ', 0), (' revenue from continuing activities ', 0), (' revenue form contracts with customers ', 0), (' hedge loss / gain ', 0), (' contribution from joint venture', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3], 'score': [100, 100], 'value': [50514.0, 42371.0], 'label': ['None Sale of goods', 'None Sale of goods'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-25 12:24:57+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory ', ' Premises cost ', ' Cost of rendering services']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['Included in cost of sales ', ' cost of goods']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory ', ' Premises cost ', ' Cost of rendering services'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' change in inventory ', 29), (' Cost of rendering services', 25), (' Cost of inventory sold', 24), (' Premises cost ', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0), (' cost of goods sold ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' cost of goods sold ', 61), (' Premises cost ', 60), (' Cost of product sold', 54), (' Cost of rendering services', 52), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), (' change in inventory ', 25), ('expense', 13), ('expenditure', 11)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Premises cost ', 52), (' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of rendering services', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' cost of goods sold ', 31), (' change in inventory ', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), (' Premises cost ', 36), ('total expenses', 35), (' Cost of rendering services', 34), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' cost of goods sold ', 32), (' change in inventory ', 31), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Cost of goods and services sold', 44), ('total expenses', 43), (' Personnel costs', 41), ('expense', 39), (' Cost of product sold', 38), (' Cost of rendering services', 37), (' cost of coal sold', 36), (' Cost of inventory sold', 36), (' change in inventory ', 35), ('total expenditure', 34), (' Premises cost ', 33), (' cost of goods sold ', 31), ('expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('purchase of stock-in-trade', 27)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), (' Premises cost ', 44), ('total expenses', 43), (' Personnel costs', 40), ('expenditure', 38), (' Cost of rendering services', 35), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory ', 32), ('total expenditure', 31), (' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' cost of goods sold ', 27)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Cost of goods and services sold', 47), (' Cost of inventory sold', 44), (' Personnel costs', 44), (' cost of goods sold ', 44), (' Premises cost ', 42), (' Cost of product sold', 41), (' Cost of rendering services', 40), (' cost of coal sold', 39), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory ', 27), ('total expenditure', 26), ('purchase of stock-in-trade', 24), ('total expenses', 24), ('expense', 21), ('expenditure', 19)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' change in inventory ', 43), (' Cost of inventory sold', 38), (' Cost of goods and services sold', 37), (' cost of coal sold', 30), ('total expenditure', 28), (' Cost of product sold', 27), (' Cost of rendering services', 26), ('purchase of stock-in-trade', 25), (' Premises cost ', 25), ('total expenses', 24), (' Personnel costs', 22), (' cost of goods sold ', 22), ('cost of sales', 18), ('Cost of sales', 18), ('expenditure', 17), ('expense', 11)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('total expenses', 62), ('expense', 60), ('expenditure', 50), ('total expenditure', 47), (' change in inventory ', 41), ('purchase of stock-in-trade', 36), (' Cost of inventory sold', 36), (' Personnel costs', 36), (' Cost of rendering services', 31), ('cost of sales', 26), ('Cost of sales', 26), (' Cost of goods and services sold', 26), (' Premises cost ', 24), (' Cost of product sold', 19), (' cost of coal sold', 14), (' cost of goods sold ', 14)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [('cost of sales', 58), ('Cost of sales', 58), (' Personnel costs', 55), (' Cost of inventory sold', 53), (' Cost of rendering services', 48), (' change in inventory ', 47), (' Premises cost ', 46), (' Cost of product sold', 44), (' cost of goods sold ', 41), (' Cost of goods and services sold', 40), ('purchase of stock-in-trade', 35), (' cost of coal sold', 34), ('total expenses', 22), ('total expenditure', 19), ('expenditure', 16), ('expense', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Cost of product sold', 41), (' Cost of inventory sold', 39), ('total expenditure', 37), (' Premises cost ', 36), ('total expenses', 35), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory ', 32), (' Cost of goods and services sold', 30), (' Cost of rendering services', 30), (' cost of goods sold ', 28), ('expenditure', 25), ('expense', 14)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory ', 32), (' Cost of goods and services sold', 29), (' Cost of rendering services', 29), (' cost of coal sold', 27), (' Personnel costs', 27), (' cost of goods sold ', 27), (' Cost of product sold', 24), (' Premises cost ', 22)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [(' Cost of product sold', 42), (' Personnel costs', 40), ('total expenditure', 38), (' Cost of rendering services', 36), (' Cost of goods and services sold', 35), (' Cost of inventory sold', 35), (' cost of goods sold ', 34), ('expenditure', 32), (' Premises cost ', 31), ('purchase of stock-in-trade', 30), ('total expenses', 30), (' cost of coal sold', 29), (' change in inventory ', 28), ('cost of sales', 27), ('Cost of sales', 27), ('expense', 22)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' change in inventory ', 43), ('total expenses', 41), (' Cost of rendering services', 40), (' cost of coal sold', 39), (' Personnel costs', 39), (' cost of goods sold ', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Premises cost ', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('total expenses', 59), ('total expenditure', 53), (' Cost of inventory sold', 49), ('purchase of stock-in-trade', 44), (' cost of coal sold', 44), (' cost of goods sold ', 44), (' change in inventory ', 43), (' Cost of product sold', 41), (' Cost of rendering services', 40), ('cost of sales', 39), ('Cost of sales', 39), (' Personnel costs', 39), (' Cost of goods and services sold', 38), (' Premises cost ', 36), ('expenditure', 31), ('expense', 29)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': -23823.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-23823.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory ', ' Premises cost ', ' Cost of rendering services'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' change in inventory ', 29), (' Cost of rendering services', 25), (' Cost of inventory sold', 24), (' Premises cost ', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0), (' cost of goods sold ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' cost of goods sold ', 61), (' Premises cost ', 60), (' Cost of product sold', 54), (' Cost of rendering services', 52), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), (' change in inventory ', 25), ('expense', 13), ('expenditure', 11)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Premises cost ', 52), (' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of rendering services', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' cost of goods sold ', 31), (' change in inventory ', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), (' Premises cost ', 36), ('total expenses', 35), (' Cost of rendering services', 34), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' cost of goods sold ', 32), (' change in inventory ', 31), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Cost of goods and services sold', 44), ('total expenses', 43), (' Personnel costs', 41), ('expense', 39), (' Cost of product sold', 38), (' Cost of rendering services', 37), (' cost of coal sold', 36), (' Cost of inventory sold', 36), (' change in inventory ', 35), ('total expenditure', 34), (' Premises cost ', 33), (' cost of goods sold ', 31), ('expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('purchase of stock-in-trade', 27)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('expense', 55), (' Premises cost ', 44), ('total expenses', 43), (' Personnel costs', 40), ('expenditure', 38), (' Cost of rendering services', 35), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory ', 32), ('total expenditure', 31), (' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' cost of goods sold ', 27)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Cost of goods and services sold', 47), (' Cost of inventory sold', 44), (' Personnel costs', 44), (' cost of goods sold ', 44), (' Premises cost ', 42), (' Cost of product sold', 41), (' Cost of rendering services', 40), (' cost of coal sold', 39), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory ', 27), ('total expenditure', 26), ('purchase of stock-in-trade', 24), ('total expenses', 24), ('expense', 21), ('expenditure', 19)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' change in inventory ', 43), (' Cost of inventory sold', 38), (' Cost of goods and services sold', 37), (' cost of coal sold', 30), ('total expenditure', 28), (' Cost of product sold', 27), (' Cost of rendering services', 26), ('purchase of stock-in-trade', 25), (' Premises cost ', 25), ('total expenses', 24), (' Personnel costs', 22), (' cost of goods sold ', 22), ('cost of sales', 18), ('Cost of sales', 18), ('expenditure', 17), ('expense', 11)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('total expenses', 62), ('expense', 60), ('expenditure', 50), ('total expenditure', 47), (' change in inventory ', 41), ('purchase of stock-in-trade', 36), (' Cost of inventory sold', 36), (' Personnel costs', 36), (' Cost of rendering services', 31), ('cost of sales', 26), ('Cost of sales', 26), (' Cost of goods and services sold', 26), (' Premises cost ', 24), (' Cost of product sold', 19), (' cost of coal sold', 14), (' cost of goods sold ', 14)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [('cost of sales', 58), ('Cost of sales', 58), (' Personnel costs', 55), (' Cost of inventory sold', 53), (' Cost of rendering services', 48), (' change in inventory ', 47), (' Premises cost ', 46), (' Cost of product sold', 44), (' cost of goods sold ', 41), (' Cost of goods and services sold', 40), ('purchase of stock-in-trade', 35), (' cost of coal sold', 34), ('total expenses', 22), ('total expenditure', 19), ('expenditure', 16), ('expense', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Cost of product sold', 41), (' Cost of inventory sold', 39), ('total expenditure', 37), (' Premises cost ', 36), ('total expenses', 35), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory ', 32), (' Cost of goods and services sold', 30), (' Cost of rendering services', 30), (' cost of goods sold ', 28), ('expenditure', 25), ('expense', 14)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory ', 32), (' Cost of goods and services sold', 29), (' Cost of rendering services', 29), (' cost of coal sold', 27), (' Personnel costs', 27), (' cost of goods sold ', 27), (' Cost of product sold', 24), (' Premises cost ', 22)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [(' Cost of product sold', 42), (' Personnel costs', 40), ('total expenditure', 38), (' Cost of rendering services', 36), (' Cost of goods and services sold', 35), (' Cost of inventory sold', 35), (' cost of goods sold ', 34), ('expenditure', 32), (' Premises cost ', 31), ('purchase of stock-in-trade', 30), ('total expenses', 30), (' cost of coal sold', 29), (' change in inventory ', 28), ('cost of sales', 27), ('Cost of sales', 27), ('expense', 22)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' change in inventory ', 43), ('total expenses', 41), (' Cost of rendering services', 40), (' cost of coal sold', 39), (' Personnel costs', 39), (' cost of goods sold ', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Premises cost ', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('total expenses', 59), ('total expenditure', 53), (' Cost of inventory sold', 49), ('purchase of stock-in-trade', 44), (' cost of coal sold', 44), (' cost of goods sold ', 44), (' change in inventory ', 43), (' Cost of product sold', 41), (' Cost of rendering services', 40), ('cost of sales', 39), ('Cost of sales', 39), (' Personnel costs', 39), (' Cost of goods and services sold', 38), (' Premises cost ', 36), ('expenditure', 31), ('expense', 29)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': -27968.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-27968.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies ', ' Salaries and employee benefits ', ' marketing and advertising expenses ', ' Selling and marketting expenses ', ' Servicing expenses']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['consum ', ' power ', ' machinery ', ' charges ', ' research ', ' analytical ', ' equipment ', ' exchange ', ' loss on ', ' donation ', ' csr ', ' social ', ' miscellaneous ', ' loss allowance ', ' Included in administrative expenses ', ' Depreciation property ', ' plant and equipment ', ' Depreciation right-of-use assets ', ' Administrative expenses ', ' Wages and salaries ', ' Compulsory superannuation contributions ', ' Payroll on-costs (excluding employee benefit provision) ', ' Staff welfare ', ' Contractors, subcontractors and employee related expenses ', ' Facilities Expense ', ' Rental equipment expenses ', ' Depreciation expense right-of-use asset ', ' Depreciation expense ', ' Amortisation expense ', ' Other expenses ', ' Research and development expenses ', ' employee benefits expenses ', ' depreciation and amortisation expenses ', ' Employee expenses ', ' Distribution Expenses ', ' Depreciation and Amortisation Expenses ', ' Other Expenses from Ordinary Activities ', '  ', ' Defined contribution plans ', ' Other employement costs ', ' Salary & wages expense ', ' Superannuation expense ', ' other administration']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:57+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-25 12:24:57+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies ', ' Salaries and employee benefits ', ' marketing and advertising expenses ', ' Selling and marketting expenses ', ' Servicing expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expenses ', 50), (' Occupancy expenses ', 44), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' levies ', 40), (' Advertising expenses ', 38), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Selling Expenses ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' Servicing expenses', 32), (' depreciation ', 31), (' Selling & distribution expenses ', 30), (' Sales and marketing ', 29), (' property espense ', 29), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' marketing and advertising expenses ', 25), (' employee benefits expense ', 21), (' employee benefit espense ', 21), (' Selling and marketting expenses ', 21), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 15), (' Administration ', 13), (' Salaries and employee benefits ', 12)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing ', 50), (' Lease expenses ', 40), (' Selling Expenses ', 40), (' Royalties ', 38), (' Marketing expenses ', 36), (' Servicing expenses', 36), (' Amortisation expenses ', 35), (' Selling & distribution expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Selling and marketting expenses ', 32), (' levies ', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Salaries and employee benefits ', 29), (' marketing and advertising expenses ', 29), (' Logistics and distribution ', 28), (' Depreciation expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Advertising expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' Occupancy expenses ', 19), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 12)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' depreciation ', 32), (' Marketing expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Royalties ', 32), (' marketing and advertising expenses ', 32), (' Servicing expenses', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Advertising expenses ', 30), (' Distribution expenses ', 29), (' Administrative and other expenses ', 26), (' Occupancy expenses ', 25), (' Selling & distribution expenses ', 24), (' Occupancy ', 24), (' Selling and marketting expenses ', 24), (' Depreciation expenses ', 23), (' Sales and marketing ', 22), (' Administrative expenses ', 21), (' Administration expenses ', 21), (' Salaries and employee benefits ', 21), (' Administration ', 19), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' Management expenses ', 17), (' levies ', 12), ('expenses ', 11)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other expenses ', 61), (' Other expenses ', 61), (' Other expenses ', 61), (' Administrative and other expenses ', 43), (' Administration ', 40), (' property espense ', 38), (' Servicing expenses', 33), (' Amortisation expenses ', 32), (' Sales and marketing ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Lease expenses ', 27), (' Selling Expenses ', 27), (' Depreciation and amortisation expenses ', 27), (' Salaries and employee benefits ', 27), (' marketing and advertising expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Depreciation expenses ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Selling and marketting expenses ', 24), (' Advertising expenses ', 23), (' depreciation ', 22), (' Distribution expenses ', 22), (' Royalties ', 22), (' Management expenses ', 17), (' levies ', 13), ('expenses ', 12), (' Occupancy ', 12)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Selling & distribution expenses ', 91), (' Distribution expenses ', 78), (' Logistics and distribution ', 67), (' Selling and marketting expenses ', 64), (' Administrative expenses ', 63), (' Administration expenses ', 63), (' Selling Expenses ', 61), (' Administrative and other expenses ', 59), (' Advertising expenses ', 55), (' Depreciation and amortisation expenses ', 55), (' Depreciation expenses ', 51), (' Amortisation expenses ', 51), (' Salaries and employee benefits ', 51), (' marketing and advertising expenses ', 51), (' Servicing expenses', 47), (' Sales and marketing ', 45), (' Lease expenses ', 44), (' other expenses ', 43), (' Other expenses ', 43), (' Other expenses ', 43), (' employee benefits expense ', 43), (' employee benefit espense ', 43), (' Marketing expenses ', 42), ('expenses ', 39), (' Occupancy expenses ', 38), (' Management expenses ', 38), (' property espense ', 35), (' Administration ', 35), (' depreciation ', 25), (' Royalties ', 19), (' Occupancy ', 13), (' levies ', 7)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Administrative expenses ', 100), (' Administration expenses ', 100), (' Administrative and other expenses ', 76), (' Distribution expenses ', 75), (' Amortisation expenses ', 73), (' Administration ', 72), (' Advertising expenses ', 71), (' Selling & distribution expenses ', 65), (' Depreciation expenses ', 60), (' Depreciation and amortisation expenses ', 57), ('expenses ', 55), (' employee benefits expense ', 53), (' marketing and advertising expenses ', 52), (' Salaries and employee benefits ', 48), (' employee benefit espense ', 47), (' Selling and marketting expenses ', 47), (' Lease expenses ', 44), (' Selling Expenses ', 44), (' Logistics and distribution ', 44), (' other expenses ', 43), (' Occupancy expenses ', 43), (' Other expenses ', 43), (' Management expenses ', 43), (' Other expenses ', 43), (' Marketing expenses ', 41), (' Servicing expenses', 41), (' Sales and marketing ', 39), (' depreciation ', 35), (' property espense ', 32), (' Royalties ', 17), (' Occupancy ', 10), (' levies ', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' marketing and advertising expenses ', 46), (' Depreciation and amortisation expenses ', 42), (' Selling and marketting expenses ', 41), (' Amortisation expenses ', 39), (' Advertising expenses ', 38), (' Sales and marketing ', 38), (' property espense ', 38), (' Salaries and employee benefits ', 38), (' Administrative expenses ', 37), (' Selling & distribution expenses ', 37), (' Administration expenses ', 37), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' Marketing expenses ', 34), (' Depreciation expenses ', 33), (' Administrative and other expenses ', 33), (' Logistics and distribution ', 33), (' Distribution expenses ', 32), (' Lease expenses ', 30), (' Selling Expenses ', 30), (' Royalties ', 28), (' Administration ', 26), (' other expenses ', 24), (' Occupancy expenses ', 24), (' Other expenses ', 24), (' Other expenses ', 24), (' Servicing expenses', 23), ('expenses ', 21), (' depreciation ', 21), (' Management expenses ', 18), (' Occupancy ', 15), (' levies ', 8)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' Administrative and other expenses ', 36), (' Depreciation and amortisation expenses ', 36), (' Administrative expenses ', 34), (' Administration expenses ', 34), (' marketing and advertising expenses ', 31), (' Servicing expenses', 31), (' Depreciation expenses ', 30), (' Amortisation expenses ', 30), (' Logistics and distribution ', 30), (' Advertising expenses ', 29), (' Sales and marketing ', 29), (' Selling and marketting expenses ', 29), (' Distribution expenses ', 28), (' Administration ', 27), (' Salaries and employee benefits ', 26), (' other expenses ', 24), (' Occupancy expenses ', 24), (' Other expenses ', 24), (' Selling & distribution expenses ', 24), (' Management expenses ', 24), (' Other expenses ', 24), (' Marketing expenses ', 23), (' employee benefits expense ', 23), (' employee benefit espense ', 23), (' Occupancy ', 22), (' property espense ', 21), (' depreciation ', 20), (' Royalties ', 20), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' levies ', 12), ('expenses ', 11)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' Management expenses ', 69), (' Servicing expenses', 67), (' Lease expenses ', 64), (' Occupancy expenses ', 62), ('expenses ', 60), (' Marketing expenses ', 59), (' Selling Expenses ', 56), (' other expenses ', 54), (' Other expenses ', 54), (' Other expenses ', 54), (' depreciation ', 48), (' property espense ', 48), (' Selling and marketting expenses ', 44), (' Depreciation expenses ', 43), (' Amortisation expenses ', 43), (' Advertising expenses ', 41), (' Distribution expenses ', 40), (' Administrative expenses ', 40), (' Selling & distribution expenses ', 40), (' Administration expenses ', 40), (' marketing and advertising expenses ', 40), (' Administrative and other expenses ', 35), (' employee benefits expense ', 33), (' Depreciation and amortisation expenses ', 30), (' Salaries and employee benefits ', 30), (' employee benefit espense ', 28), (' Administration ', 26), (' Logistics and distribution ', 24), (' levies ', 22), (' Sales and marketing ', 21), (' Royalties ', 19), (' Occupancy ', 11)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Administrative and other expenses ', 39), (' Depreciation and amortisation expenses ', 39), (' marketing and advertising expenses ', 39), (' Marketing expenses ', 36), (' Amortisation expenses ', 34), (' Selling & distribution expenses ', 33), (' Sales and marketing ', 33), (' property espense ', 33), (' Distribution expenses ', 32), (' Selling and marketting expenses ', 32), (' Management expenses ', 30), (' Logistics and distribution ', 29), (' Salaries and employee benefits ', 29), (' Servicing expenses', 29), (' Depreciation expenses ', 28), (' Advertising expenses ', 27), (' Royalties ', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' Administration ', 25), (' Lease expenses ', 23), (' Selling Expenses ', 23), (' other expenses ', 22), (' Occupancy expenses ', 22), (' Other expenses ', 22), (' Other expenses ', 22), (' employee benefits expense ', 22), (' employee benefit espense ', 22), (' Occupancy ', 20), (' depreciation ', 18), (' levies ', 11), ('expenses ', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 42), (' employee benefits expense ', 41), (' property espense ', 38), (' Salaries and employee benefits ', 38), (' employee benefit espense ', 36), (' Depreciation expenses ', 33), (' Logistics and distribution ', 33), (' marketing and advertising expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Sales and marketing ', 32), (' other expenses ', 29), (' Marketing expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Other expenses ', 29), (' Servicing expenses', 29), (' depreciation ', 28), (' Selling & distribution expenses ', 28), (' Amortisation expenses ', 28), (' Advertising expenses ', 27), (' Selling and marketting expenses ', 27), (' Administration ', 26), (' Occupancy expenses ', 24), (' Lease expenses ', 24), (' Management expenses ', 24), (' Occupancy ', 22), (' Royalties ', 21), (' Selling Expenses ', 18), (' levies ', 15), ('expenses ', 14)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' other expenses ', 64), (' Other expenses ', 64), (' Management expenses ', 64), (' Other expenses ', 64), (' Marketing expenses ', 62), (' Servicing expenses', 62), (' Lease expenses ', 59), (' Occupancy expenses ', 57), ('expenses ', 55), (' Selling Expenses ', 52), (' property espense ', 52), (' Selling and marketting expenses ', 47), (' Administrative and other expenses ', 43), (' marketing and advertising expenses ', 43), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' Advertising expenses ', 39), (' Distribution expenses ', 38), (' Administrative expenses ', 38), (' Selling & distribution expenses ', 38), (' Administration expenses ', 38), (' depreciation ', 35), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' Depreciation and amortisation expenses ', 29), (' Salaries and employee benefits ', 29), (' Logistics and distribution ', 28), (' employee benefit espense ', 26), (' Administration ', 24), (' levies ', 20), (' Royalties ', 17), (' Occupancy ', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [(' Depreciation and amortisation expenses ', 43), (' other expenses ', 42), (' Other expenses ', 42), (' Other expenses ', 42), (' property espense ', 39), (' Administrative and other expenses ', 38), (' Selling and marketting expenses ', 37), (' Depreciation expenses ', 34), (' Amortisation expenses ', 34), (' Logistics and distribution ', 34), (' marketing and advertising expenses ', 34), (' Advertising expenses ', 33), (' Sales and marketing ', 33), (' employee benefits expense ', 33), (' employee benefit espense ', 33), (' Distribution expenses ', 32), (' Salaries and employee benefits ', 30), (' depreciation ', 29), (' Marketing expenses ', 29), (' Selling & distribution expenses ', 29), (' Servicing expenses', 29), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Lease expenses ', 25), (' Selling Expenses ', 25), (' Occupancy expenses ', 24), ('expenses ', 22), (' Royalties ', 21), (' Administration ', 20), (' Management expenses ', 18), (' levies ', 16), (' Occupancy ', 15)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other expenses ', 59), (' Other expenses ', 59), (' Other expenses ', 59), (' Administrative and other expenses ', 50), (' property espense ', 43), (' Marketing expenses ', 40), (' Servicing expenses', 40), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Selling and marketting expenses ', 36), (' Occupancy expenses ', 35), (' Management expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' marketing and advertising expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Administration ', 32), ('expenses ', 29), (' Logistics and distribution ', 29), (' Salaries and employee benefits ', 29), (' depreciation ', 28), (' Advertising expenses ', 27), (' Sales and marketing ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Royalties ', 21), (' Occupancy ', 15), (' levies ', 15)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [(' other expenses ', 41), (' Other expenses ', 41), (' Management expenses ', 41), (' Other expenses ', 41), (' Marketing expenses ', 40), (' Servicing expenses', 40), (' Administrative and other expenses ', 38), (' property espense ', 38), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Selling and marketting expenses ', 36), (' Occupancy expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Amortisation expenses ', 33), (' marketing and advertising expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Sales and marketing ', 32), ('expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Salaries and employee benefits ', 29), (' depreciation ', 28), (' Royalties ', 28), (' Advertising expenses ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Administration ', 26), (' Occupancy ', 15), (' levies ', 15)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 5], 'score': 100, 'value': -16243.0, 'line_item_label': ['Selling and distribution expenses', 'Administrative expenses'], 'note_numbers': ['6', '7'], 'line_item_value': [-5051.0, -11192.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies ', ' Salaries and employee benefits ', ' marketing and advertising expenses ', ' Selling and marketting expenses ', ' Servicing expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expenses ', 50), (' Occupancy expenses ', 44), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' levies ', 40), (' Advertising expenses ', 38), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Selling Expenses ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' Servicing expenses', 32), (' depreciation ', 31), (' Selling & distribution expenses ', 30), (' Sales and marketing ', 29), (' property espense ', 29), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' marketing and advertising expenses ', 25), (' employee benefits expense ', 21), (' employee benefit espense ', 21), (' Selling and marketting expenses ', 21), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 15), (' Administration ', 13), (' Salaries and employee benefits ', 12)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing ', 50), (' Lease expenses ', 40), (' Selling Expenses ', 40), (' Royalties ', 38), (' Marketing expenses ', 36), (' Servicing expenses', 36), (' Amortisation expenses ', 35), (' Selling & distribution expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Selling and marketting expenses ', 32), (' levies ', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Salaries and employee benefits ', 29), (' marketing and advertising expenses ', 29), (' Logistics and distribution ', 28), (' Depreciation expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Advertising expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' Occupancy expenses ', 19), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 12)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' depreciation ', 32), (' Marketing expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Royalties ', 32), (' marketing and advertising expenses ', 32), (' Servicing expenses', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Advertising expenses ', 30), (' Distribution expenses ', 29), (' Administrative and other expenses ', 26), (' Occupancy expenses ', 25), (' Selling & distribution expenses ', 24), (' Occupancy ', 24), (' Selling and marketting expenses ', 24), (' Depreciation expenses ', 23), (' Sales and marketing ', 22), (' Administrative expenses ', 21), (' Administration expenses ', 21), (' Salaries and employee benefits ', 21), (' Administration ', 19), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' Management expenses ', 17), (' levies ', 12), ('expenses ', 11)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other expenses ', 61), (' Other expenses ', 61), (' Other expenses ', 61), (' Administrative and other expenses ', 43), (' Administration ', 40), (' property espense ', 38), (' Servicing expenses', 33), (' Amortisation expenses ', 32), (' Sales and marketing ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Lease expenses ', 27), (' Selling Expenses ', 27), (' Depreciation and amortisation expenses ', 27), (' Salaries and employee benefits ', 27), (' marketing and advertising expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Depreciation expenses ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Selling and marketting expenses ', 24), (' Advertising expenses ', 23), (' depreciation ', 22), (' Distribution expenses ', 22), (' Royalties ', 22), (' Management expenses ', 17), (' levies ', 13), ('expenses ', 12), (' Occupancy ', 12)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Selling & distribution expenses ', 91), (' Distribution expenses ', 78), (' Logistics and distribution ', 67), (' Selling and marketting expenses ', 64), (' Administrative expenses ', 63), (' Administration expenses ', 63), (' Selling Expenses ', 61), (' Administrative and other expenses ', 59), (' Advertising expenses ', 55), (' Depreciation and amortisation expenses ', 55), (' Depreciation expenses ', 51), (' Amortisation expenses ', 51), (' Salaries and employee benefits ', 51), (' marketing and advertising expenses ', 51), (' Servicing expenses', 47), (' Sales and marketing ', 45), (' Lease expenses ', 44), (' other expenses ', 43), (' Other expenses ', 43), (' Other expenses ', 43), (' employee benefits expense ', 43), (' employee benefit espense ', 43), (' Marketing expenses ', 42), ('expenses ', 39), (' Occupancy expenses ', 38), (' Management expenses ', 38), (' property espense ', 35), (' Administration ', 35), (' depreciation ', 25), (' Royalties ', 19), (' Occupancy ', 13), (' levies ', 7)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Administrative expenses ', 100), (' Administration expenses ', 100), (' Administrative and other expenses ', 76), (' Distribution expenses ', 75), (' Amortisation expenses ', 73), (' Administration ', 72), (' Advertising expenses ', 71), (' Selling & distribution expenses ', 65), (' Depreciation expenses ', 60), (' Depreciation and amortisation expenses ', 57), ('expenses ', 55), (' employee benefits expense ', 53), (' marketing and advertising expenses ', 52), (' Salaries and employee benefits ', 48), (' employee benefit espense ', 47), (' Selling and marketting expenses ', 47), (' Lease expenses ', 44), (' Selling Expenses ', 44), (' Logistics and distribution ', 44), (' other expenses ', 43), (' Occupancy expenses ', 43), (' Other expenses ', 43), (' Management expenses ', 43), (' Other expenses ', 43), (' Marketing expenses ', 41), (' Servicing expenses', 41), (' Sales and marketing ', 39), (' depreciation ', 35), (' property espense ', 32), (' Royalties ', 17), (' Occupancy ', 10), (' levies ', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' marketing and advertising expenses ', 46), (' Depreciation and amortisation expenses ', 42), (' Selling and marketting expenses ', 41), (' Amortisation expenses ', 39), (' Advertising expenses ', 38), (' Sales and marketing ', 38), (' property espense ', 38), (' Salaries and employee benefits ', 38), (' Administrative expenses ', 37), (' Selling & distribution expenses ', 37), (' Administration expenses ', 37), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' Marketing expenses ', 34), (' Depreciation expenses ', 33), (' Administrative and other expenses ', 33), (' Logistics and distribution ', 33), (' Distribution expenses ', 32), (' Lease expenses ', 30), (' Selling Expenses ', 30), (' Royalties ', 28), (' Administration ', 26), (' other expenses ', 24), (' Occupancy expenses ', 24), (' Other expenses ', 24), (' Other expenses ', 24), (' Servicing expenses', 23), ('expenses ', 21), (' depreciation ', 21), (' Management expenses ', 18), (' Occupancy ', 15), (' levies ', 8)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' Administrative and other expenses ', 36), (' Depreciation and amortisation expenses ', 36), (' Administrative expenses ', 34), (' Administration expenses ', 34), (' marketing and advertising expenses ', 31), (' Servicing expenses', 31), (' Depreciation expenses ', 30), (' Amortisation expenses ', 30), (' Logistics and distribution ', 30), (' Advertising expenses ', 29), (' Sales and marketing ', 29), (' Selling and marketting expenses ', 29), (' Distribution expenses ', 28), (' Administration ', 27), (' Salaries and employee benefits ', 26), (' other expenses ', 24), (' Occupancy expenses ', 24), (' Other expenses ', 24), (' Selling & distribution expenses ', 24), (' Management expenses ', 24), (' Other expenses ', 24), (' Marketing expenses ', 23), (' employee benefits expense ', 23), (' employee benefit espense ', 23), (' Occupancy ', 22), (' property espense ', 21), (' depreciation ', 20), (' Royalties ', 20), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' levies ', 12), ('expenses ', 11)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' Management expenses ', 69), (' Servicing expenses', 67), (' Lease expenses ', 64), (' Occupancy expenses ', 62), ('expenses ', 60), (' Marketing expenses ', 59), (' Selling Expenses ', 56), (' other expenses ', 54), (' Other expenses ', 54), (' Other expenses ', 54), (' depreciation ', 48), (' property espense ', 48), (' Selling and marketting expenses ', 44), (' Depreciation expenses ', 43), (' Amortisation expenses ', 43), (' Advertising expenses ', 41), (' Distribution expenses ', 40), (' Administrative expenses ', 40), (' Selling & distribution expenses ', 40), (' Administration expenses ', 40), (' marketing and advertising expenses ', 40), (' Administrative and other expenses ', 35), (' employee benefits expense ', 33), (' Depreciation and amortisation expenses ', 30), (' Salaries and employee benefits ', 30), (' employee benefit espense ', 28), (' Administration ', 26), (' Logistics and distribution ', 24), (' levies ', 22), (' Sales and marketing ', 21), (' Royalties ', 19), (' Occupancy ', 11)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Administrative and other expenses ', 39), (' Depreciation and amortisation expenses ', 39), (' marketing and advertising expenses ', 39), (' Marketing expenses ', 36), (' Amortisation expenses ', 34), (' Selling & distribution expenses ', 33), (' Sales and marketing ', 33), (' property espense ', 33), (' Distribution expenses ', 32), (' Selling and marketting expenses ', 32), (' Management expenses ', 30), (' Logistics and distribution ', 29), (' Salaries and employee benefits ', 29), (' Servicing expenses', 29), (' Depreciation expenses ', 28), (' Advertising expenses ', 27), (' Royalties ', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' Administration ', 25), (' Lease expenses ', 23), (' Selling Expenses ', 23), (' other expenses ', 22), (' Occupancy expenses ', 22), (' Other expenses ', 22), (' Other expenses ', 22), (' employee benefits expense ', 22), (' employee benefit espense ', 22), (' Occupancy ', 20), (' depreciation ', 18), (' levies ', 11), ('expenses ', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 42), (' employee benefits expense ', 41), (' property espense ', 38), (' Salaries and employee benefits ', 38), (' employee benefit espense ', 36), (' Depreciation expenses ', 33), (' Logistics and distribution ', 33), (' marketing and advertising expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Sales and marketing ', 32), (' other expenses ', 29), (' Marketing expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Other expenses ', 29), (' Servicing expenses', 29), (' depreciation ', 28), (' Selling & distribution expenses ', 28), (' Amortisation expenses ', 28), (' Advertising expenses ', 27), (' Selling and marketting expenses ', 27), (' Administration ', 26), (' Occupancy expenses ', 24), (' Lease expenses ', 24), (' Management expenses ', 24), (' Occupancy ', 22), (' Royalties ', 21), (' Selling Expenses ', 18), (' levies ', 15), ('expenses ', 14)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' other expenses ', 64), (' Other expenses ', 64), (' Management expenses ', 64), (' Other expenses ', 64), (' Marketing expenses ', 62), (' Servicing expenses', 62), (' Lease expenses ', 59), (' Occupancy expenses ', 57), ('expenses ', 55), (' Selling Expenses ', 52), (' property espense ', 52), (' Selling and marketting expenses ', 47), (' Administrative and other expenses ', 43), (' marketing and advertising expenses ', 43), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' Advertising expenses ', 39), (' Distribution expenses ', 38), (' Administrative expenses ', 38), (' Selling & distribution expenses ', 38), (' Administration expenses ', 38), (' depreciation ', 35), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' Depreciation and amortisation expenses ', 29), (' Salaries and employee benefits ', 29), (' Logistics and distribution ', 28), (' employee benefit espense ', 26), (' Administration ', 24), (' levies ', 20), (' Royalties ', 17), (' Occupancy ', 10)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [(' Depreciation and amortisation expenses ', 43), (' other expenses ', 42), (' Other expenses ', 42), (' Other expenses ', 42), (' property espense ', 39), (' Administrative and other expenses ', 38), (' Selling and marketting expenses ', 37), (' Depreciation expenses ', 34), (' Amortisation expenses ', 34), (' Logistics and distribution ', 34), (' marketing and advertising expenses ', 34), (' Advertising expenses ', 33), (' Sales and marketing ', 33), (' employee benefits expense ', 33), (' employee benefit espense ', 33), (' Distribution expenses ', 32), (' Salaries and employee benefits ', 30), (' depreciation ', 29), (' Marketing expenses ', 29), (' Selling & distribution expenses ', 29), (' Servicing expenses', 29), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Lease expenses ', 25), (' Selling Expenses ', 25), (' Occupancy expenses ', 24), ('expenses ', 22), (' Royalties ', 21), (' Administration ', 20), (' Management expenses ', 18), (' levies ', 16), (' Occupancy ', 15)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other expenses ', 59), (' Other expenses ', 59), (' Other expenses ', 59), (' Administrative and other expenses ', 50), (' property espense ', 43), (' Marketing expenses ', 40), (' Servicing expenses', 40), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Selling and marketting expenses ', 36), (' Occupancy expenses ', 35), (' Management expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' marketing and advertising expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Administration ', 32), ('expenses ', 29), (' Logistics and distribution ', 29), (' Salaries and employee benefits ', 29), (' depreciation ', 28), (' Advertising expenses ', 27), (' Sales and marketing ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Royalties ', 21), (' Occupancy ', 15), (' levies ', 15)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [(' other expenses ', 41), (' Other expenses ', 41), (' Management expenses ', 41), (' Other expenses ', 41), (' Marketing expenses ', 40), (' Servicing expenses', 40), (' Administrative and other expenses ', 38), (' property espense ', 38), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Selling and marketting expenses ', 36), (' Occupancy expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Amortisation expenses ', 33), (' marketing and advertising expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Sales and marketing ', 32), ('expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Salaries and employee benefits ', 29), (' depreciation ', 28), (' Royalties ', 28), (' Advertising expenses ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Administration ', 26), (' Occupancy ', 15), (' levies ', 15)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 5], 'score': 100, 'value': -18702.0, 'line_item_label': ['Selling and distribution expenses', 'Administrative expenses'], 'note_numbers': ['6', '7'], 'line_item_value': [-5408.0, -13294.0]}
2023-08-25 12:24:57+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:57+0530 - sLogger - DEBUG - keywords = ['consum ', ' power ', ' machinery ', ' charges ', ' research ', ' analytical ', ' equipment ', ' exchange ', ' loss on ', ' donation ', ' csr ', ' social ', ' miscellaneous ', ' loss allowance ', ' Included in administrative expenses ', ' Depreciation property ', ' plant and equipment ', ' Depreciation right-of-use assets ', ' Administrative expenses ', ' Wages and salaries ', ' Compulsory superannuation contributions ', ' Payroll on-costs (excluding employee benefit provision) ', ' Staff welfare ', ' Contractors, subcontractors and employee related expenses ', ' Facilities Expense ', ' Rental equipment expenses ', ' Depreciation expense right-of-use asset ', ' Depreciation expense ', ' Amortisation expense ', ' Other expenses ', ' Research and development expenses ', ' employee benefits expenses ', ' depreciation and amortisation expenses ', ' Employee expenses ', ' Distribution Expenses ', ' Depreciation and Amortisation Expenses ', ' Other Expenses from Ordinary Activities ', '  ', ' Defined contribution plans ', ' Other employement costs ', ' Salary & wages expense ', ' Superannuation expense ', ' other administration'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none advertising and marketing , res_fuzz_match = [(' Wages and salaries ', 53), (' analytical ', 50), (' Amortisation expense ', 50), (' plant and equipment ', 47), (' other administration', 47), (' Contractors, subcontractors and employee related expenses ', 46), (' depreciation and amortisation expenses ', 46), (' Depreciation and Amortisation Expenses ', 46), (' machinery ', 44), (' miscellaneous ', 44), (' Depreciation property ', 44), (' Depreciation expense ', 43), (' Staff welfare ', 42), (' Other expenses ', 42), (' power ', 40), (' charges ', 40), (' equipment ', 40), (' donation ', 40), (' Defined contribution plans ', 40), (' Depreciation right-of-use assets ', 39), (' Salary & wages expense ', 39), (' research ', 38), (' Administrative expenses ', 38), (' Compulsory superannuation contributions ', 38), (' Depreciation expense right-of-use asset ', 38), (' Research and development expenses ', 38), (' Other Expenses from Ordinary Activities ', 38), (' Superannuation expense ', 38), (' Included in administrative expenses ', 35), ('consum ', 33), (' csr ', 33), (' social ', 33), (' Payroll on-costs (excluding employee benefit provision) ', 33), (' Facilities Expense ', 33), (' Rental equipment expenses ', 32), (' employee benefits expenses ', 32), (' Distribution Expenses ', 31), (' loss allowance ', 30), (' exchange ', 29), (' Employee expenses ', 29), (' Other employement costs ', 29), (' loss on ', 25), ('  ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none (reversal of) / impairment loss on trade receivables , res_fuzz_match = [(' loss on ', 100), (' loss allowance ', 60), (' research ', 50), (' Other expenses ', 50), (' Other employement costs ', 47), (' machinery ', 44), (' Depreciation property ', 44), (' Research and development expenses ', 44), (' Other Expenses from Ordinary Activities ', 44), (' Depreciation right-of-use assets ', 43), (' Depreciation expense ', 43), (' Payroll on-costs (excluding employee benefit provision) ', 42), (' Contractors, subcontractors and employee related expenses ', 42), (' employee benefits expenses ', 41), (' power ', 40), (' charges ', 40), (' equipment ', 40), (' donation ', 40), (' plant and equipment ', 40), (' Wages and salaries ', 40), (' Depreciation expense right-of-use asset ', 40), (' other administration', 40), (' Distribution Expenses ', 39), (' Salary & wages expense ', 39), (' Administrative expenses ', 38), (' depreciation and amortisation expenses ', 38), (' Depreciation and Amortisation Expenses ', 38), (' Superannuation expense ', 38), (' Rental equipment expenses ', 37), (' Amortisation expense ', 36), (' Employee expenses ', 36), (' Included in administrative expenses ', 35), ('consum ', 33), (' analytical ', 33), (' csr ', 33), (' social ', 33), (' miscellaneous ', 33), (' Compulsory superannuation contributions ', 33), (' Staff welfare ', 33), (' Facilities Expense ', 33), (' Defined contribution plans ', 30), (' exchange ', 29), ('  ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none packaging & freight , res_fuzz_match = [(' charges ', 60), (' Depreciation right-of-use assets ', 47), (' Depreciation expense right-of-use asset ', 47), (' Depreciation property ', 44), (' exchange ', 43), (' power ', 40), (' equipment ', 40), (' donation ', 40), (' plant and equipment ', 40), (' Wages and salaries ', 40), (' research ', 38), (' Compulsory superannuation contributions ', 37), (' Payroll on-costs (excluding employee benefit provision) ', 37), (' Contractors, subcontractors and employee related expenses ', 37), (' depreciation and amortisation expenses ', 37), (' Depreciation and Amortisation Expenses ', 37), (' Other Expenses from Ordinary Activities ', 37), (' Depreciation expense ', 36), ('consum ', 33), (' machinery ', 33), (' analytical ', 33), (' csr ', 33), (' social ', 33), (' Staff welfare ', 33), (' Facilities Expense ', 33), (' Other expenses ', 33), (' other administration', 33), (' Research and development expenses ', 32), (' employee benefits expenses ', 32), (' Defined contribution plans ', 32), (' Superannuation expense ', 31), (' loss allowance ', 30), (' Employee expenses ', 29), (' Other employement costs ', 29), (' Salary & wages expense ', 28), (' Included in administrative expenses ', 26), (' Rental equipment expenses ', 26), (' loss on ', 25), (' Administrative expenses ', 25), (' miscellaneous ', 22), (' Amortisation expense ', 21), (' Distribution Expenses ', 19), ('  ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none selling expenses , res_fuzz_match = [(' Contractors, subcontractors and employee related expenses ', 75), (' Facilities Expense ', 67), (' Other expenses ', 67), (' Depreciation expense ', 64), (' Employee expenses ', 64), (' Research and development expenses ', 62), (' employee benefits expenses ', 62), (' Amortisation expense ', 57), (' Included in administrative expenses ', 56), (' Administrative expenses ', 56), (' Rental equipment expenses ', 56), (' Depreciation expense right-of-use asset ', 56), (' depreciation and amortisation expenses ', 56), (' Depreciation and Amortisation Expenses ', 56), (' Other Expenses from Ordinary Activities ', 56), (' Salary & wages expense ', 56), (' Superannuation expense ', 56), ('consum ', 50), (' Payroll on-costs (excluding employee benefit provision) ', 50), (' Distribution Expenses ', 50), (' miscellaneous ', 44), (' Other employement costs ', 44), (' exchange ', 43), (' power ', 40), (' equipment ', 40), (' donation ', 40), (' loss allowance ', 40), (' research ', 38), (' Compulsory superannuation contributions ', 38), (' Defined contribution plans ', 38), (' csr ', 33), (' social ', 33), (' Depreciation property ', 33), (' plant and equipment ', 33), (' other administration', 33), (' Wages and salaries ', 27), (' Depreciation right-of-use assets ', 26), (' loss on ', 25), (' Staff welfare ', 25), (' analytical ', 17), (' machinery ', 11), (' charges ', 0), ('  ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none warranty costs , res_fuzz_match = [(' csr ', 67), ('consum ', 50), (' analytical ', 50), (' loss on ', 50), (' Compulsory superannuation contributions ', 50), (' Contractors, subcontractors and employee related expenses ', 50), (' Other employement costs ', 47), (' other administration', 47), (' Payroll on-costs (excluding employee benefit provision) ', 44), (' depreciation and amortisation expenses ', 44), (' Depreciation and Amortisation Expenses ', 44), (' Other Expenses from Ordinary Activities ', 44), (' Amortisation expense ', 43), (' power ', 40), (' charges ', 40), (' donation ', 40), (' Wages and salaries ', 40), (' Included in administrative expenses ', 39), (' Depreciation property ', 39), (' Depreciation expense right-of-use asset ', 39), (' employee benefits expenses ', 39), (' research ', 38), (' Superannuation expense ', 38), (' machinery ', 33), (' miscellaneous ', 33), (' plant and equipment ', 33), (' Depreciation right-of-use assets ', 33), (' Staff welfare ', 33), (' Facilities Expense ', 33), (' Rental equipment expenses ', 33), (' Other expenses ', 33), (' Research and development expenses ', 33), (' Defined contribution plans ', 33), (' Administrative expenses ', 31), (' loss allowance ', 30), (' exchange ', 29), (' Depreciation expense ', 29), (' Employee expenses ', 29), (' Salary & wages expense ', 28), (' Distribution Expenses ', 26), (' equipment ', 20), (' social ', 17), ('  ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' social ', 50), (' Compulsory superannuation contributions ', 50), (' power ', 40), (' donation ', 40), (' loss allowance ', 40), (' Wages and salaries ', 40), (' Payroll on-costs (excluding employee benefit provision) ', 40), (' Contractors, subcontractors and employee related expenses ', 40), (' Rental equipment expenses ', 40), (' depreciation and amortisation expenses ', 40), (' Depreciation and Amortisation Expenses ', 40), (' Other Expenses from Ordinary Activities ', 40), (' Defined contribution plans ', 40), (' Other employement costs ', 40), (' other administration', 40), ('consum ', 33), (' analytical ', 33), (' Included in administrative expenses ', 30), (' Depreciation property ', 30), (' plant and equipment ', 30), (' Depreciation right-of-use assets ', 30), (' Staff welfare ', 30), (' Depreciation expense right-of-use asset ', 30), (' Other expenses ', 30), (' Research and development expenses ', 30), (' employee benefits expenses ', 30), (' Employee expenses ', 30), (' Superannuation expense ', 30), (' exchange ', 29), (' research ', 25), (' loss on ', 25), (' machinery ', 22), (' miscellaneous ', 22), (' charges ', 20), (' equipment ', 20), (' Administrative expenses ', 20), (' Facilities Expense ', 20), (' Depreciation expense ', 20), (' Amortisation expense ', 20), (' Salary & wages expense ', 20), (' Distribution Expenses ', 10), (' csr ', 0), ('  ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none advertising and marketing , res_fuzz_match = [(' Wages and salaries ', 53), (' analytical ', 50), (' Amortisation expense ', 50), (' plant and equipment ', 47), (' other administration', 47), (' Contractors, subcontractors and employee related expenses ', 46), (' depreciation and amortisation expenses ', 46), (' Depreciation and Amortisation Expenses ', 46), (' machinery ', 44), (' miscellaneous ', 44), (' Depreciation property ', 44), (' Depreciation expense ', 43), (' Staff welfare ', 42), (' Other expenses ', 42), (' power ', 40), (' charges ', 40), (' equipment ', 40), (' donation ', 40), (' Defined contribution plans ', 40), (' Depreciation right-of-use assets ', 39), (' Salary & wages expense ', 39), (' research ', 38), (' Administrative expenses ', 38), (' Compulsory superannuation contributions ', 38), (' Depreciation expense right-of-use asset ', 38), (' Research and development expenses ', 38), (' Other Expenses from Ordinary Activities ', 38), (' Superannuation expense ', 38), (' Included in administrative expenses ', 35), ('consum ', 33), (' csr ', 33), (' social ', 33), (' Payroll on-costs (excluding employee benefit provision) ', 33), (' Facilities Expense ', 33), (' Rental equipment expenses ', 32), (' employee benefits expenses ', 32), (' Distribution Expenses ', 31), (' loss allowance ', 30), (' exchange ', 29), (' Employee expenses ', 29), (' Other employement costs ', 29), (' loss on ', 25), ('  ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none (reversal of) / impairment loss on trade receivables , res_fuzz_match = [(' loss on ', 100), (' loss allowance ', 60), (' research ', 50), (' Other expenses ', 50), (' Other employement costs ', 47), (' machinery ', 44), (' Depreciation property ', 44), (' Research and development expenses ', 44), (' Other Expenses from Ordinary Activities ', 44), (' Depreciation right-of-use assets ', 43), (' Depreciation expense ', 43), (' Payroll on-costs (excluding employee benefit provision) ', 42), (' Contractors, subcontractors and employee related expenses ', 42), (' employee benefits expenses ', 41), (' power ', 40), (' charges ', 40), (' equipment ', 40), (' donation ', 40), (' plant and equipment ', 40), (' Wages and salaries ', 40), (' Depreciation expense right-of-use asset ', 40), (' other administration', 40), (' Distribution Expenses ', 39), (' Salary & wages expense ', 39), (' Administrative expenses ', 38), (' depreciation and amortisation expenses ', 38), (' Depreciation and Amortisation Expenses ', 38), (' Superannuation expense ', 38), (' Rental equipment expenses ', 37), (' Amortisation expense ', 36), (' Employee expenses ', 36), (' Included in administrative expenses ', 35), ('consum ', 33), (' analytical ', 33), (' csr ', 33), (' social ', 33), (' miscellaneous ', 33), (' Compulsory superannuation contributions ', 33), (' Staff welfare ', 33), (' Facilities Expense ', 33), (' Defined contribution plans ', 30), (' exchange ', 29), ('  ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none packaging & freight , res_fuzz_match = [(' charges ', 60), (' Depreciation right-of-use assets ', 47), (' Depreciation expense right-of-use asset ', 47), (' Depreciation property ', 44), (' exchange ', 43), (' power ', 40), (' equipment ', 40), (' donation ', 40), (' plant and equipment ', 40), (' Wages and salaries ', 40), (' research ', 38), (' Compulsory superannuation contributions ', 37), (' Payroll on-costs (excluding employee benefit provision) ', 37), (' Contractors, subcontractors and employee related expenses ', 37), (' depreciation and amortisation expenses ', 37), (' Depreciation and Amortisation Expenses ', 37), (' Other Expenses from Ordinary Activities ', 37), (' Depreciation expense ', 36), ('consum ', 33), (' machinery ', 33), (' analytical ', 33), (' csr ', 33), (' social ', 33), (' Staff welfare ', 33), (' Facilities Expense ', 33), (' Other expenses ', 33), (' other administration', 33), (' Research and development expenses ', 32), (' employee benefits expenses ', 32), (' Defined contribution plans ', 32), (' Superannuation expense ', 31), (' loss allowance ', 30), (' Employee expenses ', 29), (' Other employement costs ', 29), (' Salary & wages expense ', 28), (' Included in administrative expenses ', 26), (' Rental equipment expenses ', 26), (' loss on ', 25), (' Administrative expenses ', 25), (' miscellaneous ', 22), (' Amortisation expense ', 21), (' Distribution Expenses ', 19), ('  ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows = none selling expenses , res_fuzz_match = [(' Contractors, subcontractors and employee related expenses ', 75), (' Facilities Expense ', 67), (' Other expenses ', 67), (' Depreciation expense ', 64), (' Employee expenses ', 64), (' Research and development expenses ', 62), (' employee benefits expenses ', 62), (' Amortisation expense ', 57), (' Included in administrative expenses ', 56), (' Administrative expenses ', 56), (' Rental equipment expenses ', 56), (' Depreciation expense right-of-use asset ', 56), (' depreciation and amortisation expenses ', 56), (' Depreciation and Amortisation Expenses ', 56), (' Other Expenses from Ordinary Activities ', 56), (' Salary & wages expense ', 56), (' Superannuation expense ', 56), ('consum ', 50), (' Payroll on-costs (excluding employee benefit provision) ', 50), (' Distribution Expenses ', 50), (' miscellaneous ', 44), (' Other employement costs ', 44), (' exchange ', 43), (' power ', 40), (' equipment ', 40), (' donation ', 40), (' loss allowance ', 40), (' research ', 38), (' Compulsory superannuation contributions ', 38), (' Defined contribution plans ', 38), (' csr ', 33), (' social ', 33), (' Depreciation property ', 33), (' plant and equipment ', 33), (' other administration', 33), (' Wages and salaries ', 27), (' Depreciation right-of-use assets ', 26), (' loss on ', 25), (' Staff welfare ', 25), (' analytical ', 17), (' machinery ', 11), (' charges ', 0), ('  ', 0)]
2023-08-25 12:24:57+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none warranty costs , res_fuzz_match = [(' csr ', 67), ('consum ', 50), (' analytical ', 50), (' loss on ', 50), (' Compulsory superannuation contributions ', 50), (' Contractors, subcontractors and employee related expenses ', 50), (' Other employement costs ', 47), (' other administration', 47), (' Payroll on-costs (excluding employee benefit provision) ', 44), (' depreciation and amortisation expenses ', 44), (' Depreciation and Amortisation Expenses ', 44), (' Other Expenses from Ordinary Activities ', 44), (' Amortisation expense ', 43), (' power ', 40), (' charges ', 40), (' donation ', 40), (' Wages and salaries ', 40), (' Included in administrative expenses ', 39), (' Depreciation property ', 39), (' Depreciation expense right-of-use asset ', 39), (' employee benefits expenses ', 39), (' research ', 38), (' Superannuation expense ', 38), (' machinery ', 33), (' miscellaneous ', 33), (' plant and equipment ', 33), (' Depreciation right-of-use assets ', 33), (' Staff welfare ', 33), (' Facilities Expense ', 33), (' Rental equipment expenses ', 33), (' Other expenses ', 33), (' Research and development expenses ', 33), (' Defined contribution plans ', 33), (' Administrative expenses ', 31), (' loss allowance ', 30), (' exchange ', 29), (' Depreciation expense ', 29), (' Employee expenses ', 29), (' Salary & wages expense ', 28), (' Distribution Expenses ', 26), (' equipment ', 20), (' social ', 17), ('  ', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' social ', 50), (' Compulsory superannuation contributions ', 50), (' power ', 40), (' donation ', 40), (' loss allowance ', 40), (' Wages and salaries ', 40), (' Payroll on-costs (excluding employee benefit provision) ', 40), (' Contractors, subcontractors and employee related expenses ', 40), (' Rental equipment expenses ', 40), (' depreciation and amortisation expenses ', 40), (' Depreciation and Amortisation Expenses ', 40), (' Other Expenses from Ordinary Activities ', 40), (' Defined contribution plans ', 40), (' Other employement costs ', 40), (' other administration', 40), ('consum ', 33), (' analytical ', 33), (' Included in administrative expenses ', 30), (' Depreciation property ', 30), (' plant and equipment ', 30), (' Depreciation right-of-use assets ', 30), (' Staff welfare ', 30), (' Depreciation expense right-of-use asset ', 30), (' Other expenses ', 30), (' Research and development expenses ', 30), (' employee benefits expenses ', 30), (' Employee expenses ', 30), (' Superannuation expense ', 30), (' exchange ', 29), (' research ', 25), (' loss on ', 25), (' machinery ', 22), (' miscellaneous ', 22), (' charges ', 20), (' equipment ', 20), (' Administrative expenses ', 20), (' Facilities Expense ', 20), (' Depreciation expense ', 20), (' Amortisation expense ', 20), (' Salary & wages expense ', 20), (' Distribution Expenses ', 10), (' csr ', 0), ('  ', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 11], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [3390.0, 5.0, 5.0, 755.0, 644.0, 614.0, 5408.0, 3227.0, -2.0, -2.0, 582.0, 424.0, 820.0, 5051.0], 'label': ['$', 'None (Reversal of) / Impairment loss on trade receivables', '$', '$', '$', '$', '$', '$', 'None (Reversal of) / Impairment loss on trade receivables', '$', '$', '$', '$', '$'], 'year': [], 'colname_found': ['columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['consum ', ' power ', ' machinery ', ' charges ', ' research ', ' analytical ', ' equipment ', ' exchange ', ' loss on ', ' donation ', ' csr ', ' social ', ' miscellaneous ', ' loss allowance ', ' Included in administrative expenses ', ' Depreciation property ', ' plant and equipment ', ' Depreciation right-of-use assets ', ' Administrative expenses ', ' Wages and salaries ', ' Compulsory superannuation contributions ', ' Payroll on-costs (excluding employee benefit provision) ', ' Staff welfare ', ' Contractors, subcontractors and employee related expenses ', ' Facilities Expense ', ' Rental equipment expenses ', ' Depreciation expense right-of-use asset ', ' Depreciation expense ', ' Amortisation expense ', ' Other expenses ', ' Research and development expenses ', ' employee benefits expenses ', ' depreciation and amortisation expenses ', ' Employee expenses ', ' Distribution Expenses ', ' Depreciation and Amortisation Expenses ', ' Other Expenses from Ordinary Activities ', '  ', ' Defined contribution plans ', ' Other employement costs ', ' Salary & wages expense ', ' Superannuation expense ', ' other administration'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [(' Employee expenses ', 52), (' research ', 50), (' Depreciation property ', 50), (' Depreciation right-of-use assets ', 50), (' Payroll on-costs (excluding employee benefit provision) ', 50), (' Depreciation expense right-of-use asset ', 50), (' Depreciation expense ', 50), (' Other expenses ', 50), (' employee benefits expenses ', 50), (' depreciation and amortisation expenses ', 50), (' Depreciation and Amortisation Expenses ', 50), (' Other Expenses from Ordinary Activities ', 50), (' Superannuation expense ', 50), (' Included in administrative expenses ', 42), (' plant and equipment ', 42), (' Administrative expenses ', 42), (' Wages and salaries ', 42), (' Compulsory superannuation contributions ', 42), (' Contractors, subcontractors and employee related expenses ', 42), (' Rental equipment expenses ', 42), (' Amortisation expense ', 42), (' Research and development expenses ', 42), (' Defined contribution plans ', 42), (' Other employement costs ', 42), (' Salary & wages expense ', 42), (' other administration', 42), (' power ', 40), (' equipment ', 40), (' donation ', 40), ('consum ', 33), (' machinery ', 33), (' csr ', 33), (' social ', 33), (' Facilities Expense ', 33), (' Distribution Expenses ', 33), (' exchange ', 29), (' loss on ', 25), (' Staff welfare ', 25), (' charges ', 20), (' loss allowance ', 20), (' analytical ', 17), (' miscellaneous ', 11), ('  ', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none salary & wages expense , res_fuzz_match = [(' Salary & wages expense ', 100), (' Facilities Expense ', 67), (' Other expenses ', 67), (' Depreciation expense ', 64), (' Amortisation expense ', 64), (' Rental equipment expenses ', 58), (' Contractors, subcontractors and employee related expenses ', 57), (' depreciation and amortisation expenses ', 57), (' Employee expenses ', 57), (' Depreciation and Amortisation Expenses ', 57), (' Administrative expenses ', 56), (' Distribution Expenses ', 56), (' Superannuation expense ', 56), (' Wages and salaries ', 53), (' Research and development expenses ', 52), ('consum ', 50), (' research ', 50), (' social ', 50), (' employee benefits expenses ', 50), (' Included in administrative expenses ', 48), (' plant and equipment ', 47), (' exchange ', 43), (' Depreciation expense right-of-use asset ', 43), (' Other Expenses from Ordinary Activities ', 43), (' Staff welfare ', 42), (' power ', 40), (' charges ', 40), (' equipment ', 40), (' donation ', 40), (' loss allowance ', 40), (' Payroll on-costs (excluding employee benefit provision) ', 39), (' Compulsory superannuation contributions ', 35), (' Defined contribution plans ', 35), (' Other employement costs ', 35), (' machinery ', 33), (' analytical ', 33), (' csr ', 33), (' other administration', 33), (' Depreciation property ', 31), (' Depreciation right-of-use assets ', 30), (' loss on ', 25), (' miscellaneous ', 22), ('  ', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none superannuation expense , res_fuzz_match = [(' Superannuation expense ', 100), (' Facilities Expense ', 67), (' Other expenses ', 67), (' Depreciation expense ', 64), (' Employee expenses ', 64), (' Compulsory superannuation contributions ', 62), (' Distribution Expenses ', 62), (' power ', 60), (' equipment ', 60), (' employee benefits expenses ', 60), (' Rental equipment expenses ', 58), (' Contractors, subcontractors and employee related expenses ', 57), (' Amortisation expense ', 57), (' Administrative expenses ', 56), (' Salary & wages expense ', 56), ('consum ', 50), (' research ', 50), (' Included in administrative expenses ', 48), (' Depreciation expense right-of-use asset ', 48), (' Research and development expenses ', 48), (' depreciation and amortisation expenses ', 48), (' Depreciation and Amortisation Expenses ', 48), (' Other Expenses from Ordinary Activities ', 48), (' plant and equipment ', 47), (' miscellaneous ', 44), (' exchange ', 43), (' donation ', 40), (' Defined contribution plans ', 40), (' Payroll on-costs (excluding employee benefit provision) ', 38), (' Other employement costs ', 35), (' machinery ', 33), (' analytical ', 33), (' csr ', 33), (' social ', 33), (' Depreciation right-of-use assets ', 33), (' Wages and salaries ', 33), (' Staff welfare ', 33), (' other administration', 33), (' Depreciation property ', 32), (' loss on ', 25), (' charges ', 20), (' loss allowance ', 20), ('  ', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none other administrative expenses , res_fuzz_match = [(' Administrative expenses ', 100), (' other administration', 100), (' Other expenses ', 75), (' Distribution Expenses ', 75), (' Included in administrative expenses ', 74), (' Amortisation expense ', 71), (' csr ', 67), (' Facilities Expense ', 67), (' power ', 60), (' employee benefits expenses ', 59), (' depreciation and amortisation expenses ', 58), (' Depreciation and Amortisation Expenses ', 58), (' Depreciation expense ', 57), (' Employee expenses ', 57), (' Contractors, subcontractors and employee related expenses ', 56), (' Salary & wages expense ', 56), (' Superannuation expense ', 56), (' Rental equipment expenses ', 53), (' Other employement costs ', 53), (' Research and development expenses ', 50), (' machinery ', 44), (' miscellaneous ', 44), (' Other Expenses from Ordinary Activities ', 44), (' exchange ', 43), (' Payroll on-costs (excluding employee benefit provision) ', 41), (' charges ', 40), (' equipment ', 40), (' donation ', 40), (' plant and equipment ', 40), (' Wages and salaries ', 40), (' Defined contribution plans ', 40), (' research ', 38), (' Depreciation property ', 38), (' Depreciation expense right-of-use asset ', 37), ('consum ', 33), (' analytical ', 33), (' Staff welfare ', 33), (' loss allowance ', 30), (' Depreciation right-of-use assets ', 30), (' Compulsory superannuation contributions ', 30), (' loss on ', 25), (' social ', 17), ('  ', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' social ', 50), (' Compulsory superannuation contributions ', 50), (' power ', 40), (' donation ', 40), (' loss allowance ', 40), (' Wages and salaries ', 40), (' Payroll on-costs (excluding employee benefit provision) ', 40), (' Contractors, subcontractors and employee related expenses ', 40), (' Rental equipment expenses ', 40), (' depreciation and amortisation expenses ', 40), (' Depreciation and Amortisation Expenses ', 40), (' Other Expenses from Ordinary Activities ', 40), (' Defined contribution plans ', 40), (' Other employement costs ', 40), (' other administration', 40), ('consum ', 33), (' analytical ', 33), (' Included in administrative expenses ', 30), (' Depreciation property ', 30), (' plant and equipment ', 30), (' Depreciation right-of-use assets ', 30), (' Staff welfare ', 30), (' Depreciation expense right-of-use asset ', 30), (' Other expenses ', 30), (' Research and development expenses ', 30), (' employee benefits expenses ', 30), (' Employee expenses ', 30), (' Superannuation expense ', 30), (' exchange ', 29), (' research ', 25), (' loss on ', 25), (' machinery ', 22), (' miscellaneous ', 22), (' charges ', 20), (' equipment ', 20), (' Administrative expenses ', 20), (' Facilities Expense ', 20), (' Depreciation expense ', 20), (' Amortisation expense ', 20), (' Salary & wages expense ', 20), (' Distribution Expenses ', 10), (' csr ', 0), ('  ', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [(' Employee expenses ', 52), (' research ', 50), (' Depreciation property ', 50), (' Depreciation right-of-use assets ', 50), (' Payroll on-costs (excluding employee benefit provision) ', 50), (' Depreciation expense right-of-use asset ', 50), (' Depreciation expense ', 50), (' Other expenses ', 50), (' employee benefits expenses ', 50), (' depreciation and amortisation expenses ', 50), (' Depreciation and Amortisation Expenses ', 50), (' Other Expenses from Ordinary Activities ', 50), (' Superannuation expense ', 50), (' Included in administrative expenses ', 42), (' plant and equipment ', 42), (' Administrative expenses ', 42), (' Wages and salaries ', 42), (' Compulsory superannuation contributions ', 42), (' Contractors, subcontractors and employee related expenses ', 42), (' Rental equipment expenses ', 42), (' Amortisation expense ', 42), (' Research and development expenses ', 42), (' Defined contribution plans ', 42), (' Other employement costs ', 42), (' Salary & wages expense ', 42), (' other administration', 42), (' power ', 40), (' equipment ', 40), (' donation ', 40), ('consum ', 33), (' machinery ', 33), (' csr ', 33), (' social ', 33), (' Facilities Expense ', 33), (' Distribution Expenses ', 33), (' exchange ', 29), (' loss on ', 25), (' Staff welfare ', 25), (' charges ', 20), (' loss allowance ', 20), (' analytical ', 17), (' miscellaneous ', 11), ('  ', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none salary & wages expense , res_fuzz_match = [(' Salary & wages expense ', 100), (' Facilities Expense ', 67), (' Other expenses ', 67), (' Depreciation expense ', 64), (' Amortisation expense ', 64), (' Rental equipment expenses ', 58), (' Contractors, subcontractors and employee related expenses ', 57), (' depreciation and amortisation expenses ', 57), (' Employee expenses ', 57), (' Depreciation and Amortisation Expenses ', 57), (' Administrative expenses ', 56), (' Distribution Expenses ', 56), (' Superannuation expense ', 56), (' Wages and salaries ', 53), (' Research and development expenses ', 52), ('consum ', 50), (' research ', 50), (' social ', 50), (' employee benefits expenses ', 50), (' Included in administrative expenses ', 48), (' plant and equipment ', 47), (' exchange ', 43), (' Depreciation expense right-of-use asset ', 43), (' Other Expenses from Ordinary Activities ', 43), (' Staff welfare ', 42), (' power ', 40), (' charges ', 40), (' equipment ', 40), (' donation ', 40), (' loss allowance ', 40), (' Payroll on-costs (excluding employee benefit provision) ', 39), (' Compulsory superannuation contributions ', 35), (' Defined contribution plans ', 35), (' Other employement costs ', 35), (' machinery ', 33), (' analytical ', 33), (' csr ', 33), (' other administration', 33), (' Depreciation property ', 31), (' Depreciation right-of-use assets ', 30), (' loss on ', 25), (' miscellaneous ', 22), ('  ', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none superannuation expense , res_fuzz_match = [(' Superannuation expense ', 100), (' Facilities Expense ', 67), (' Other expenses ', 67), (' Depreciation expense ', 64), (' Employee expenses ', 64), (' Compulsory superannuation contributions ', 62), (' Distribution Expenses ', 62), (' power ', 60), (' equipment ', 60), (' employee benefits expenses ', 60), (' Rental equipment expenses ', 58), (' Contractors, subcontractors and employee related expenses ', 57), (' Amortisation expense ', 57), (' Administrative expenses ', 56), (' Salary & wages expense ', 56), ('consum ', 50), (' research ', 50), (' Included in administrative expenses ', 48), (' Depreciation expense right-of-use asset ', 48), (' Research and development expenses ', 48), (' depreciation and amortisation expenses ', 48), (' Depreciation and Amortisation Expenses ', 48), (' Other Expenses from Ordinary Activities ', 48), (' plant and equipment ', 47), (' miscellaneous ', 44), (' exchange ', 43), (' donation ', 40), (' Defined contribution plans ', 40), (' Payroll on-costs (excluding employee benefit provision) ', 38), (' Other employement costs ', 35), (' machinery ', 33), (' analytical ', 33), (' csr ', 33), (' social ', 33), (' Depreciation right-of-use assets ', 33), (' Wages and salaries ', 33), (' Staff welfare ', 33), (' other administration', 33), (' Depreciation property ', 32), (' loss on ', 25), (' charges ', 20), (' loss allowance ', 20), ('  ', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none other administrative expenses , res_fuzz_match = [(' Administrative expenses ', 100), (' other administration', 100), (' Other expenses ', 75), (' Distribution Expenses ', 75), (' Included in administrative expenses ', 74), (' Amortisation expense ', 71), (' csr ', 67), (' Facilities Expense ', 67), (' power ', 60), (' employee benefits expenses ', 59), (' depreciation and amortisation expenses ', 58), (' Depreciation and Amortisation Expenses ', 58), (' Depreciation expense ', 57), (' Employee expenses ', 57), (' Contractors, subcontractors and employee related expenses ', 56), (' Salary & wages expense ', 56), (' Superannuation expense ', 56), (' Rental equipment expenses ', 53), (' Other employement costs ', 53), (' Research and development expenses ', 50), (' machinery ', 44), (' miscellaneous ', 44), (' Other Expenses from Ordinary Activities ', 44), (' exchange ', 43), (' Payroll on-costs (excluding employee benefit provision) ', 41), (' charges ', 40), (' equipment ', 40), (' donation ', 40), (' plant and equipment ', 40), (' Wages and salaries ', 40), (' Defined contribution plans ', 40), (' research ', 38), (' Depreciation property ', 38), (' Depreciation expense right-of-use asset ', 37), ('consum ', 33), (' analytical ', 33), (' Staff welfare ', 33), (' loss allowance ', 30), (' Depreciation right-of-use assets ', 30), (' Compulsory superannuation contributions ', 30), (' loss on ', 25), (' social ', 17), ('  ', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' social ', 50), (' Compulsory superannuation contributions ', 50), (' power ', 40), (' donation ', 40), (' loss allowance ', 40), (' Wages and salaries ', 40), (' Payroll on-costs (excluding employee benefit provision) ', 40), (' Contractors, subcontractors and employee related expenses ', 40), (' Rental equipment expenses ', 40), (' depreciation and amortisation expenses ', 40), (' Depreciation and Amortisation Expenses ', 40), (' Other Expenses from Ordinary Activities ', 40), (' Defined contribution plans ', 40), (' Other employement costs ', 40), (' other administration', 40), ('consum ', 33), (' analytical ', 33), (' Included in administrative expenses ', 30), (' Depreciation property ', 30), (' plant and equipment ', 30), (' Depreciation right-of-use assets ', 30), (' Staff welfare ', 30), (' Depreciation expense right-of-use asset ', 30), (' Other expenses ', 30), (' Research and development expenses ', 30), (' employee benefits expenses ', 30), (' Employee expenses ', 30), (' Superannuation expense ', 30), (' exchange ', 29), (' research ', 25), (' loss on ', 25), (' machinery ', 22), (' miscellaneous ', 22), (' charges ', 20), (' equipment ', 20), (' Administrative expenses ', 20), (' Facilities Expense ', 20), (' Depreciation expense ', 20), (' Amortisation expense ', 20), (' Salary & wages expense ', 20), (' Distribution Expenses ', 10), (' csr ', 0), ('  ', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('  ', 100), ('consum ', 0), (' power ', 0), (' machinery ', 0), (' charges ', 0), (' research ', 0), (' analytical ', 0), (' equipment ', 0), (' exchange ', 0), (' loss on ', 0), (' donation ', 0), (' csr ', 0), (' social ', 0), (' miscellaneous ', 0), (' loss allowance ', 0), (' Included in administrative expenses ', 0), (' Depreciation property ', 0), (' plant and equipment ', 0), (' Depreciation right-of-use assets ', 0), (' Administrative expenses ', 0), (' Wages and salaries ', 0), (' Compulsory superannuation contributions ', 0), (' Payroll on-costs (excluding employee benefit provision) ', 0), (' Staff welfare ', 0), (' Contractors, subcontractors and employee related expenses ', 0), (' Facilities Expense ', 0), (' Rental equipment expenses ', 0), (' Depreciation expense right-of-use asset ', 0), (' Depreciation expense ', 0), (' Amortisation expense ', 0), (' Other expenses ', 0), (' Research and development expenses ', 0), (' employee benefits expenses ', 0), (' depreciation and amortisation expenses ', 0), (' Employee expenses ', 0), (' Distribution Expenses ', 0), (' Depreciation and Amortisation Expenses ', 0), (' Other Expenses from Ordinary Activities ', 0), (' Defined contribution plans ', 0), (' Other employement costs ', 0), (' Salary & wages expense ', 0), (' Superannuation expense ', 0), (' other administration', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 1, 2, 2, 3, 3, 4, 5, 6, 6, 7, 7, 8, 8, 9], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [1048.0, 8156.0, 8156.0, 756.0, 756.0, 3334.0, 3334.0, 13294.0, 2026.0, 6551.0, 6551.0, 646.0, 646.0, 1969.0, 1969.0, 11192.0], 'label': ["$'000", 'None Salary & wages expense', "$'000", 'None Superannuation expense', "$'000", 'None Other administrative expenses', "$'000", "$'000", "$'000", 'None Salary & wages expense', "$'000", 'None Superannuation expense', "$'000", 'None Other administrative expenses', "$'000", "$'000"], 'year': [], 'colname_found': ['columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns']}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-25 12:24:58+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses ', ' Premises cost ', ' Other expense']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses', ' Occupancy', ' Occupancy expenses ', ' Rental expense relating to operating leases lease expense']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses ', ' Premises cost ', ' Other expense'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent ', 60), (' Occupancy expenses ', 44), (' Administration expenses ', 36), (' Other expense', 33), (' Rental expenses ', 32), (' Premises cost ', 24), (' Occupancy ', 18)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Premises cost ', 60), (' Rental expenses ', 36), (' Administration expenses ', 32), (' Other expense', 29), (' Occupancy expenses ', 19), ('Rent ', 15), (' Occupancy ', 14)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Premises cost ', 52), (' Other expense', 33), (' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses ', 25), (' Occupancy ', 24), (' Administration expenses ', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other expense', 61), (' Premises cost ', 36), (' Administration expenses ', 30), ('Rent ', 27), (' Occupancy expenses ', 26), (' Rental expenses ', 25), (' Occupancy ', 12)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Administration expenses ', 63), (' Rental expenses ', 47), (' Other expense', 43), (' Occupancy expenses ', 38), (' Premises cost ', 33), ('Rent ', 21), (' Occupancy ', 13)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Administration expenses ', 100), (' Premises cost ', 44), (' Occupancy expenses ', 43), (' Other expense', 43), (' Rental expenses ', 41), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Premises cost ', 42), (' Administration expenses ', 37), (' Rental expenses ', 34), (' Occupancy expenses ', 24), (' Other expense', 24), ('Rent ', 23), (' Occupancy ', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' Administration expenses ', 34), (' Premises cost ', 25), (' Occupancy expenses ', 24), (' Other expense', 24), (' Rental expenses ', 23), (' Occupancy ', 22), ('Rent ', 12)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' Rental expenses ', 67), (' Occupancy expenses ', 62), (' Other expense', 54), (' Administration expenses ', 40), (' Premises cost ', 24), ('Rent ', 22), (' Occupancy ', 11)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Premises cost ', 46), (' Rental expenses ', 29), (' Administration expenses ', 26), (' Occupancy expenses ', 22), (' Other expense', 22), ('Rent ', 21), (' Occupancy ', 20)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Premises cost ', 36), (' Rental expenses ', 34), (' Administration expenses ', 32), (' Other expense', 29), (' Occupancy expenses ', 24), ('Rent ', 23), (' Occupancy ', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Rental expenses ', 69), (' Other expense', 64), (' Occupancy expenses ', 57), (' Administration expenses ', 38), ('Rent ', 30), (' Premises cost ', 22), (' Occupancy ', 10)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [(' Other expense', 42), (' Premises cost ', 31), (' Rental expenses ', 29), (' Administration expenses ', 27), ('Rent ', 24), (' Occupancy expenses ', 24), (' Occupancy ', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other expense', 59), (' Rental expenses ', 40), (' Premises cost ', 36), (' Occupancy expenses ', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [(' Rental expenses ', 51), (' Other expense', 41), (' Premises cost ', 36), (' Occupancy expenses ', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': -11192.0, 'line_item_label': ['Administrative expenses'], 'note_numbers': ['7'], 'line_item_value': [-11192.0]}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses ', ' Premises cost ', ' Other expense'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent ', 60), (' Occupancy expenses ', 44), (' Administration expenses ', 36), (' Other expense', 33), (' Rental expenses ', 32), (' Premises cost ', 24), (' Occupancy ', 18)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Premises cost ', 60), (' Rental expenses ', 36), (' Administration expenses ', 32), (' Other expense', 29), (' Occupancy expenses ', 19), ('Rent ', 15), (' Occupancy ', 14)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Premises cost ', 52), (' Other expense', 33), (' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses ', 25), (' Occupancy ', 24), (' Administration expenses ', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other expense', 61), (' Premises cost ', 36), (' Administration expenses ', 30), ('Rent ', 27), (' Occupancy expenses ', 26), (' Rental expenses ', 25), (' Occupancy ', 12)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Administration expenses ', 63), (' Rental expenses ', 47), (' Other expense', 43), (' Occupancy expenses ', 38), (' Premises cost ', 33), ('Rent ', 21), (' Occupancy ', 13)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Administration expenses ', 100), (' Premises cost ', 44), (' Occupancy expenses ', 43), (' Other expense', 43), (' Rental expenses ', 41), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Premises cost ', 42), (' Administration expenses ', 37), (' Rental expenses ', 34), (' Occupancy expenses ', 24), (' Other expense', 24), ('Rent ', 23), (' Occupancy ', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' Administration expenses ', 34), (' Premises cost ', 25), (' Occupancy expenses ', 24), (' Other expense', 24), (' Rental expenses ', 23), (' Occupancy ', 22), ('Rent ', 12)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' Rental expenses ', 67), (' Occupancy expenses ', 62), (' Other expense', 54), (' Administration expenses ', 40), (' Premises cost ', 24), ('Rent ', 22), (' Occupancy ', 11)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Premises cost ', 46), (' Rental expenses ', 29), (' Administration expenses ', 26), (' Occupancy expenses ', 22), (' Other expense', 22), ('Rent ', 21), (' Occupancy ', 20)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Premises cost ', 36), (' Rental expenses ', 34), (' Administration expenses ', 32), (' Other expense', 29), (' Occupancy expenses ', 24), ('Rent ', 23), (' Occupancy ', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Rental expenses ', 69), (' Other expense', 64), (' Occupancy expenses ', 57), (' Administration expenses ', 38), ('Rent ', 30), (' Premises cost ', 22), (' Occupancy ', 10)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [(' Other expense', 42), (' Premises cost ', 31), (' Rental expenses ', 29), (' Administration expenses ', 27), ('Rent ', 24), (' Occupancy expenses ', 24), (' Occupancy ', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other expense', 59), (' Rental expenses ', 40), (' Premises cost ', 36), (' Occupancy expenses ', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [(' Rental expenses ', 51), (' Other expense', 41), (' Premises cost ', 36), (' Occupancy expenses ', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': -13294.0, 'line_item_label': ['Administrative expenses'], 'note_numbers': ['7'], 'line_item_value': [-13294.0]}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses', ' Occupancy', ' Occupancy expenses ', ' Rental expense relating to operating leases lease expense'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [('Rent ', 50), (' Rental expenses', 42), (' Occupancy expenses ', 42), (' Rental expense relating to operating leases lease expense', 42), (' Occupancy', 20)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Rent ', 0), (' Rental expenses', 0), (' Occupancy', 0), (' Occupancy expenses ', 0), (' Rental expense relating to operating leases lease expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none salary & wages expense , res_fuzz_match = [(' Rental expenses', 62), (' Rental expense relating to operating leases lease expense', 61), (' Occupancy expenses ', 58), ('Rent ', 50), (' Occupancy', 20)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Rent ', 0), (' Rental expenses', 0), (' Occupancy', 0), (' Occupancy expenses ', 0), (' Rental expense relating to operating leases lease expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none superannuation expense , res_fuzz_match = [(' Rental expenses', 69), (' Occupancy expenses ', 67), (' Rental expense relating to operating leases lease expense', 62), ('Rent ', 50), (' Occupancy', 40)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Rent ', 0), (' Rental expenses', 0), (' Occupancy', 0), (' Occupancy expenses ', 0), (' Rental expense relating to operating leases lease expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none other administrative expenses , res_fuzz_match = [(' Rental expenses', 69), (' Occupancy expenses ', 58), (' Rental expense relating to operating leases lease expense', 56), ('Rent ', 50), (' Occupancy', 20)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Rent ', 0), (' Rental expenses', 0), (' Occupancy', 0), (' Occupancy expenses ', 0), (' Rental expense relating to operating leases lease expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('Rent ', 50), (' Rental expenses', 40), (' Rental expense relating to operating leases lease expense', 40), (' Occupancy', 20), (' Occupancy expenses ', 10)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Rent ', 0), (' Rental expenses', 0), (' Occupancy', 0), (' Occupancy expenses ', 0), (' Rental expense relating to operating leases lease expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [('Rent ', 50), (' Rental expenses', 42), (' Occupancy expenses ', 42), (' Rental expense relating to operating leases lease expense', 42), (' Occupancy', 20)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Rent ', 0), (' Rental expenses', 0), (' Occupancy', 0), (' Occupancy expenses ', 0), (' Rental expense relating to operating leases lease expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none salary & wages expense , res_fuzz_match = [(' Rental expenses', 62), (' Rental expense relating to operating leases lease expense', 61), (' Occupancy expenses ', 58), ('Rent ', 50), (' Occupancy', 20)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Rent ', 0), (' Rental expenses', 0), (' Occupancy', 0), (' Occupancy expenses ', 0), (' Rental expense relating to operating leases lease expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none superannuation expense , res_fuzz_match = [(' Rental expenses', 69), (' Occupancy expenses ', 67), (' Rental expense relating to operating leases lease expense', 62), ('Rent ', 50), (' Occupancy', 40)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Rent ', 0), (' Rental expenses', 0), (' Occupancy', 0), (' Occupancy expenses ', 0), (' Rental expense relating to operating leases lease expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none other administrative expenses , res_fuzz_match = [(' Rental expenses', 69), (' Occupancy expenses ', 58), (' Rental expense relating to operating leases lease expense', 56), ('Rent ', 50), (' Occupancy', 20)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Rent ', 0), (' Rental expenses', 0), (' Occupancy', 0), (' Occupancy expenses ', 0), (' Rental expense relating to operating leases lease expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('Rent ', 50), (' Rental expenses', 40), (' Rental expense relating to operating leases lease expense', 40), (' Occupancy', 20), (' Occupancy expenses ', 10)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Rent ', 0), (' Rental expenses', 0), (' Occupancy', 0), (' Occupancy expenses ', 0), (' Rental expense relating to operating leases lease expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-25 12:24:58+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['other operating', 'Other revenue ', ' Other income']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['Commission revenue ', ' Rent ', ' rental revenue']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue ', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue ', 67), ('other operating', 25), (' Other income', 12)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue ', 38), ('other operating', 32)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue ', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue ', 43)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('Other revenue ', 32), ('other operating', 23), (' Other income', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('Other revenue ', 43), (' Other income', 30), ('other operating', 23)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Other income', 42), ('Other revenue ', 41), ('other operating', 38)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' Other income', 42), ('other operating', 17), ('Other revenue ', 16)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('other operating', 25), (' Other income', 24), ('Other revenue ', 23)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Other income', 38), ('Other revenue ', 30), ('other operating', 24)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Other income', 48), ('other operating', 31), ('Other revenue ', 24)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Other income', 52), ('other operating', 38), ('Other revenue ', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('other operating', 58), (' Other income', 44), ('Other revenue ', 36)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue ', 29)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [(' Other income', 48), ('other operating', 38), ('Other revenue ', 29)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 46.0, 'line_item_label': ['Other income'], 'note_numbers': ['5'], 'line_item_value': [46.0]}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue ', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue ', 67), ('other operating', 25), (' Other income', 12)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue ', 38), ('other operating', 32)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue ', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue ', 43)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('Other revenue ', 32), ('other operating', 23), (' Other income', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('Other revenue ', 43), (' Other income', 30), ('other operating', 23)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Other income', 42), ('Other revenue ', 41), ('other operating', 38)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' Other income', 42), ('other operating', 17), ('Other revenue ', 16)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('other operating', 25), (' Other income', 24), ('Other revenue ', 23)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Other income', 38), ('Other revenue ', 30), ('other operating', 24)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Other income', 48), ('other operating', 31), ('Other revenue ', 24)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Other income', 52), ('other operating', 38), ('Other revenue ', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('other operating', 58), (' Other income', 44), ('Other revenue ', 36)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue ', 29)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [(' Other income', 48), ('other operating', 38), ('Other revenue ', 29)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 0.0, 'line_item_label': ['Other income'], 'note_numbers': ['5'], 'line_item_value': [0.0]}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['Commission revenue ', ' Rent ', ' rental revenue'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none rental income , res_fuzz_match = [(' Rent ', 100), (' rental revenue', 64), ('Commission revenue ', 36)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Rent ', 50), (' rental revenue', 40), ('Commission revenue ', 20)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none rental income , res_fuzz_match = [(' Rent ', 100), (' rental revenue', 64), ('Commission revenue ', 36)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Rent ', 50), (' rental revenue', 40), ('Commission revenue ', 20)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2], 'score': [100, 100], 'value': [0.0, 46.0], 'label': ['None Rental income', 'None Rental income'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-25 12:24:58+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs ', ' Other revenue']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue ', ' Interest income from cash and cash equivalents ', ' Interest income from financial assets measured at amortised cost']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['Interest expense', 'interest expense']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs ', ' Other revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Other revenue', 67), (' Interest revenue', 57), ('other income', 12), ('finance income', 11), (' Net finance costs ', 10), ('Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs ', 58), ('other income', 40), ('Finance income and costs', 40), (' Other revenue', 38), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs ', 44), ('other income', 35), ('Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), (' Other revenue', 25), ('finance income', 17)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), (' Other revenue', 43), (' Interest revenue', 38), (' Net finance costs ', 38), ('Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Interest revenue', 40), ('Finance income and costs', 39), (' Finance income and finance costs', 38), (' Other revenue', 32), (' Net finance costs ', 30), ('finance income', 27), ('other income', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Interest revenue', 52), (' Other revenue', 43), ('Finance income and costs', 32), (' Finance income and finance costs', 32), ('other income', 30), ('finance income', 29), (' Net finance costs ', 26)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other income', 42), (' Other revenue', 41), (' Interest revenue', 38), (' Net finance costs ', 38), ('Finance income and costs', 33), (' Finance income and finance costs', 32), ('finance income', 29)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [('finance income', 96), ('Finance income and costs', 71), (' Finance income and finance costs', 63), (' Net finance costs ', 57), ('other income', 42), (' Interest revenue', 29), (' Other revenue', 16)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('Finance income and costs', 57), (' Net finance costs ', 55), ('finance income', 54), (' Finance income and finance costs', 48), (' Interest revenue', 34), ('other income', 24), (' Other revenue', 23)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Net finance costs ', 100), ('Finance income and costs', 72), (' Finance income and finance costs', 60), ('finance income', 59), ('other income', 38), (' Other revenue', 30), (' Interest revenue', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other income', 48), ('finance income', 41), (' Net finance costs ', 38), (' Finance income and finance costs', 36), ('Finance income and costs', 33), (' Interest revenue', 27), (' Other revenue', 24)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50), (' Net finance costs ', 45), ('Finance income and costs', 43), (' Finance income and finance costs', 36), (' Interest revenue', 32), (' Other revenue', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('other income', 44), (' Other revenue', 36), (' Net finance costs ', 33), ('Finance income and costs', 29), (' Finance income and finance costs', 29), (' Interest revenue', 28), ('finance income', 24)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), (' Net finance costs ', 49), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Other revenue', 29), (' Interest revenue', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [(' Net finance costs ', 49), ('other income', 48), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Other revenue', 29), (' Interest revenue', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 7, 9], 'score': 100, 'value': 29.0, 'line_item_label': ['Other income', 'Financial income', 'Net financing costs'], 'note_numbers': ['5', '9', nan], 'line_item_value': [46.0, 23.0, -40.0]}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs ', ' Other revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Other revenue', 67), (' Interest revenue', 57), ('other income', 12), ('finance income', 11), (' Net finance costs ', 10), ('Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs ', 58), ('other income', 40), ('Finance income and costs', 40), (' Other revenue', 38), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs ', 44), ('other income', 35), ('Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), (' Other revenue', 25), ('finance income', 17)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), (' Other revenue', 43), (' Interest revenue', 38), (' Net finance costs ', 38), ('Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Interest revenue', 40), ('Finance income and costs', 39), (' Finance income and finance costs', 38), (' Other revenue', 32), (' Net finance costs ', 30), ('finance income', 27), ('other income', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Interest revenue', 52), (' Other revenue', 43), ('Finance income and costs', 32), (' Finance income and finance costs', 32), ('other income', 30), ('finance income', 29), (' Net finance costs ', 26)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other income', 42), (' Other revenue', 41), (' Interest revenue', 38), (' Net finance costs ', 38), ('Finance income and costs', 33), (' Finance income and finance costs', 32), ('finance income', 29)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [('finance income', 96), ('Finance income and costs', 71), (' Finance income and finance costs', 63), (' Net finance costs ', 57), ('other income', 42), (' Interest revenue', 29), (' Other revenue', 16)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('Finance income and costs', 57), (' Net finance costs ', 55), ('finance income', 54), (' Finance income and finance costs', 48), (' Interest revenue', 34), ('other income', 24), (' Other revenue', 23)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Net finance costs ', 100), ('Finance income and costs', 72), (' Finance income and finance costs', 60), ('finance income', 59), ('other income', 38), (' Other revenue', 30), (' Interest revenue', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other income', 48), ('finance income', 41), (' Net finance costs ', 38), (' Finance income and finance costs', 36), ('Finance income and costs', 33), (' Interest revenue', 27), (' Other revenue', 24)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50), (' Net finance costs ', 45), ('Finance income and costs', 43), (' Finance income and finance costs', 36), (' Interest revenue', 32), (' Other revenue', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('other income', 44), (' Other revenue', 36), (' Net finance costs ', 33), ('Finance income and costs', 29), (' Finance income and finance costs', 29), (' Interest revenue', 28), ('finance income', 24)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), (' Net finance costs ', 49), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Other revenue', 29), (' Interest revenue', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [(' Net finance costs ', 49), ('other income', 48), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Other revenue', 29), (' Interest revenue', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 7, 9], 'score': 100, 'value': -66.0, 'line_item_label': ['Other income', 'Financial income', 'Net financing costs'], 'note_numbers': ['5', '9', nan], 'line_item_value': [0.0, 57.0, -123.0]}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue ', ' Interest income from cash and cash equivalents ', ' Interest income from financial assets measured at amortised cost'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none rental income , res_fuzz_match = [(' Interest income ', 71), (' Sublease interest income ', 65), (' Interest income from cash and cash equivalents ', 65), (' Interest income from financial assets measured at amortised cost', 65), ('interest ', 62), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 53), (' Interest received - Loan ', 47), (' interest revenue ', 47), (' Bank interest ', 46), (' Interest received - Bank ', 41), (' Share of JV interest received/(paid) ', 41), (' Bank Deposits - cash and cash equivalents ', 35)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Interest received - Loan ', 40), (' Bank Deposits - cash and cash equivalents ', 40), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 40), (' Interest income from financial assets measured at amortised cost', 40), ('interest ', 38), (' Bank interest ', 30), (' Interest income ', 30), (' Interest received - Bank ', 30), (' Sublease interest income ', 30), (' Share of JV interest received/(paid) ', 30), (' interest revenue ', 30), (' Interest income from cash and cash equivalents ', 30)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none rental income , res_fuzz_match = [(' Interest income ', 71), (' Sublease interest income ', 65), (' Interest income from cash and cash equivalents ', 65), (' Interest income from financial assets measured at amortised cost', 65), ('interest ', 62), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 53), (' Interest received - Loan ', 47), (' interest revenue ', 47), (' Bank interest ', 46), (' Interest received - Bank ', 41), (' Share of JV interest received/(paid) ', 41), (' Bank Deposits - cash and cash equivalents ', 35)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Interest received - Loan ', 40), (' Bank Deposits - cash and cash equivalents ', 40), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 40), (' Interest income from financial assets measured at amortised cost', 40), ('interest ', 38), (' Bank interest ', 30), (' Interest income ', 30), (' Interest received - Bank ', 30), (' Sublease interest income ', 30), (' Share of JV interest received/(paid) ', 30), (' interest revenue ', 30), (' Interest income from cash and cash equivalents ', 30)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['Interest expense', 'interest expense'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none rental income , res_fuzz_match = [('Interest expense', 47), ('interest expense', 47)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('Interest expense', 30), ('interest expense', 30)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none rental income , res_fuzz_match = [('Interest expense', 47), ('interest expense', 47)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('Interest expense', 30), ('interest expense', 30)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue ', ' Interest income from cash and cash equivalents ', ' Interest income from financial assets measured at amortised cost'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [('interest ', 100), (' Interest income ', 100), (' Sublease interest income ', 84), (' Bank interest ', 77), (' interest revenue ', 69), (' Interest income from cash and cash equivalents ', 68), (' Interest income from financial assets measured at amortised cost', 68), (' Share of JV interest received/(paid) ', 63), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 63), (' Interest received - Bank ', 58), (' Interest received - Loan ', 58), (' Bank Deposits - cash and cash equivalents ', 37)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none foreign exchange gain , res_fuzz_match = [(' Interest income from cash and cash equivalents ', 48), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Bank Deposits - cash and cash equivalents ', 44), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 44), (' Interest income from financial assets measured at amortised cost', 44), (' Interest income ', 43), (' Share of JV interest received/(paid) ', 41), (' interest revenue ', 40), ('interest ', 38), (' Bank interest ', 38), (' Sublease interest income ', 36)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none financial income , res_fuzz_match = [(' Interest income ', 57), (' Sublease interest income ', 56), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 56), (' Interest income from financial assets measured at amortised cost', 56), (' Interest income from cash and cash equivalents ', 50), (' Interest received - Bank ', 39), (' Interest received - Loan ', 39), (' Share of JV interest received/(paid) ', 39), (' Bank interest ', 38), (' Bank Deposits - cash and cash equivalents ', 33), (' interest revenue ', 27), ('interest ', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none interest on lease liabilties , res_fuzz_match = [('interest ', 100), (' Bank interest ', 77), (' interest revenue ', 67), (' Interest received - Loan ', 65), (' Interest income ', 64), (' Interest received - Bank ', 60), (' Share of JV interest received/(paid) ', 58), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 56), (' Sublease interest income ', 55), (' Interest income from financial assets measured at amortised cost', 48), (' Interest income from cash and cash equivalents ', 44), (' Bank Deposits - cash and cash equivalents ', 41)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none foreign exchange loss , res_fuzz_match = [(' Interest income from cash and cash equivalents ', 48), (' Interest income from financial assets measured at amortised cost', 48), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Bank Deposits - cash and cash equivalents ', 44), (' Interest income ', 43), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 40), (' interest revenue ', 40), ('interest ', 38), (' Bank interest ', 38), (' Sublease interest income ', 36), (' Share of JV interest received/(paid) ', 33)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none financial costs , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 65), (' Interest income from financial assets measured at amortised cost', 65), (' Interest income ', 50), (' Interest income from cash and cash equivalents ', 47), (' Sublease interest income ', 42), (' Interest received - Loan ', 41), (' Bank Deposits - cash and cash equivalents ', 41), ('interest ', 38), (' Bank interest ', 38), (' Interest received - Bank ', 35), (' Share of JV interest received/(paid) ', 35), (' interest revenue ', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none net financing costs , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 60), (' Interest income ', 57), (' Interest income from financial assets measured at amortised cost', 55), (' Sublease interest income ', 51), (' Interest income from cash and cash equivalents ', 50), (' Interest received - Bank ', 40), (' Interest received - Loan ', 40), (' Share of JV interest received/(paid) ', 40), (' Bank Deposits - cash and cash equivalents ', 40), (' interest revenue ', 40), ('interest ', 38), (' Bank interest ', 38)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [('interest ', 100), (' Interest income ', 100), (' Sublease interest income ', 84), (' Bank interest ', 77), (' interest revenue ', 69), (' Interest income from cash and cash equivalents ', 68), (' Interest income from financial assets measured at amortised cost', 68), (' Share of JV interest received/(paid) ', 63), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 63), (' Interest received - Bank ', 58), (' Interest received - Loan ', 58), (' Bank Deposits - cash and cash equivalents ', 37)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none foreign exchange gain , res_fuzz_match = [(' Interest income from cash and cash equivalents ', 48), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Bank Deposits - cash and cash equivalents ', 44), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 44), (' Interest income from financial assets measured at amortised cost', 44), (' Interest income ', 43), (' Share of JV interest received/(paid) ', 41), (' interest revenue ', 40), ('interest ', 38), (' Bank interest ', 38), (' Sublease interest income ', 36)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none financial income , res_fuzz_match = [(' Interest income ', 57), (' Sublease interest income ', 56), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 56), (' Interest income from financial assets measured at amortised cost', 56), (' Interest income from cash and cash equivalents ', 50), (' Interest received - Bank ', 39), (' Interest received - Loan ', 39), (' Share of JV interest received/(paid) ', 39), (' Bank interest ', 38), (' Bank Deposits - cash and cash equivalents ', 33), (' interest revenue ', 27), ('interest ', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none interest on lease liabilties , res_fuzz_match = [('interest ', 100), (' Bank interest ', 77), (' interest revenue ', 67), (' Interest received - Loan ', 65), (' Interest income ', 64), (' Interest received - Bank ', 60), (' Share of JV interest received/(paid) ', 58), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 56), (' Sublease interest income ', 55), (' Interest income from financial assets measured at amortised cost', 48), (' Interest income from cash and cash equivalents ', 44), (' Bank Deposits - cash and cash equivalents ', 41)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none foreign exchange loss , res_fuzz_match = [(' Interest income from cash and cash equivalents ', 48), (' Interest income from financial assets measured at amortised cost', 48), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Bank Deposits - cash and cash equivalents ', 44), (' Interest income ', 43), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 40), (' interest revenue ', 40), ('interest ', 38), (' Bank interest ', 38), (' Sublease interest income ', 36), (' Share of JV interest received/(paid) ', 33)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none financial costs , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 65), (' Interest income from financial assets measured at amortised cost', 65), (' Interest income ', 50), (' Interest income from cash and cash equivalents ', 47), (' Sublease interest income ', 42), (' Interest received - Loan ', 41), (' Bank Deposits - cash and cash equivalents ', 41), ('interest ', 38), (' Bank interest ', 38), (' Interest received - Bank ', 35), (' Share of JV interest received/(paid) ', 35), (' interest revenue ', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none net financing costs , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 60), (' Interest income ', 57), (' Interest income from financial assets measured at amortised cost', 55), (' Sublease interest income ', 51), (' Interest income from cash and cash equivalents ', 50), (' Interest received - Bank ', 40), (' Interest received - Loan ', 40), (' Share of JV interest received/(paid) ', 40), (' Bank Deposits - cash and cash equivalents ', 40), (' interest revenue ', 40), ('interest ', 38), (' Bank interest ', 38)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3, 7, 10], 'score': [100, 100, 100, 100], 'value': [57.0, -124.0, 22.0, -63.0], 'label': ['None Interest income', 'None Interest on lease liabilties', 'None Interest income', 'None Interest on lease liabilties'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['Interest expense', 'interest expense'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [('Interest expense', 69), ('interest expense', 69)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none foreign exchange gain , res_fuzz_match = [('Interest expense', 47), ('interest expense', 47)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none financial income , res_fuzz_match = [('Interest expense', 27), ('interest expense', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none interest on lease liabilties , res_fuzz_match = [('Interest expense', 73), ('interest expense', 73)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none foreign exchange loss , res_fuzz_match = [('Interest expense', 47), ('interest expense', 47)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none financial costs , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none net financing costs , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [('Interest expense', 69), ('interest expense', 69)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none foreign exchange gain , res_fuzz_match = [('Interest expense', 47), ('interest expense', 47)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none financial income , res_fuzz_match = [('Interest expense', 27), ('interest expense', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none interest on lease liabilties , res_fuzz_match = [('Interest expense', 73), ('interest expense', 73)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none foreign exchange loss , res_fuzz_match = [('Interest expense', 47), ('interest expense', 47)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none financial costs , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none net financing costs , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-25 12:24:58+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense ', ' Interest on external debt ', ' Interest in finance leases']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income ', ' Interest on lease liabilities ', ' Interest expense from financial liabilities measured at amortised cost ', ' Unwind of discount on decommissioning provision ', ' Unwind of discount on Lease Liability']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['interest income']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense ', ' Interest on external debt ', ' Interest in finance leases'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses ', 32), (' interest expense ', 29), (' Interest on external debt ', 23), (' Interest in finance leases', 23), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' Interest in finance leases', 41), (' finance expenses ', 27), (' interest expense ', 25), (' Interest on external debt ', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost ', 43), (' finance expenses ', 32), (' interest expense ', 30), (' Interest on external debt ', 25), (' Interest in finance leases', 19)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Interest in finance leases', 45), (' net finance costs ', 38), (' interest expense ', 38), (' Interest on external debt ', 32), ('finance cost ', 27), (' finance expenses ', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Interest on external debt ', 44), (' Interest in finance leases', 44), (' interest expense ', 40), (' finance expenses ', 37), (' net finance costs ', 30), ('finance cost ', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Interest on external debt ', 44), (' Interest in finance leases', 44), (' finance expenses ', 41), (' interest expense ', 39), ('finance cost ', 30), (' net finance costs ', 26)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Interest on external debt ', 43), (' net finance costs ', 38), (' interest expense ', 38), (' Interest in finance leases', 38), ('finance cost ', 24), (' finance expenses ', 17)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' net finance costs ', 57), (' Interest in finance leases', 55), ('finance cost ', 50), (' finance expenses ', 46), (' interest expense ', 29), (' Interest on external debt ', 24)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' finance expenses ', 96), ('finance cost ', 64), (' interest expense ', 62), (' net finance costs ', 55), (' Interest on external debt ', 41), (' Interest in finance leases', 41)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance expenses ', 57), (' Interest in finance leases', 57), (' interest expense ', 40), (' Interest on external debt ', 40)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Interest in finance leases', 43), (' net finance costs ', 38), (' Interest on external debt ', 38), ('finance cost ', 36), (' finance expenses ', 34), (' interest expense ', 32)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses ', 69), (' interest expense ', 65), (' net finance costs ', 45), (' Interest on external debt ', 44), ('finance cost ', 37), (' Interest in finance leases', 33)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [(' Interest on external debt ', 34), (' Interest in finance leases', 34), (' net finance costs ', 33), (' interest expense ', 33), (' finance expenses ', 29), ('finance cost ', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' interest expense ', 54), (' net finance costs ', 49), (' finance expenses ', 46), (' Interest on external debt ', 43), ('finance cost ', 42), (' Interest in finance leases', 33)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [(' net finance costs ', 49), (' interest expense ', 49), (' finance expenses ', 46), ('finance cost ', 42), (' Interest on external debt ', 38), (' Interest in finance leases', 33)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [8, 9], 'score': 100, 'value': -103.0, 'line_item_label': ['Financial expenses', 'Net financing costs'], 'note_numbers': ['9', nan], 'line_item_value': [-63.0, -40.0]}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense ', ' Interest on external debt ', ' Interest in finance leases'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses ', 32), (' interest expense ', 29), (' Interest on external debt ', 23), (' Interest in finance leases', 23), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' Interest in finance leases', 41), (' finance expenses ', 27), (' interest expense ', 25), (' Interest on external debt ', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost ', 43), (' finance expenses ', 32), (' interest expense ', 30), (' Interest on external debt ', 25), (' Interest in finance leases', 19)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Interest in finance leases', 45), (' net finance costs ', 38), (' interest expense ', 38), (' Interest on external debt ', 32), ('finance cost ', 27), (' finance expenses ', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Interest on external debt ', 44), (' Interest in finance leases', 44), (' interest expense ', 40), (' finance expenses ', 37), (' net finance costs ', 30), ('finance cost ', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Interest on external debt ', 44), (' Interest in finance leases', 44), (' finance expenses ', 41), (' interest expense ', 39), ('finance cost ', 30), (' net finance costs ', 26)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Interest on external debt ', 43), (' net finance costs ', 38), (' interest expense ', 38), (' Interest in finance leases', 38), ('finance cost ', 24), (' finance expenses ', 17)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' net finance costs ', 57), (' Interest in finance leases', 55), ('finance cost ', 50), (' finance expenses ', 46), (' interest expense ', 29), (' Interest on external debt ', 24)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' finance expenses ', 96), ('finance cost ', 64), (' interest expense ', 62), (' net finance costs ', 55), (' Interest on external debt ', 41), (' Interest in finance leases', 41)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance expenses ', 57), (' Interest in finance leases', 57), (' interest expense ', 40), (' Interest on external debt ', 40)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Interest in finance leases', 43), (' net finance costs ', 38), (' Interest on external debt ', 38), ('finance cost ', 36), (' finance expenses ', 34), (' interest expense ', 32)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses ', 69), (' interest expense ', 65), (' net finance costs ', 45), (' Interest on external debt ', 44), ('finance cost ', 37), (' Interest in finance leases', 33)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [(' Interest on external debt ', 34), (' Interest in finance leases', 34), (' net finance costs ', 33), (' interest expense ', 33), (' finance expenses ', 29), ('finance cost ', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' interest expense ', 54), (' net finance costs ', 49), (' finance expenses ', 46), (' Interest on external debt ', 43), ('finance cost ', 42), (' Interest in finance leases', 33)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [(' net finance costs ', 49), (' interest expense ', 49), (' finance expenses ', 46), ('finance cost ', 42), (' Interest on external debt ', 38), (' Interest in finance leases', 33)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [8, 9], 'score': 100, 'value': -303.0, 'line_item_label': ['Financial expenses', 'Net financing costs'], 'note_numbers': ['9', nan], 'line_item_value': [-180.0, -123.0]}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income ', ' Interest on lease liabilities ', ' Interest expense from financial liabilities measured at amortised cost ', ' Unwind of discount on decommissioning provision ', ' Unwind of discount on Lease Liability'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [(' interest ', 100), (' interest income ', 100), (' Interest expenses ', 69), (' Interest on leases ', 69), (' Interest accrued on loans ', 67), (' Other interest expense ', 63), (' Lease interest expense ', 63), (' Interest expense on financial liabilities using the effective interest rate method - other ', 58), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 58), (' Lease liabilities interest expense ', 58), (' Interest expense from financial liabilities measured at amortised cost ', 58), (' Interest on bank overdrafts and loans (other than those from related parties) ', 53), (' Interest on lease liabilities ', 53), ('loan ', 50), (' debenture ', 50), (' bonds ', 50), (' Discount unwind on the provision for asset retirement obligation ', 47), (' Interest accrued on lease liabilities ', 47), (' Unwind of discount on decommissioning provision ', 47), (' Unwind of discount on Lease Liability', 42), (' cash credit ', 36), (' bank facilities ', 30), (' debt ', 25), (' borrowings ', 17)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none foreign exchange gain , res_fuzz_match = [('loan ', 50), (' bank facilities ', 50), (' bonds ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 48), (' Interest expenses ', 47), (' Interest on leases ', 46), (' Interest expense on financial liabilities using the effective interest rate method - other ', 44), (' Interest expense from financial liabilities measured at amortised cost ', 44), (' Unwind of discount on Lease Liability', 44), (' Other interest expense ', 43), (' interest income ', 43), (' Interest accrued on loans ', 42), (' Interest on lease liabilities ', 41), (' Discount unwind on the provision for asset retirement obligation ', 40), (' Interest accrued on lease liabilities ', 40), (' Lease interest expense ', 40), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 40), (' interest ', 38), (' cash credit ', 36), (' Unwind of discount on decommissioning provision ', 36), (' borrowings ', 33), (' Lease liabilities interest expense ', 32), (' debt ', 25), (' debenture ', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none financial income , res_fuzz_match = [(' Interest expense on financial liabilities using the effective interest rate method - other ', 61), (' Interest expense from financial liabilities measured at amortised cost ', 61), (' bank facilities ', 60), (' interest income ', 57), ('loan ', 50), (' bonds ', 50), (' Lease liabilities interest expense ', 44), (' Interest on bank overdrafts and loans (other than those from related parties) ', 39), (' Interest accrued on loans ', 39), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 39), (' Unwind of discount on decommissioning provision ', 39), (' Unwind of discount on Lease Liability', 39), (' Discount unwind on the provision for asset retirement obligation ', 33), (' Other interest expense ', 33), (' Interest accrued on lease liabilities ', 33), (' Lease interest expense ', 33), (' Interest on lease liabilities ', 33), (' Interest on leases ', 31), (' cash credit ', 27), (' Interest expenses ', 27), (' debt ', 25), (' debenture ', 25), (' interest ', 25), (' borrowings ', 17)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none interest on lease liabilties , res_fuzz_match = [(' interest ', 100), (' Interest on leases ', 100), (' Interest on lease liabilities ', 100), (' Interest accrued on lease liabilities ', 83), (' Interest expenses ', 73), (' Interest accrued on loans ', 68), (' Other interest expense ', 67), (' Unwind of discount on Lease Liability', 67), (' Lease interest expense ', 65), (' interest income ', 64), (' Interest expense on financial liabilities using the effective interest rate method - other ', 59), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 56), (' Interest expense from financial liabilities measured at amortised cost ', 52), ('loan ', 50), (' debt ', 50), (' debenture ', 50), (' bank facilities ', 50), (' bonds ', 50), (' Lease liabilities interest expense ', 48), (' cash credit ', 45), (' Interest on bank overdrafts and loans (other than those from related parties) ', 44), (' Discount unwind on the provision for asset retirement obligation ', 41), (' Unwind of discount on decommissioning provision ', 37), (' borrowings ', 17)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none foreign exchange loss , res_fuzz_match = [(' Interest on bank overdrafts and loans (other than those from related parties) ', 52), ('loan ', 50), (' bonds ', 50), (' Interest expenses ', 47), (' Discount unwind on the provision for asset retirement obligation ', 44), (' Interest expense on financial liabilities using the effective interest rate method - other ', 44), (' Unwind of discount on decommissioning provision ', 44), (' Other interest expense ', 43), (' interest income ', 43), (' Interest accrued on loans ', 42), (' bank facilities ', 40), (' Lease interest expense ', 40), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 40), (' Interest on lease liabilities ', 40), (' Interest expense from financial liabilities measured at amortised cost ', 40), (' Unwind of discount on Lease Liability', 40), (' interest ', 38), (' Interest on leases ', 38), (' cash credit ', 36), (' Interest accrued on lease liabilities ', 36), (' Lease liabilities interest expense ', 36), (' borrowings ', 33), (' debt ', 25), (' debenture ', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none financial costs , res_fuzz_match = [(' bank facilities ', 60), (' Interest expense on financial liabilities using the effective interest rate method - other ', 59), (' Interest expense from financial liabilities measured at amortised cost ', 59), ('loan ', 50), (' bonds ', 50), (' interest income ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 47), (' Discount unwind on the provision for asset retirement obligation ', 41), (' Other interest expense ', 41), (' Interest accrued on loans ', 41), (' Lease liabilities interest expense ', 41), (' Unwind of discount on decommissioning provision ', 41), (' Unwind of discount on Lease Liability', 41), (' interest ', 38), (' cash credit ', 36), (' Interest accrued on lease liabilities ', 35), (' Lease interest expense ', 35), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 35), (' Interest expenses ', 33), (' Interest on leases ', 31), (' Interest on lease liabilities ', 29), (' debt ', 25), (' debenture ', 25), (' borrowings ', 17)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none net financing costs , res_fuzz_match = [(' interest income ', 57), (' Interest expense on financial liabilities using the effective interest rate method - other ', 55), ('loan ', 50), (' bonds ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 50), (' Interest expense from financial liabilities measured at amortised cost ', 50), (' Interest accrued on loans ', 47), (' Interest on leases ', 46), (' Interest accrued on lease liabilities ', 45), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 45), (' bank facilities ', 40), (' Interest expenses ', 40), (' Discount unwind on the provision for asset retirement obligation ', 40), (' Other interest expense ', 40), (' Lease interest expense ', 40), (' Unwind of discount on decommissioning provision ', 40), (' Unwind of discount on Lease Liability', 40), (' debenture ', 38), (' interest ', 38), (' cash credit ', 36), (' Lease liabilities interest expense ', 35), (' Interest on lease liabilities ', 35), (' debt ', 25), (' borrowings ', 17)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [(' interest ', 100), (' interest income ', 100), (' Interest expenses ', 69), (' Interest on leases ', 69), (' Interest accrued on loans ', 67), (' Other interest expense ', 63), (' Lease interest expense ', 63), (' Interest expense on financial liabilities using the effective interest rate method - other ', 58), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 58), (' Lease liabilities interest expense ', 58), (' Interest expense from financial liabilities measured at amortised cost ', 58), (' Interest on bank overdrafts and loans (other than those from related parties) ', 53), (' Interest on lease liabilities ', 53), ('loan ', 50), (' debenture ', 50), (' bonds ', 50), (' Discount unwind on the provision for asset retirement obligation ', 47), (' Interest accrued on lease liabilities ', 47), (' Unwind of discount on decommissioning provision ', 47), (' Unwind of discount on Lease Liability', 42), (' cash credit ', 36), (' bank facilities ', 30), (' debt ', 25), (' borrowings ', 17)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none foreign exchange gain , res_fuzz_match = [('loan ', 50), (' bank facilities ', 50), (' bonds ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 48), (' Interest expenses ', 47), (' Interest on leases ', 46), (' Interest expense on financial liabilities using the effective interest rate method - other ', 44), (' Interest expense from financial liabilities measured at amortised cost ', 44), (' Unwind of discount on Lease Liability', 44), (' Other interest expense ', 43), (' interest income ', 43), (' Interest accrued on loans ', 42), (' Interest on lease liabilities ', 41), (' Discount unwind on the provision for asset retirement obligation ', 40), (' Interest accrued on lease liabilities ', 40), (' Lease interest expense ', 40), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 40), (' interest ', 38), (' cash credit ', 36), (' Unwind of discount on decommissioning provision ', 36), (' borrowings ', 33), (' Lease liabilities interest expense ', 32), (' debt ', 25), (' debenture ', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none financial income , res_fuzz_match = [(' Interest expense on financial liabilities using the effective interest rate method - other ', 61), (' Interest expense from financial liabilities measured at amortised cost ', 61), (' bank facilities ', 60), (' interest income ', 57), ('loan ', 50), (' bonds ', 50), (' Lease liabilities interest expense ', 44), (' Interest on bank overdrafts and loans (other than those from related parties) ', 39), (' Interest accrued on loans ', 39), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 39), (' Unwind of discount on decommissioning provision ', 39), (' Unwind of discount on Lease Liability', 39), (' Discount unwind on the provision for asset retirement obligation ', 33), (' Other interest expense ', 33), (' Interest accrued on lease liabilities ', 33), (' Lease interest expense ', 33), (' Interest on lease liabilities ', 33), (' Interest on leases ', 31), (' cash credit ', 27), (' Interest expenses ', 27), (' debt ', 25), (' debenture ', 25), (' interest ', 25), (' borrowings ', 17)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none interest on lease liabilties , res_fuzz_match = [(' interest ', 100), (' Interest on leases ', 100), (' Interest on lease liabilities ', 100), (' Interest accrued on lease liabilities ', 83), (' Interest expenses ', 73), (' Interest accrued on loans ', 68), (' Other interest expense ', 67), (' Unwind of discount on Lease Liability', 67), (' Lease interest expense ', 65), (' interest income ', 64), (' Interest expense on financial liabilities using the effective interest rate method - other ', 59), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 56), (' Interest expense from financial liabilities measured at amortised cost ', 52), ('loan ', 50), (' debt ', 50), (' debenture ', 50), (' bank facilities ', 50), (' bonds ', 50), (' Lease liabilities interest expense ', 48), (' cash credit ', 45), (' Interest on bank overdrafts and loans (other than those from related parties) ', 44), (' Discount unwind on the provision for asset retirement obligation ', 41), (' Unwind of discount on decommissioning provision ', 37), (' borrowings ', 17)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none foreign exchange loss , res_fuzz_match = [(' Interest on bank overdrafts and loans (other than those from related parties) ', 52), ('loan ', 50), (' bonds ', 50), (' Interest expenses ', 47), (' Discount unwind on the provision for asset retirement obligation ', 44), (' Interest expense on financial liabilities using the effective interest rate method - other ', 44), (' Unwind of discount on decommissioning provision ', 44), (' Other interest expense ', 43), (' interest income ', 43), (' Interest accrued on loans ', 42), (' bank facilities ', 40), (' Lease interest expense ', 40), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 40), (' Interest on lease liabilities ', 40), (' Interest expense from financial liabilities measured at amortised cost ', 40), (' Unwind of discount on Lease Liability', 40), (' interest ', 38), (' Interest on leases ', 38), (' cash credit ', 36), (' Interest accrued on lease liabilities ', 36), (' Lease liabilities interest expense ', 36), (' borrowings ', 33), (' debt ', 25), (' debenture ', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none financial costs , res_fuzz_match = [(' bank facilities ', 60), (' Interest expense on financial liabilities using the effective interest rate method - other ', 59), (' Interest expense from financial liabilities measured at amortised cost ', 59), ('loan ', 50), (' bonds ', 50), (' interest income ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 47), (' Discount unwind on the provision for asset retirement obligation ', 41), (' Other interest expense ', 41), (' Interest accrued on loans ', 41), (' Lease liabilities interest expense ', 41), (' Unwind of discount on decommissioning provision ', 41), (' Unwind of discount on Lease Liability', 41), (' interest ', 38), (' cash credit ', 36), (' Interest accrued on lease liabilities ', 35), (' Lease interest expense ', 35), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 35), (' Interest expenses ', 33), (' Interest on leases ', 31), (' Interest on lease liabilities ', 29), (' debt ', 25), (' debenture ', 25), (' borrowings ', 17)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none net financing costs , res_fuzz_match = [(' interest income ', 57), (' Interest expense on financial liabilities using the effective interest rate method - other ', 55), ('loan ', 50), (' bonds ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 50), (' Interest expense from financial liabilities measured at amortised cost ', 50), (' Interest accrued on loans ', 47), (' Interest on leases ', 46), (' Interest accrued on lease liabilities ', 45), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 45), (' bank facilities ', 40), (' Interest expenses ', 40), (' Discount unwind on the provision for asset retirement obligation ', 40), (' Other interest expense ', 40), (' Lease interest expense ', 40), (' Unwind of discount on decommissioning provision ', 40), (' Unwind of discount on Lease Liability', 40), (' debenture ', 38), (' interest ', 38), (' cash credit ', 36), (' Lease liabilities interest expense ', 35), (' Interest on lease liabilities ', 35), (' debt ', 25), (' borrowings ', 17)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3, 7, 10], 'score': [100, 100, 100, 100], 'value': [57.0, -124.0, 22.0, -63.0], 'label': ['None Interest income', 'None Interest on lease liabilties', 'None Interest income', 'None Interest on lease liabilties'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['interest income'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [('interest income', 100)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none foreign exchange gain , res_fuzz_match = [('interest income', 43)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none financial income , res_fuzz_match = [('interest income', 57)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none interest on lease liabilties , res_fuzz_match = [('interest income', 64)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none foreign exchange loss , res_fuzz_match = [('interest income', 43)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none financial costs , res_fuzz_match = [('interest income', 50)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none net financing costs , res_fuzz_match = [('interest income', 57)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [('interest income', 100)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none foreign exchange gain , res_fuzz_match = [('interest income', 43)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none financial income , res_fuzz_match = [('interest income', 57)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none interest on lease liabilties , res_fuzz_match = [('interest income', 64)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none foreign exchange loss , res_fuzz_match = [('interest income', 43)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none financial costs , res_fuzz_match = [('interest income', 50)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none net financing costs , res_fuzz_match = [('interest income', 57)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 7], 'score': [100, 100], 'value': [57.0, 22.0], 'label': ['None Interest income', 'None Interest income'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-25 12:24:58+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories ', ' Share of profit of equity-accounted investees, net of income tax ']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['other revenue ', ' commission revenue ', ' government grants ', ' insurance proceeds ', ' foreign exchange gain ', ' other ', ' dividend from other parties ', ' other income ', ' net foreign exchange gain ', ' effective portion of changes in fair value of cash flow ', ' profit from discontinued operation ', ' net of tax ', ' share of jv income ', ' secondment income (tw recovery) ', ' japan recoveries ', ' margin charge income ', ' net foreign exchange gains/(losses) ', ' paid by customers - at amortised cost ', ' net foreign exchange (loss)/gain ', ' net ppe disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' quota lease income ', ' sundry income ', ' net (loss)/profit on disposal of non-current assets ', ' net other foreign exchange (losses)/gains ', ' Sub-lease rental income ', ' Profit on sale of assets ', ' Asset impairment ', ' Loss on sale of disposal of assets ', ' Remuneration from services linked to newly acquired entities ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' net gain / loss on disposal of property plant and equipment  ', ' Investment in joint venture ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Interest on unwinding of discount in provisions ', ' Profit from discontinued operation ', ' net of tax ', ' Net loss on disposal of property ', ' plant and equipment ', ' Net foreign exchange gains/(losses) ', ' Accretion expense ', ' Loss on loan refinancing ', ' Net foreign exchange (loss)/gain ', ' Net PPE disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Net (loss)/profit on disposal of non-current assets ', ' Net other foreign exchange (losses)/gains ', ' Miscellanous income ', ' Commision rebate ', ' Net foreign losses ', ' Derivaties at FVTPL- net change in fair value ', ' Other income - Bank guarantee ', ' Other expense - Net loss on sale or property, plant and equipment ', ' Other expense - Loss on inventory obsolescence ', ' Bank charges']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories ', ' Share of profit of equity-accounted investees, net of income tax '] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' interest revenue ', 57), (' expenses ', 50), (' other income and revenue ', 43), (' Share of gain/(loss) of joint venture ', 35), (' finance expenses', 32), (' Impairement (expenses)/reversal ', 31), (' Loss on revaluation of inventories ', 30), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' net of tax ', 15), (' net of tax ', 15), (' Share of profit of equity-accounted investees, net of income tax ', 15), (' interest gains and losses ', 14), ('finance cost ', 12), (' other income ', 12), (' Other income ', 12), (' Impairment loss ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10), (' other gains/losses ', 10), (' finance income and costs ', 7), (' Finance income and costs ', 7), (' finance income and finance cost ', 6), (' Finance income and finance costs ', 6)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' net of tax ', 38), (' net of tax ', 38), (' other opertaing income ', 37), (' share of profit of equity accounted investees ', 36), (' other gains/losses ', 33), (' interest revenue ', 33), (' Loss on revaluation of inventories ', 33), (' finance income and finance cost ', 32), (' other income and revenue ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Finance income and finance costs ', 32), (' Impairment loss ', 30), (' Impairement (expenses)/reversal ', 28), (' Profit from discontinued operation ', 28), (' Share of profit of equity-accounted investees, net of income tax ', 28), (' finance expenses', 27), (' interest gains and losses ', 26), (' expenses ', 13)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' other gains/losses ', 52), (' Profit from discontinued operation ', 46), (' net finance costs ', 44), ('finance cost ', 43), (' other opertaing income ', 40), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories ', 36), (' other income ', 35), (' Other income ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Impairment loss ', 35), (' finance expenses', 32), (' finance income and costs ', 30), (' interest revenue ', 30), (' Finance income and costs ', 30), (' Share of profit of equity-accounted investees, net of income tax ', 30), (' interest gains and losses ', 29), (' finance income and finance cost ', 25), (' Impairement (expenses)/reversal ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other income ', 100), (' Other income ', 100), (' other opertaing income ', 76), (' other gains/losses ', 69), (' other income and revenue ', 67), (' Profit from discontinued operation ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' interest revenue ', 38), (' Loss on revaluation of inventories ', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' Share of profit of equity-accounted investees, net of income tax ', 34), (' net of tax ', 33), (' net of tax ', 33), (' Impairement (expenses)/reversal ', 32), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' share of profit of equity accounted investees ', 30), ('finance cost ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' expenses ', 12)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' interest gains and losses ', 51), (' other income and revenue ', 47), (' share of profit of equity accounted investees ', 40), (' interest revenue ', 40), (' expenses ', 39), (' finance income and costs ', 39), (' Finance income and costs ', 39), (' Loss on revaluation of inventories ', 39), (' finance income and finance cost ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Finance income and finance costs ', 38), (' Profit from discontinued operation ', 38), (' finance expenses', 37), (' Impairement (expenses)/reversal ', 36), (' other gains/losses ', 35), (' Impairment loss ', 33), (' Share of profit of equity-accounted investees, net of income tax ', 33), (' net finance costs ', 30), (' other opertaing income ', 28), (' net of tax ', 25), (' net of tax ', 25), ('finance cost ', 22), (' other income ', 22), (' Other income ', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' expenses ', 55), (' other income and revenue ', 53), (' interest revenue ', 52), (' interest gains and losses ', 47), (' finance expenses', 41), (' Share of gain/(loss) of joint venture ', 41), (' other gains/losses ', 39), (' Impairement (expenses)/reversal ', 39), (' Impairment loss ', 37), (' Profit from discontinued operation ', 37), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 32), (' finance income and costs ', 32), (' Finance income and finance costs ', 32), (' Finance income and costs ', 32), (' Loss on revaluation of inventories ', 32), (' share of profit of equity accounted investees ', 31), (' Share of profit of equity-accounted investees, net of income tax ', 31), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' other opertaing income ', 29), (' net finance costs ', 26)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Profit from discontinued operation ', 65), (' other income and revenue ', 55), (' other opertaing income ', 50), (' other gains/losses ', 43), (' other income ', 42), (' Other income ', 42), (' Loss on revaluation of inventories ', 42), (' Share of gain/(loss) of joint venture ', 40), (' share of profit of equity accounted investees ', 39), (' net finance costs ', 38), (' interest revenue ', 38), (' Impairement (expenses)/reversal ', 38), (' Share of profit of equity-accounted investees, net of income tax ', 37), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' finance income and costs ', 33), (' Finance income and costs ', 33), (' finance income and finance cost ', 32), (' Finance income and finance costs ', 32), ('finance cost ', 24), (' expenses ', 21), (' net of tax ', 21), (' net of tax ', 21), (' finance expenses', 17)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' finance income and costs ', 71), (' Finance income and costs ', 71), (' finance income and finance cost ', 63), (' Finance income and finance costs ', 63), (' net finance costs ', 57), ('finance cost ', 50), (' finance expenses', 46), (' other income and revenue ', 46), (' other income ', 42), (' Other income ', 42), (' Impairment loss ', 42), (' interest gains and losses ', 40), (' Loss on revaluation of inventories ', 35), (' other opertaing income ', 32), (' Profit from discontinued operation ', 30), (' Share of profit of equity-accounted investees, net of income tax ', 30), (' other gains/losses ', 29), (' share of profit of equity accounted investees ', 29), (' interest revenue ', 29), (' Share of gain/(loss) of joint venture ', 29), (' Impairement (expenses)/reversal ', 24), (' net of tax ', 20), (' net of tax ', 20), (' expenses ', 11)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' finance expenses', 96), ('finance cost ', 64), (' expenses ', 60), (' Impairement (expenses)/reversal ', 59), (' finance income and costs ', 57), (' Finance income and costs ', 57), (' net finance costs ', 55), (' finance income and finance cost ', 48), (' Finance income and finance costs ', 48), (' interest revenue ', 34), (' share of profit of equity accounted investees ', 29), (' Share of gain/(loss) of joint venture ', 29), (' net of tax ', 29), (' net of tax ', 29), (' Loss on revaluation of inventories ', 29), (' interest gains and losses ', 28), (' other income and revenue ', 28), (' other income ', 24), (' Other income ', 24), (' Impairment loss ', 24), (' Profit from discontinued operation ', 24), (' Share of profit of equity-accounted investees, net of income tax ', 23), (' other gains/losses ', 21), (' other opertaing income ', 19)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance income and costs ', 72), (' Finance income and costs ', 72), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' finance expenses', 57), (' other income ', 38), (' interest gains and losses ', 38), (' Other income ', 38), (' Profit from discontinued operation ', 38), (' other opertaing income ', 36), (' share of profit of equity accounted investees ', 36), (' Share of profit of equity-accounted investees, net of income tax ', 35), (' Impairement (expenses)/reversal ', 34), (' Share of gain/(loss) of joint venture ', 33), (' other income and revenue ', 32), (' Loss on revaluation of inventories ', 28), (' other gains/losses ', 27), (' interest revenue ', 27), (' net of tax ', 27), (' net of tax ', 27), (' Impairment loss ', 23), (' expenses ', 10)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' other opertaing income ', 55), (' Share of profit of equity-accounted investees, net of income tax ', 54), (' Profit from discontinued operation ', 49), (' other income ', 48), (' Other income ', 48), (' share of profit of equity accounted investees ', 46), (' other income and revenue ', 45), (' net of tax ', 41), (' net of tax ', 41), (' net finance costs ', 38), (' Loss on revaluation of inventories ', 37), ('finance cost ', 36), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' finance expenses', 34), (' finance income and costs ', 33), (' Impairement (expenses)/reversal ', 33), (' Finance income and costs ', 33), (' other gains/losses ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Impairment loss ', 30), (' interest revenue ', 27), (' expenses ', 14)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' Impairement (expenses)/reversal ', 56), (' expenses ', 55), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' other income and revenue ', 47), (' net finance costs ', 45), (' finance income and costs ', 43), (' net of tax ', 43), (' net of tax ', 43), (' Finance income and costs ', 43), (' Share of profit of equity-accounted investees, net of income tax ', 38), ('finance cost ', 37), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' Profit from discontinued operation ', 33), (' other gains/losses ', 32), (' interest revenue ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Loss on revaluation of inventories ', 32), (' share of profit of equity accounted investees ', 27), (' Impairment loss ', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [(' Profit from discontinued operation ', 54), (' other opertaing income ', 51), (' share of profit of equity accounted investees ', 50), (' other income ', 44), (' Other income ', 44), (' Share of profit of equity-accounted investees, net of income tax ', 41), (' other gains/losses ', 39), (' other income and revenue ', 37), (' Impairement (expenses)/reversal ', 34), (' net finance costs ', 33), (' Share of gain/(loss) of joint venture ', 33), (' Loss on revaluation of inventories ', 33), (' finance expenses', 29), (' finance income and finance cost ', 29), (' finance income and costs ', 29), (' net of tax ', 29), (' Finance income and finance costs ', 29), (' net of tax ', 29), (' Finance income and costs ', 29), (' interest revenue ', 28), (' interest gains and losses ', 28), ('finance cost ', 25), (' Impairment loss ', 25), (' expenses ', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other income ', 67), (' Other income ', 67), (' other income and revenue ', 59), (' other opertaing income ', 55), (' net finance costs ', 49), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' finance expenses', 46), (' Profit from discontinued operation ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' Share of profit of equity-accounted investees, net of income tax ', 40), (' share of profit of equity accounted investees ', 39), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' Impairment loss ', 30), (' expenses ', 29), (' Loss on revaluation of inventories ', 28), (' interest revenue ', 27), (' net of tax ', 21), (' net of tax ', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [(' net finance costs ', 49), (' other income ', 48), (' Other income ', 48), (' finance expenses', 46), (' other opertaing income ', 45), (' other income and revenue ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' Profit from discontinued operation ', 41), (' Share of profit of equity-accounted investees, net of income tax ', 40), (' Impairement (expenses)/reversal ', 38), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Finance income and finance costs ', 36), (' share of profit of equity accounted investees ', 35), (' Loss on revaluation of inventories ', 33), (' other gains/losses ', 32), (' Impairment loss ', 30), (' expenses ', 29), (' Share of gain/(loss) of joint venture ', 28), (' net of tax ', 28), (' net of tax ', 28), (' interest revenue ', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 8, 9], 'score': 100, 'value': -57.0, 'line_item_label': ['Other income', 'Financial expenses', 'Net financing costs'], 'note_numbers': ['5', '9', nan], 'line_item_value': [46.0, -63.0, -40.0]}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories ', ' Share of profit of equity-accounted investees, net of income tax '] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' interest revenue ', 57), (' expenses ', 50), (' other income and revenue ', 43), (' Share of gain/(loss) of joint venture ', 35), (' finance expenses', 32), (' Impairement (expenses)/reversal ', 31), (' Loss on revaluation of inventories ', 30), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' net of tax ', 15), (' net of tax ', 15), (' Share of profit of equity-accounted investees, net of income tax ', 15), (' interest gains and losses ', 14), ('finance cost ', 12), (' other income ', 12), (' Other income ', 12), (' Impairment loss ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10), (' other gains/losses ', 10), (' finance income and costs ', 7), (' Finance income and costs ', 7), (' finance income and finance cost ', 6), (' Finance income and finance costs ', 6)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' net of tax ', 38), (' net of tax ', 38), (' other opertaing income ', 37), (' share of profit of equity accounted investees ', 36), (' other gains/losses ', 33), (' interest revenue ', 33), (' Loss on revaluation of inventories ', 33), (' finance income and finance cost ', 32), (' other income and revenue ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Finance income and finance costs ', 32), (' Impairment loss ', 30), (' Impairement (expenses)/reversal ', 28), (' Profit from discontinued operation ', 28), (' Share of profit of equity-accounted investees, net of income tax ', 28), (' finance expenses', 27), (' interest gains and losses ', 26), (' expenses ', 13)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' other gains/losses ', 52), (' Profit from discontinued operation ', 46), (' net finance costs ', 44), ('finance cost ', 43), (' other opertaing income ', 40), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories ', 36), (' other income ', 35), (' Other income ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Impairment loss ', 35), (' finance expenses', 32), (' finance income and costs ', 30), (' interest revenue ', 30), (' Finance income and costs ', 30), (' Share of profit of equity-accounted investees, net of income tax ', 30), (' interest gains and losses ', 29), (' finance income and finance cost ', 25), (' Impairement (expenses)/reversal ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other income ', 100), (' Other income ', 100), (' other opertaing income ', 76), (' other gains/losses ', 69), (' other income and revenue ', 67), (' Profit from discontinued operation ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' interest revenue ', 38), (' Loss on revaluation of inventories ', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' Share of profit of equity-accounted investees, net of income tax ', 34), (' net of tax ', 33), (' net of tax ', 33), (' Impairement (expenses)/reversal ', 32), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' share of profit of equity accounted investees ', 30), ('finance cost ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' expenses ', 12)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' interest gains and losses ', 51), (' other income and revenue ', 47), (' share of profit of equity accounted investees ', 40), (' interest revenue ', 40), (' expenses ', 39), (' finance income and costs ', 39), (' Finance income and costs ', 39), (' Loss on revaluation of inventories ', 39), (' finance income and finance cost ', 38), (' Share of gain/(loss) of joint venture ', 38), (' Finance income and finance costs ', 38), (' Profit from discontinued operation ', 38), (' finance expenses', 37), (' Impairement (expenses)/reversal ', 36), (' other gains/losses ', 35), (' Impairment loss ', 33), (' Share of profit of equity-accounted investees, net of income tax ', 33), (' net finance costs ', 30), (' other opertaing income ', 28), (' net of tax ', 25), (' net of tax ', 25), ('finance cost ', 22), (' other income ', 22), (' Other income ', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' expenses ', 55), (' other income and revenue ', 53), (' interest revenue ', 52), (' interest gains and losses ', 47), (' finance expenses', 41), (' Share of gain/(loss) of joint venture ', 41), (' other gains/losses ', 39), (' Impairement (expenses)/reversal ', 39), (' Impairment loss ', 37), (' Profit from discontinued operation ', 37), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 32), (' finance income and costs ', 32), (' Finance income and finance costs ', 32), (' Finance income and costs ', 32), (' Loss on revaluation of inventories ', 32), (' share of profit of equity accounted investees ', 31), (' Share of profit of equity-accounted investees, net of income tax ', 31), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' other opertaing income ', 29), (' net finance costs ', 26)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Profit from discontinued operation ', 65), (' other income and revenue ', 55), (' other opertaing income ', 50), (' other gains/losses ', 43), (' other income ', 42), (' Other income ', 42), (' Loss on revaluation of inventories ', 42), (' Share of gain/(loss) of joint venture ', 40), (' share of profit of equity accounted investees ', 39), (' net finance costs ', 38), (' interest revenue ', 38), (' Impairement (expenses)/reversal ', 38), (' Share of profit of equity-accounted investees, net of income tax ', 37), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' finance income and costs ', 33), (' Finance income and costs ', 33), (' finance income and finance cost ', 32), (' Finance income and finance costs ', 32), ('finance cost ', 24), (' expenses ', 21), (' net of tax ', 21), (' net of tax ', 21), (' finance expenses', 17)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' finance income and costs ', 71), (' Finance income and costs ', 71), (' finance income and finance cost ', 63), (' Finance income and finance costs ', 63), (' net finance costs ', 57), ('finance cost ', 50), (' finance expenses', 46), (' other income and revenue ', 46), (' other income ', 42), (' Other income ', 42), (' Impairment loss ', 42), (' interest gains and losses ', 40), (' Loss on revaluation of inventories ', 35), (' other opertaing income ', 32), (' Profit from discontinued operation ', 30), (' Share of profit of equity-accounted investees, net of income tax ', 30), (' other gains/losses ', 29), (' share of profit of equity accounted investees ', 29), (' interest revenue ', 29), (' Share of gain/(loss) of joint venture ', 29), (' Impairement (expenses)/reversal ', 24), (' net of tax ', 20), (' net of tax ', 20), (' expenses ', 11)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' finance expenses', 96), ('finance cost ', 64), (' expenses ', 60), (' Impairement (expenses)/reversal ', 59), (' finance income and costs ', 57), (' Finance income and costs ', 57), (' net finance costs ', 55), (' finance income and finance cost ', 48), (' Finance income and finance costs ', 48), (' interest revenue ', 34), (' share of profit of equity accounted investees ', 29), (' Share of gain/(loss) of joint venture ', 29), (' net of tax ', 29), (' net of tax ', 29), (' Loss on revaluation of inventories ', 29), (' interest gains and losses ', 28), (' other income and revenue ', 28), (' other income ', 24), (' Other income ', 24), (' Impairment loss ', 24), (' Profit from discontinued operation ', 24), (' Share of profit of equity-accounted investees, net of income tax ', 23), (' other gains/losses ', 21), (' other opertaing income ', 19)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance income and costs ', 72), (' Finance income and costs ', 72), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' finance expenses', 57), (' other income ', 38), (' interest gains and losses ', 38), (' Other income ', 38), (' Profit from discontinued operation ', 38), (' other opertaing income ', 36), (' share of profit of equity accounted investees ', 36), (' Share of profit of equity-accounted investees, net of income tax ', 35), (' Impairement (expenses)/reversal ', 34), (' Share of gain/(loss) of joint venture ', 33), (' other income and revenue ', 32), (' Loss on revaluation of inventories ', 28), (' other gains/losses ', 27), (' interest revenue ', 27), (' net of tax ', 27), (' net of tax ', 27), (' Impairment loss ', 23), (' expenses ', 10)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' other opertaing income ', 55), (' Share of profit of equity-accounted investees, net of income tax ', 54), (' Profit from discontinued operation ', 49), (' other income ', 48), (' Other income ', 48), (' share of profit of equity accounted investees ', 46), (' other income and revenue ', 45), (' net of tax ', 41), (' net of tax ', 41), (' net finance costs ', 38), (' Loss on revaluation of inventories ', 37), ('finance cost ', 36), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' finance expenses', 34), (' finance income and costs ', 33), (' Impairement (expenses)/reversal ', 33), (' Finance income and costs ', 33), (' other gains/losses ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Impairment loss ', 30), (' interest revenue ', 27), (' expenses ', 14)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' Impairement (expenses)/reversal ', 56), (' expenses ', 55), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' other income and revenue ', 47), (' net finance costs ', 45), (' finance income and costs ', 43), (' net of tax ', 43), (' net of tax ', 43), (' Finance income and costs ', 43), (' Share of profit of equity-accounted investees, net of income tax ', 38), ('finance cost ', 37), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' Profit from discontinued operation ', 33), (' other gains/losses ', 32), (' interest revenue ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Loss on revaluation of inventories ', 32), (' share of profit of equity accounted investees ', 27), (' Impairment loss ', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [(' Profit from discontinued operation ', 54), (' other opertaing income ', 51), (' share of profit of equity accounted investees ', 50), (' other income ', 44), (' Other income ', 44), (' Share of profit of equity-accounted investees, net of income tax ', 41), (' other gains/losses ', 39), (' other income and revenue ', 37), (' Impairement (expenses)/reversal ', 34), (' net finance costs ', 33), (' Share of gain/(loss) of joint venture ', 33), (' Loss on revaluation of inventories ', 33), (' finance expenses', 29), (' finance income and finance cost ', 29), (' finance income and costs ', 29), (' net of tax ', 29), (' Finance income and finance costs ', 29), (' net of tax ', 29), (' Finance income and costs ', 29), (' interest revenue ', 28), (' interest gains and losses ', 28), ('finance cost ', 25), (' Impairment loss ', 25), (' expenses ', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other income ', 67), (' Other income ', 67), (' other income and revenue ', 59), (' other opertaing income ', 55), (' net finance costs ', 49), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' finance expenses', 46), (' Profit from discontinued operation ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' Share of profit of equity-accounted investees, net of income tax ', 40), (' share of profit of equity accounted investees ', 39), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' Impairment loss ', 30), (' expenses ', 29), (' Loss on revaluation of inventories ', 28), (' interest revenue ', 27), (' net of tax ', 21), (' net of tax ', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [(' net finance costs ', 49), (' other income ', 48), (' Other income ', 48), (' finance expenses', 46), (' other opertaing income ', 45), (' other income and revenue ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' Profit from discontinued operation ', 41), (' Share of profit of equity-accounted investees, net of income tax ', 40), (' Impairement (expenses)/reversal ', 38), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Finance income and finance costs ', 36), (' share of profit of equity accounted investees ', 35), (' Loss on revaluation of inventories ', 33), (' other gains/losses ', 32), (' Impairment loss ', 30), (' expenses ', 29), (' Share of gain/(loss) of joint venture ', 28), (' net of tax ', 28), (' net of tax ', 28), (' interest revenue ', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 8, 9], 'score': 100, 'value': -303.0, 'line_item_label': ['Other income', 'Financial expenses', 'Net financing costs'], 'note_numbers': ['5', '9', nan], 'line_item_value': [0.0, -180.0, -123.0]}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['other revenue ', ' commission revenue ', ' government grants ', ' insurance proceeds ', ' foreign exchange gain ', ' other ', ' dividend from other parties ', ' other income ', ' net foreign exchange gain ', ' effective portion of changes in fair value of cash flow ', ' profit from discontinued operation ', ' net of tax ', ' share of jv income ', ' secondment income (tw recovery) ', ' japan recoveries ', ' margin charge income ', ' net foreign exchange gains/(losses) ', ' paid by customers - at amortised cost ', ' net foreign exchange (loss)/gain ', ' net ppe disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' quota lease income ', ' sundry income ', ' net (loss)/profit on disposal of non-current assets ', ' net other foreign exchange (losses)/gains ', ' Sub-lease rental income ', ' Profit on sale of assets ', ' Asset impairment ', ' Loss on sale of disposal of assets ', ' Remuneration from services linked to newly acquired entities ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' net gain / loss on disposal of property plant and equipment  ', ' Investment in joint venture ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Interest on unwinding of discount in provisions ', ' Profit from discontinued operation ', ' net of tax ', ' Net loss on disposal of property ', ' plant and equipment ', ' Net foreign exchange gains/(losses) ', ' Accretion expense ', ' Loss on loan refinancing ', ' Net foreign exchange (loss)/gain ', ' Net PPE disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Net (loss)/profit on disposal of non-current assets ', ' Net other foreign exchange (losses)/gains ', ' Miscellanous income ', ' Commision rebate ', ' Net foreign losses ', ' Derivaties at FVTPL- net change in fair value ', ' Other income - Bank guarantee ', ' Other expense - Net loss on sale or property, plant and equipment ', ' Other expense - Loss on inventory obsolescence ', ' Bank charges'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none rental income , res_fuzz_match = [(' Sub-lease rental income ', 82), (' other income ', 64), (' share of jv income ', 64), (' quota lease income ', 62), (' other ', 60), (' sundry income ', 58), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' margin charge income ', 53), (' Power purchase agreement realised gain ', 53), (' Loss on loan refinancing ', 53), (' Miscellanous income ', 53), (' Other income - Bank guarantee ', 53), ('other revenue ', 50), (' government grants ', 50), (' Net foreign losses ', 50), (' net foreign exchange gain ', 47), (' secondment income (tw recovery) ', 47), (' net foreign exchange gains/(losses) ', 47), (' net foreign exchange (loss)/gain ', 47), (' other miscellaneous - net (loss)/gain ', 47), (' net other foreign exchange (losses)/gains ', 47), (' Power purchase agreement unrelaised gain ', 47), (' Interest on unwinding of discount in provisions ', 47), (' Net foreign exchange gains/(losses) ', 47), (' Net foreign exchange (loss)/gain ', 47), (' other miscellaneous - net (loss)/gain ', 47), (' Net other foreign exchange (losses)/gains ', 47), (' Other expense - Loss on inventory obsolescence ', 47), (' Asset impairment ', 43), (' Commision rebate ', 42), (' foreign exchange gain ', 41), (' effective portion of changes in fair value of cash flow ', 41), (' profit from discontinued operation ', 41), (' paid by customers - at amortised cost ', 41), (' net ppe disposal (loss)/gain ', 41), (' net (loss)/profit on disposal of non-current assets ', 41), (' Loss on sale of disposal of assets ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' net gain / loss on disposal of property plant and equipment  ', 41), (' Investment in joint venture ', 41), (' Share of gain/(loss) of joint venture ', 41), (' Profit from discontinued operation ', 41), (' Net loss on disposal of property ', 41), (' Net PPE disposal (loss)/gain ', 41), (' Arising from inventory of cranes ', 41), (' Net (loss)/profit on disposal of non-current assets ', 41), (' Other expense - Net loss on sale or property, plant and equipment ', 41), (' Accretion expense ', 38), (' commission revenue ', 36), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' dividend from other parties ', 35), (' Arising from inventory of spare parts ', 35), (' Derivaties at FVTPL- net change in fair value ', 35), (' plant and equipment ', 33), (' Profit on sale of assets ', 30), (' Bank charges', 30), (' Impairment loss ', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' net of tax ', 71), (' net of tax ', 71), (' net of tax ', 71), (' other miscellaneous - net (loss)/gain ', 50), (' net (loss)/profit on disposal of non-current assets ', 50), (' net other foreign exchange (losses)/gains ', 50), (' Sub-lease rental income ', 50), (' net gain / loss on disposal of property plant and equipment  ', 50), (' other miscellaneous - net (loss)/gain ', 50), (' Net (loss)/profit on disposal of non-current assets ', 50), (' Net other foreign exchange (losses)/gains ', 50), (' Other expense - Net loss on sale or property, plant and equipment ', 50), (' government grants ', 40), (' other ', 40), (' dividend from other parties ', 40), (' other income ', 40), (' net foreign exchange gain ', 40), (' effective portion of changes in fair value of cash flow ', 40), (' profit from discontinued operation ', 40), (' secondment income (tw recovery) ', 40), (' net foreign exchange gains/(losses) ', 40), (' paid by customers - at amortised cost ', 40), (' net foreign exchange (loss)/gain ', 40), (' net ppe disposal (loss)/gain ', 40), (' quota lease income ', 40), (' Profit on sale of assets ', 40), (' Loss on sale of disposal of assets ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' Power purchase agreement realised gain ', 40), (' Power purchase agreement unrelaised gain ', 40), (' Investment in joint venture ', 40), (' Share of gain/(loss) of joint venture ', 40), (' Interest on unwinding of discount in provisions ', 40), (' Profit from discontinued operation ', 40), (' Net loss on disposal of property ', 40), (' Net foreign exchange gains/(losses) ', 40), (' Loss on loan refinancing ', 40), (' Net foreign exchange (loss)/gain ', 40), (' Net PPE disposal (loss)/gain ', 40), (' Arising from inventory of cranes ', 40), (' Arising from inventory of spare parts ', 40), (' Net foreign losses ', 40), (' Derivaties at FVTPL- net change in fair value ', 40), (' Other income - Bank guarantee ', 40), (' Other expense - Loss on inventory obsolescence ', 40), ('other revenue ', 30), (' insurance proceeds ', 30), (' foreign exchange gain ', 30), (' share of jv income ', 30), (' japan recoveries ', 30), (' margin charge income ', 30), (' sundry income ', 30), (' Asset impairment ', 30), (' plant and equipment ', 30), (' Miscellanous income ', 30), (' Bank charges', 30), (' Impairment loss ', 21), (' commission revenue ', 20), (' Accretion expense ', 20), (' Commision rebate ', 20)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none rental income , res_fuzz_match = [(' Sub-lease rental income ', 82), (' other income ', 64), (' share of jv income ', 64), (' quota lease income ', 62), (' other ', 60), (' sundry income ', 58), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' margin charge income ', 53), (' Power purchase agreement realised gain ', 53), (' Loss on loan refinancing ', 53), (' Miscellanous income ', 53), (' Other income - Bank guarantee ', 53), ('other revenue ', 50), (' government grants ', 50), (' Net foreign losses ', 50), (' net foreign exchange gain ', 47), (' secondment income (tw recovery) ', 47), (' net foreign exchange gains/(losses) ', 47), (' net foreign exchange (loss)/gain ', 47), (' other miscellaneous - net (loss)/gain ', 47), (' net other foreign exchange (losses)/gains ', 47), (' Power purchase agreement unrelaised gain ', 47), (' Interest on unwinding of discount in provisions ', 47), (' Net foreign exchange gains/(losses) ', 47), (' Net foreign exchange (loss)/gain ', 47), (' other miscellaneous - net (loss)/gain ', 47), (' Net other foreign exchange (losses)/gains ', 47), (' Other expense - Loss on inventory obsolescence ', 47), (' Asset impairment ', 43), (' Commision rebate ', 42), (' foreign exchange gain ', 41), (' effective portion of changes in fair value of cash flow ', 41), (' profit from discontinued operation ', 41), (' paid by customers - at amortised cost ', 41), (' net ppe disposal (loss)/gain ', 41), (' net (loss)/profit on disposal of non-current assets ', 41), (' Loss on sale of disposal of assets ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' net gain / loss on disposal of property plant and equipment  ', 41), (' Investment in joint venture ', 41), (' Share of gain/(loss) of joint venture ', 41), (' Profit from discontinued operation ', 41), (' Net loss on disposal of property ', 41), (' Net PPE disposal (loss)/gain ', 41), (' Arising from inventory of cranes ', 41), (' Net (loss)/profit on disposal of non-current assets ', 41), (' Other expense - Net loss on sale or property, plant and equipment ', 41), (' Accretion expense ', 38), (' commission revenue ', 36), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' dividend from other parties ', 35), (' Arising from inventory of spare parts ', 35), (' Derivaties at FVTPL- net change in fair value ', 35), (' plant and equipment ', 33), (' Profit on sale of assets ', 30), (' Bank charges', 30), (' Impairment loss ', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' net of tax ', 71), (' net of tax ', 71), (' net of tax ', 71), (' other miscellaneous - net (loss)/gain ', 50), (' net (loss)/profit on disposal of non-current assets ', 50), (' net other foreign exchange (losses)/gains ', 50), (' Sub-lease rental income ', 50), (' net gain / loss on disposal of property plant and equipment  ', 50), (' other miscellaneous - net (loss)/gain ', 50), (' Net (loss)/profit on disposal of non-current assets ', 50), (' Net other foreign exchange (losses)/gains ', 50), (' Other expense - Net loss on sale or property, plant and equipment ', 50), (' government grants ', 40), (' other ', 40), (' dividend from other parties ', 40), (' other income ', 40), (' net foreign exchange gain ', 40), (' effective portion of changes in fair value of cash flow ', 40), (' profit from discontinued operation ', 40), (' secondment income (tw recovery) ', 40), (' net foreign exchange gains/(losses) ', 40), (' paid by customers - at amortised cost ', 40), (' net foreign exchange (loss)/gain ', 40), (' net ppe disposal (loss)/gain ', 40), (' quota lease income ', 40), (' Profit on sale of assets ', 40), (' Loss on sale of disposal of assets ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' Power purchase agreement realised gain ', 40), (' Power purchase agreement unrelaised gain ', 40), (' Investment in joint venture ', 40), (' Share of gain/(loss) of joint venture ', 40), (' Interest on unwinding of discount in provisions ', 40), (' Profit from discontinued operation ', 40), (' Net loss on disposal of property ', 40), (' Net foreign exchange gains/(losses) ', 40), (' Loss on loan refinancing ', 40), (' Net foreign exchange (loss)/gain ', 40), (' Net PPE disposal (loss)/gain ', 40), (' Arising from inventory of cranes ', 40), (' Arising from inventory of spare parts ', 40), (' Net foreign losses ', 40), (' Derivaties at FVTPL- net change in fair value ', 40), (' Other income - Bank guarantee ', 40), (' Other expense - Loss on inventory obsolescence ', 40), ('other revenue ', 30), (' insurance proceeds ', 30), (' foreign exchange gain ', 30), (' share of jv income ', 30), (' japan recoveries ', 30), (' margin charge income ', 30), (' sundry income ', 30), (' Asset impairment ', 30), (' plant and equipment ', 30), (' Miscellanous income ', 30), (' Bank charges', 30), (' Impairment loss ', 21), (' commission revenue ', 20), (' Accretion expense ', 20), (' Commision rebate ', 20)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2], 'score': [82, 82], 'value': [0.0, 46.0], 'label': ['None Rental income', 'None Rental income'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['other revenue ', ' commission revenue ', ' government grants ', ' insurance proceeds ', ' foreign exchange gain ', ' other ', ' dividend from other parties ', ' other income ', ' net foreign exchange gain ', ' effective portion of changes in fair value of cash flow ', ' profit from discontinued operation ', ' net of tax ', ' share of jv income ', ' secondment income (tw recovery) ', ' japan recoveries ', ' margin charge income ', ' net foreign exchange gains/(losses) ', ' paid by customers - at amortised cost ', ' net foreign exchange (loss)/gain ', ' net ppe disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' quota lease income ', ' sundry income ', ' net (loss)/profit on disposal of non-current assets ', ' net other foreign exchange (losses)/gains ', ' Sub-lease rental income ', ' Profit on sale of assets ', ' Asset impairment ', ' Loss on sale of disposal of assets ', ' Remuneration from services linked to newly acquired entities ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' net gain / loss on disposal of property plant and equipment  ', ' Investment in joint venture ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Interest on unwinding of discount in provisions ', ' Profit from discontinued operation ', ' net of tax ', ' Net loss on disposal of property ', ' plant and equipment ', ' Net foreign exchange gains/(losses) ', ' Accretion expense ', ' Loss on loan refinancing ', ' Net foreign exchange (loss)/gain ', ' Net PPE disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Net (loss)/profit on disposal of non-current assets ', ' Net other foreign exchange (losses)/gains ', ' Miscellanous income ', ' Commision rebate ', ' Net foreign losses ', ' Derivaties at FVTPL- net change in fair value ', ' Other income - Bank guarantee ', ' Other expense - Net loss on sale or property, plant and equipment ', ' Other expense - Loss on inventory obsolescence ', ' Bank charges'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [(' other income ', 73), (' share of jv income ', 73), (' other ', 60), (' sundry income ', 58), (' Sub-lease rental income ', 58), (' Interest on unwinding of discount in provisions ', 58), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' quota lease income ', 56), (' Miscellanous income ', 53), (' Other income - Bank guarantee ', 53), (' margin charge income ', 50), (' Net foreign losses ', 50), (' secondment income (tw recovery) ', 47), (' net other foreign exchange (losses)/gains ', 47), (' Power purchase agreement realised gain ', 47), (' Power purchase agreement unrelaised gain ', 47), (' net gain / loss on disposal of property plant and equipment  ', 47), (' Net other foreign exchange (losses)/gains ', 47), (' Loss on loan refinancing ', 44), (' Asset impairment ', 43), (' Investment in joint venture ', 43), ('other revenue ', 42), (' government grants ', 42), (' foreign exchange gain ', 42), (' dividend from other parties ', 42), (' net foreign exchange gain ', 42), (' profit from discontinued operation ', 42), (' net foreign exchange gains/(losses) ', 42), (' net foreign exchange (loss)/gain ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' Remuneration from services linked to newly acquired entities ', 42), (' Share of gain/(loss) of joint venture ', 42), (' Profit from discontinued operation ', 42), (' Net foreign exchange gains/(losses) ', 42), (' Net foreign exchange (loss)/gain ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' Arising from inventory of cranes ', 42), (' Commision rebate ', 42), (' Other expense - Loss on inventory obsolescence ', 42), (' Accretion expense ', 40), (' net ppe disposal (loss)/gain ', 38), (' Net PPE disposal (loss)/gain ', 38), (' effective portion of changes in fair value of cash flow ', 37), (' paid by customers - at amortised cost ', 37), (' net (loss)/profit on disposal of non-current assets ', 37), (' Net loss on disposal of property ', 37), (' Arising from inventory of spare parts ', 37), (' Net (loss)/profit on disposal of non-current assets ', 37), (' Other expense - Net loss on sale or property, plant and equipment ', 37), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' Profit on sale of assets ', 35), (' plant and equipment ', 33), (' Loss on sale of disposal of assets ', 32), (' Derivaties at FVTPL- net change in fair value ', 32), (' Bank charges', 30), (' commission revenue ', 29), (' Impairment loss ', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none foreign exchange gain , res_fuzz_match = [(' foreign exchange gain ', 100), (' net foreign exchange gain ', 96), (' net foreign exchange gains/(losses) ', 92), (' Net foreign exchange gains/(losses) ', 92), (' net foreign exchange (loss)/gain ', 80), (' net other foreign exchange (losses)/gains ', 80), (' Net foreign exchange (loss)/gain ', 80), (' Net other foreign exchange (losses)/gains ', 80), (' Net foreign losses ', 69), (' margin charge income ', 61), (' effective portion of changes in fair value of cash flow ', 60), (' Bank charges', 60), ('other revenue ', 50), (' government grants ', 50), (' Other income - Bank guarantee ', 49), (' Power purchase agreement realised gain ', 48), (' Power purchase agreement unrelaised gain ', 48), (' Derivaties at FVTPL- net change in fair value ', 48), (' Investment in joint venture ', 47), (' net ppe disposal (loss)/gain ', 46), (' Accretion expense ', 46), (' Net PPE disposal (loss)/gain ', 46), (' other income ', 45), (' share of jv income ', 45), (' Remuneration from services linked to newly acquired entities ', 44), (' net gain / loss on disposal of property plant and equipment  ', 44), (' Loss on loan refinancing ', 44), (' Other expense - Net loss on sale or property, plant and equipment ', 44), (' net of tax ', 43), (' net of tax ', 43), (' net of tax ', 43), (' Commision rebate ', 42), (' other ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' Interest on unwinding of discount in provisions ', 40), (' plant and equipment ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' Arising from inventory of cranes ', 40), (' Arising from inventory of spare parts ', 40), (' Miscellanous income ', 40), (' secondment income (tw recovery) ', 38), (' quota lease income ', 38), (' dividend from other parties ', 37), (' commission revenue ', 36), (' insurance proceeds ', 36), (' profit from discontinued operation ', 36), (' japan recoveries ', 36), (' net (loss)/profit on disposal of non-current assets ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Profit from discontinued operation ', 36), (' Net (loss)/profit on disposal of non-current assets ', 36), (' Other expense - Loss on inventory obsolescence ', 36), (' Sub-lease rental income ', 35), (' Profit on sale of assets ', 35), (' sundry income ', 33), (' Asset impairment ', 33), (' Net loss on disposal of property ', 33), (' paid by customers - at amortised cost ', 29), (' Loss on sale of disposal of assets ', 27), (' Impairment loss ', 18)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none financial income , res_fuzz_match = [(' sundry income ', 67), (' share of jv income ', 64), (' Miscellanous income ', 60), (' net of tax ', 57), (' Sub-lease rental income ', 57), (' net of tax ', 57), (' net of tax ', 57), (' other income ', 55), (' Loss on loan refinancing ', 51), (' secondment income (tw recovery) ', 50), (' margin charge income ', 50), (' quota lease income ', 50), (' Remuneration from services linked to newly acquired entities ', 50), (' Net foreign losses ', 50), (' foreign exchange gain ', 46), (' Impairment loss ', 45), (' net foreign exchange gain ', 44), (' net foreign exchange gains/(losses) ', 44), (' net foreign exchange (loss)/gain ', 44), (' other miscellaneous - net (loss)/gain ', 44), (' net other foreign exchange (losses)/gains ', 44), (' Power purchase agreement unrelaised gain ', 44), (' Interest on unwinding of discount in provisions ', 44), (' Net foreign exchange gains/(losses) ', 44), (' Net foreign exchange (loss)/gain ', 44), (' other miscellaneous - net (loss)/gain ', 44), (' Arising from inventory of cranes ', 44), (' Net other foreign exchange (losses)/gains ', 44), (' Other income - Bank guarantee ', 44), (' Other expense - Loss on inventory obsolescence ', 44), (' government grants ', 42), (' Asset impairment ', 42), (' other ', 40), (' japan recoveries ', 40), (' plant and equipment ', 40), (' Bank charges', 40), (' effective portion of changes in fair value of cash flow ', 39), (' profit from discontinued operation ', 39), (' paid by customers - at amortised cost ', 39), (' net (loss)/profit on disposal of non-current assets ', 39), (' Power purchase agreement realised gain ', 39), (' net gain / loss on disposal of property plant and equipment  ', 39), (' Investment in joint venture ', 39), (' Share of gain/(loss) of joint venture ', 39), (' Profit from discontinued operation ', 39), (' Arising from inventory of spare parts ', 39), (' Net (loss)/profit on disposal of non-current assets ', 39), (' Derivaties at FVTPL- net change in fair value ', 39), (' Other expense - Net loss on sale or property, plant and equipment ', 39), (' insurance proceeds ', 36), ('other revenue ', 33), (' net ppe disposal (loss)/gain ', 33), (' Loss on sale of disposal of assets ', 33), (' Net loss on disposal of property ', 33), (' Net PPE disposal (loss)/gain ', 33), (' Accretion expense ', 31), (' commission revenue ', 29), (' Profit on sale of assets ', 29), (' dividend from other parties ', 28), (' Commision rebate ', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none interest on lease liabilties , res_fuzz_match = [(' other ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' quota lease income ', 50), (' Asset impairment ', 50), (' Net foreign losses ', 50), (' Other expense - Net loss on sale or property, plant and equipment ', 48), (' Other expense - Loss on inventory obsolescence ', 48), (' Profit on sale of assets ', 47), (' net foreign exchange gain ', 46), (' net ppe disposal (loss)/gain ', 46), (' Accretion expense ', 46), (' Net PPE disposal (loss)/gain ', 46), (' insurance proceeds ', 45), (' other income ', 45), (' Sub-lease rental income ', 45), (' net foreign exchange gains/(losses) ', 44), (' other miscellaneous - net (loss)/gain ', 44), (' net other foreign exchange (losses)/gains ', 44), (' Power purchase agreement unrelaised gain ', 44), (' Interest on unwinding of discount in provisions ', 44), (' Net foreign exchange gains/(losses) ', 44), (' other miscellaneous - net (loss)/gain ', 44), (' Net other foreign exchange (losses)/gains ', 44), (' secondment income (tw recovery) ', 43), (' net foreign exchange (loss)/gain ', 43), (' Net loss on disposal of property ', 43), (' Net foreign exchange (loss)/gain ', 43), (' Arising from inventory of spare parts ', 43), ('other revenue ', 42), (' government grants ', 42), (' Power purchase agreement realised gain ', 42), (' Commision rebate ', 42), (' effective portion of changes in fair value of cash flow ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' net gain / loss on disposal of property plant and equipment  ', 41), (' foreign exchange gain ', 40), (' Loss on loan refinancing ', 39), (' Share of gain/(loss) of joint venture ', 38), (' net (loss)/profit on disposal of non-current assets ', 37), (' Investment in joint venture ', 37), (' Net (loss)/profit on disposal of non-current assets ', 37), (' Derivaties at FVTPL- net change in fair value ', 37), (' dividend from other parties ', 36), (' japan recoveries ', 36), (' Loss on sale of disposal of assets ', 36), (' Impairment loss ', 36), (' Other income - Bank guarantee ', 36), (' paid by customers - at amortised cost ', 34), (' sundry income ', 33), (' plant and equipment ', 33), (' Miscellanous income ', 33), (' Arising from inventory of cranes ', 32), (' profit from discontinued operation ', 30), (' Profit from discontinued operation ', 30), (' Bank charges', 30), (' commission revenue ', 29), (' margin charge income ', 28), (' share of jv income ', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none foreign exchange loss , res_fuzz_match = [(' net foreign exchange (loss)/gain ', 92), (' Net foreign exchange (loss)/gain ', 92), (' net other foreign exchange (losses)/gains ', 88), (' Net other foreign exchange (losses)/gains ', 88), (' foreign exchange gain ', 80), (' net foreign exchange gains/(losses) ', 80), (' Net foreign exchange gains/(losses) ', 80), (' net foreign exchange gain ', 79), (' Net foreign losses ', 69), (' Bank charges', 60), (' margin charge income ', 56), (' Impairment loss ', 55), (' effective portion of changes in fair value of cash flow ', 52), ('other revenue ', 50), (' other miscellaneous - net (loss)/gain ', 48), (' other miscellaneous - net (loss)/gain ', 48), (' Investment in joint venture ', 47), (' Accretion expense ', 46), (' other income ', 45), (' share of jv income ', 45), (' Remuneration from services linked to newly acquired entities ', 44), (' net gain / loss on disposal of property plant and equipment  ', 44), (' Loss on loan refinancing ', 44), (' net of tax ', 43), (' net ppe disposal (loss)/gain ', 43), (' net of tax ', 43), (' net of tax ', 43), (' Net PPE disposal (loss)/gain ', 43), (' government grants ', 42), (' Commision rebate ', 42), (' other ', 40), (' Share of gain/(loss) of joint venture ', 40), (' Interest on unwinding of discount in provisions ', 40), (' Arising from inventory of cranes ', 40), (' Miscellanous income ', 40), (' Derivaties at FVTPL- net change in fair value ', 40), (' Other expense - Net loss on sale or property, plant and equipment ', 40), (' Other expense - Loss on inventory obsolescence ', 40), (' secondment income (tw recovery) ', 38), (' paid by customers - at amortised cost ', 38), (' quota lease income ', 38), (' Other income - Bank guarantee ', 37), (' commission revenue ', 36), (' insurance proceeds ', 36), (' profit from discontinued operation ', 36), (' japan recoveries ', 36), (' net (loss)/profit on disposal of non-current assets ', 36), (' Profit on sale of assets ', 36), (' Power purchase agreement realised gain ', 36), (' Power purchase agreement unrelaised gain ', 36), (' Profit from discontinued operation ', 36), (' Arising from inventory of spare parts ', 36), (' Net (loss)/profit on disposal of non-current assets ', 36), (' Sub-lease rental income ', 35), (' sundry income ', 33), (' Loss on sale of disposal of assets ', 33), (' plant and equipment ', 33), (' Net loss on disposal of property ', 29), (' dividend from other parties ', 28), (' Asset impairment ', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none financial costs , res_fuzz_match = [(' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' Net foreign losses ', 56), (' other income ', 55), (' Impairment loss ', 55), (' secondment income (tw recovery) ', 53), (' paid by customers - at amortised cost ', 53), (' Loss on loan refinancing ', 53), (' net foreign exchange gain ', 47), (' effective portion of changes in fair value of cash flow ', 47), (' net foreign exchange gains/(losses) ', 47), (' net foreign exchange (loss)/gain ', 47), (' net (loss)/profit on disposal of non-current assets ', 47), (' net other foreign exchange (losses)/gains ', 47), (' Remuneration from services linked to newly acquired entities ', 47), (' net gain / loss on disposal of property plant and equipment  ', 47), (' Share of gain/(loss) of joint venture ', 47), (' Net foreign exchange gains/(losses) ', 47), (' Net foreign exchange (loss)/gain ', 47), (' Arising from inventory of cranes ', 47), (' Arising from inventory of spare parts ', 47), (' Net (loss)/profit on disposal of non-current assets ', 47), (' Net other foreign exchange (losses)/gains ', 47), (' Other income - Bank guarantee ', 47), (' Other expense - Loss on inventory obsolescence ', 47), (' share of jv income ', 45), (' quota lease income ', 44), (' government grants ', 42), (' sundry income ', 42), (' Sub-lease rental income ', 42), (' Profit on sale of assets ', 42), (' Asset impairment ', 42), (' foreign exchange gain ', 41), (' profit from discontinued operation ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' Investment in joint venture ', 41), (' Interest on unwinding of discount in provisions ', 41), (' Profit from discontinued operation ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' Derivaties at FVTPL- net change in fair value ', 41), (' other ', 40), (' Miscellanous income ', 40), (' Bank charges', 40), (' japan recoveries ', 38), (' insurance proceeds ', 36), (' margin charge income ', 36), (' dividend from other parties ', 35), (' net ppe disposal (loss)/gain ', 35), (' Loss on sale of disposal of assets ', 35), (' Power purchase agreement unrelaised gain ', 35), (' Net loss on disposal of property ', 35), (' Net PPE disposal (loss)/gain ', 35), (' Other expense - Net loss on sale or property, plant and equipment ', 35), ('other revenue ', 33), (' plant and equipment ', 33), (' Commision rebate ', 33), (' Accretion expense ', 31), (' Power purchase agreement realised gain ', 29), (' commission revenue ', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none net financing costs , res_fuzz_match = [(' Net foreign losses ', 65), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' Loss on loan refinancing ', 56), (' net foreign exchange gain ', 50), (' effective portion of changes in fair value of cash flow ', 50), (' net foreign exchange gains/(losses) ', 50), (' net foreign exchange (loss)/gain ', 50), (' Interest on unwinding of discount in provisions ', 50), (' Net foreign exchange gains/(losses) ', 50), (' Net foreign exchange (loss)/gain ', 50), (' Sub-lease rental income ', 46), (' other income ', 45), (' share of jv income ', 45), (' secondment income (tw recovery) ', 45), (' paid by customers - at amortised cost ', 45), (' net ppe disposal (loss)/gain ', 45), (' net other foreign exchange (losses)/gains ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' net gain / loss on disposal of property plant and equipment  ', 45), (' Impairment loss ', 45), (' Net PPE disposal (loss)/gain ', 45), (' Net other foreign exchange (losses)/gains ', 45), (' Other expense - Net loss on sale or property, plant and equipment ', 45), (' Other expense - Loss on inventory obsolescence ', 45), (' quota lease income ', 44), (' Investment in joint venture ', 43), ('other revenue ', 42), (' government grants ', 42), (' sundry income ', 42), (' Asset impairment ', 42), (' other ', 40), (' profit from discontinued operation ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' net (loss)/profit on disposal of non-current assets ', 40), (' Share of gain/(loss) of joint venture ', 40), (' Profit from discontinued operation ', 40), (' plant and equipment ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' Arising from inventory of cranes ', 40), (' Arising from inventory of spare parts ', 40), (' Net (loss)/profit on disposal of non-current assets ', 40), (' Miscellanous income ', 40), (' Derivaties at FVTPL- net change in fair value ', 40), (' Other income - Bank guarantee ', 40), (' Bank charges', 40), (' margin charge income ', 39), (' Accretion expense ', 38), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' Profit on sale of assets ', 36), (' foreign exchange gain ', 35), (' dividend from other parties ', 35), (' Loss on sale of disposal of assets ', 35), (' Power purchase agreement realised gain ', 35), (' Power purchase agreement unrelaised gain ', 35), (' Net loss on disposal of property ', 35), (' Commision rebate ', 33), (' commission revenue ', 29)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [(' other income ', 73), (' share of jv income ', 73), (' other ', 60), (' sundry income ', 58), (' Sub-lease rental income ', 58), (' Interest on unwinding of discount in provisions ', 58), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' quota lease income ', 56), (' Miscellanous income ', 53), (' Other income - Bank guarantee ', 53), (' margin charge income ', 50), (' Net foreign losses ', 50), (' secondment income (tw recovery) ', 47), (' net other foreign exchange (losses)/gains ', 47), (' Power purchase agreement realised gain ', 47), (' Power purchase agreement unrelaised gain ', 47), (' net gain / loss on disposal of property plant and equipment  ', 47), (' Net other foreign exchange (losses)/gains ', 47), (' Loss on loan refinancing ', 44), (' Asset impairment ', 43), (' Investment in joint venture ', 43), ('other revenue ', 42), (' government grants ', 42), (' foreign exchange gain ', 42), (' dividend from other parties ', 42), (' net foreign exchange gain ', 42), (' profit from discontinued operation ', 42), (' net foreign exchange gains/(losses) ', 42), (' net foreign exchange (loss)/gain ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' Remuneration from services linked to newly acquired entities ', 42), (' Share of gain/(loss) of joint venture ', 42), (' Profit from discontinued operation ', 42), (' Net foreign exchange gains/(losses) ', 42), (' Net foreign exchange (loss)/gain ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' Arising from inventory of cranes ', 42), (' Commision rebate ', 42), (' Other expense - Loss on inventory obsolescence ', 42), (' Accretion expense ', 40), (' net ppe disposal (loss)/gain ', 38), (' Net PPE disposal (loss)/gain ', 38), (' effective portion of changes in fair value of cash flow ', 37), (' paid by customers - at amortised cost ', 37), (' net (loss)/profit on disposal of non-current assets ', 37), (' Net loss on disposal of property ', 37), (' Arising from inventory of spare parts ', 37), (' Net (loss)/profit on disposal of non-current assets ', 37), (' Other expense - Net loss on sale or property, plant and equipment ', 37), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' Profit on sale of assets ', 35), (' plant and equipment ', 33), (' Loss on sale of disposal of assets ', 32), (' Derivaties at FVTPL- net change in fair value ', 32), (' Bank charges', 30), (' commission revenue ', 29), (' Impairment loss ', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none foreign exchange gain , res_fuzz_match = [(' foreign exchange gain ', 100), (' net foreign exchange gain ', 96), (' net foreign exchange gains/(losses) ', 92), (' Net foreign exchange gains/(losses) ', 92), (' net foreign exchange (loss)/gain ', 80), (' net other foreign exchange (losses)/gains ', 80), (' Net foreign exchange (loss)/gain ', 80), (' Net other foreign exchange (losses)/gains ', 80), (' Net foreign losses ', 69), (' margin charge income ', 61), (' effective portion of changes in fair value of cash flow ', 60), (' Bank charges', 60), ('other revenue ', 50), (' government grants ', 50), (' Other income - Bank guarantee ', 49), (' Power purchase agreement realised gain ', 48), (' Power purchase agreement unrelaised gain ', 48), (' Derivaties at FVTPL- net change in fair value ', 48), (' Investment in joint venture ', 47), (' net ppe disposal (loss)/gain ', 46), (' Accretion expense ', 46), (' Net PPE disposal (loss)/gain ', 46), (' other income ', 45), (' share of jv income ', 45), (' Remuneration from services linked to newly acquired entities ', 44), (' net gain / loss on disposal of property plant and equipment  ', 44), (' Loss on loan refinancing ', 44), (' Other expense - Net loss on sale or property, plant and equipment ', 44), (' net of tax ', 43), (' net of tax ', 43), (' net of tax ', 43), (' Commision rebate ', 42), (' other ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' Interest on unwinding of discount in provisions ', 40), (' plant and equipment ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' Arising from inventory of cranes ', 40), (' Arising from inventory of spare parts ', 40), (' Miscellanous income ', 40), (' secondment income (tw recovery) ', 38), (' quota lease income ', 38), (' dividend from other parties ', 37), (' commission revenue ', 36), (' insurance proceeds ', 36), (' profit from discontinued operation ', 36), (' japan recoveries ', 36), (' net (loss)/profit on disposal of non-current assets ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Profit from discontinued operation ', 36), (' Net (loss)/profit on disposal of non-current assets ', 36), (' Other expense - Loss on inventory obsolescence ', 36), (' Sub-lease rental income ', 35), (' Profit on sale of assets ', 35), (' sundry income ', 33), (' Asset impairment ', 33), (' Net loss on disposal of property ', 33), (' paid by customers - at amortised cost ', 29), (' Loss on sale of disposal of assets ', 27), (' Impairment loss ', 18)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none financial income , res_fuzz_match = [(' sundry income ', 67), (' share of jv income ', 64), (' Miscellanous income ', 60), (' net of tax ', 57), (' Sub-lease rental income ', 57), (' net of tax ', 57), (' net of tax ', 57), (' other income ', 55), (' Loss on loan refinancing ', 51), (' secondment income (tw recovery) ', 50), (' margin charge income ', 50), (' quota lease income ', 50), (' Remuneration from services linked to newly acquired entities ', 50), (' Net foreign losses ', 50), (' foreign exchange gain ', 46), (' Impairment loss ', 45), (' net foreign exchange gain ', 44), (' net foreign exchange gains/(losses) ', 44), (' net foreign exchange (loss)/gain ', 44), (' other miscellaneous - net (loss)/gain ', 44), (' net other foreign exchange (losses)/gains ', 44), (' Power purchase agreement unrelaised gain ', 44), (' Interest on unwinding of discount in provisions ', 44), (' Net foreign exchange gains/(losses) ', 44), (' Net foreign exchange (loss)/gain ', 44), (' other miscellaneous - net (loss)/gain ', 44), (' Arising from inventory of cranes ', 44), (' Net other foreign exchange (losses)/gains ', 44), (' Other income - Bank guarantee ', 44), (' Other expense - Loss on inventory obsolescence ', 44), (' government grants ', 42), (' Asset impairment ', 42), (' other ', 40), (' japan recoveries ', 40), (' plant and equipment ', 40), (' Bank charges', 40), (' effective portion of changes in fair value of cash flow ', 39), (' profit from discontinued operation ', 39), (' paid by customers - at amortised cost ', 39), (' net (loss)/profit on disposal of non-current assets ', 39), (' Power purchase agreement realised gain ', 39), (' net gain / loss on disposal of property plant and equipment  ', 39), (' Investment in joint venture ', 39), (' Share of gain/(loss) of joint venture ', 39), (' Profit from discontinued operation ', 39), (' Arising from inventory of spare parts ', 39), (' Net (loss)/profit on disposal of non-current assets ', 39), (' Derivaties at FVTPL- net change in fair value ', 39), (' Other expense - Net loss on sale or property, plant and equipment ', 39), (' insurance proceeds ', 36), ('other revenue ', 33), (' net ppe disposal (loss)/gain ', 33), (' Loss on sale of disposal of assets ', 33), (' Net loss on disposal of property ', 33), (' Net PPE disposal (loss)/gain ', 33), (' Accretion expense ', 31), (' commission revenue ', 29), (' Profit on sale of assets ', 29), (' dividend from other parties ', 28), (' Commision rebate ', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none interest on lease liabilties , res_fuzz_match = [(' other ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' quota lease income ', 50), (' Asset impairment ', 50), (' Net foreign losses ', 50), (' Other expense - Net loss on sale or property, plant and equipment ', 48), (' Other expense - Loss on inventory obsolescence ', 48), (' Profit on sale of assets ', 47), (' net foreign exchange gain ', 46), (' net ppe disposal (loss)/gain ', 46), (' Accretion expense ', 46), (' Net PPE disposal (loss)/gain ', 46), (' insurance proceeds ', 45), (' other income ', 45), (' Sub-lease rental income ', 45), (' net foreign exchange gains/(losses) ', 44), (' other miscellaneous - net (loss)/gain ', 44), (' net other foreign exchange (losses)/gains ', 44), (' Power purchase agreement unrelaised gain ', 44), (' Interest on unwinding of discount in provisions ', 44), (' Net foreign exchange gains/(losses) ', 44), (' other miscellaneous - net (loss)/gain ', 44), (' Net other foreign exchange (losses)/gains ', 44), (' secondment income (tw recovery) ', 43), (' net foreign exchange (loss)/gain ', 43), (' Net loss on disposal of property ', 43), (' Net foreign exchange (loss)/gain ', 43), (' Arising from inventory of spare parts ', 43), ('other revenue ', 42), (' government grants ', 42), (' Power purchase agreement realised gain ', 42), (' Commision rebate ', 42), (' effective portion of changes in fair value of cash flow ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' net gain / loss on disposal of property plant and equipment  ', 41), (' foreign exchange gain ', 40), (' Loss on loan refinancing ', 39), (' Share of gain/(loss) of joint venture ', 38), (' net (loss)/profit on disposal of non-current assets ', 37), (' Investment in joint venture ', 37), (' Net (loss)/profit on disposal of non-current assets ', 37), (' Derivaties at FVTPL- net change in fair value ', 37), (' dividend from other parties ', 36), (' japan recoveries ', 36), (' Loss on sale of disposal of assets ', 36), (' Impairment loss ', 36), (' Other income - Bank guarantee ', 36), (' paid by customers - at amortised cost ', 34), (' sundry income ', 33), (' plant and equipment ', 33), (' Miscellanous income ', 33), (' Arising from inventory of cranes ', 32), (' profit from discontinued operation ', 30), (' Profit from discontinued operation ', 30), (' Bank charges', 30), (' commission revenue ', 29), (' margin charge income ', 28), (' share of jv income ', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none foreign exchange loss , res_fuzz_match = [(' net foreign exchange (loss)/gain ', 92), (' Net foreign exchange (loss)/gain ', 92), (' net other foreign exchange (losses)/gains ', 88), (' Net other foreign exchange (losses)/gains ', 88), (' foreign exchange gain ', 80), (' net foreign exchange gains/(losses) ', 80), (' Net foreign exchange gains/(losses) ', 80), (' net foreign exchange gain ', 79), (' Net foreign losses ', 69), (' Bank charges', 60), (' margin charge income ', 56), (' Impairment loss ', 55), (' effective portion of changes in fair value of cash flow ', 52), ('other revenue ', 50), (' other miscellaneous - net (loss)/gain ', 48), (' other miscellaneous - net (loss)/gain ', 48), (' Investment in joint venture ', 47), (' Accretion expense ', 46), (' other income ', 45), (' share of jv income ', 45), (' Remuneration from services linked to newly acquired entities ', 44), (' net gain / loss on disposal of property plant and equipment  ', 44), (' Loss on loan refinancing ', 44), (' net of tax ', 43), (' net ppe disposal (loss)/gain ', 43), (' net of tax ', 43), (' net of tax ', 43), (' Net PPE disposal (loss)/gain ', 43), (' government grants ', 42), (' Commision rebate ', 42), (' other ', 40), (' Share of gain/(loss) of joint venture ', 40), (' Interest on unwinding of discount in provisions ', 40), (' Arising from inventory of cranes ', 40), (' Miscellanous income ', 40), (' Derivaties at FVTPL- net change in fair value ', 40), (' Other expense - Net loss on sale or property, plant and equipment ', 40), (' Other expense - Loss on inventory obsolescence ', 40), (' secondment income (tw recovery) ', 38), (' paid by customers - at amortised cost ', 38), (' quota lease income ', 38), (' Other income - Bank guarantee ', 37), (' commission revenue ', 36), (' insurance proceeds ', 36), (' profit from discontinued operation ', 36), (' japan recoveries ', 36), (' net (loss)/profit on disposal of non-current assets ', 36), (' Profit on sale of assets ', 36), (' Power purchase agreement realised gain ', 36), (' Power purchase agreement unrelaised gain ', 36), (' Profit from discontinued operation ', 36), (' Arising from inventory of spare parts ', 36), (' Net (loss)/profit on disposal of non-current assets ', 36), (' Sub-lease rental income ', 35), (' sundry income ', 33), (' Loss on sale of disposal of assets ', 33), (' plant and equipment ', 33), (' Net loss on disposal of property ', 29), (' dividend from other parties ', 28), (' Asset impairment ', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none financial costs , res_fuzz_match = [(' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' Net foreign losses ', 56), (' other income ', 55), (' Impairment loss ', 55), (' secondment income (tw recovery) ', 53), (' paid by customers - at amortised cost ', 53), (' Loss on loan refinancing ', 53), (' net foreign exchange gain ', 47), (' effective portion of changes in fair value of cash flow ', 47), (' net foreign exchange gains/(losses) ', 47), (' net foreign exchange (loss)/gain ', 47), (' net (loss)/profit on disposal of non-current assets ', 47), (' net other foreign exchange (losses)/gains ', 47), (' Remuneration from services linked to newly acquired entities ', 47), (' net gain / loss on disposal of property plant and equipment  ', 47), (' Share of gain/(loss) of joint venture ', 47), (' Net foreign exchange gains/(losses) ', 47), (' Net foreign exchange (loss)/gain ', 47), (' Arising from inventory of cranes ', 47), (' Arising from inventory of spare parts ', 47), (' Net (loss)/profit on disposal of non-current assets ', 47), (' Net other foreign exchange (losses)/gains ', 47), (' Other income - Bank guarantee ', 47), (' Other expense - Loss on inventory obsolescence ', 47), (' share of jv income ', 45), (' quota lease income ', 44), (' government grants ', 42), (' sundry income ', 42), (' Sub-lease rental income ', 42), (' Profit on sale of assets ', 42), (' Asset impairment ', 42), (' foreign exchange gain ', 41), (' profit from discontinued operation ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' Investment in joint venture ', 41), (' Interest on unwinding of discount in provisions ', 41), (' Profit from discontinued operation ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' Derivaties at FVTPL- net change in fair value ', 41), (' other ', 40), (' Miscellanous income ', 40), (' Bank charges', 40), (' japan recoveries ', 38), (' insurance proceeds ', 36), (' margin charge income ', 36), (' dividend from other parties ', 35), (' net ppe disposal (loss)/gain ', 35), (' Loss on sale of disposal of assets ', 35), (' Power purchase agreement unrelaised gain ', 35), (' Net loss on disposal of property ', 35), (' Net PPE disposal (loss)/gain ', 35), (' Other expense - Net loss on sale or property, plant and equipment ', 35), ('other revenue ', 33), (' plant and equipment ', 33), (' Commision rebate ', 33), (' Accretion expense ', 31), (' Power purchase agreement realised gain ', 29), (' commission revenue ', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none net financing costs , res_fuzz_match = [(' Net foreign losses ', 65), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' Loss on loan refinancing ', 56), (' net foreign exchange gain ', 50), (' effective portion of changes in fair value of cash flow ', 50), (' net foreign exchange gains/(losses) ', 50), (' net foreign exchange (loss)/gain ', 50), (' Interest on unwinding of discount in provisions ', 50), (' Net foreign exchange gains/(losses) ', 50), (' Net foreign exchange (loss)/gain ', 50), (' Sub-lease rental income ', 46), (' other income ', 45), (' share of jv income ', 45), (' secondment income (tw recovery) ', 45), (' paid by customers - at amortised cost ', 45), (' net ppe disposal (loss)/gain ', 45), (' net other foreign exchange (losses)/gains ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' net gain / loss on disposal of property plant and equipment  ', 45), (' Impairment loss ', 45), (' Net PPE disposal (loss)/gain ', 45), (' Net other foreign exchange (losses)/gains ', 45), (' Other expense - Net loss on sale or property, plant and equipment ', 45), (' Other expense - Loss on inventory obsolescence ', 45), (' quota lease income ', 44), (' Investment in joint venture ', 43), ('other revenue ', 42), (' government grants ', 42), (' sundry income ', 42), (' Asset impairment ', 42), (' other ', 40), (' profit from discontinued operation ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' net (loss)/profit on disposal of non-current assets ', 40), (' Share of gain/(loss) of joint venture ', 40), (' Profit from discontinued operation ', 40), (' plant and equipment ', 40), (' other miscellaneous - net (loss)/gain ', 40), (' Arising from inventory of cranes ', 40), (' Arising from inventory of spare parts ', 40), (' Net (loss)/profit on disposal of non-current assets ', 40), (' Miscellanous income ', 40), (' Derivaties at FVTPL- net change in fair value ', 40), (' Other income - Bank guarantee ', 40), (' Bank charges', 40), (' margin charge income ', 39), (' Accretion expense ', 38), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' Profit on sale of assets ', 36), (' foreign exchange gain ', 35), (' dividend from other parties ', 35), (' Loss on sale of disposal of assets ', 35), (' Power purchase agreement realised gain ', 35), (' Power purchase agreement unrelaised gain ', 35), (' Net loss on disposal of property ', 35), (' Commision rebate ', 33), (' commission revenue ', 29)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4, 8, 11], 'score': [100, 92, 100, 92], 'value': [0.0, -56.0, 1.0, 0.0], 'label': ['None Foreign exchange gain', 'None Foreign exchange loss', 'None Foreign exchange gain', 'None Foreign exchange loss'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-25 12:24:58+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('NULL', 28)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [('NULL', 12)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('NULL', 11)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [('NULL', 11)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('NULL', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('NULL', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('NULL', 28)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [('NULL', 12)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('NULL', 11)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [('NULL', 11)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('NULL', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('NULL', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' tax (expense)/benefit', 51), (' income tax benefit/(expense)', 45), ('minimum alternate tax credit entitlement', 39), ('amount transferred to retained earnings', 38), (' income tax expense', 34), ('provision for taxation previous year', 33), ('earlier year', 32), (' income tax benefit', 29), ('deferred tax', 24), (' income tax', 24), ('prior year ', 23), ('current tax', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' tax (expense)/benefit', 59), (' income tax benefit/(expense)', 50), ('amount transferred to retained earnings', 42), (' income tax expense', 38), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), ('current tax', 30), (' income tax benefit', 30), ('provision for taxation previous year', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), ('earlier year', 35), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), (' income tax benefit', 31), ('current tax', 30), (' tax (expense)/benefit', 30), (' income tax expense', 26), (' income tax benefit/(expense)', 26)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' income tax benefit', 53), (' income tax benefit/(expense)', 49), (' income tax expense', 48), (' income tax', 45), ('minimum alternate tax credit entitlement', 36), ('amount transferred to retained earnings', 30), (' tax (expense)/benefit', 26), ('earlier year', 24), ('provision for taxation previous year', 19), ('deferred tax', 18), ('current tax', 17), ('prior year ', 17)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' income tax expense', 67), (' income tax benefit/(expense)', 53), (' tax (expense)/benefit', 50), (' income tax benefit', 39), ('deferred tax', 35), ('amount transferred to retained earnings', 34), ('current tax', 32), ('earlier year', 31), ('minimum alternate tax credit entitlement', 30), (' income tax', 26), ('prior year ', 25), ('provision for taxation previous year', 23)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' income tax expense', 45), (' income tax benefit', 44), ('amount transferred to retained earnings', 43), (' income tax', 42), (' income tax benefit/(expense)', 36), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), (' tax (expense)/benefit', 30), ('provision for taxation previous year', 27), ('deferred tax', 25), ('prior year ', 24), ('earlier year', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' income tax benefit', 67), ('provision for taxation previous year', 59), (' income tax expense', 58), (' income tax', 58), (' income tax benefit/(expense)', 57), (' tax (expense)/benefit', 50), ('deferred tax', 45), ('current tax', 42), ('minimum alternate tax credit entitlement', 41), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('earlier year', 35)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' income tax expense', 100), (' income tax benefit/(expense)', 80), (' income tax benefit', 73), (' income tax', 72), (' tax (expense)/benefit', 59), ('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('provision for taxation previous year', 64), ('prior year ', 45), ('amount transferred to retained earnings', 42), ('earlier year', 36), (' income tax benefit/(expense)', 36), ('minimum alternate tax credit entitlement', 34), ('deferred tax', 33), (' income tax expense', 32), (' income tax benefit', 32), ('current tax', 31), (' tax (expense)/benefit', 31), (' income tax', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [(' income tax expense', 68), (' income tax benefit/(expense)', 57), (' income tax benefit', 56), (' income tax', 52), ('minimum alternate tax credit entitlement', 44), ('current tax', 42), ('provision for taxation previous year', 39), ('prior year ', 38), ('amount transferred to retained earnings', 37), (' tax (expense)/benefit', 35), ('deferred tax', 32), ('earlier year', 24)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': -890.0, 'line_item_label': ['Income tax expense'], 'note_numbers': ['18'], 'line_item_value': [-890.0]}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' tax (expense)/benefit', 51), (' income tax benefit/(expense)', 45), ('minimum alternate tax credit entitlement', 39), ('amount transferred to retained earnings', 38), (' income tax expense', 34), ('provision for taxation previous year', 33), ('earlier year', 32), (' income tax benefit', 29), ('deferred tax', 24), (' income tax', 24), ('prior year ', 23), ('current tax', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' tax (expense)/benefit', 59), (' income tax benefit/(expense)', 50), ('amount transferred to retained earnings', 42), (' income tax expense', 38), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), ('current tax', 30), (' income tax benefit', 30), ('provision for taxation previous year', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), ('earlier year', 35), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), (' income tax benefit', 31), ('current tax', 30), (' tax (expense)/benefit', 30), (' income tax expense', 26), (' income tax benefit/(expense)', 26)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' income tax benefit', 53), (' income tax benefit/(expense)', 49), (' income tax expense', 48), (' income tax', 45), ('minimum alternate tax credit entitlement', 36), ('amount transferred to retained earnings', 30), (' tax (expense)/benefit', 26), ('earlier year', 24), ('provision for taxation previous year', 19), ('deferred tax', 18), ('current tax', 17), ('prior year ', 17)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' income tax expense', 67), (' income tax benefit/(expense)', 53), (' tax (expense)/benefit', 50), (' income tax benefit', 39), ('deferred tax', 35), ('amount transferred to retained earnings', 34), ('current tax', 32), ('earlier year', 31), ('minimum alternate tax credit entitlement', 30), (' income tax', 26), ('prior year ', 25), ('provision for taxation previous year', 23)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' income tax expense', 45), (' income tax benefit', 44), ('amount transferred to retained earnings', 43), (' income tax', 42), (' income tax benefit/(expense)', 36), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), (' tax (expense)/benefit', 30), ('provision for taxation previous year', 27), ('deferred tax', 25), ('prior year ', 24), ('earlier year', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' income tax benefit', 67), ('provision for taxation previous year', 59), (' income tax expense', 58), (' income tax', 58), (' income tax benefit/(expense)', 57), (' tax (expense)/benefit', 50), ('deferred tax', 45), ('current tax', 42), ('minimum alternate tax credit entitlement', 41), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('earlier year', 35)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' income tax expense', 100), (' income tax benefit/(expense)', 80), (' income tax benefit', 73), (' income tax', 72), (' tax (expense)/benefit', 59), ('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('provision for taxation previous year', 64), ('prior year ', 45), ('amount transferred to retained earnings', 42), ('earlier year', 36), (' income tax benefit/(expense)', 36), ('minimum alternate tax credit entitlement', 34), ('deferred tax', 33), (' income tax expense', 32), (' income tax benefit', 32), ('current tax', 31), (' tax (expense)/benefit', 31), (' income tax', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [(' income tax expense', 68), (' income tax benefit/(expense)', 57), (' income tax benefit', 56), (' income tax', 52), ('minimum alternate tax credit entitlement', 44), ('current tax', 42), ('provision for taxation previous year', 39), ('prior year ', 38), ('amount transferred to retained earnings', 37), (' tax (expense)/benefit', 35), ('deferred tax', 32), ('earlier year', 24)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': -1326.0, 'line_item_label': ['Income tax expense'], 'note_numbers': ['18'], 'line_item_value': [-1326.0]}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement'] , match_type = partial , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none balance at 1 april 2022 , res_fuzz_match = [(' income tax expense on continuing operations', 42), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 41), (' total income tax expense / (benefit)', 41), (' total tax (expense)/benefit in income statement', 41), (' deferred income tax', 40), (' current income tax', 35), ('income tax expense', 31)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [(' current income tax', 46), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 46), (' income tax expense on continuing operations', 38), (' total tax (expense)/benefit in income statement', 38), (' deferred income tax', 32), ('income tax expense', 31), (' total income tax expense / (benefit)', 31)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none provisions made during the year , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 60), (' income tax expense on continuing operations', 39), (' current income tax', 35), (' total income tax expense / (benefit)', 34), (' deferred income tax', 33), (' total tax (expense)/benefit in income statement', 33), ('income tax expense', 31)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [(' current income tax', 46), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 46), (' income tax expense on continuing operations', 38), (' total tax (expense)/benefit in income statement', 38), (' deferred income tax', 32), ('income tax expense', 31), (' total income tax expense / (benefit)', 31)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none provisions used during the year , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 59), (' income tax expense on continuing operations', 38), (' current income tax', 35), (' total tax (expense)/benefit in income statement', 34), (' deferred income tax', 33), (' total income tax expense / (benefit)', 31), ('income tax expense', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [(' current income tax', 46), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 46), (' income tax expense on continuing operations', 38), (' total tax (expense)/benefit in income statement', 38), (' deferred income tax', 32), ('income tax expense', 31), (' total income tax expense / (benefit)', 31)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none balance at 31 march 2023 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 41), (' income tax expense on continuing operations', 41), (' total income tax expense / (benefit)', 41), (' total tax (expense)/benefit in income statement', 41), (' deferred income tax', 40), (' current income tax', 35), ('income tax expense', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [(' current income tax', 46), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 46), (' income tax expense on continuing operations', 38), (' total tax (expense)/benefit in income statement', 38), (' deferred income tax', 32), ('income tax expense', 31), (' total income tax expense / (benefit)', 31)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none current , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 75), (' income tax expense on continuing operations', 42), (' total income tax expense / (benefit)', 42), (' total tax (expense)/benefit in income statement', 42), ('income tax expense', 33), (' current income tax', 33), (' deferred income tax', 33)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [(' current income tax', 46), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 46), (' income tax expense on continuing operations', 38), (' total tax (expense)/benefit in income statement', 38), (' deferred income tax', 32), ('income tax expense', 31), (' total income tax expense / (benefit)', 31)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none non-current , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 58), (' income tax expense on continuing operations', 42), (' current income tax', 33), (' deferred income tax', 33), (' total tax (expense)/benefit in income statement', 33), ('income tax expense', 25), (' total income tax expense / (benefit)', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [(' current income tax', 46), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 46), (' income tax expense on continuing operations', 38), (' total tax (expense)/benefit in income statement', 38), (' deferred income tax', 32), ('income tax expense', 31), (' total income tax expense / (benefit)', 31)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('income tax expense', 50), (' current income tax', 50), (' deferred income tax', 50), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total income tax expense / (benefit)', 50), (' total tax (expense)/benefit in income statement', 50)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 warranties make , res_fuzz_match = [(' current income tax', 46), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 46), (' income tax expense on continuing operations', 38), (' total tax (expense)/benefit in income statement', 38), (' deferred income tax', 32), ('income tax expense', 31), (' total income tax expense / (benefit)', 31)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none balance at 1 april 2022 , res_fuzz_match = [(' income tax expense on continuing operations', 42), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 41), (' total income tax expense / (benefit)', 41), (' total tax (expense)/benefit in income statement', 41), (' deferred income tax', 40), (' current income tax', 35), ('income tax expense', 31)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 25), (' income tax expense on continuing operations', 25), (' total income tax expense / (benefit)', 25), (' total tax (expense)/benefit in income statement', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none provisions made during the year , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 60), (' income tax expense on continuing operations', 39), (' current income tax', 35), (' total income tax expense / (benefit)', 34), (' deferred income tax', 33), (' total tax (expense)/benefit in income statement', 33), ('income tax expense', 31)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 25), (' income tax expense on continuing operations', 25), (' total income tax expense / (benefit)', 25), (' total tax (expense)/benefit in income statement', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none provisions used during the year , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 59), (' income tax expense on continuing operations', 38), (' current income tax', 35), (' total tax (expense)/benefit in income statement', 34), (' deferred income tax', 33), (' total income tax expense / (benefit)', 31), ('income tax expense', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 25), (' income tax expense on continuing operations', 25), (' total income tax expense / (benefit)', 25), (' total tax (expense)/benefit in income statement', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none balance at 31 march 2023 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 41), (' income tax expense on continuing operations', 41), (' total income tax expense / (benefit)', 41), (' total tax (expense)/benefit in income statement', 41), (' deferred income tax', 40), (' current income tax', 35), ('income tax expense', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 25), (' income tax expense on continuing operations', 25), (' total income tax expense / (benefit)', 25), (' total tax (expense)/benefit in income statement', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none current , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 75), (' income tax expense on continuing operations', 42), (' total income tax expense / (benefit)', 42), (' total tax (expense)/benefit in income statement', 42), ('income tax expense', 33), (' current income tax', 33), (' deferred income tax', 33)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 25), (' income tax expense on continuing operations', 25), (' total income tax expense / (benefit)', 25), (' total tax (expense)/benefit in income statement', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none non-current , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 58), (' income tax expense on continuing operations', 42), (' current income tax', 33), (' deferred income tax', 33), (' total tax (expense)/benefit in income statement', 33), ('income tax expense', 25), (' total income tax expense / (benefit)', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 25), (' income tax expense on continuing operations', 25), (' total income tax expense / (benefit)', 25), (' total tax (expense)/benefit in income statement', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('income tax expense', 50), (' current income tax', 50), (' deferred income tax', 50), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total income tax expense / (benefit)', 50), (' total tax (expense)/benefit in income statement', 50)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 good , res_fuzz_match = [('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 25), (' income tax expense on continuing operations', 25), (' total income tax expense / (benefit)', 25), (' total tax (expense)/benefit in income statement', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none balance at 1 april 2022 , res_fuzz_match = [(' income tax expense on continuing operations', 42), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 41), (' total income tax expense / (benefit)', 41), (' total tax (expense)/benefit in income statement', 41), (' deferred income tax', 40), (' current income tax', 35), ('income tax expense', 31)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 100), (' total income tax expense / (benefit)', 100), (' total tax (expense)/benefit in income statement', 100), ('income tax expense', 40), (' current income tax', 40), (' deferred income tax', 40), (' income tax expense on continuing operations', 40)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none provisions made during the year , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 60), (' income tax expense on continuing operations', 39), (' current income tax', 35), (' total income tax expense / (benefit)', 34), (' deferred income tax', 33), (' total tax (expense)/benefit in income statement', 33), ('income tax expense', 31)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 100), (' total income tax expense / (benefit)', 100), (' total tax (expense)/benefit in income statement', 100), ('income tax expense', 40), (' current income tax', 40), (' deferred income tax', 40), (' income tax expense on continuing operations', 40)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none provisions used during the year , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 59), (' income tax expense on continuing operations', 38), (' current income tax', 35), (' total tax (expense)/benefit in income statement', 34), (' deferred income tax', 33), (' total income tax expense / (benefit)', 31), ('income tax expense', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 100), (' total income tax expense / (benefit)', 100), (' total tax (expense)/benefit in income statement', 100), ('income tax expense', 40), (' current income tax', 40), (' deferred income tax', 40), (' income tax expense on continuing operations', 40)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none balance at 31 march 2023 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 41), (' income tax expense on continuing operations', 41), (' total income tax expense / (benefit)', 41), (' total tax (expense)/benefit in income statement', 41), (' deferred income tax', 40), (' current income tax', 35), ('income tax expense', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 100), (' total income tax expense / (benefit)', 100), (' total tax (expense)/benefit in income statement', 100), ('income tax expense', 40), (' current income tax', 40), (' deferred income tax', 40), (' income tax expense on continuing operations', 40)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none current , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 75), (' income tax expense on continuing operations', 42), (' total income tax expense / (benefit)', 42), (' total tax (expense)/benefit in income statement', 42), ('income tax expense', 33), (' current income tax', 33), (' deferred income tax', 33)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 100), (' total income tax expense / (benefit)', 100), (' total tax (expense)/benefit in income statement', 100), ('income tax expense', 40), (' current income tax', 40), (' deferred income tax', 40), (' income tax expense on continuing operations', 40)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none non-current , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 58), (' income tax expense on continuing operations', 42), (' current income tax', 33), (' deferred income tax', 33), (' total tax (expense)/benefit in income statement', 33), ('income tax expense', 25), (' total income tax expense / (benefit)', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 100), (' total income tax expense / (benefit)', 100), (' total tax (expense)/benefit in income statement', 100), ('income tax expense', 40), (' current income tax', 40), (' deferred income tax', 40), (' income tax expense on continuing operations', 40)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('income tax expense', 50), (' current income tax', 50), (' deferred income tax', 50), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total income tax expense / (benefit)', 50), (' total tax (expense)/benefit in income statement', 50)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_rows = $'000 total , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 100), (' total income tax expense / (benefit)', 100), (' total tax (expense)/benefit in income statement', 100), ('income tax expense', 40), (' current income tax', 40), (' deferred income tax', 40), (' income tax expense on continuing operations', 40)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [14, 15, 16, 17, 18, 19, 20], 'score': [100, 100, 100, 100, 100, 100, 100], 'value': [1393.0, 514.0, -635.0, 1272.0, 896.0, 376.0, 1272.0], 'label': ["$'000 TOTAL", "$'000 TOTAL", "$'000 TOTAL", "$'000 TOTAL", "$'000 TOTAL", "$'000 TOTAL", "$'000 TOTAL"], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-25 12:24:58+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [('share of', 11), ('share in', 11)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 19), (' prior period ', 11)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional ', 27), (' Actuarial gains / (losses) on retirement benefit obligation', 26), (' prior period ', 19)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 33), ('exceptional ', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 35), (' prior period ', 22), ('exceptional ', 19)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 27), (' prior period ', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 35), ('exceptional ', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' prior period ', 32), (' Actuarial gains / (losses) on retirement benefit obligation', 28), ('exceptional ', 11)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' prior period ', 31), ('exceptional ', 30), (' Actuarial gains / (losses) on retirement benefit obligation', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), ('exceptional ', 29), (' prior period ', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' prior period ', 47), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 29)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional ', 36), (' prior period ', 36), (' Actuarial gains / (losses) on retirement benefit obligation', 30)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [(' prior period ', 61), (' Actuarial gains / (losses) on retirement benefit obligation', 34), ('exceptional ', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' prior period ', 41), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 37), (' prior period ', 35), ('exceptional ', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 19), (' prior period ', 11)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional ', 27), (' Actuarial gains / (losses) on retirement benefit obligation', 26), (' prior period ', 19)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 33), ('exceptional ', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 35), (' prior period ', 22), ('exceptional ', 19)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 27), (' prior period ', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 35), ('exceptional ', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [(' prior period ', 32), (' Actuarial gains / (losses) on retirement benefit obligation', 28), ('exceptional ', 11)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [(' prior period ', 31), ('exceptional ', 30), (' Actuarial gains / (losses) on retirement benefit obligation', 27)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), ('exceptional ', 29), (' prior period ', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' prior period ', 47), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 29)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional ', 36), (' prior period ', 36), (' Actuarial gains / (losses) on retirement benefit obligation', 30)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [(' prior period ', 61), (' Actuarial gains / (losses) on retirement benefit obligation', 34), ('exceptional ', 22)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' prior period ', 41), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 37), (' prior period ', 35), ('exceptional ', 21)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-25 12:24:58+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-25 12:24:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('NULL', 28)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [('NULL', 12)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('NULL', 11)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [('NULL', 11)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('NULL', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('NULL', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-25 12:24:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-25 12:24:58+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = selling and distribution expenses , res_fuzz_match = [('NULL', 28)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = administrative expenses , res_fuzz_match = [('NULL', 10)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial income , res_fuzz_match = [('NULL', 12)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = financial expenses , res_fuzz_match = [('NULL', 11)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = net financing costs , res_fuzz_match = [('NULL', 11)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = profit for the period , res_fuzz_match = [('NULL', 0)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - txt_particular = total comprehensive income , res_fuzz_match = [('NULL', 15)]
2023-08-25 12:24:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
