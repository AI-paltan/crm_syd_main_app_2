2023-08-24 10:08:23+0530 - sLogger - DEBUG - module: Classification_service , File:wrapper.py,  function: Save_file
2023-08-24 10:08:23+0530 - sLogger - DEBUG - {'fileid': '9dc3e434-32dc-4aee-9ff6-bf06b0d787bb', 'filename': '202303 MDP Financial Statements.pdf', 'filepath': '/home/mgsuser01/AI/CRM_SYD/UAT_app/classification/../FILE_DB/FILES/202303 MDP Financial Statements.pdf', 'status': 'Processing'}
2023-08-24 10:08:23+0530 - sLogger - DEBUG - save file completed
2023-08-24 10:08:23+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: process_pdf
2023-08-24 10:08:23+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __get_basic_info_file
2023-08-24 10:08:23+0530 - sLogger - DEBUG - __get_basic_info_file() completed.
2023-08-24 10:08:23+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __save_basic_info_file_db
2023-08-24 10:08:23+0530 - sLogger - DEBUG - __save_basic_info_file_db() completed. and file data (page_cnt,region) updated in db
2023-08-24 10:08:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:08:23+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:08:25+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:08:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:08:25+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:08:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:08:25+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:08:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:08:25+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:08:28+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:08:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:08:28+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:08:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:08:28+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:08:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:08:28+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:08:39+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:08:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:08:39+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:08:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:08:39+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:08:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:08:39+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:08:49+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:08:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:08:49+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:08:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:08:49+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:08:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:08:49+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:08:53+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:08:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:08:53+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:08:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:08:53+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:08:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:08:53+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:08:57+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:08:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:08:57+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:08:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:08:57+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:08:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:08:57+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:09:02+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:09:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:09:02+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:09:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:09:02+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:09:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:09:02+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:09:05+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:09:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:09:05+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:09:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:09:05+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:09:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:09:05+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:09:10+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:09:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:09:10+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:09:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:09:10+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:09:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:09:10+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:09:22+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:09:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:09:22+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:09:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:09:22+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:09:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:09:22+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:09:36+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:09:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:09:36+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:09:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:09:36+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:09:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:09:36+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:09:52+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:09:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:09:52+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:09:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:09:52+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:09:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:09:52+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:10:08+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:10:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:10:08+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:10:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:10:08+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:10:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:10:08+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:10:23+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:10:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:10:23+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:10:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:10:23+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:10:23+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:10:23+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:10:39+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:10:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:10:39+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:10:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:10:39+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:10:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:10:39+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:10:52+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:10:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:10:52+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:10:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:10:52+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:10:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:10:52+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:11:02+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:11:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:11:02+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:11:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:11:02+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:11:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:11:02+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:11:10+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:11:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:11:10+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:11:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:11:10+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:11:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:11:10+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:11:17+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:11:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:11:17+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:11:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:11:17+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:11:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:11:17+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:11:24+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:11:24+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:11:24+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:11:24+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:11:24+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:11:24+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:11:24+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:11:32+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:11:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:11:32+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:11:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:11:32+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:11:32+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:11:32+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:11:38+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:11:38+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:11:38+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:11:38+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:11:38+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:11:38+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:11:38+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:11:45+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:11:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:11:45+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:11:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:11:45+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:11:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:11:45+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:11:53+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:11:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:11:53+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:11:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:11:53+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:11:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:11:53+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:12:02+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:12:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:12:02+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:12:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:12:02+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:12:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:12:03+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:12:09+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:12:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:12:09+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:12:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:12:09+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:12:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:12:09+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:12:17+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:12:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:12:17+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:12:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:12:17+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:12:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:12:17+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:12:26+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:12:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:12:26+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:12:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:12:26+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:12:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:12:26+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:12:31+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:12:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:12:31+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:12:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:12:31+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:12:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:12:31+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:12:37+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:12:37+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:12:37+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:12:37+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:12:37+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:12:37+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:12:37+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:12:46+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:12:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:12:46+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:12:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:12:46+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:12:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 10:12:46+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 10:12:51+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 10:12:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 10:12:51+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 10:12:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 10:12:51+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 10:12:51+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __update_filtered_pages_db
2023-08-24 10:12:51+0530 - sLogger - DEBUG - {'predicted_cbs_pages': [6], 'predicted_cpl_pages': [5, 7, 17], 'predicted_ccf_pages': [8], 'filtered_cbs_pages': [6], 'filtered_cpl_pages': [5, 7], 'filtered_ccf_pages': [8], 'month': 'march', 'status': 'Page Classification Completed'}
2023-08-24 10:12:51+0530 - sLogger - DEBUG - function: __update_filtered_pages_db completed
2023-08-24 10:12:51+0530 - sLogger - DEBUG - function: process_pdf completed successfully
2023-08-24 10:12:51+0530 - sLogger - DEBUG - process file completed
2023-08-24 10:12:51+0530 - sLogger - DEBUG - Classification Service Processing completed
2023-08-24 10:17:15+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-08-24 10:17:15+0530 - sLogger - DEBUG - TE process file started
2023-08-24 10:22:58+0530 - sLogger - DEBUG - TE Proces file completed
2023-08-24 10:22:58+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-24 10:22:58+0530 - sLogger - DEBUG - process_main_pages started
2023-08-24 10:22:58+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-24 10:22:58+0530 - sLogger - DEBUG - start_refactoring started
2023-08-24 10:22:58+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-24 10:22:58+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-24 10:22:58+0530 - sLogger - DEBUG - start_refactoring started
2023-08-24 10:22:58+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-24 10:22:58+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-24 10:22:58+0530 - sLogger - DEBUG - start_refactoring started
2023-08-24 10:22:58+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-24 10:22:58+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-24 10:22:58+0530 - sLogger - DEBUG - start_refactoring started
2023-08-24 10:22:58+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-24 10:22:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL
2023-08-24 10:22:58+0530 - sLogger - ERROR - error occured: 'headers'
2023-08-24 10:22:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL notes_number_processing
2023-08-24 10:22:58+0530 - sLogger - ERROR - error occured: 'Notes'
2023-08-24 10:22:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: find_note_subnote_number
2023-08-24 10:22:58+0530 - sLogger - ERROR - error occured: list index out of range
2023-08-24 10:22:58+0530 - sLogger - DEBUG - module: main_page_processing_service , File:utils.py,  function: find_note_subnote_number
2023-08-24 10:22:58+0530 - sLogger - ERROR - error occured: list index out of range
2023-08-24 10:22:58+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-24 10:22:58+0530 - sLogger - DEBUG - set_section_details started
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('currentliabilities', 64), ('assets', 56), ('currentassets', 56), ('noncurrentliabilities', 56), ('current liabilities', 52), ('noncurrentassets', 50), ('noncurrent liabilities', 44), ('equity', 32), ('equityliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('equity liabilities', 23), ('liabilities', 11)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD currentassets | score 96
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD currentliabilities | score 62
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentassets | score 87
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentliabilities | score 57
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentassets | score 87
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentliabilities | score 57
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equityandliabilities | score 29
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equityandliabilities', 38), ('equity liabilities', 35), ('equityliabilities', 34), ('noncurrentassets', 33), ('assets', 31), ('currentassets', 30), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrentliabilities', 24), ('noncurrent liabilities', 23), ('liabilities', 22), ('currentliabilities', 20)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentassets | score 37
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentliabilities | score 35
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equityandliabilities | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Derivative financial instruments | [('noncurrentliabilities', 39), ('current assets', 38), ('noncurrentassets', 36), ('equity and liabilities', 34), ('currentassets', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('equity liabilities', 32), ('currentliabilities', 30), ('equityandliabilities', 29), ('assets', 28), ('current liabilities', 26), ('liabilities', 20), ('equity', 20), ('equityliabilities', 19)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD current assets | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD currentassets | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD current liabilities | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD currentliabilities | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD noncurrent assets | score 37
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD noncurrentassets | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD noncurrent liabilities | score 46
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD non current assets | score 35
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD non current liabilities | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD noncurrentliabilities | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD noncurrentassets | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD noncurrentliabilities | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD equity and liabilities | score 48
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD equity | score 45
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD equityandliabilities | score 46
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Loan receivable | [('noncurrentliabilities', 43), ('noncurrentassets', 38), ('equity and liabilities', 36), ('liabilities', 35), ('current assets', 33), ('noncurrent liabilities', 32), ('currentliabilities', 30), ('equityandliabilities', 27), ('currentassets', 26), ('assets', 25), ('noncurrent assets', 25), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('equityliabilities', 21)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Loan receivable | MATCH WORD current assets | score 28
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Loan receivable | MATCH WORD currentassets | score 29
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Loan receivable | MATCH WORD current liabilities | score 41
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Loan receivable | MATCH WORD currentliabilities | score 42
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Loan receivable | MATCH WORD noncurrent assets | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Loan receivable | MATCH WORD noncurrentassets | score 39
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Loan receivable | MATCH WORD noncurrent liabilities | score 49
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Loan receivable | MATCH WORD non current assets | score 42
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Loan receivable | MATCH WORD non current liabilities | score 53
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Loan receivable | MATCH WORD noncurrentliabilities | score 50
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Loan receivable | MATCH WORD noncurrentassets | score 39
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Loan receivable | MATCH WORD noncurrentliabilities | score 50
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Loan receivable | MATCH WORD equity and liabilities | score 47
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Loan receivable | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Loan receivable | MATCH WORD equityandliabilities | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Other assets | [('noncurrent assets', 67), ('assets', 62), ('current assets', 58), ('currentassets', 43), ('noncurrentassets', 38), ('noncurrent liabilities', 32), ('equity and liabilities', 29), ('equity liabilities', 25), ('equity', 24), ('current liabilities', 24), ('equityliabilities', 21), ('currentliabilities', 20), ('equityandliabilities', 18), ('noncurrentliabilities', 17), ('liabilities', 12)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current assets | score 64
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD currentassets | score 56
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD current liabilities | score 32
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD currentliabilities | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent assets | score 64
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentassets | score 57
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrent liabilities | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current assets | score 86
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD non current liabilities | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentliabilities | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentassets | score 57
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD noncurrentliabilities | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity and liabilities | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Other assets | MATCH WORD equityandliabilities | score 25
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('currentliabilities', 57), ('currentassets', 52), ('noncurrentliabilities', 52), ('noncurrentassets', 47), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentassets | score 83
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentliabilities | score 53
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equityandliabilities | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('noncurrentliabilities', 56), ('noncurrentassets', 50), ('currentassets', 40), ('currentliabilities', 36), ('current liabilities', 30), ('equity and liabilities', 27), ('equityandliabilities', 25), ('equity liabilities', 23), ('equity', 21), ('equityliabilities', 19), ('liabilities', 11)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD currentassets | score 87
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD currentliabilities | score 57
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentassets | score 97
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentliabilities | score 68
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentassets | score 97
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentliabilities | score 68
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equityandliabilities | score 27
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Financial assets at fair value through OCI | [('noncurrent assets', 42), ('current assets', 38), ('equity and liabilities', 35), ('equity liabilities', 33), ('current liabilities', 29), ('noncurrent liabilities', 29), ('assets', 25), ('equityandliabilities', 22), ('currentassets', 21), ('noncurrentliabilities', 21), ('noncurrentassets', 20), ('liabilities', 20), ('equityliabilities', 19), ('currentliabilities', 18), ('equity', 15)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Financial assets at fair value through OCI | MATCH WORD current assets | score 86
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Financial assets at fair value through OCI | MATCH WORD currentassets | score 49
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Financial assets at fair value through OCI | MATCH WORD current liabilities | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Financial assets at fair value through OCI | MATCH WORD currentliabilities | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Financial assets at fair value through OCI | MATCH WORD noncurrent assets | score 86
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Financial assets at fair value through OCI | MATCH WORD noncurrentassets | score 50
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Financial assets at fair value through OCI | MATCH WORD noncurrent liabilities | score 37
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Financial assets at fair value through OCI | MATCH WORD non current assets | score 86
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Financial assets at fair value through OCI | MATCH WORD non current liabilities | score 35
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Financial assets at fair value through OCI | MATCH WORD noncurrentliabilities | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Financial assets at fair value through OCI | MATCH WORD noncurrentassets | score 50
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Financial assets at fair value through OCI | MATCH WORD noncurrentliabilities | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Financial assets at fair value through OCI | MATCH WORD equity and liabilities | score 37
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Financial assets at fair value through OCI | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Financial assets at fair value through OCI | MATCH WORD equityandliabilities | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Investments in associates | [('assets', 56), ('current assets', 46), ('currentassets', 40), ('noncurrent assets', 38), ('noncurrentassets', 36), ('noncurrentliabilities', 32), ('noncurrent liabilities', 30), ('equity and liabilities', 27), ('currentliabilities', 27), ('equity liabilities', 23), ('current liabilities', 22), ('liabilities', 21), ('equity', 21), ('equityliabilities', 19), ('equityandliabilities', 17)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Investments in associates | MATCH WORD current assets | score 46
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Investments in associates | MATCH WORD currentassets | score 42
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Investments in associates | MATCH WORD current liabilities | score 45
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Investments in associates | MATCH WORD currentliabilities | score 42
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Investments in associates | MATCH WORD noncurrent assets | score 49
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Investments in associates | MATCH WORD noncurrentassets | score 44
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Investments in associates | MATCH WORD noncurrent liabilities | score 47
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Investments in associates | MATCH WORD non current assets | score 47
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Investments in associates | MATCH WORD non current liabilities | score 46
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Investments in associates | MATCH WORD noncurrentliabilities | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Investments in associates | MATCH WORD noncurrentassets | score 44
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Investments in associates | MATCH WORD noncurrentliabilities | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Investments in associates | MATCH WORD equity and liabilities | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Investments in associates | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Investments in associates | MATCH WORD equityandliabilities | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equityliabilities', 26), ('currentliabilities', 25), ('equityandliabilities', 23), ('noncurrentliabilities', 22), ('liabilities', 19)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentassets | score 53
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentliabilities | score 29
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equityandliabilities | score 27
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Intangible assets | [('current assets', 64), ('noncurrent assets', 64), ('assets', 59), ('equityandliabilities', 43), ('currentassets', 42), ('equity and liabilities', 41), ('equity liabilities', 40), ('current liabilities', 38), ('noncurrentassets', 37), ('equity', 33), ('noncurrent liabilities', 31), ('equityliabilities', 30), ('currentliabilities', 29), ('noncurrentliabilities', 25), ('liabilities', 22)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current assets | score 58
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD currentassets | score 53
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current liabilities | score 42
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD currentliabilities | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent assets | score 59
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentassets | score 55
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent liabilities | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current assets | score 57
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current liabilities | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentliabilities | score 37
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentassets | score 55
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrentliabilities | score 37
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity and liabilities | score 46
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equityandliabilities | score 49
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrentliabilities', 58), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('currentliabilities', 43), ('assets', 42), ('current liabilities', 42), ('currentassets', 39), ('equity and liabilities', 33), ('equityandliabilities', 33), ('equity liabilities', 31), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentassets | score 83
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('currentassets', 43), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equityliabilities', 32), ('currentliabilities', 30), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentassets | score 56
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentliabilities | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equityandliabilities | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('currentliabilities', 78), ('noncurrentliabilities', 69), ('equity liabilities', 67), ('currentassets', 62), ('liabilities', 60), ('equity and liabilities', 58), ('noncurrentassets', 55), ('current assets', 52), ('noncurrent liabilities', 43), ('equityliabilities', 36), ('equityandliabilities', 32), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD currentassets | score 62
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD currentliabilities | score 97
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentassets | score 57
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentassets | score 57
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equityandliabilities | score 67
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Derivative financial instruments | [('noncurrentliabilities', 39), ('current assets', 38), ('noncurrentassets', 36), ('equity and liabilities', 34), ('currentassets', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('equity liabilities', 32), ('currentliabilities', 30), ('equityandliabilities', 29), ('assets', 28), ('current liabilities', 26), ('liabilities', 20), ('equity', 20), ('equityliabilities', 19)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD current assets | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD currentassets | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD current liabilities | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD currentliabilities | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD noncurrent assets | score 37
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD noncurrentassets | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD noncurrent liabilities | score 46
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD non current assets | score 35
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD non current liabilities | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD noncurrentliabilities | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD noncurrentassets | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD noncurrentliabilities | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD equity and liabilities | score 48
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD equity | score 45
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD equityandliabilities | score 46
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Current tax liabilities | [('current liabilities', 88), ('currentliabilities', 67), ('currentassets', 60), ('noncurrentliabilities', 60), ('equity liabilities', 58), ('noncurrentassets', 55), ('equity and liabilities', 51), ('liabilities', 50), ('current assets', 45), ('noncurrent liabilities', 44), ('equityliabilities', 31), ('equityandliabilities', 28), ('noncurrent assets', 26), ('equity', 25), ('assets', 17)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current assets | score 86
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD currentassets | score 56
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD current liabilities | score 95
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD currentliabilities | score 88
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent assets | score 55
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentassets | score 51
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrent liabilities | score 84
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current assets | score 56
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD non current liabilities | score 86
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentliabilities | score 82
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentassets | score 51
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD noncurrentliabilities | score 82
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity and liabilities | score 71
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Current tax liabilities | MATCH WORD equityandliabilities | score 65
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('currentliabilities', 62), ('currentassets', 56), ('noncurrentliabilities', 56), ('equity liabilities', 55), ('noncurrentassets', 51), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('equityandliabilities', 32), ('equityliabilities', 29), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentassets | score 56
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentliabilities | score 84
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equityandliabilities | score 62
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('noncurrentliabilities', 54), ('noncurrentassets', 48), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('currentliabilities', 35), ('currentassets', 31), ('equityandliabilities', 24), ('equity', 20), ('equityliabilities', 18), ('assets', 11)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD currentassets | score 57
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD currentliabilities | score 90
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentassets | score 68
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentliabilities | score 98
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentassets | score 68
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentliabilities | score 98
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equityandliabilities | score 62
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Deferred tax liabilities net | [('equity and liabilities', 49), ('equity liabilities', 48), ('current liabilities', 47), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 30), ('equityandliabilities', 26), ('currentassets', 25), ('assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 23), ('equity', 23), ('currentliabilities', 21), ('equityliabilities', 21), ('noncurrentliabilities', 19)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities net | MATCH WORD current assets | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities net | MATCH WORD currentassets | score 39
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities net | MATCH WORD current liabilities | score 69
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities net | MATCH WORD currentliabilities | score 67
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities net | MATCH WORD noncurrent assets | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities net | MATCH WORD noncurrentassets | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities net | MATCH WORD noncurrent liabilities | score 65
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities net | MATCH WORD non current assets | score 39
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities net | MATCH WORD non current liabilities | score 67
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities net | MATCH WORD noncurrentliabilities | score 61
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities net | MATCH WORD noncurrentassets | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities net | MATCH WORD noncurrentliabilities | score 61
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities net | MATCH WORD equity and liabilities | score 64
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities net | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities net | MATCH WORD equityandliabilities | score 58
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrentliabilities', 56), ('noncurrent assets', 55), ('noncurrentassets', 51), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('currentliabilities', 41), ('currentassets', 38), ('equity liabilities', 36), ('equity and liabilities', 32), ('equityandliabilities', 26), ('equityliabilities', 21), ('assets', 16), ('equity', 15)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentassets | score 56
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentliabilities | score 85
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equityandliabilities | score 58
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('currentassets', 48), ('noncurrentassets', 42), ('currentliabilities', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equityliabilities', 24), ('liabilities', 13)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentassets | score 70
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentliabilities | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equityandliabilities | score 33
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentassets | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentliabilities | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equityandliabilities | score 90
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Issued capital | [('assets', 40), ('equity', 38), ('equity and liabilities', 37), ('currentassets', 36), ('current assets', 35), ('noncurrent assets', 35), ('equity liabilities', 35), ('current liabilities', 33), ('noncurrent liabilities', 33), ('equityliabilities', 33), ('noncurrentassets', 32), ('currentliabilities', 32), ('equityandliabilities', 29), ('noncurrentliabilities', 27), ('liabilities', 25)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current assets | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD currentassets | score 42
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current liabilities | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD currentliabilities | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent assets | score 32
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrentassets | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent liabilities | score 39
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current assets | score 31
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current liabilities | score 39
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrentliabilities | score 32
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrentassets | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrentliabilities | score 32
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity and liabilities | score 39
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equityandliabilities | score 33
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Reserves | [('currentassets', 44), ('noncurrentassets', 38), ('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD currentassets | score 48
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD currentliabilities | score 31
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentassets | score 45
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentliabilities | score 28
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentassets | score 45
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentliabilities | score 28
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equityandliabilities | score 22
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Retained earnings | [('equity and liabilities', 50), ('currentliabilities', 50), ('current liabilities', 48), ('currentassets', 43), ('noncurrentliabilities', 43), ('current assets', 42), ('assets', 38), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equity', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('equityliabilities', 32), ('liabilities', 24), ('noncurrent liabilities', 24)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentassets | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 39
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentliabilities | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 35
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 46
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equityandliabilities | score 43
2023-08-24 10:22:58+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentassets | score 32
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentliabilities | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-08-24 10:22:58+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equityandliabilities | score 57
2023-08-24 10:22:58+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-24 10:22:58+0530 - sLogger - DEBUG - set_section_details started
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Other receipts | operating profit before working capital changes
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income taxes paid | changes in working capital
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash generated by operating activities | adjustments for increase decrease in operating assets
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments for property, plant and equipment | operating profit before changes in assets and liabilities
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments for intangible assets | operating profit before changes in assets and liabilities
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividends received | movements in working capital
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Amounts advanced to a related entity | changes in operating assets and liabilities
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment of advances by a related entity | adjustments for increase decrease in operating assets
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from disposal of property, plant and equipment | operating profit before changes in assets and liabilities
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash inflow on disposal of investment | adjustments for increase decrease in operating assets
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in investing activities | adjustments for increase decrease in operating liabilities
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from financing activities | operating cash flow before working capital changes
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment of lease liabilities | changes in assets liabilities
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in financing activities | adjustments for increase decrease in operating assets
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net change in cash held | changes in assets liabilities
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents held at the beginning of the year | changes in operating assets and liabilities
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Effects of exchange rate changes on the balance of cash held in foreign currencies | operating profit before changes in assets and liabilities
2023-08-24 10:22:58+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents held at the end of the year | changes in operating assets and liabilities
2023-08-24 10:23:00+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-24 10:23:00+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '9 (1'
2023-08-24 10:23:00+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-08-24 10:23:00+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: '786)'
2023-08-24 10:23:00+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:00+0530 - sLogger - ERROR - error occured: 'year'
2023-08-24 10:23:00+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:00+0530 - sLogger - ERROR - error occured: 'year'
2023-08-24 10:23:00+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:00+0530 - sLogger - ERROR - error occured: 'year'
2023-08-24 10:23:00+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:00+0530 - sLogger - ERROR - error occured: 'value'
2023-08-24 10:23:00+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:00+0530 - sLogger - ERROR - error occured: 'value'
2023-08-24 10:23:00+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:00+0530 - sLogger - ERROR - error occured: 'value'
2023-08-24 10:23:00+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_standardise_utils.py,  function: find_data_block_location
2023-08-24 10:23:00+0530 - sLogger - ERROR - error occured inside inner try block: cannot unpack non-iterable NoneType object
2023-08-24 10:23:00+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:00+0530 - sLogger - ERROR - error occured: 'value'
2023-08-24 10:23:00+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:00+0530 - sLogger - ERROR - error occured: 'value'
2023-08-24 10:23:00+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:00+0530 - sLogger - ERROR - error occured: 'value'
2023-08-24 10:23:00+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:00+0530 - sLogger - ERROR - error occured: 'year'
2023-08-24 10:23:00+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:00+0530 - sLogger - ERROR - error occured: 'year'
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:01+0530 - sLogger - ERROR - error occured: 'year'
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:01+0530 - sLogger - ERROR - error occured: 'year'
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:01+0530 - sLogger - ERROR - error occured: 'year'
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:01+0530 - sLogger - ERROR - error occured: 'year'
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:01+0530 - sLogger - ERROR - error occured: 'year'
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:01+0530 - sLogger - ERROR - error occured: 'year'
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:01+0530 - sLogger - ERROR - error occured: 'year'
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:01+0530 - sLogger - ERROR - error occured: 'year'
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:01+0530 - sLogger - ERROR - error occured: 'year'
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:01+0530 - sLogger - ERROR - error occured: 'year'
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 10:23:01+0530 - sLogger - ERROR - error occured: 'year'
2023-08-24 10:23:01+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-24 10:23:01+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits']
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-24 10:23:01+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset']
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-24 10:23:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash asset', 61), ('cash and short term deposits', 35), ('Cash and short term deposits', 35), ('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('bank balances other than above', 39), ('cash and bank balances', 36), ('cash and short term deposits', 35), ('Cash and short term deposits', 35), ('other bank balances', 34), ('bank balances other than cash and cash equivalents', 32), ('cash and cash equivalents', 27), ('cash asset', 24)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = loan receivable , res_fuzz_match = [('cash and cash equivalents', 44), ('other bank balances', 36), ('cash and bank balances', 32), ('cash and short term deposits', 32), ('Cash and short term deposits', 32), ('bank balances other than cash and cash equivalents', 29), ('cash asset', 29), ('bank balances other than above', 26)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('cash asset', 67), ('other bank balances', 50), ('cash and short term deposits', 47), ('Cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 468763.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['11'], 'line_item_value': [468763.0]}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash asset', 61), ('cash and short term deposits', 35), ('Cash and short term deposits', 35), ('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('bank balances other than above', 39), ('cash and bank balances', 36), ('cash and short term deposits', 35), ('Cash and short term deposits', 35), ('other bank balances', 34), ('bank balances other than cash and cash equivalents', 32), ('cash and cash equivalents', 27), ('cash asset', 24)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = loan receivable , res_fuzz_match = [('cash and cash equivalents', 44), ('other bank balances', 36), ('cash and bank balances', 32), ('cash and short term deposits', 32), ('Cash and short term deposits', 32), ('bank balances other than cash and cash equivalents', 29), ('cash asset', 29), ('bank balances other than above', 26)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('cash asset', 67), ('other bank balances', 50), ('cash and short term deposits', 47), ('Cash and short term deposits', 47), ('bank balances other than above', 37), ('bank balances other than cash and cash equivalents', 36), ('cash and cash equivalents', 31), ('cash and bank balances', 19)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 483051.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['11'], 'line_item_value': [483051.0]}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-24 10:23:01+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-24 10:23:01+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit ', ' Vehicles ', ' Demonstrator units ', ' Training Vehicles']
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-24 10:23:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('inventories', 44)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = loan receivable , res_fuzz_match = [('inventories', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 587560.0, 'line_item_label': ['Inventories'], 'note_numbers': ['13'], 'line_item_value': [587560.0]}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('inventories', 44)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = loan receivable , res_fuzz_match = [('inventories', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('inventories', 22)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 703391.0, 'line_item_label': ['Inventories'], 'note_numbers': ['13'], 'line_item_value': [703391.0]}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 10:23:01+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-24 10:23:01+0530 - sLogger - DEBUG - list_target_keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables']
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-24 10:23:01+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance']
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-24 10:23:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [(' other current assets ', 81), (' other current financial assets ', 65), ('other assets ', 58), (' other financial assets ', 50), (' trade and other receivables', 34), (' prepayments ', 21)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [(' other financial assets ', 56), (' other current financial assets ', 51), (' trade and other receivables', 43), (' other current assets ', 33), ('other assets ', 23), (' prepayments ', 13)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = loan receivable , res_fuzz_match = [(' trade and other receivables', 55), (' other current assets ', 33), (' other current financial assets ', 32), ('other assets ', 27), (' other financial assets ', 27), (' prepayments ', 24)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets ', 100), (' other current assets ', 73), (' other financial assets ', 73), (' other current financial assets ', 58), (' trade and other receivables', 42), (' prepayments ', 12)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 6], 'score': 100, 'value': 2226987.0, 'line_item_label': ['Current assets', 'Trade and other receivables', 'Other assets'], 'note_numbers': [nan, '12', '14'], 'line_item_value': [0.0, 2212804.0, 14183.0]}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [(' other current assets ', 81), (' other current financial assets ', 65), ('other assets ', 58), (' other financial assets ', 50), (' trade and other receivables', 34), (' prepayments ', 21)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [(' other financial assets ', 56), (' other current financial assets ', 51), (' trade and other receivables', 43), (' other current assets ', 33), ('other assets ', 23), (' prepayments ', 13)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = loan receivable , res_fuzz_match = [(' trade and other receivables', 55), (' other current assets ', 33), (' other current financial assets ', 32), ('other assets ', 27), (' other financial assets ', 27), (' prepayments ', 24)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [('other assets ', 100), (' other current assets ', 73), (' other financial assets ', 73), (' other current financial assets ', 58), (' trade and other receivables', 42), (' prepayments ', 12)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 6], 'score': 100, 'value': 1248294.0, 'line_item_label': ['Current assets', 'Trade and other receivables', 'Other assets'], 'note_numbers': [nan, '12', '14'], 'line_item_value': [0.0, 1231917.0, 16377.0]}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2021 , res_fuzz_match = [(' charges paid in advance', 47), (' other receivables and prepayments ', 44), (' other prepayments ', 42), (' prepaid expenditure ', 39), ('prepaid expense ', 36), (' prepayments ', 33), (' in advance ', 33), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [('prepaid expense ', 40), (' prepaid expenditure ', 40), (' prepaid ', 40), (' prepaid ', 40), (' charges paid in advance', 40), (' other receivables and prepayments ', 20), (' in advance ', 20), (' prepayments ', 0), (' other prepayments ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' prepaid ', 43), (' prepaid ', 43), (' prepaid expenditure ', 40), (' other receivables and prepayments ', 40), (' charges paid in advance', 40), (' in advance ', 36), (' prepayments ', 33), ('prepaid expense ', 30), (' other prepayments ', 30)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [('prepaid expense ', 40), (' prepaid expenditure ', 40), (' prepaid ', 40), (' prepaid ', 40), (' charges paid in advance', 40), (' other receivables and prepayments ', 20), (' in advance ', 20), (' prepayments ', 0), (' other prepayments ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' other prepayments ', 36), (' other receivables and prepayments ', 36), (' prepaid expenditure ', 29), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 27), (' charges paid in advance', 18), (' prepayments ', 17), (' in advance ', 17)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [('prepaid expense ', 40), (' prepaid expenditure ', 40), (' prepaid ', 40), (' prepaid ', 40), (' charges paid in advance', 40), (' other receivables and prepayments ', 20), (' in advance ', 20), (' prepayments ', 0), (' other prepayments ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [(' other receivables and prepayments ', 58), (' prepaid ', 57), (' prepaid ', 57), (' other prepayments ', 52), (' prepayments ', 50), ('prepaid expense ', 42), (' prepaid expenditure ', 42), (' in advance ', 33), (' charges paid in advance', 25)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [('prepaid expense ', 40), (' prepaid expenditure ', 40), (' prepaid ', 40), (' prepaid ', 40), (' charges paid in advance', 40), (' other receivables and prepayments ', 20), (' in advance ', 20), (' prepayments ', 0), (' other prepayments ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2022 , res_fuzz_match = [(' charges paid in advance', 47), (' other receivables and prepayments ', 44), (' other prepayments ', 42), (' prepaid expenditure ', 39), ('prepaid expense ', 36), (' prepayments ', 33), (' in advance ', 33), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [('prepaid expense ', 40), (' prepaid expenditure ', 40), (' prepaid ', 40), (' prepaid ', 40), (' charges paid in advance', 40), (' other receivables and prepayments ', 20), (' in advance ', 20), (' prepayments ', 0), (' other prepayments ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' prepaid ', 43), (' prepaid ', 43), (' prepaid expenditure ', 40), (' other receivables and prepayments ', 40), (' charges paid in advance', 40), (' in advance ', 36), (' prepayments ', 33), ('prepaid expense ', 30), (' other prepayments ', 30)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [('prepaid expense ', 40), (' prepaid expenditure ', 40), (' prepaid ', 40), (' prepaid ', 40), (' charges paid in advance', 40), (' other receivables and prepayments ', 20), (' in advance ', 20), (' prepayments ', 0), (' other prepayments ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' other prepayments ', 36), (' other receivables and prepayments ', 36), (' prepaid expenditure ', 29), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 27), (' charges paid in advance', 18), (' prepayments ', 17), (' in advance ', 17)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [('prepaid expense ', 40), (' prepaid expenditure ', 40), (' prepaid ', 40), (' prepaid ', 40), (' charges paid in advance', 40), (' other receivables and prepayments ', 20), (' in advance ', 20), (' prepayments ', 0), (' other prepayments ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [(' other receivables and prepayments ', 58), (' prepaid ', 57), (' prepaid ', 57), (' other prepayments ', 52), (' prepayments ', 50), ('prepaid expense ', 42), (' prepaid expenditure ', 42), (' in advance ', 33), (' charges paid in advance', 25)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [('prepaid expense ', 40), (' prepaid expenditure ', 40), (' prepaid ', 40), (' prepaid ', 40), (' charges paid in advance', 40), (' other receivables and prepayments ', 20), (' in advance ', 20), (' prepayments ', 0), (' other prepayments ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2023 , res_fuzz_match = [(' charges paid in advance', 47), (' other receivables and prepayments ', 44), (' other prepayments ', 42), (' prepaid expenditure ', 39), ('prepaid expense ', 36), (' prepayments ', 33), (' in advance ', 33), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [('prepaid expense ', 40), (' prepaid expenditure ', 40), (' prepaid ', 40), (' prepaid ', 40), (' charges paid in advance', 40), (' other receivables and prepayments ', 20), (' in advance ', 20), (' prepayments ', 0), (' other prepayments ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2021 , res_fuzz_match = [(' charges paid in advance', 47), (' other receivables and prepayments ', 44), (' other prepayments ', 42), (' prepaid expenditure ', 39), ('prepaid expense ', 36), (' prepayments ', 33), (' in advance ', 33), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' in advance ', 50), (' other receivables and prepayments ', 47), (' prepaid expenditure ', 40), ('prepaid expense ', 37), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 33), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' prepaid ', 43), (' prepaid ', 43), (' prepaid expenditure ', 40), (' other receivables and prepayments ', 40), (' charges paid in advance', 40), (' in advance ', 36), (' prepayments ', 33), ('prepaid expense ', 30), (' other prepayments ', 30)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' in advance ', 50), (' other receivables and prepayments ', 47), (' prepaid expenditure ', 40), ('prepaid expense ', 37), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 33), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' other prepayments ', 36), (' other receivables and prepayments ', 36), (' prepaid expenditure ', 29), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 27), (' charges paid in advance', 18), (' prepayments ', 17), (' in advance ', 17)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' in advance ', 50), (' other receivables and prepayments ', 47), (' prepaid expenditure ', 40), ('prepaid expense ', 37), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 33), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [(' other receivables and prepayments ', 58), (' prepaid ', 57), (' prepaid ', 57), (' other prepayments ', 52), (' prepayments ', 50), ('prepaid expense ', 42), (' prepaid expenditure ', 42), (' in advance ', 33), (' charges paid in advance', 25)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' in advance ', 50), (' other receivables and prepayments ', 47), (' prepaid expenditure ', 40), ('prepaid expense ', 37), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 33), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2022 , res_fuzz_match = [(' charges paid in advance', 47), (' other receivables and prepayments ', 44), (' other prepayments ', 42), (' prepaid expenditure ', 39), ('prepaid expense ', 36), (' prepayments ', 33), (' in advance ', 33), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' in advance ', 50), (' other receivables and prepayments ', 47), (' prepaid expenditure ', 40), ('prepaid expense ', 37), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 33), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' prepaid ', 43), (' prepaid ', 43), (' prepaid expenditure ', 40), (' other receivables and prepayments ', 40), (' charges paid in advance', 40), (' in advance ', 36), (' prepayments ', 33), ('prepaid expense ', 30), (' other prepayments ', 30)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' in advance ', 50), (' other receivables and prepayments ', 47), (' prepaid expenditure ', 40), ('prepaid expense ', 37), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 33), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' other prepayments ', 36), (' other receivables and prepayments ', 36), (' prepaid expenditure ', 29), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 27), (' charges paid in advance', 18), (' prepayments ', 17), (' in advance ', 17)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' in advance ', 50), (' other receivables and prepayments ', 47), (' prepaid expenditure ', 40), ('prepaid expense ', 37), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 33), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [(' other receivables and prepayments ', 58), (' prepaid ', 57), (' prepaid ', 57), (' other prepayments ', 52), (' prepayments ', 50), ('prepaid expense ', 42), (' prepaid expenditure ', 42), (' in advance ', 33), (' charges paid in advance', 25)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' in advance ', 50), (' other receivables and prepayments ', 47), (' prepaid expenditure ', 40), ('prepaid expense ', 37), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 33), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2023 , res_fuzz_match = [(' charges paid in advance', 47), (' other receivables and prepayments ', 44), (' other prepayments ', 42), (' prepaid expenditure ', 39), ('prepaid expense ', 36), (' prepayments ', 33), (' in advance ', 33), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' in advance ', 50), (' other receivables and prepayments ', 47), (' prepaid expenditure ', 40), ('prepaid expense ', 37), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 33), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2021 , res_fuzz_match = [(' charges paid in advance', 47), (' other receivables and prepayments ', 44), (' other prepayments ', 42), (' prepaid expenditure ', 39), ('prepaid expense ', 36), (' prepayments ', 33), (' in advance ', 33), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('prepaid expense ', 20), (' prepaid expenditure ', 20), (' prepayments ', 20), (' prepaid ', 20), (' other prepayments ', 20), (' other receivables and prepayments ', 20), (' prepaid ', 20), (' in advance ', 20), (' charges paid in advance', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' prepaid ', 43), (' prepaid ', 43), (' prepaid expenditure ', 40), (' other receivables and prepayments ', 40), (' charges paid in advance', 40), (' in advance ', 36), (' prepayments ', 33), ('prepaid expense ', 30), (' other prepayments ', 30)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('prepaid expense ', 20), (' prepaid expenditure ', 20), (' prepayments ', 20), (' prepaid ', 20), (' other prepayments ', 20), (' other receivables and prepayments ', 20), (' prepaid ', 20), (' in advance ', 20), (' charges paid in advance', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' other prepayments ', 36), (' other receivables and prepayments ', 36), (' prepaid expenditure ', 29), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 27), (' charges paid in advance', 18), (' prepayments ', 17), (' in advance ', 17)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('prepaid expense ', 20), (' prepaid expenditure ', 20), (' prepayments ', 20), (' prepaid ', 20), (' other prepayments ', 20), (' other receivables and prepayments ', 20), (' prepaid ', 20), (' in advance ', 20), (' charges paid in advance', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [(' other receivables and prepayments ', 58), (' prepaid ', 57), (' prepaid ', 57), (' other prepayments ', 52), (' prepayments ', 50), ('prepaid expense ', 42), (' prepaid expenditure ', 42), (' in advance ', 33), (' charges paid in advance', 25)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('prepaid expense ', 20), (' prepaid expenditure ', 20), (' prepayments ', 20), (' prepaid ', 20), (' other prepayments ', 20), (' other receivables and prepayments ', 20), (' prepaid ', 20), (' in advance ', 20), (' charges paid in advance', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2022 , res_fuzz_match = [(' charges paid in advance', 47), (' other receivables and prepayments ', 44), (' other prepayments ', 42), (' prepaid expenditure ', 39), ('prepaid expense ', 36), (' prepayments ', 33), (' in advance ', 33), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('prepaid expense ', 20), (' prepaid expenditure ', 20), (' prepayments ', 20), (' prepaid ', 20), (' other prepayments ', 20), (' other receivables and prepayments ', 20), (' prepaid ', 20), (' in advance ', 20), (' charges paid in advance', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' prepaid ', 43), (' prepaid ', 43), (' prepaid expenditure ', 40), (' other receivables and prepayments ', 40), (' charges paid in advance', 40), (' in advance ', 36), (' prepayments ', 33), ('prepaid expense ', 30), (' other prepayments ', 30)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('prepaid expense ', 20), (' prepaid expenditure ', 20), (' prepayments ', 20), (' prepaid ', 20), (' other prepayments ', 20), (' other receivables and prepayments ', 20), (' prepaid ', 20), (' in advance ', 20), (' charges paid in advance', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' other prepayments ', 36), (' other receivables and prepayments ', 36), (' prepaid expenditure ', 29), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 27), (' charges paid in advance', 18), (' prepayments ', 17), (' in advance ', 17)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('prepaid expense ', 20), (' prepaid expenditure ', 20), (' prepayments ', 20), (' prepaid ', 20), (' other prepayments ', 20), (' other receivables and prepayments ', 20), (' prepaid ', 20), (' in advance ', 20), (' charges paid in advance', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [(' other receivables and prepayments ', 58), (' prepaid ', 57), (' prepaid ', 57), (' other prepayments ', 52), (' prepayments ', 50), ('prepaid expense ', 42), (' prepaid expenditure ', 42), (' in advance ', 33), (' charges paid in advance', 25)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('prepaid expense ', 20), (' prepaid expenditure ', 20), (' prepayments ', 20), (' prepaid ', 20), (' other prepayments ', 20), (' other receivables and prepayments ', 20), (' prepaid ', 20), (' in advance ', 20), (' charges paid in advance', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2023 , res_fuzz_match = [(' charges paid in advance', 47), (' other receivables and prepayments ', 44), (' other prepayments ', 42), (' prepaid expenditure ', 39), ('prepaid expense ', 36), (' prepayments ', 33), (' in advance ', 33), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('prepaid expense ', 20), (' prepaid expenditure ', 20), (' prepayments ', 20), (' prepaid ', 20), (' other prepayments ', 20), (' other receivables and prepayments ', 20), (' prepaid ', 20), (' in advance ', 20), (' charges paid in advance', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and plant and equipment, at cost nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' other receivables and prepayments ', 48), (' charges paid in advance', 47), (' prepaid expenditure ', 44), (' prepaid ', 43), (' prepaid ', 43)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and less: depreciation and amortisation nan nan nan nan , res_fuzz_match = [(' prepaid ', 57), (' prepaid ', 57), (' other receivables and prepayments ', 52), ('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' prepaid expenditure ', 44), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' prepaid expenditure ', 44), (' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and mining rights at cost nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' charges paid in advance', 47), (' prepaid expenditure ', 44), (' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and less: accumulated nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' other receivables and prepayments ', 48), (' prepaid expenditure ', 44), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' prepaid expenditure ', 44), (' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and deferred mining at cost nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' prepaid expenditure ', 44), (' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and less: accumulated amortisation nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' other receivables and prepayments ', 48), (' prepaid expenditure ', 44), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' prepaid expenditure ', 44), (' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and capital work in progress at cost nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' charges paid in advance', 47), (' prepaid expenditure ', 44), (' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and exploration and assets nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' other receivables and prepayments ', 48), (' prepaid expenditure ', 44), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total property, plant and equipment net book value nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' other receivables and prepayments ', 48), (' prepaid expenditure ', 44), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and nan plant and equipment mining rights capital work in progress exploration & evaluation assets , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' charges paid in advance', 47), (' prepaid expenditure ', 44), (' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and nan $000 $000 $000 $000 , res_fuzz_match = [(' charges paid in advance', 53), ('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' other receivables and prepayments ', 45), (' prepaid expenditure ', 44), (' prepaid ', 43), (' prepaid ', 43)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and carrying amount at 1 april 2021 6732948 613929 950738 1225000 , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' charges paid in advance', 47), (' prepaid expenditure ', 44), (' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and additions 234125 nan 376897 52906 , res_fuzz_match = [(' charges paid in advance', 53), ('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' prepaid expenditure ', 44), (' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and disposals / write downs (1,223) nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' prepaid expenditure ', 44), (' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and remeasurement (note 24) 796530 nan nan nan , res_fuzz_match = [(' other receivables and prepayments ', 52), ('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' prepaid expenditure ', 44), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and impairment charge (10,023) nan nan nan , res_fuzz_match = [(' charges paid in advance', 65), ('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' other receivables and prepayments ', 48), (' prepaid expenditure ', 44), (' prepaid ', 43), (' prepaid ', 43)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and depreciation expense (515,672) (25,874) nan nan , res_fuzz_match = [('prepaid expense ', 79), (' prepaid ', 57), (' prepaid ', 57), (' prepaid expenditure ', 56), (' other receivables and prepayments ', 52), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments carrying amount at 31 march 2022 7789141 588055 775179 1277906 , res_fuzz_match = [(' charges paid in advance', 47), (' prepaid ', 43), (' prepaid ', 43), (' other receivables and prepayments ', 40), ('prepaid expense ', 36), (' prepaid expenditure ', 33), (' prepayments ', 33), (' other prepayments ', 33), (' in advance ', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments additions 158611 nan 532955 nan , res_fuzz_match = [(' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), (' prepaid expenditure ', 39), (' other receivables and prepayments ', 39), ('prepaid expense ', 36), (' prepayments ', 33), (' other prepayments ', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments disposals / write downs (8,580) nan (9,427) nan , res_fuzz_match = [(' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), (' prepaid expenditure ', 39), (' other receivables and prepayments ', 39), ('prepaid expense ', 36), (' prepayments ', 33), (' other prepayments ', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments remeasurement (note 24) 32778 nan nan nan , res_fuzz_match = [(' in advance ', 50), ('prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' other prepayments ', 42), (' charges paid in advance', 41), (' prepaid expenditure ', 39), (' other receivables and prepayments ', 39), (' prepayments ', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments impairment charge (1,913) nan nan nan , res_fuzz_match = [(' charges paid in advance', 65), (' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' other prepayments ', 42), (' prepaid expenditure ', 39), (' other receivables and prepayments ', 39), ('prepaid expense ', 36), (' prepayments ', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments depreciation expense (555,368) (23,790) nan nan , res_fuzz_match = [('prepaid expense ', 79), (' prepaid ', 57), (' prepaid ', 57), (' prepaid expenditure ', 56), (' prepayments ', 50), (' in advance ', 50), (' other receivables and prepayments ', 48), (' other prepayments ', 42), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments transfer from right-of-use assets 94838 nan nan nan , res_fuzz_match = [(' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), (' prepaid expenditure ', 39), ('prepaid expense ', 36), (' other receivables and prepayments ', 35), (' prepayments ', 33), (' other prepayments ', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers 1a adjustments carrying amount at 31 march 2023 7775980 564265 1032233 1277907 , res_fuzz_match = [(' charges paid in advance', 47), (' other receivables and prepayments ', 40), (' prepaid expenditure ', 33), (' prepayments ', 33), (' other prepayments ', 33), (' in advance ', 33), ('prepaid expense ', 29), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and plant and equipment, at cost nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' other receivables and prepayments ', 48), (' charges paid in advance', 47), (' prepaid expenditure ', 44), (' prepaid ', 43), (' prepaid ', 43)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and less: depreciation and amortisation nan nan nan nan , res_fuzz_match = [(' prepaid ', 57), (' prepaid ', 57), (' other receivables and prepayments ', 52), ('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' prepaid expenditure ', 44), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' prepaid expenditure ', 44), (' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and mining rights at cost nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' charges paid in advance', 47), (' prepaid expenditure ', 44), (' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and less: accumulated nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' other receivables and prepayments ', 48), (' prepaid expenditure ', 44), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' prepaid expenditure ', 44), (' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and deferred mining at cost nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' prepaid expenditure ', 44), (' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and less: accumulated amortisation nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' other receivables and prepayments ', 48), (' prepaid expenditure ', 44), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' prepaid expenditure ', 44), (' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and capital work in progress at cost nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' charges paid in advance', 47), (' prepaid expenditure ', 44), (' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and exploration and assets nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' other receivables and prepayments ', 48), (' prepaid expenditure ', 44), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total property, plant and equipment net book value nan nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' other receivables and prepayments ', 48), (' prepaid expenditure ', 44), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and nan plant and equipment mining rights capital work in progress exploration & evaluation assets , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' charges paid in advance', 47), (' prepaid expenditure ', 44), (' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and nan $000 $000 $000 $000 , res_fuzz_match = [(' charges paid in advance', 53), ('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' other receivables and prepayments ', 45), (' prepaid expenditure ', 44), (' prepaid ', 43), (' prepaid ', 43)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and carrying amount at 1 april 2021 6732948 613929 950738 1225000 , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' charges paid in advance', 47), (' prepaid expenditure ', 44), (' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and additions 234125 nan 376897 52906 , res_fuzz_match = [(' charges paid in advance', 53), ('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' prepaid expenditure ', 44), (' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and disposals / write downs (1,223) nan nan nan , res_fuzz_match = [('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' prepaid expenditure ', 44), (' prepaid ', 43), (' other receivables and prepayments ', 43), (' prepaid ', 43), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and remeasurement (note 24) 796530 nan nan nan , res_fuzz_match = [(' other receivables and prepayments ', 52), ('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' prepaid expenditure ', 44), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and impairment charge (10,023) nan nan nan , res_fuzz_match = [(' charges paid in advance', 65), ('prepaid expense ', 50), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' other receivables and prepayments ', 48), (' prepaid expenditure ', 44), (' prepaid ', 43), (' prepaid ', 43)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and depreciation expense (515,672) (25,874) nan nan , res_fuzz_match = [('prepaid expense ', 79), (' prepaid ', 57), (' prepaid ', 57), (' prepaid expenditure ', 56), (' other receivables and prepayments ', 52), (' prepayments ', 50), (' other prepayments ', 50), (' in advance ', 50), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments carrying amount at 31 march 2022 7789141 588055 775179 1277906 , res_fuzz_match = [(' charges paid in advance', 47), (' prepaid ', 43), (' prepaid ', 43), (' other receivables and prepayments ', 40), ('prepaid expense ', 36), (' prepaid expenditure ', 33), (' prepayments ', 33), (' other prepayments ', 33), (' in advance ', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments additions 158611 nan 532955 nan , res_fuzz_match = [(' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), (' prepaid expenditure ', 39), (' other receivables and prepayments ', 39), ('prepaid expense ', 36), (' prepayments ', 33), (' other prepayments ', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments disposals / write downs (8,580) nan (9,427) nan , res_fuzz_match = [(' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), (' prepaid expenditure ', 39), (' other receivables and prepayments ', 39), ('prepaid expense ', 36), (' prepayments ', 33), (' other prepayments ', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments remeasurement (note 24) 32778 nan nan nan , res_fuzz_match = [(' in advance ', 50), ('prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' other prepayments ', 42), (' charges paid in advance', 41), (' prepaid expenditure ', 39), (' other receivables and prepayments ', 39), (' prepayments ', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments impairment charge (1,913) nan nan nan , res_fuzz_match = [(' charges paid in advance', 65), (' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' other prepayments ', 42), (' prepaid expenditure ', 39), (' other receivables and prepayments ', 39), ('prepaid expense ', 36), (' prepayments ', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments depreciation expense (555,368) (23,790) nan nan , res_fuzz_match = [('prepaid expense ', 79), (' prepaid ', 57), (' prepaid ', 57), (' prepaid expenditure ', 56), (' prepayments ', 50), (' in advance ', 50), (' other receivables and prepayments ', 48), (' other prepayments ', 42), (' charges paid in advance', 41)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments transfer from right-of-use assets 94838 nan nan nan , res_fuzz_match = [(' in advance ', 50), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), (' prepaid expenditure ', 39), ('prepaid expense ', 36), (' other receivables and prepayments ', 35), (' prepayments ', 33), (' other prepayments ', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers 1a adjustments carrying amount at 31 march 2023 7775980 564265 1032233 1277907 , res_fuzz_match = [(' charges paid in advance', 47), (' other receivables and prepayments ', 40), (' prepaid expenditure ', 33), (' prepayments ', 33), (' other prepayments ', 33), (' in advance ', 33), ('prepaid expense ', 29), (' prepaid ', 29), (' prepaid ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('prepaid expense ', 0), (' prepaid expenditure ', 0), (' prepayments ', 0), (' prepaid ', 0), (' other prepayments ', 0), (' other receivables and prepayments ', 0), (' prepaid ', 0), (' in advance ', 0), (' charges paid in advance', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 10:23:01+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-24 10:23:01+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables']
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-24 10:23:01+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-24 10:23:01+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets ', 81), (' other assets ', 58), (' financial assets ', 54), (' other financial assets ', 50), (' biological assets ', 48), (' trade and other receivables', 34), (' income tax receivable from related parties ', 30), (' deferred operating expenditure ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [(' other financial assets ', 56), (' financial assets ', 49), (' trade and other receivables', 43), (' deferred operating expenditure ', 40), (' income tax receivable from related parties ', 39), ('other current assets ', 33), (' other assets ', 23), (' biological assets ', 22)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = loan receivable , res_fuzz_match = [(' trade and other receivables', 55), (' income tax receivable from related parties ', 41), ('other current assets ', 33), (' financial assets ', 33), (' other assets ', 27), (' other financial assets ', 27), (' biological assets ', 26), (' deferred operating expenditure ', 25)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' other assets ', 100), ('other current assets ', 73), (' other financial assets ', 73), (' biological assets ', 61), (' financial assets ', 50), (' trade and other receivables', 42), (' deferred operating expenditure ', 38), (' income tax receivable from related parties ', 23)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 6], 'score': 100, 'value': 2226987.0, 'line_item_label': ['Current assets', 'Trade and other receivables', 'Other assets'], 'note_numbers': [nan, '12', '14'], 'line_item_value': [0.0, 2212804.0, 14183.0]}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets ', 81), (' other assets ', 58), (' financial assets ', 54), (' other financial assets ', 50), (' biological assets ', 48), (' trade and other receivables', 34), (' income tax receivable from related parties ', 30), (' deferred operating expenditure ', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [(' other financial assets ', 56), (' financial assets ', 49), (' trade and other receivables', 43), (' deferred operating expenditure ', 40), (' income tax receivable from related parties ', 39), ('other current assets ', 33), (' other assets ', 23), (' biological assets ', 22)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = loan receivable , res_fuzz_match = [(' trade and other receivables', 55), (' income tax receivable from related parties ', 41), ('other current assets ', 33), (' financial assets ', 33), (' other assets ', 27), (' other financial assets ', 27), (' biological assets ', 26), (' deferred operating expenditure ', 25)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' other assets ', 100), ('other current assets ', 73), (' other financial assets ', 73), (' biological assets ', 61), (' financial assets ', 50), (' trade and other receivables', 42), (' deferred operating expenditure ', 38), (' income tax receivable from related parties ', 23)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 6], 'score': 100, 'value': 1248294.0, 'line_item_label': ['Current assets', 'Trade and other receivables', 'Other assets'], 'note_numbers': [nan, '12', '14'], 'line_item_value': [0.0, 1231917.0, 16377.0]}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2021 , res_fuzz_match = [(' other receivables - related party', 48), (' amount receivable from controlling entity', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' related party disclosures', 43), (' income tax receivable from related parties', 43), (' derivative contracts - fair value', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' electricity derivatives at fair value', 42), (' interest receivable', 41), (' other', 40), (' other debtors and prepayments', 40), ('foreign exchange derivatives at fair value', 39), (' related party receivable', 39), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [(' accrued interest', 40), (' related party disclosures', 40), (' long service leave receivable', 40), (' rental bond', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 20), (' electricity derivatives at fair value', 20), (' income tax receivable from related parties', 20), (' derivative contracts - fair value', 20), (' other receivables - related party', 20), (' other deposits receivable - related party', 20), (' deposits', 20), (' amount receivable from controlling entity', 20), (' interest receivable', 20), (' bank guarantee', 20), (' related party receivable', 20), (' current investments', 20), (' condensate', 20), (' foreign exchange forward contracts', 20), (' accrued rebates', 20), (' forward exchange contracts', 20), (' other debtors and prepayments', 20), ('other assets', 0), (' other', 0), (' share of jv prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' other debtors and prepayments', 50), (' deposits', 43), (' condensate', 43), ('other assets', 40), ('foreign exchange derivatives at fair value', 40), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' derivative contracts - fair value', 40), (' long service leave receivable', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' amount receivable from controlling entity', 40), (' bank guarantee', 40), (' rental bond', 40), (' related party receivable', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' forward exchange contracts', 40), (' lng', 33), (' accrued interest', 30), (' interest receivable', 30), (' share of jv prepayments', 30), (' accrued rebates', 30)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [(' accrued interest', 40), (' related party disclosures', 40), (' long service leave receivable', 40), (' rental bond', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 20), (' electricity derivatives at fair value', 20), (' income tax receivable from related parties', 20), (' derivative contracts - fair value', 20), (' other receivables - related party', 20), (' other deposits receivable - related party', 20), (' deposits', 20), (' amount receivable from controlling entity', 20), (' interest receivable', 20), (' bank guarantee', 20), (' related party receivable', 20), (' current investments', 20), (' condensate', 20), (' foreign exchange forward contracts', 20), (' accrued rebates', 20), (' forward exchange contracts', 20), (' other debtors and prepayments', 20), ('other assets', 0), (' other', 0), (' share of jv prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' other deposits receivable - related party', 64), (' deposits', 57), (' related party disclosures', 55), ('other assets', 45), (' condensate', 43), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' long service leave receivable', 36), (' other receivables - related party', 36), (' amount receivable from controlling entity', 36), (' rental bond', 36), (' current investments', 36), (' other debtors and prepayments', 36), (' lng', 33), (' accrued interest', 27), (' income tax receivable from related parties', 27), (' derivative contracts - fair value', 27), (' interest receivable', 27), (' bank guarantee', 27), (' related party receivable', 27), (' share of jv prepayments', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' accrued rebates', 9)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [(' accrued interest', 40), (' related party disclosures', 40), (' long service leave receivable', 40), (' rental bond', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 20), (' electricity derivatives at fair value', 20), (' income tax receivable from related parties', 20), (' derivative contracts - fair value', 20), (' other receivables - related party', 20), (' other deposits receivable - related party', 20), (' deposits', 20), (' amount receivable from controlling entity', 20), (' interest receivable', 20), (' bank guarantee', 20), (' related party receivable', 20), (' current investments', 20), (' condensate', 20), (' foreign exchange forward contracts', 20), (' accrued rebates', 20), (' forward exchange contracts', 20), (' other debtors and prepayments', 20), ('other assets', 0), (' other', 0), (' share of jv prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [(' other receivables - related party', 58), (' other deposits receivable - related party', 58), (' amount receivable from controlling entity', 58), (' deposits', 57), (' condensate', 57), ('foreign exchange derivatives at fair value', 50), (' electricity derivatives at fair value', 50), (' income tax receivable from related parties', 50), (' long service leave receivable', 50), (' interest receivable', 50), (' related party receivable', 50), (' other debtors and prepayments', 50), (' share of jv prepayments', 43), (' derivative contracts - fair value', 42), (' foreign exchange forward contracts', 42), (' forward exchange contracts', 42), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued interest', 33), (' bank guarantee', 33), (' lng', 33), (' accrued rebates', 27), (' related party disclosures', 25), (' current investments', 25)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [(' accrued interest', 40), (' related party disclosures', 40), (' long service leave receivable', 40), (' rental bond', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 20), (' electricity derivatives at fair value', 20), (' income tax receivable from related parties', 20), (' derivative contracts - fair value', 20), (' other receivables - related party', 20), (' other deposits receivable - related party', 20), (' deposits', 20), (' amount receivable from controlling entity', 20), (' interest receivable', 20), (' bank guarantee', 20), (' related party receivable', 20), (' current investments', 20), (' condensate', 20), (' foreign exchange forward contracts', 20), (' accrued rebates', 20), (' forward exchange contracts', 20), (' other debtors and prepayments', 20), ('other assets', 0), (' other', 0), (' share of jv prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2022 , res_fuzz_match = [(' other receivables - related party', 48), (' amount receivable from controlling entity', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' related party disclosures', 43), (' income tax receivable from related parties', 43), (' derivative contracts - fair value', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' electricity derivatives at fair value', 42), (' interest receivable', 41), (' other', 40), (' other debtors and prepayments', 40), ('foreign exchange derivatives at fair value', 39), (' related party receivable', 39), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [(' accrued interest', 40), (' related party disclosures', 40), (' long service leave receivable', 40), (' rental bond', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 20), (' electricity derivatives at fair value', 20), (' income tax receivable from related parties', 20), (' derivative contracts - fair value', 20), (' other receivables - related party', 20), (' other deposits receivable - related party', 20), (' deposits', 20), (' amount receivable from controlling entity', 20), (' interest receivable', 20), (' bank guarantee', 20), (' related party receivable', 20), (' current investments', 20), (' condensate', 20), (' foreign exchange forward contracts', 20), (' accrued rebates', 20), (' forward exchange contracts', 20), (' other debtors and prepayments', 20), ('other assets', 0), (' other', 0), (' share of jv prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' other debtors and prepayments', 50), (' deposits', 43), (' condensate', 43), ('other assets', 40), ('foreign exchange derivatives at fair value', 40), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' derivative contracts - fair value', 40), (' long service leave receivable', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' amount receivable from controlling entity', 40), (' bank guarantee', 40), (' rental bond', 40), (' related party receivable', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' forward exchange contracts', 40), (' lng', 33), (' accrued interest', 30), (' interest receivable', 30), (' share of jv prepayments', 30), (' accrued rebates', 30)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [(' accrued interest', 40), (' related party disclosures', 40), (' long service leave receivable', 40), (' rental bond', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 20), (' electricity derivatives at fair value', 20), (' income tax receivable from related parties', 20), (' derivative contracts - fair value', 20), (' other receivables - related party', 20), (' other deposits receivable - related party', 20), (' deposits', 20), (' amount receivable from controlling entity', 20), (' interest receivable', 20), (' bank guarantee', 20), (' related party receivable', 20), (' current investments', 20), (' condensate', 20), (' foreign exchange forward contracts', 20), (' accrued rebates', 20), (' forward exchange contracts', 20), (' other debtors and prepayments', 20), ('other assets', 0), (' other', 0), (' share of jv prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' other deposits receivable - related party', 64), (' deposits', 57), (' related party disclosures', 55), ('other assets', 45), (' condensate', 43), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' long service leave receivable', 36), (' other receivables - related party', 36), (' amount receivable from controlling entity', 36), (' rental bond', 36), (' current investments', 36), (' other debtors and prepayments', 36), (' lng', 33), (' accrued interest', 27), (' income tax receivable from related parties', 27), (' derivative contracts - fair value', 27), (' interest receivable', 27), (' bank guarantee', 27), (' related party receivable', 27), (' share of jv prepayments', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' accrued rebates', 9)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [(' accrued interest', 40), (' related party disclosures', 40), (' long service leave receivable', 40), (' rental bond', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 20), (' electricity derivatives at fair value', 20), (' income tax receivable from related parties', 20), (' derivative contracts - fair value', 20), (' other receivables - related party', 20), (' other deposits receivable - related party', 20), (' deposits', 20), (' amount receivable from controlling entity', 20), (' interest receivable', 20), (' bank guarantee', 20), (' related party receivable', 20), (' current investments', 20), (' condensate', 20), (' foreign exchange forward contracts', 20), (' accrued rebates', 20), (' forward exchange contracts', 20), (' other debtors and prepayments', 20), ('other assets', 0), (' other', 0), (' share of jv prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [(' other receivables - related party', 58), (' other deposits receivable - related party', 58), (' amount receivable from controlling entity', 58), (' deposits', 57), (' condensate', 57), ('foreign exchange derivatives at fair value', 50), (' electricity derivatives at fair value', 50), (' income tax receivable from related parties', 50), (' long service leave receivable', 50), (' interest receivable', 50), (' related party receivable', 50), (' other debtors and prepayments', 50), (' share of jv prepayments', 43), (' derivative contracts - fair value', 42), (' foreign exchange forward contracts', 42), (' forward exchange contracts', 42), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued interest', 33), (' bank guarantee', 33), (' lng', 33), (' accrued rebates', 27), (' related party disclosures', 25), (' current investments', 25)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [(' accrued interest', 40), (' related party disclosures', 40), (' long service leave receivable', 40), (' rental bond', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 20), (' electricity derivatives at fair value', 20), (' income tax receivable from related parties', 20), (' derivative contracts - fair value', 20), (' other receivables - related party', 20), (' other deposits receivable - related party', 20), (' deposits', 20), (' amount receivable from controlling entity', 20), (' interest receivable', 20), (' bank guarantee', 20), (' related party receivable', 20), (' current investments', 20), (' condensate', 20), (' foreign exchange forward contracts', 20), (' accrued rebates', 20), (' forward exchange contracts', 20), (' other debtors and prepayments', 20), ('other assets', 0), (' other', 0), (' share of jv prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2023 , res_fuzz_match = [(' other receivables - related party', 48), (' amount receivable from controlling entity', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' related party disclosures', 43), (' income tax receivable from related parties', 43), (' derivative contracts - fair value', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' electricity derivatives at fair value', 42), (' interest receivable', 41), (' other', 40), (' other debtors and prepayments', 40), ('foreign exchange derivatives at fair value', 39), (' related party receivable', 39), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [(' accrued interest', 40), (' related party disclosures', 40), (' long service leave receivable', 40), (' rental bond', 40), (' lng', 33), ('foreign exchange derivatives at fair value', 20), (' electricity derivatives at fair value', 20), (' income tax receivable from related parties', 20), (' derivative contracts - fair value', 20), (' other receivables - related party', 20), (' other deposits receivable - related party', 20), (' deposits', 20), (' amount receivable from controlling entity', 20), (' interest receivable', 20), (' bank guarantee', 20), (' related party receivable', 20), (' current investments', 20), (' condensate', 20), (' foreign exchange forward contracts', 20), (' accrued rebates', 20), (' forward exchange contracts', 20), (' other debtors and prepayments', 20), ('other assets', 0), (' other', 0), (' share of jv prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2021 , res_fuzz_match = [(' other receivables - related party', 48), (' amount receivable from controlling entity', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' related party disclosures', 43), (' income tax receivable from related parties', 43), (' derivative contracts - fair value', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' electricity derivatives at fair value', 42), (' interest receivable', 41), (' other', 40), (' other debtors and prepayments', 40), ('foreign exchange derivatives at fair value', 39), (' related party receivable', 39), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' lng', 67), (' related party receivable', 53), (' other debtors and prepayments', 53), ('foreign exchange derivatives at fair value', 47), (' related party disclosures', 47), (' bank guarantee', 46), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' electricity derivatives at fair value', 40), (' income tax receivable from related parties', 40), (' derivative contracts - fair value', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' foreign exchange forward contracts', 40), ('other assets', 36), (' interest receivable', 36), (' current investments', 36), (' long service leave receivable', 33), (' amount receivable from controlling entity', 33), (' share of jv prepayments', 33), (' forward exchange contracts', 33), (' accrued interest', 29), (' accrued rebates', 27), (' other', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' other debtors and prepayments', 50), (' deposits', 43), (' condensate', 43), ('other assets', 40), ('foreign exchange derivatives at fair value', 40), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' derivative contracts - fair value', 40), (' long service leave receivable', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' amount receivable from controlling entity', 40), (' bank guarantee', 40), (' rental bond', 40), (' related party receivable', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' forward exchange contracts', 40), (' lng', 33), (' accrued interest', 30), (' interest receivable', 30), (' share of jv prepayments', 30), (' accrued rebates', 30)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' lng', 67), (' related party receivable', 53), (' other debtors and prepayments', 53), ('foreign exchange derivatives at fair value', 47), (' related party disclosures', 47), (' bank guarantee', 46), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' electricity derivatives at fair value', 40), (' income tax receivable from related parties', 40), (' derivative contracts - fair value', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' foreign exchange forward contracts', 40), ('other assets', 36), (' interest receivable', 36), (' current investments', 36), (' long service leave receivable', 33), (' amount receivable from controlling entity', 33), (' share of jv prepayments', 33), (' forward exchange contracts', 33), (' accrued interest', 29), (' accrued rebates', 27), (' other', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' other deposits receivable - related party', 64), (' deposits', 57), (' related party disclosures', 55), ('other assets', 45), (' condensate', 43), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' long service leave receivable', 36), (' other receivables - related party', 36), (' amount receivable from controlling entity', 36), (' rental bond', 36), (' current investments', 36), (' other debtors and prepayments', 36), (' lng', 33), (' accrued interest', 27), (' income tax receivable from related parties', 27), (' derivative contracts - fair value', 27), (' interest receivable', 27), (' bank guarantee', 27), (' related party receivable', 27), (' share of jv prepayments', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' accrued rebates', 9)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' lng', 67), (' related party receivable', 53), (' other debtors and prepayments', 53), ('foreign exchange derivatives at fair value', 47), (' related party disclosures', 47), (' bank guarantee', 46), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' electricity derivatives at fair value', 40), (' income tax receivable from related parties', 40), (' derivative contracts - fair value', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' foreign exchange forward contracts', 40), ('other assets', 36), (' interest receivable', 36), (' current investments', 36), (' long service leave receivable', 33), (' amount receivable from controlling entity', 33), (' share of jv prepayments', 33), (' forward exchange contracts', 33), (' accrued interest', 29), (' accrued rebates', 27), (' other', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [(' other receivables - related party', 58), (' other deposits receivable - related party', 58), (' amount receivable from controlling entity', 58), (' deposits', 57), (' condensate', 57), ('foreign exchange derivatives at fair value', 50), (' electricity derivatives at fair value', 50), (' income tax receivable from related parties', 50), (' long service leave receivable', 50), (' interest receivable', 50), (' related party receivable', 50), (' other debtors and prepayments', 50), (' share of jv prepayments', 43), (' derivative contracts - fair value', 42), (' foreign exchange forward contracts', 42), (' forward exchange contracts', 42), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued interest', 33), (' bank guarantee', 33), (' lng', 33), (' accrued rebates', 27), (' related party disclosures', 25), (' current investments', 25)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' lng', 67), (' related party receivable', 53), (' other debtors and prepayments', 53), ('foreign exchange derivatives at fair value', 47), (' related party disclosures', 47), (' bank guarantee', 46), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' electricity derivatives at fair value', 40), (' income tax receivable from related parties', 40), (' derivative contracts - fair value', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' foreign exchange forward contracts', 40), ('other assets', 36), (' interest receivable', 36), (' current investments', 36), (' long service leave receivable', 33), (' amount receivable from controlling entity', 33), (' share of jv prepayments', 33), (' forward exchange contracts', 33), (' accrued interest', 29), (' accrued rebates', 27), (' other', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2022 , res_fuzz_match = [(' other receivables - related party', 48), (' amount receivable from controlling entity', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' related party disclosures', 43), (' income tax receivable from related parties', 43), (' derivative contracts - fair value', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' electricity derivatives at fair value', 42), (' interest receivable', 41), (' other', 40), (' other debtors and prepayments', 40), ('foreign exchange derivatives at fair value', 39), (' related party receivable', 39), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' lng', 67), (' related party receivable', 53), (' other debtors and prepayments', 53), ('foreign exchange derivatives at fair value', 47), (' related party disclosures', 47), (' bank guarantee', 46), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' electricity derivatives at fair value', 40), (' income tax receivable from related parties', 40), (' derivative contracts - fair value', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' foreign exchange forward contracts', 40), ('other assets', 36), (' interest receivable', 36), (' current investments', 36), (' long service leave receivable', 33), (' amount receivable from controlling entity', 33), (' share of jv prepayments', 33), (' forward exchange contracts', 33), (' accrued interest', 29), (' accrued rebates', 27), (' other', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' other debtors and prepayments', 50), (' deposits', 43), (' condensate', 43), ('other assets', 40), ('foreign exchange derivatives at fair value', 40), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' derivative contracts - fair value', 40), (' long service leave receivable', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' amount receivable from controlling entity', 40), (' bank guarantee', 40), (' rental bond', 40), (' related party receivable', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' forward exchange contracts', 40), (' lng', 33), (' accrued interest', 30), (' interest receivable', 30), (' share of jv prepayments', 30), (' accrued rebates', 30)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' lng', 67), (' related party receivable', 53), (' other debtors and prepayments', 53), ('foreign exchange derivatives at fair value', 47), (' related party disclosures', 47), (' bank guarantee', 46), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' electricity derivatives at fair value', 40), (' income tax receivable from related parties', 40), (' derivative contracts - fair value', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' foreign exchange forward contracts', 40), ('other assets', 36), (' interest receivable', 36), (' current investments', 36), (' long service leave receivable', 33), (' amount receivable from controlling entity', 33), (' share of jv prepayments', 33), (' forward exchange contracts', 33), (' accrued interest', 29), (' accrued rebates', 27), (' other', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' other deposits receivable - related party', 64), (' deposits', 57), (' related party disclosures', 55), ('other assets', 45), (' condensate', 43), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' long service leave receivable', 36), (' other receivables - related party', 36), (' amount receivable from controlling entity', 36), (' rental bond', 36), (' current investments', 36), (' other debtors and prepayments', 36), (' lng', 33), (' accrued interest', 27), (' income tax receivable from related parties', 27), (' derivative contracts - fair value', 27), (' interest receivable', 27), (' bank guarantee', 27), (' related party receivable', 27), (' share of jv prepayments', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' accrued rebates', 9)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' lng', 67), (' related party receivable', 53), (' other debtors and prepayments', 53), ('foreign exchange derivatives at fair value', 47), (' related party disclosures', 47), (' bank guarantee', 46), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' electricity derivatives at fair value', 40), (' income tax receivable from related parties', 40), (' derivative contracts - fair value', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' foreign exchange forward contracts', 40), ('other assets', 36), (' interest receivable', 36), (' current investments', 36), (' long service leave receivable', 33), (' amount receivable from controlling entity', 33), (' share of jv prepayments', 33), (' forward exchange contracts', 33), (' accrued interest', 29), (' accrued rebates', 27), (' other', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [(' other receivables - related party', 58), (' other deposits receivable - related party', 58), (' amount receivable from controlling entity', 58), (' deposits', 57), (' condensate', 57), ('foreign exchange derivatives at fair value', 50), (' electricity derivatives at fair value', 50), (' income tax receivable from related parties', 50), (' long service leave receivable', 50), (' interest receivable', 50), (' related party receivable', 50), (' other debtors and prepayments', 50), (' share of jv prepayments', 43), (' derivative contracts - fair value', 42), (' foreign exchange forward contracts', 42), (' forward exchange contracts', 42), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued interest', 33), (' bank guarantee', 33), (' lng', 33), (' accrued rebates', 27), (' related party disclosures', 25), (' current investments', 25)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' lng', 67), (' related party receivable', 53), (' other debtors and prepayments', 53), ('foreign exchange derivatives at fair value', 47), (' related party disclosures', 47), (' bank guarantee', 46), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' electricity derivatives at fair value', 40), (' income tax receivable from related parties', 40), (' derivative contracts - fair value', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' foreign exchange forward contracts', 40), ('other assets', 36), (' interest receivable', 36), (' current investments', 36), (' long service leave receivable', 33), (' amount receivable from controlling entity', 33), (' share of jv prepayments', 33), (' forward exchange contracts', 33), (' accrued interest', 29), (' accrued rebates', 27), (' other', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2023 , res_fuzz_match = [(' other receivables - related party', 48), (' amount receivable from controlling entity', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' related party disclosures', 43), (' income tax receivable from related parties', 43), (' derivative contracts - fair value', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' electricity derivatives at fair value', 42), (' interest receivable', 41), (' other', 40), (' other debtors and prepayments', 40), ('foreign exchange derivatives at fair value', 39), (' related party receivable', 39), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' lng', 67), (' related party receivable', 53), (' other debtors and prepayments', 53), ('foreign exchange derivatives at fair value', 47), (' related party disclosures', 47), (' bank guarantee', 46), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' electricity derivatives at fair value', 40), (' income tax receivable from related parties', 40), (' derivative contracts - fair value', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' foreign exchange forward contracts', 40), ('other assets', 36), (' interest receivable', 36), (' current investments', 36), (' long service leave receivable', 33), (' amount receivable from controlling entity', 33), (' share of jv prepayments', 33), (' forward exchange contracts', 33), (' accrued interest', 29), (' accrued rebates', 27), (' other', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2021 , res_fuzz_match = [(' other receivables - related party', 48), (' amount receivable from controlling entity', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' related party disclosures', 43), (' income tax receivable from related parties', 43), (' derivative contracts - fair value', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' electricity derivatives at fair value', 42), (' interest receivable', 41), (' other', 40), (' other debtors and prepayments', 40), ('foreign exchange derivatives at fair value', 39), (' related party receivable', 39), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' derivative contracts - fair value', 60), (' amount receivable from controlling entity', 60), (' rental bond', 60), (' foreign exchange forward contracts', 60), (' forward exchange contracts', 60), (' other debtors and prepayments', 60), (' other', 44), ('foreign exchange derivatives at fair value', 40), (' electricity derivatives at fair value', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' deposits', 40), (' related party receivable', 40), (' lng', 33), ('other assets', 20), (' accrued interest', 20), (' long service leave receivable', 20), (' interest receivable', 20), (' bank guarantee', 20), (' share of jv prepayments', 20), (' current investments', 20), (' condensate', 20), (' accrued rebates', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' other debtors and prepayments', 50), (' deposits', 43), (' condensate', 43), ('other assets', 40), ('foreign exchange derivatives at fair value', 40), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' derivative contracts - fair value', 40), (' long service leave receivable', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' amount receivable from controlling entity', 40), (' bank guarantee', 40), (' rental bond', 40), (' related party receivable', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' forward exchange contracts', 40), (' lng', 33), (' accrued interest', 30), (' interest receivable', 30), (' share of jv prepayments', 30), (' accrued rebates', 30)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' derivative contracts - fair value', 60), (' amount receivable from controlling entity', 60), (' rental bond', 60), (' foreign exchange forward contracts', 60), (' forward exchange contracts', 60), (' other debtors and prepayments', 60), (' other', 44), ('foreign exchange derivatives at fair value', 40), (' electricity derivatives at fair value', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' deposits', 40), (' related party receivable', 40), (' lng', 33), ('other assets', 20), (' accrued interest', 20), (' long service leave receivable', 20), (' interest receivable', 20), (' bank guarantee', 20), (' share of jv prepayments', 20), (' current investments', 20), (' condensate', 20), (' accrued rebates', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' other deposits receivable - related party', 64), (' deposits', 57), (' related party disclosures', 55), ('other assets', 45), (' condensate', 43), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' long service leave receivable', 36), (' other receivables - related party', 36), (' amount receivable from controlling entity', 36), (' rental bond', 36), (' current investments', 36), (' other debtors and prepayments', 36), (' lng', 33), (' accrued interest', 27), (' income tax receivable from related parties', 27), (' derivative contracts - fair value', 27), (' interest receivable', 27), (' bank guarantee', 27), (' related party receivable', 27), (' share of jv prepayments', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' accrued rebates', 9)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' derivative contracts - fair value', 60), (' amount receivable from controlling entity', 60), (' rental bond', 60), (' foreign exchange forward contracts', 60), (' forward exchange contracts', 60), (' other debtors and prepayments', 60), (' other', 44), ('foreign exchange derivatives at fair value', 40), (' electricity derivatives at fair value', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' deposits', 40), (' related party receivable', 40), (' lng', 33), ('other assets', 20), (' accrued interest', 20), (' long service leave receivable', 20), (' interest receivable', 20), (' bank guarantee', 20), (' share of jv prepayments', 20), (' current investments', 20), (' condensate', 20), (' accrued rebates', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [(' other receivables - related party', 58), (' other deposits receivable - related party', 58), (' amount receivable from controlling entity', 58), (' deposits', 57), (' condensate', 57), ('foreign exchange derivatives at fair value', 50), (' electricity derivatives at fair value', 50), (' income tax receivable from related parties', 50), (' long service leave receivable', 50), (' interest receivable', 50), (' related party receivable', 50), (' other debtors and prepayments', 50), (' share of jv prepayments', 43), (' derivative contracts - fair value', 42), (' foreign exchange forward contracts', 42), (' forward exchange contracts', 42), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued interest', 33), (' bank guarantee', 33), (' lng', 33), (' accrued rebates', 27), (' related party disclosures', 25), (' current investments', 25)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' derivative contracts - fair value', 60), (' amount receivable from controlling entity', 60), (' rental bond', 60), (' foreign exchange forward contracts', 60), (' forward exchange contracts', 60), (' other debtors and prepayments', 60), (' other', 44), ('foreign exchange derivatives at fair value', 40), (' electricity derivatives at fair value', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' deposits', 40), (' related party receivable', 40), (' lng', 33), ('other assets', 20), (' accrued interest', 20), (' long service leave receivable', 20), (' interest receivable', 20), (' bank guarantee', 20), (' share of jv prepayments', 20), (' current investments', 20), (' condensate', 20), (' accrued rebates', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2022 , res_fuzz_match = [(' other receivables - related party', 48), (' amount receivable from controlling entity', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' related party disclosures', 43), (' income tax receivable from related parties', 43), (' derivative contracts - fair value', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' electricity derivatives at fair value', 42), (' interest receivable', 41), (' other', 40), (' other debtors and prepayments', 40), ('foreign exchange derivatives at fair value', 39), (' related party receivable', 39), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' derivative contracts - fair value', 60), (' amount receivable from controlling entity', 60), (' rental bond', 60), (' foreign exchange forward contracts', 60), (' forward exchange contracts', 60), (' other debtors and prepayments', 60), (' other', 44), ('foreign exchange derivatives at fair value', 40), (' electricity derivatives at fair value', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' deposits', 40), (' related party receivable', 40), (' lng', 33), ('other assets', 20), (' accrued interest', 20), (' long service leave receivable', 20), (' interest receivable', 20), (' bank guarantee', 20), (' share of jv prepayments', 20), (' current investments', 20), (' condensate', 20), (' accrued rebates', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' other debtors and prepayments', 50), (' deposits', 43), (' condensate', 43), ('other assets', 40), ('foreign exchange derivatives at fair value', 40), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' derivative contracts - fair value', 40), (' long service leave receivable', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' amount receivable from controlling entity', 40), (' bank guarantee', 40), (' rental bond', 40), (' related party receivable', 40), (' current investments', 40), (' foreign exchange forward contracts', 40), (' forward exchange contracts', 40), (' lng', 33), (' accrued interest', 30), (' interest receivable', 30), (' share of jv prepayments', 30), (' accrued rebates', 30)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' derivative contracts - fair value', 60), (' amount receivable from controlling entity', 60), (' rental bond', 60), (' foreign exchange forward contracts', 60), (' forward exchange contracts', 60), (' other debtors and prepayments', 60), (' other', 44), ('foreign exchange derivatives at fair value', 40), (' electricity derivatives at fair value', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' deposits', 40), (' related party receivable', 40), (' lng', 33), ('other assets', 20), (' accrued interest', 20), (' long service leave receivable', 20), (' interest receivable', 20), (' bank guarantee', 20), (' share of jv prepayments', 20), (' current investments', 20), (' condensate', 20), (' accrued rebates', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' other deposits receivable - related party', 64), (' deposits', 57), (' related party disclosures', 55), ('other assets', 45), (' condensate', 43), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' long service leave receivable', 36), (' other receivables - related party', 36), (' amount receivable from controlling entity', 36), (' rental bond', 36), (' current investments', 36), (' other debtors and prepayments', 36), (' lng', 33), (' accrued interest', 27), (' income tax receivable from related parties', 27), (' derivative contracts - fair value', 27), (' interest receivable', 27), (' bank guarantee', 27), (' related party receivable', 27), (' share of jv prepayments', 27), (' foreign exchange forward contracts', 27), (' forward exchange contracts', 27), (' accrued rebates', 9)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' derivative contracts - fair value', 60), (' amount receivable from controlling entity', 60), (' rental bond', 60), (' foreign exchange forward contracts', 60), (' forward exchange contracts', 60), (' other debtors and prepayments', 60), (' other', 44), ('foreign exchange derivatives at fair value', 40), (' electricity derivatives at fair value', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' deposits', 40), (' related party receivable', 40), (' lng', 33), ('other assets', 20), (' accrued interest', 20), (' long service leave receivable', 20), (' interest receivable', 20), (' bank guarantee', 20), (' share of jv prepayments', 20), (' current investments', 20), (' condensate', 20), (' accrued rebates', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [(' other receivables - related party', 58), (' other deposits receivable - related party', 58), (' amount receivable from controlling entity', 58), (' deposits', 57), (' condensate', 57), ('foreign exchange derivatives at fair value', 50), (' electricity derivatives at fair value', 50), (' income tax receivable from related parties', 50), (' long service leave receivable', 50), (' interest receivable', 50), (' related party receivable', 50), (' other debtors and prepayments', 50), (' share of jv prepayments', 43), (' derivative contracts - fair value', 42), (' foreign exchange forward contracts', 42), (' forward exchange contracts', 42), (' other', 40), ('other assets', 36), (' rental bond', 36), (' accrued interest', 33), (' bank guarantee', 33), (' lng', 33), (' accrued rebates', 27), (' related party disclosures', 25), (' current investments', 25)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' derivative contracts - fair value', 60), (' amount receivable from controlling entity', 60), (' rental bond', 60), (' foreign exchange forward contracts', 60), (' forward exchange contracts', 60), (' other debtors and prepayments', 60), (' other', 44), ('foreign exchange derivatives at fair value', 40), (' electricity derivatives at fair value', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' deposits', 40), (' related party receivable', 40), (' lng', 33), ('other assets', 20), (' accrued interest', 20), (' long service leave receivable', 20), (' interest receivable', 20), (' bank guarantee', 20), (' share of jv prepayments', 20), (' current investments', 20), (' condensate', 20), (' accrued rebates', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2023 , res_fuzz_match = [(' other receivables - related party', 48), (' amount receivable from controlling entity', 48), (' foreign exchange forward contracts', 48), ('other assets', 45), (' related party disclosures', 43), (' income tax receivable from related parties', 43), (' derivative contracts - fair value', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' current investments', 43), (' forward exchange contracts', 43), (' electricity derivatives at fair value', 42), (' interest receivable', 41), (' other', 40), (' other debtors and prepayments', 40), ('foreign exchange derivatives at fair value', 39), (' related party receivable', 39), (' bank guarantee', 38), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' share of jv prepayments', 33), (' lng', 33), (' deposits', 29), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' derivative contracts - fair value', 60), (' amount receivable from controlling entity', 60), (' rental bond', 60), (' foreign exchange forward contracts', 60), (' forward exchange contracts', 60), (' other debtors and prepayments', 60), (' other', 44), ('foreign exchange derivatives at fair value', 40), (' electricity derivatives at fair value', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' deposits', 40), (' related party receivable', 40), (' lng', 33), ('other assets', 20), (' accrued interest', 20), (' long service leave receivable', 20), (' interest receivable', 20), (' bank guarantee', 20), (' share of jv prepayments', 20), (' current investments', 20), (' condensate', 20), (' accrued rebates', 20)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2021 , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2023 , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2021 , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2023 , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2021 , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2022 , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2023 , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and plant and equipment, at cost nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' deposits', 57), (' other debtors and prepayments', 52), (' other receivables - related party', 50), (' related party disclosures', 48), (' derivative contracts - fair value', 46), (' bank guarantee', 46), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' related party receivable', 44), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' income tax receivable from related parties', 39), (' long service leave receivable', 39), (' forward exchange contracts', 38), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' current investments', 36), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued rebates', 27)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and less: depreciation and amortisation nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' deposits', 57), (' condensate', 57), (' other receivables - related party', 54), (' related party disclosures', 52), (' electricity derivatives at fair value', 50), (' other deposits receivable - related party', 50), (' long service leave receivable', 48), (' other debtors and prepayments', 48), (' interest receivable', 47), (' derivative contracts - fair value', 46), (' bank guarantee', 46), ('other assets', 45), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), (' related party receivable', 44), (' current investments', 43), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 41), (' amount receivable from controlling entity', 39), (' forward exchange contracts', 38), (' accrued interest', 36), (' accrued rebates', 36)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' rental bond', 55), (' related party disclosures', 48), (' other debtors and prepayments', 48), (' derivative contracts - fair value', 46), (' other receivables - related party', 46), (' bank guarantee', 46), ('other assets', 45), (' related party receivable', 44), (' deposits', 43), (' forward exchange contracts', 42), (' foreign exchange forward contracts', 41), ('foreign exchange derivatives at fair value', 39), (' other deposits receivable - related party', 38), (' electricity derivatives at fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' income tax receivable from related parties', 33), (' amount receivable from controlling entity', 33), (' share of jv prepayments', 33), (' long service leave receivable', 30), (' accrued interest', 29), (' condensate', 29), (' interest receivable', 27)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and mining rights at cost nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' related party receivable', 50), (' related party disclosures', 48), (' other debtors and prepayments', 48), (' interest receivable', 47), (' derivative contracts - fair value', 46), (' other receivables - related party', 46), (' bank guarantee', 46), ('other assets', 45), (' rental bond', 45), (' accrued interest', 43), (' deposits', 43), (' current investments', 43), (' condensate', 43), (' forward exchange contracts', 42), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), ('foreign exchange derivatives at fair value', 39), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' electricity derivatives at fair value', 36), (' income tax receivable from related parties', 36), (' share of jv prepayments', 33), (' accrued rebates', 27)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and less: accumulated nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' condensate', 57), (' accrued rebates', 55), (' related party disclosures', 52), (' other debtors and prepayments', 48), (' derivative contracts - fair value', 46), (' bank guarantee', 46), ('other assets', 45), (' rental bond', 45), (' related party receivable', 44), (' accrued interest', 43), (' deposits', 43), (' current investments', 43), (' other receivables - related party', 42), (' forward exchange contracts', 42), (' interest receivable', 40), ('foreign exchange derivatives at fair value', 39), (' foreign exchange forward contracts', 38), (' electricity derivatives at fair value', 36), (' income tax receivable from related parties', 36), (' long service leave receivable', 35), (' other deposits receivable - related party', 34), (' amount receivable from controlling entity', 33), (' share of jv prepayments', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' rental bond', 55), (' related party disclosures', 48), (' other debtors and prepayments', 48), (' derivative contracts - fair value', 46), (' other receivables - related party', 46), (' bank guarantee', 46), ('other assets', 45), (' related party receivable', 44), (' deposits', 43), (' forward exchange contracts', 42), (' foreign exchange forward contracts', 41), ('foreign exchange derivatives at fair value', 39), (' other deposits receivable - related party', 38), (' electricity derivatives at fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' income tax receivable from related parties', 33), (' amount receivable from controlling entity', 33), (' share of jv prepayments', 33), (' long service leave receivable', 30), (' accrued interest', 29), (' condensate', 29), (' interest receivable', 27)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and deferred mining at cost nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' deposits', 57), (' accrued interest', 50), (' derivative contracts - fair value', 50), (' current investments', 50), (' other debtors and prepayments', 48), (' other receivables - related party', 46), (' bank guarantee', 46), ('other assets', 45), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' related party receivable', 44), (' foreign exchange forward contracts', 44), (' related party disclosures', 43), (' condensate', 43), (' amount receivable from controlling entity', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' interest receivable', 40), (' income tax receivable from related parties', 39), (' long service leave receivable', 39), (' accrued rebates', 36), (' share of jv prepayments', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and less: accumulated amortisation nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' condensate', 57), (' accrued rebates', 55), (' related party disclosures', 52), (' accrued interest', 50), (' other debtors and prepayments', 48), (' derivative contracts - fair value', 46), (' bank guarantee', 46), ('other assets', 45), (' rental bond', 45), (' related party receivable', 44), (' deposits', 43), (' current investments', 43), (' income tax receivable from related parties', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 41), (' interest receivable', 40), ('foreign exchange derivatives at fair value', 39), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' electricity derivatives at fair value', 36), (' amount receivable from controlling entity', 36), (' long service leave receivable', 35), (' share of jv prepayments', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' rental bond', 55), (' related party disclosures', 48), (' other debtors and prepayments', 48), (' derivative contracts - fair value', 46), (' other receivables - related party', 46), (' bank guarantee', 46), ('other assets', 45), (' related party receivable', 44), (' deposits', 43), (' forward exchange contracts', 42), (' foreign exchange forward contracts', 41), ('foreign exchange derivatives at fair value', 39), (' other deposits receivable - related party', 38), (' electricity derivatives at fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' income tax receivable from related parties', 33), (' amount receivable from controlling entity', 33), (' share of jv prepayments', 33), (' long service leave receivable', 30), (' accrued interest', 29), (' condensate', 29), (' interest receivable', 27)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and capital work in progress at cost nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' related party disclosures', 48), (' other debtors and prepayments', 48), (' derivative contracts - fair value', 46), (' other receivables - related party', 46), (' bank guarantee', 46), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' related party receivable', 44), (' deposits', 43), (' current investments', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' income tax receivable from related parties', 39), (' accrued interest', 36), (' interest receivable', 33), (' long service leave receivable', 30), (' accrued rebates', 27)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and exploration and assets nan nan nan nan , res_fuzz_match = [(' lng', 67), ('other assets', 64), (' other', 60), (' deposits', 57), (' other debtors and prepayments', 52), (' related party disclosures', 48), (' derivative contracts - fair value', 46), (' other receivables - related party', 46), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' related party receivable', 44), (' foreign exchange forward contracts', 44), (' condensate', 43), (' forward exchange contracts', 42), (' other deposits receivable - related party', 41), (' long service leave receivable', 39), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' current investments', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' share of jv prepayments', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total property, plant and equipment net book value nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' other debtors and prepayments', 52), (' derivative contracts - fair value', 50), (' related party disclosures', 48), (' other deposits receivable - related party', 47), (' other receivables - related party', 46), (' bank guarantee', 46), ('other assets', 45), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), (' related party receivable', 44), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' current investments', 43), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' interest receivable', 40), (' amount receivable from controlling entity', 39), (' accrued rebates', 36), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and nan plant and equipment mining rights capital work in progress exploration & evaluation assets , res_fuzz_match = [(' lng', 67), ('other assets', 64), (' other', 60), (' interest receivable', 53), (' share of jv prepayments', 50), (' other debtors and prepayments', 48), (' derivative contracts - fair value', 46), (' other receivables - related party', 46), (' bank guarantee', 46), (' income tax receivable from related parties', 45), (' rental bond', 45), (' accrued rebates', 45), (' other deposits receivable - related party', 44), (' related party receivable', 44), (' accrued interest', 43), (' related party disclosures', 43), (' condensate', 43), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), ('foreign exchange derivatives at fair value', 39), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' forward exchange contracts', 38), (' current investments', 36), (' deposits', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and nan $000 $000 $000 $000 , res_fuzz_match = [(' lng', 67), (' other', 60), (' other debtors and prepayments', 50), (' bank guarantee', 46), ('other assets', 45), (' derivative contracts - fair value', 45), (' other deposits receivable - related party', 45), (' rental bond', 45), (' other receivables - related party', 44), (' related party receivable', 44), (' related party disclosures', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 41), (' income tax receivable from related parties', 41), (' foreign exchange forward contracts', 41), (' forward exchange contracts', 41), (' electricity derivatives at fair value', 37), (' long service leave receivable', 36), (' current investments', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' deposits', 29), (' interest receivable', 27)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and carrying amount at 1 april 2021 6732948 613929 950738 1225000 , res_fuzz_match = [(' lng', 67), (' other', 60), (' related party disclosures', 52), (' derivative contracts - fair value', 50), (' other receivables - related party', 50), (' other debtors and prepayments', 48), (' foreign exchange forward contracts', 47), (' bank guarantee', 46), ('other assets', 45), ('foreign exchange derivatives at fair value', 45), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' related party receivable', 44), (' income tax receivable from related parties', 42), (' amount receivable from controlling entity', 42), (' forward exchange contracts', 42), (' interest receivable', 40), (' long service leave receivable', 39), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' share of jv prepayments', 33), (' deposits', 29), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and additions 234125 nan 376897 52906 , res_fuzz_match = [(' lng', 67), (' other', 60), (' derivative contracts - fair value', 50), (' other debtors and prepayments', 48), ('foreign exchange derivatives at fair value', 46), (' other receivables - related party', 46), (' bank guarantee', 46), ('other assets', 45), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' deposits', 43), (' foreign exchange forward contracts', 43), (' electricity derivatives at fair value', 42), (' long service leave receivable', 39), (' other deposits receivable - related party', 39), (' forward exchange contracts', 38), (' income tax receivable from related parties', 36), (' amount receivable from controlling entity', 36), (' current investments', 36), (' accrued rebates', 36), (' share of jv prepayments', 33), (' accrued interest', 29), (' condensate', 29), (' interest receivable', 27)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and disposals / write downs (1,223) nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' related party disclosures', 57), (' deposits', 57), (' other debtors and prepayments', 48), (' other receivables - related party', 46), (' bank guarantee', 46), ('other assets', 45), (' rental bond', 45), (' related party receivable', 44), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' forward exchange contracts', 38), (' electricity derivatives at fair value', 36), (' income tax receivable from related parties', 36), (' amount receivable from controlling entity', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and remeasurement (note 24) 796530 nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' other debtors and prepayments', 57), (' related party receivable', 50), (' related party disclosures', 48), (' derivative contracts - fair value', 46), (' other receivables - related party', 46), (' bank guarantee', 46), ('other assets', 45), (' rental bond', 45), (' foreign exchange forward contracts', 44), (' current investments', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' interest receivable', 40), ('foreign exchange derivatives at fair value', 39), (' amount receivable from controlling entity', 39), (' accrued interest', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' deposits', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and impairment charge (10,023) nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' other debtors and prepayments', 52), (' derivative contracts - fair value', 50), (' other receivables - related party', 50), (' related party receivable', 50), (' related party disclosures', 48), (' bank guarantee', 46), ('other assets', 45), ('foreign exchange derivatives at fair value', 45), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' income tax receivable from related parties', 36), (' current investments', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' long service leave receivable', 30), (' accrued interest', 29), (' deposits', 29), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and depreciation expense (515,672) (25,874) nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' deposits', 57), (' other debtors and prepayments', 57), (' related party receivable', 56), (' other receivables - related party', 50), (' interest receivable', 47), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' accrued interest', 43), (' related party disclosures', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' bank guarantee', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' current investments', 36), (' accrued rebates', 36)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments carrying amount at 31 march 2022 7789141 588055 775179 1277906 , res_fuzz_match = [('other assets', 55), (' related party disclosures', 48), (' other deposits receivable - related party', 48), (' interest receivable', 47), (' derivative contracts - fair value', 46), (' forward exchange contracts', 46), (' electricity derivatives at fair value', 45), (' accrued rebates', 45), (' related party receivable', 44), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' deposits', 43), (' current investments', 43), (' other receivables - related party', 42), (' share of jv prepayments', 42), (' other', 40), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), (' income tax receivable from related parties', 36), (' rental bond', 36), ('foreign exchange derivatives at fair value', 35), (' lng', 33), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments additions 158611 nan 532955 nan , res_fuzz_match = [('other assets', 55), (' other deposits receivable - related party', 45), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' other', 40), (' interest receivable', 40), (' related party receivable', 39), ('foreign exchange derivatives at fair value', 38), (' related party disclosures', 38), (' bank guarantee', 38), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' income tax receivable from related parties', 34), (' foreign exchange forward contracts', 34), (' other receivables - related party', 33), (' share of jv prepayments', 33), (' lng', 33), (' amount receivable from controlling entity', 31), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments disposals / write downs (8,580) nan (9,427) nan , res_fuzz_match = [(' deposits', 57), ('other assets', 55), (' related party disclosures', 52), (' other debtors and prepayments', 48), (' interest receivable', 47), (' rental bond', 45), (' accrued interest', 43), (' forward exchange contracts', 42), (' other deposits receivable - related party', 41), (' other', 40), (' related party receivable', 39), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 38), (' amount receivable from controlling entity', 36), (' current investments', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' long service leave receivable', 35), (' income tax receivable from related parties', 33), (' share of jv prepayments', 33), (' lng', 33), (' electricity derivatives at fair value', 32), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments remeasurement (note 24) 32778 nan nan nan , res_fuzz_match = [('other assets', 55), (' interest receivable', 53), (' other deposits receivable - related party', 47), (' bank guarantee', 46), (' rental bond', 45), (' accrued rebates', 45), (' related party receivable', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' current investments', 43), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other', 40), (' amount receivable from controlling entity', 40), (' income tax receivable from related parties', 39), (' other debtors and prepayments', 39), (' related party disclosures', 38), (' foreign exchange forward contracts', 38), (' electricity derivatives at fair value', 36), ('foreign exchange derivatives at fair value', 35), (' lng', 33), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments impairment charge (1,913) nan nan nan , res_fuzz_match = [(' related party receivable', 50), (' related party disclosures', 48), (' interest receivable', 47), (' derivative contracts - fair value', 46), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' long service leave receivable', 39), (' other debtors and prepayments', 39), (' other receivables - related party', 38), ('other assets', 36), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' income tax receivable from related parties', 33), (' amount receivable from controlling entity', 33), (' lng', 33), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments depreciation expense (555,368) (23,790) nan nan , res_fuzz_match = [(' deposits', 57), ('other assets', 55), (' other deposits receivable - related party', 50), (' related party receivable', 50), (' long service leave receivable', 48), (' other debtors and prepayments', 48), (' interest receivable', 47), (' other receivables - related party', 46), (' rental bond', 45), (' accrued interest', 43), (' condensate', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' amount receivable from controlling entity', 39), (' related party disclosures', 38), (' income tax receivable from related parties', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), (' current investments', 36), (' accrued rebates', 36), (' lng', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments transfer from right-of-use assets 94838 nan nan nan , res_fuzz_match = [('other assets', 64), (' interest receivable', 47), (' bank guarantee', 46), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), (' accrued rebates', 45), (' other deposits receivable - related party', 44), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' electricity derivatives at fair value', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' forward exchange contracts', 38), (' rental bond', 36), (' current investments', 36), (' share of jv prepayments', 33), (' lng', 33), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers 1a adjustments carrying amount at 31 march 2023 7775980 564265 1032233 1277907 , res_fuzz_match = [(' other deposits receivable - related party', 47), (' derivative contracts - fair value', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' related party receivable', 44), (' foreign exchange forward contracts', 44), (' related party disclosures', 43), (' deposits', 43), (' current investments', 43), (' other receivables - related party', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' other', 40), (' interest receivable', 40), ('foreign exchange derivatives at fair value', 39), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' rental bond', 36), (' lng', 33), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and plant and equipment, at cost nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' deposits', 57), (' other debtors and prepayments', 52), (' other receivables - related party', 50), (' related party disclosures', 48), (' derivative contracts - fair value', 46), (' bank guarantee', 46), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' related party receivable', 44), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' income tax receivable from related parties', 39), (' long service leave receivable', 39), (' forward exchange contracts', 38), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' current investments', 36), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued rebates', 27)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and less: depreciation and amortisation nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' deposits', 57), (' condensate', 57), (' other receivables - related party', 54), (' related party disclosures', 52), (' electricity derivatives at fair value', 50), (' other deposits receivable - related party', 50), (' long service leave receivable', 48), (' other debtors and prepayments', 48), (' interest receivable', 47), (' derivative contracts - fair value', 46), (' bank guarantee', 46), ('other assets', 45), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), (' related party receivable', 44), (' current investments', 43), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 41), (' amount receivable from controlling entity', 39), (' forward exchange contracts', 38), (' accrued interest', 36), (' accrued rebates', 36)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' rental bond', 55), (' related party disclosures', 48), (' other debtors and prepayments', 48), (' derivative contracts - fair value', 46), (' other receivables - related party', 46), (' bank guarantee', 46), ('other assets', 45), (' related party receivable', 44), (' deposits', 43), (' forward exchange contracts', 42), (' foreign exchange forward contracts', 41), ('foreign exchange derivatives at fair value', 39), (' other deposits receivable - related party', 38), (' electricity derivatives at fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' income tax receivable from related parties', 33), (' amount receivable from controlling entity', 33), (' share of jv prepayments', 33), (' long service leave receivable', 30), (' accrued interest', 29), (' condensate', 29), (' interest receivable', 27)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and mining rights at cost nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' related party receivable', 50), (' related party disclosures', 48), (' other debtors and prepayments', 48), (' interest receivable', 47), (' derivative contracts - fair value', 46), (' other receivables - related party', 46), (' bank guarantee', 46), ('other assets', 45), (' rental bond', 45), (' accrued interest', 43), (' deposits', 43), (' current investments', 43), (' condensate', 43), (' forward exchange contracts', 42), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), ('foreign exchange derivatives at fair value', 39), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' electricity derivatives at fair value', 36), (' income tax receivable from related parties', 36), (' share of jv prepayments', 33), (' accrued rebates', 27)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and less: accumulated nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' condensate', 57), (' accrued rebates', 55), (' related party disclosures', 52), (' other debtors and prepayments', 48), (' derivative contracts - fair value', 46), (' bank guarantee', 46), ('other assets', 45), (' rental bond', 45), (' related party receivable', 44), (' accrued interest', 43), (' deposits', 43), (' current investments', 43), (' other receivables - related party', 42), (' forward exchange contracts', 42), (' interest receivable', 40), ('foreign exchange derivatives at fair value', 39), (' foreign exchange forward contracts', 38), (' electricity derivatives at fair value', 36), (' income tax receivable from related parties', 36), (' long service leave receivable', 35), (' other deposits receivable - related party', 34), (' amount receivable from controlling entity', 33), (' share of jv prepayments', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' rental bond', 55), (' related party disclosures', 48), (' other debtors and prepayments', 48), (' derivative contracts - fair value', 46), (' other receivables - related party', 46), (' bank guarantee', 46), ('other assets', 45), (' related party receivable', 44), (' deposits', 43), (' forward exchange contracts', 42), (' foreign exchange forward contracts', 41), ('foreign exchange derivatives at fair value', 39), (' other deposits receivable - related party', 38), (' electricity derivatives at fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' income tax receivable from related parties', 33), (' amount receivable from controlling entity', 33), (' share of jv prepayments', 33), (' long service leave receivable', 30), (' accrued interest', 29), (' condensate', 29), (' interest receivable', 27)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and deferred mining at cost nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' deposits', 57), (' accrued interest', 50), (' derivative contracts - fair value', 50), (' current investments', 50), (' other debtors and prepayments', 48), (' other receivables - related party', 46), (' bank guarantee', 46), ('other assets', 45), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' related party receivable', 44), (' foreign exchange forward contracts', 44), (' related party disclosures', 43), (' condensate', 43), (' amount receivable from controlling entity', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' interest receivable', 40), (' income tax receivable from related parties', 39), (' long service leave receivable', 39), (' accrued rebates', 36), (' share of jv prepayments', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and less: accumulated amortisation nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' condensate', 57), (' accrued rebates', 55), (' related party disclosures', 52), (' accrued interest', 50), (' other debtors and prepayments', 48), (' derivative contracts - fair value', 46), (' bank guarantee', 46), ('other assets', 45), (' rental bond', 45), (' related party receivable', 44), (' deposits', 43), (' current investments', 43), (' income tax receivable from related parties', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 41), (' interest receivable', 40), ('foreign exchange derivatives at fair value', 39), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' electricity derivatives at fair value', 36), (' amount receivable from controlling entity', 36), (' long service leave receivable', 35), (' share of jv prepayments', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' rental bond', 55), (' related party disclosures', 48), (' other debtors and prepayments', 48), (' derivative contracts - fair value', 46), (' other receivables - related party', 46), (' bank guarantee', 46), ('other assets', 45), (' related party receivable', 44), (' deposits', 43), (' forward exchange contracts', 42), (' foreign exchange forward contracts', 41), ('foreign exchange derivatives at fair value', 39), (' other deposits receivable - related party', 38), (' electricity derivatives at fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' income tax receivable from related parties', 33), (' amount receivable from controlling entity', 33), (' share of jv prepayments', 33), (' long service leave receivable', 30), (' accrued interest', 29), (' condensate', 29), (' interest receivable', 27)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and capital work in progress at cost nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' related party disclosures', 48), (' other debtors and prepayments', 48), (' derivative contracts - fair value', 46), (' other receivables - related party', 46), (' bank guarantee', 46), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' related party receivable', 44), (' deposits', 43), (' current investments', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' income tax receivable from related parties', 39), (' accrued interest', 36), (' interest receivable', 33), (' long service leave receivable', 30), (' accrued rebates', 27)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and exploration and assets nan nan nan nan , res_fuzz_match = [(' lng', 67), ('other assets', 64), (' other', 60), (' deposits', 57), (' other debtors and prepayments', 52), (' related party disclosures', 48), (' derivative contracts - fair value', 46), (' other receivables - related party', 46), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' related party receivable', 44), (' foreign exchange forward contracts', 44), (' condensate', 43), (' forward exchange contracts', 42), (' other deposits receivable - related party', 41), (' long service leave receivable', 39), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' current investments', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' share of jv prepayments', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total property, plant and equipment net book value nan nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' other debtors and prepayments', 52), (' derivative contracts - fair value', 50), (' related party disclosures', 48), (' other deposits receivable - related party', 47), (' other receivables - related party', 46), (' bank guarantee', 46), ('other assets', 45), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), (' related party receivable', 44), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' current investments', 43), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' interest receivable', 40), (' amount receivable from controlling entity', 39), (' accrued rebates', 36), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and nan plant and equipment mining rights capital work in progress exploration & evaluation assets , res_fuzz_match = [(' lng', 67), ('other assets', 64), (' other', 60), (' interest receivable', 53), (' share of jv prepayments', 50), (' other debtors and prepayments', 48), (' derivative contracts - fair value', 46), (' other receivables - related party', 46), (' bank guarantee', 46), (' income tax receivable from related parties', 45), (' rental bond', 45), (' accrued rebates', 45), (' other deposits receivable - related party', 44), (' related party receivable', 44), (' accrued interest', 43), (' related party disclosures', 43), (' condensate', 43), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), ('foreign exchange derivatives at fair value', 39), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' forward exchange contracts', 38), (' current investments', 36), (' deposits', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and nan $000 $000 $000 $000 , res_fuzz_match = [(' lng', 67), (' other', 60), (' other debtors and prepayments', 50), (' bank guarantee', 46), ('other assets', 45), (' derivative contracts - fair value', 45), (' other deposits receivable - related party', 45), (' rental bond', 45), (' other receivables - related party', 44), (' related party receivable', 44), (' related party disclosures', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 41), (' income tax receivable from related parties', 41), (' foreign exchange forward contracts', 41), (' forward exchange contracts', 41), (' electricity derivatives at fair value', 37), (' long service leave receivable', 36), (' current investments', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' deposits', 29), (' interest receivable', 27)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and carrying amount at 1 april 2021 6732948 613929 950738 1225000 , res_fuzz_match = [(' lng', 67), (' other', 60), (' related party disclosures', 52), (' derivative contracts - fair value', 50), (' other receivables - related party', 50), (' other debtors and prepayments', 48), (' foreign exchange forward contracts', 47), (' bank guarantee', 46), ('other assets', 45), ('foreign exchange derivatives at fair value', 45), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' related party receivable', 44), (' income tax receivable from related parties', 42), (' amount receivable from controlling entity', 42), (' forward exchange contracts', 42), (' interest receivable', 40), (' long service leave receivable', 39), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' share of jv prepayments', 33), (' deposits', 29), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and additions 234125 nan 376897 52906 , res_fuzz_match = [(' lng', 67), (' other', 60), (' derivative contracts - fair value', 50), (' other debtors and prepayments', 48), ('foreign exchange derivatives at fair value', 46), (' other receivables - related party', 46), (' bank guarantee', 46), ('other assets', 45), (' rental bond', 45), (' related party receivable', 44), (' related party disclosures', 43), (' deposits', 43), (' foreign exchange forward contracts', 43), (' electricity derivatives at fair value', 42), (' long service leave receivable', 39), (' other deposits receivable - related party', 39), (' forward exchange contracts', 38), (' income tax receivable from related parties', 36), (' amount receivable from controlling entity', 36), (' current investments', 36), (' accrued rebates', 36), (' share of jv prepayments', 33), (' accrued interest', 29), (' condensate', 29), (' interest receivable', 27)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and disposals / write downs (1,223) nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' related party disclosures', 57), (' deposits', 57), (' other debtors and prepayments', 48), (' other receivables - related party', 46), (' bank guarantee', 46), ('other assets', 45), (' rental bond', 45), (' related party receivable', 44), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' forward exchange contracts', 38), (' electricity derivatives at fair value', 36), (' income tax receivable from related parties', 36), (' amount receivable from controlling entity', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' interest receivable', 33), (' share of jv prepayments', 33), (' accrued interest', 29), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and remeasurement (note 24) 796530 nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' other debtors and prepayments', 57), (' related party receivable', 50), (' related party disclosures', 48), (' derivative contracts - fair value', 46), (' other receivables - related party', 46), (' bank guarantee', 46), ('other assets', 45), (' rental bond', 45), (' foreign exchange forward contracts', 44), (' current investments', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' interest receivable', 40), ('foreign exchange derivatives at fair value', 39), (' amount receivable from controlling entity', 39), (' accrued interest', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' deposits', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and impairment charge (10,023) nan nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' other debtors and prepayments', 52), (' derivative contracts - fair value', 50), (' other receivables - related party', 50), (' related party receivable', 50), (' related party disclosures', 48), (' bank guarantee', 46), ('other assets', 45), ('foreign exchange derivatives at fair value', 45), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' income tax receivable from related parties', 36), (' current investments', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' long service leave receivable', 30), (' accrued interest', 29), (' deposits', 29), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and depreciation expense (515,672) (25,874) nan nan , res_fuzz_match = [(' lng', 67), (' other', 60), (' deposits', 57), (' other debtors and prepayments', 57), (' related party receivable', 56), (' other receivables - related party', 50), (' interest receivable', 47), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' accrued interest', 43), (' related party disclosures', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 42), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' bank guarantee', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), (' current investments', 36), (' accrued rebates', 36)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments carrying amount at 31 march 2022 7789141 588055 775179 1277906 , res_fuzz_match = [('other assets', 55), (' related party disclosures', 48), (' other deposits receivable - related party', 48), (' interest receivable', 47), (' derivative contracts - fair value', 46), (' forward exchange contracts', 46), (' electricity derivatives at fair value', 45), (' accrued rebates', 45), (' related party receivable', 44), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' deposits', 43), (' current investments', 43), (' other receivables - related party', 42), (' share of jv prepayments', 42), (' other', 40), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), (' income tax receivable from related parties', 36), (' rental bond', 36), ('foreign exchange derivatives at fair value', 35), (' lng', 33), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments additions 158611 nan 532955 nan , res_fuzz_match = [('other assets', 55), (' other deposits receivable - related party', 45), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' other', 40), (' interest receivable', 40), (' related party receivable', 39), ('foreign exchange derivatives at fair value', 38), (' related party disclosures', 38), (' bank guarantee', 38), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' income tax receivable from related parties', 34), (' foreign exchange forward contracts', 34), (' other receivables - related party', 33), (' share of jv prepayments', 33), (' lng', 33), (' amount receivable from controlling entity', 31), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments disposals / write downs (8,580) nan (9,427) nan , res_fuzz_match = [(' deposits', 57), ('other assets', 55), (' related party disclosures', 52), (' other debtors and prepayments', 48), (' interest receivable', 47), (' rental bond', 45), (' accrued interest', 43), (' forward exchange contracts', 42), (' other deposits receivable - related party', 41), (' other', 40), (' related party receivable', 39), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 38), (' amount receivable from controlling entity', 36), (' current investments', 36), (' accrued rebates', 36), ('foreign exchange derivatives at fair value', 35), (' long service leave receivable', 35), (' income tax receivable from related parties', 33), (' share of jv prepayments', 33), (' lng', 33), (' electricity derivatives at fair value', 32), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments remeasurement (note 24) 32778 nan nan nan , res_fuzz_match = [('other assets', 55), (' interest receivable', 53), (' other deposits receivable - related party', 47), (' bank guarantee', 46), (' rental bond', 45), (' accrued rebates', 45), (' related party receivable', 44), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' current investments', 43), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other', 40), (' amount receivable from controlling entity', 40), (' income tax receivable from related parties', 39), (' other debtors and prepayments', 39), (' related party disclosures', 38), (' foreign exchange forward contracts', 38), (' electricity derivatives at fair value', 36), ('foreign exchange derivatives at fair value', 35), (' lng', 33), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments impairment charge (1,913) nan nan nan , res_fuzz_match = [(' related party receivable', 50), (' related party disclosures', 48), (' interest receivable', 47), (' derivative contracts - fair value', 46), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' long service leave receivable', 39), (' other debtors and prepayments', 39), (' other receivables - related party', 38), ('other assets', 36), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' income tax receivable from related parties', 33), (' amount receivable from controlling entity', 33), (' lng', 33), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments depreciation expense (555,368) (23,790) nan nan , res_fuzz_match = [(' deposits', 57), ('other assets', 55), (' other deposits receivable - related party', 50), (' related party receivable', 50), (' long service leave receivable', 48), (' other debtors and prepayments', 48), (' interest receivable', 47), (' other receivables - related party', 46), (' rental bond', 45), (' accrued interest', 43), (' condensate', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' amount receivable from controlling entity', 39), (' related party disclosures', 38), (' income tax receivable from related parties', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), (' current investments', 36), (' accrued rebates', 36), (' lng', 33)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments transfer from right-of-use assets 94838 nan nan nan , res_fuzz_match = [('other assets', 64), (' interest receivable', 47), (' bank guarantee', 46), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), (' accrued rebates', 45), (' other deposits receivable - related party', 44), (' foreign exchange forward contracts', 44), (' accrued interest', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' electricity derivatives at fair value', 41), (' other', 40), ('foreign exchange derivatives at fair value', 39), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' forward exchange contracts', 38), (' rental bond', 36), (' current investments', 36), (' share of jv prepayments', 33), (' lng', 33), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers 1a adjustments carrying amount at 31 march 2023 7775980 564265 1032233 1277907 , res_fuzz_match = [(' other deposits receivable - related party', 47), (' derivative contracts - fair value', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' related party receivable', 44), (' foreign exchange forward contracts', 44), (' related party disclosures', 43), (' deposits', 43), (' current investments', 43), (' other receivables - related party', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' other', 40), (' interest receivable', 40), ('foreign exchange derivatives at fair value', 39), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' rental bond', 36), (' lng', 33), (' condensate', 29)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other assets', 0), ('foreign exchange derivatives at fair value', 0), (' electricity derivatives at fair value', 0), (' accrued interest', 0), (' other', 0), (' related party disclosures', 0), (' income tax receivable from related parties', 0), (' derivative contracts - fair value', 0), (' long service leave receivable', 0), (' other receivables - related party', 0), (' other deposits receivable - related party', 0), (' deposits', 0), (' amount receivable from controlling entity', 0), (' interest receivable', 0), (' bank guarantee', 0), (' rental bond', 0), (' related party receivable', 0), (' share of jv prepayments', 0), (' current investments', 0), (' lng', 0), (' condensate', 0), (' foreign exchange forward contracts', 0), (' accrued rebates', 0), (' forward exchange contracts', 0), (' other debtors and prepayments', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and plant and equipment, at cost nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and less: depreciation and amortisation nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and mining rights at cost nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and less: accumulated nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and deferred mining at cost nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and less: accumulated amortisation nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and capital work in progress at cost nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and exploration and assets nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total property, plant and equipment net book value nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and nan plant and equipment mining rights capital work in progress exploration & evaluation assets , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and nan $000 $000 $000 $000 , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and carrying amount at 1 april 2021 6732948 613929 950738 1225000 , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and additions 234125 nan 376897 52906 , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and disposals / write downs (1,223) nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and remeasurement (note 24) 796530 nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and impairment charge (10,023) nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and depreciation expense (515,672) (25,874) nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments carrying amount at 31 march 2022 7789141 588055 775179 1277906 , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments additions 158611 nan 532955 nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments disposals / write downs (8,580) nan (9,427) nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments remeasurement (note 24) 32778 nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments impairment charge (1,913) nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments depreciation expense (555,368) (23,790) nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments transfer from right-of-use assets 94838 nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers 1a adjustments carrying amount at 31 march 2023 7775980 564265 1032233 1277907 , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and plant and equipment, at cost nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and less: depreciation and amortisation nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and mining rights at cost nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and less: accumulated nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and deferred mining at cost nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and less: accumulated amortisation nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and capital work in progress at cost nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and exploration and assets nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and total property, plant and equipment net book value nan nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and nan plant and equipment mining rights capital work in progress exploration & evaluation assets , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and nan $000 $000 $000 $000 , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and carrying amount at 1 april 2021 6732948 613929 950738 1225000 , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and additions 234125 nan 376897 52906 , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and disposals / write downs (1,223) nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and remeasurement (note 24) 796530 nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and impairment charge (10,023) nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = property, plant and depreciation expense (515,672) (25,874) nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments carrying amount at 31 march 2022 7789141 588055 775179 1277906 , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments additions 158611 nan 532955 nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments disposals / write downs (8,580) nan (9,427) nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments remeasurement (note 24) 32778 nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments impairment charge (1,913) nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments depreciation expense (555,368) (23,790) nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers adjustments transfer from right-of-use assets 94838 nan nan nan , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = transfers 1a adjustments carrying amount at 31 march 2023 7775980 564265 1032233 1277907 , res_fuzz_match = [(' ', 0)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [(' ', 100)]
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [13418476.0, -5642496.0, 7775980.0, 0.0, -632760.0, 564265.0, 1213340.0, -774366.0, 438974.0, 1032233.0, 1277907.0, 11089359.0, 0.0, 0.0, 503375.0, 60159.0, 0.0, 0.0, -7805.0, -85388.0, 470341.0, 53437.0, 0.0, 0.0, 0.0, -84804.0, 0.0, 438974.0, 12923840.0, -5134699.0, 7789141.0, 1197025.0, -608970.0, 588055.0, 1159903.0, -689562.0, 470341.0, 775179.0, 1277906.0, 10900622.0, 0.0, 0.0, 10025990.0, 724087.0, -1223.0, 796530.0, -17828.0, -626934.0, 10900622.0, 745003.0, -18007.0, 32778.0, -1913.0, -663962.0, 94838.0, 11089359.0], 'label': ['$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000', '$000'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:01+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment ']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30), ('plant and equipment ', 29), (' plant and equipment ', 29), (' Property ', 19)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment ', 28), (' plant and equipment ', 28), (' Property ', 14)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [('plant and equipment ', 36), (' plant and equipment ', 36), ('plant property equipment', 30), ('property plant equipment', 30), (' Property ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment ', 77), (' plant and equipment ', 77), (' Property ', 50)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment ', 27), (' plant and equipment ', 27), (' Property ', 26)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant and equipment ', 37), (' plant and equipment ', 37), (' Property ', 30), ('plant property equipment', 25), ('property plant equipment', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 91, 'value': 10900622.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['18'], 'line_item_value': [10900622.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30), ('plant and equipment ', 29), (' plant and equipment ', 29), (' Property ', 19)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment ', 28), (' plant and equipment ', 28), (' Property ', 14)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [('plant and equipment ', 36), (' plant and equipment ', 36), ('plant property equipment', 30), ('property plant equipment', 30), (' Property ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment ', 77), (' plant and equipment ', 77), (' Property ', 50)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment ', 27), (' plant and equipment ', 27), (' Property ', 26)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant and equipment ', 37), (' plant and equipment ', 37), (' Property ', 30), ('plant property equipment', 25), ('property plant equipment', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 91, 'value': 11089359.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['18'], 'line_item_value': [11089359.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value', 'net book value'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 91, 'value': 10900622.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['18'], 'line_item_value': [10900622.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 91, 'value': 11089359.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['18'], 'line_item_value': [11089359.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['construction in progress ', ' work in progress ', ' capital works in progress ', ' WIP']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('Work in progress ', 38), (' property plant equipment ', 38), (' plant property equipment ', 31), (' plant and equipment ', 31), (' investment property', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [(' plant and equipment ', 40), (' plant property equipment ', 35), (' property plant equipment ', 35), (' investment property', 33), ('Work in progress ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [(' investment property', 62), (' plant property equipment ', 38), (' property plant equipment ', 38), (' plant and equipment ', 38), ('Work in progress ', 23)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' plant and equipment ', 100), (' property plant equipment ', 80), (' plant property equipment ', 60), (' investment property', 47), ('Work in progress ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment property', 34), (' property plant equipment ', 33), ('Work in progress ', 31), (' plant property equipment ', 27), (' plant and equipment ', 27)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' plant and equipment ', 50), (' plant property equipment ', 42), (' property plant equipment ', 42), (' investment property', 42), ('Work in progress ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 10900622.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['18'], 'line_item_value': [10900622.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('Work in progress ', 38), (' property plant equipment ', 38), (' plant property equipment ', 31), (' plant and equipment ', 31), (' investment property', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [(' plant and equipment ', 40), (' plant property equipment ', 35), (' property plant equipment ', 35), (' investment property', 33), ('Work in progress ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [(' investment property', 62), (' plant property equipment ', 38), (' property plant equipment ', 38), (' plant and equipment ', 38), ('Work in progress ', 23)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' plant and equipment ', 100), (' property plant equipment ', 80), (' plant property equipment ', 60), (' investment property', 47), ('Work in progress ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment property', 34), (' property plant equipment ', 33), ('Work in progress ', 31), (' plant property equipment ', 27), (' plant and equipment ', 27)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' plant and equipment ', 50), (' plant property equipment ', 42), (' property plant equipment ', 42), (' investment property', 42), ('Work in progress ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 11089359.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['18'], 'line_item_value': [11089359.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['construction in progress ', ' work in progress ', ' capital works in progress ', ' WIP'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [('tangible assets', 42)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [('tangible assets', 38)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible assets', 80)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 80, 'value': 2549.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['20'], 'line_item_value': [2549.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [('tangible assets', 42)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [('tangible assets', 38)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible assets', 80)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 80, 'value': 1555.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['20'], 'line_item_value': [1555.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' intangible asset', 58), (' goodwill on consolidation ', 23), ('goodwill ', 14)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [(' intangible asset', 83), ('goodwill ', 43), (' goodwill on consolidation ', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [(' intangible asset', 58), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' intangible asset', 58), ('goodwill ', 29), (' goodwill on consolidation ', 27)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' intangible asset', 100), (' goodwill on consolidation ', 25), ('goodwill ', 14)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 100, 'value': 3067.0, 'line_item_label': ['Financial assets at fair value through OCI', 'Intangible assets'], 'note_numbers': ['15', '20'], 'line_item_value': [518.0, 2549.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' intangible asset', 58), (' goodwill on consolidation ', 23), ('goodwill ', 14)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [(' intangible asset', 83), ('goodwill ', 43), (' goodwill on consolidation ', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [(' intangible asset', 58), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' intangible asset', 58), ('goodwill ', 29), (' goodwill on consolidation ', 27)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' intangible asset', 100), (' goodwill on consolidation ', 25), ('goodwill ', 14)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': 100, 'value': 2027.0, 'line_item_label': ['Financial assets at fair value through OCI', 'Intangible assets'], 'note_numbers': ['15', '20'], 'line_item_value': [472.0, 1555.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none carrying amount at beginning of year , res_fuzz_match = [(' goodwill on consolidation', 31), ('goodwill ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('goodwill ', 0), (' goodwill on consolidation', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' goodwill on consolidation', 30), ('goodwill ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('goodwill ', 0), (' goodwill on consolidation', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none disposals , res_fuzz_match = [('goodwill ', 43), (' goodwill on consolidation', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('goodwill ', 0), (' goodwill on consolidation', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none total intangible assets net book value , res_fuzz_match = [('goodwill ', 43), (' goodwill on consolidation', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('goodwill ', 0), (' goodwill on consolidation', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none carrying amount at beginning of year , res_fuzz_match = [(' goodwill on consolidation', 31), ('goodwill ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('goodwill ', 0), (' goodwill on consolidation', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' goodwill on consolidation', 30), ('goodwill ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('goodwill ', 0), (' goodwill on consolidation', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none disposals , res_fuzz_match = [('goodwill ', 43), (' goodwill on consolidation', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('goodwill ', 0), (' goodwill on consolidation', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none total intangible assets net book value , res_fuzz_match = [('goodwill ', 43), (' goodwill on consolidation', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('goodwill ', 0), (' goodwill on consolidation', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['Other intangibles ', ' development and software ', ' software ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' intangible assets under development ', 62), ('intangible assets ', 58), (' intangible under development ', 38), ('property plant equipment', 38), (' plant property equipment', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [('intangible assets ', 83), (' intangible assets under development ', 58), (' intangible under development ', 45), (' plant property equipment', 35), ('property plant equipment', 35)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [('intangible assets ', 58), (' intangible assets under development ', 54), (' plant property equipment', 38), ('property plant equipment', 38), (' intangible under development ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('property plant equipment', 80), (' plant property equipment', 60), ('intangible assets ', 50), (' intangible under development ', 49), (' intangible assets under development ', 42)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets ', 58), (' intangible assets under development ', 53), ('property plant equipment', 33), (' intangible under development ', 27), (' plant property equipment', 27)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('intangible assets ', 100), (' intangible assets under development ', 100), (' intangible under development ', 67), (' plant property equipment', 42), ('property plant equipment', 42)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 5], 'score': 100, 'value': 10903689.0, 'line_item_label': ['Financial assets at fair value through OCI', 'Property, plant and equipment', 'Intangible assets'], 'note_numbers': ['15', '18', '20'], 'line_item_value': [518.0, 10900622.0, 2549.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' intangible assets under development ', 62), ('intangible assets ', 58), (' intangible under development ', 38), ('property plant equipment', 38), (' plant property equipment', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [('intangible assets ', 83), (' intangible assets under development ', 58), (' intangible under development ', 45), (' plant property equipment', 35), ('property plant equipment', 35)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [('intangible assets ', 58), (' intangible assets under development ', 54), (' plant property equipment', 38), ('property plant equipment', 38), (' intangible under development ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('property plant equipment', 80), (' plant property equipment', 60), ('intangible assets ', 50), (' intangible under development ', 49), (' intangible assets under development ', 42)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets ', 58), (' intangible assets under development ', 53), ('property plant equipment', 33), (' intangible under development ', 27), (' plant property equipment', 27)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('intangible assets ', 100), (' intangible assets under development ', 100), (' intangible under development ', 67), (' plant property equipment', 42), ('property plant equipment', 42)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3, 5], 'score': 100, 'value': 11091386.0, 'line_item_label': ['Financial assets at fair value through OCI', 'Property, plant and equipment', 'Intangible assets'], 'note_numbers': ['15', '18', '20'], 'line_item_value': [472.0, 11089359.0, 1555.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['Other intangibles ', ' development and software ', ' software ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['Other intangibles ', ' development and software ', ' software ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none carrying amount at beginning of year , res_fuzz_match = [(' mining rights ', 50), ('Other intangibles ', 42), (' consumer contracts ', 40), (' computer software ', 36), (' water licenses', 33), (' development and software ', 32), (' software ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Other intangibles ', 0), (' development and software ', 0), (' software ', 0), (' computer software ', 0), (' consumer contracts ', 0), (' mining rights ', 0), (' water licenses', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('Other intangibles ', 50), (' mining rights ', 50), (' development and software ', 40), (' consumer contracts ', 40), (' water licenses', 30), (' software ', 29), (' computer software ', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Other intangibles ', 0), (' development and software ', 0), (' software ', 0), (' computer software ', 0), (' consumer contracts ', 0), (' mining rights ', 0), (' water licenses', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none disposals , res_fuzz_match = [(' development and software ', 45), (' mining rights ', 40), ('Other intangibles ', 36), (' computer software ', 36), (' consumer contracts ', 36), (' water licenses', 36), (' software ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Other intangibles ', 0), (' development and software ', 0), (' software ', 0), (' computer software ', 0), (' consumer contracts ', 0), (' mining rights ', 0), (' water licenses', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none total intangible assets net book value , res_fuzz_match = [('Other intangibles ', 75), (' consumer contracts ', 47), (' software ', 43), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Other intangibles ', 0), (' development and software ', 0), (' software ', 0), (' computer software ', 0), (' consumer contracts ', 0), (' mining rights ', 0), (' water licenses', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none carrying amount at beginning of year , res_fuzz_match = [(' mining rights ', 50), ('Other intangibles ', 42), (' consumer contracts ', 40), (' computer software ', 36), (' water licenses', 33), (' development and software ', 32), (' software ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Other intangibles ', 0), (' development and software ', 0), (' software ', 0), (' computer software ', 0), (' consumer contracts ', 0), (' mining rights ', 0), (' water licenses', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [('Other intangibles ', 50), (' mining rights ', 50), (' development and software ', 40), (' consumer contracts ', 40), (' water licenses', 30), (' software ', 29), (' computer software ', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Other intangibles ', 0), (' development and software ', 0), (' software ', 0), (' computer software ', 0), (' consumer contracts ', 0), (' mining rights ', 0), (' water licenses', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none disposals , res_fuzz_match = [(' development and software ', 45), (' mining rights ', 40), ('Other intangibles ', 36), (' computer software ', 36), (' consumer contracts ', 36), (' water licenses', 36), (' software ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Other intangibles ', 0), (' development and software ', 0), (' software ', 0), (' computer software ', 0), (' consumer contracts ', 0), (' mining rights ', 0), (' water licenses', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none total intangible assets net book value , res_fuzz_match = [('Other intangibles ', 75), (' consumer contracts ', 47), (' software ', 43), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Other intangibles ', 0), (' development and software ', 0), (' software ', 0), (' computer software ', 0), (' consumer contracts ', 0), (' mining rights ', 0), (' water licenses', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [('donations', 15)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [('donations', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('donations', 24)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [('donations', 15)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [('donations', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('donations', 24)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method', 54), ('joint ventures and associates', 46), ('derivative financial instruments', 46), (' investment in associate', 40), (' investment in joint venture', 38), ('investment', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [('derivative financial instruments', 50), (' investment in associate', 46), (' investments accounted for using the equity method', 43), (' investment in joint venture', 42), ('joint ventures and associates', 39), ('investment', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [('investment', 100), (' investment in associate', 100), (' investment in joint venture', 69), (' investments accounted for using the equity method', 69), ('joint ventures and associates', 62), ('derivative financial instruments', 38)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), ('joint ventures and associates', 40), (' investments accounted for using the equity method', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('derivative financial instruments', 58), (' investment in associate', 58), ('investment', 50), ('joint ventures and associates', 50), (' investment in joint venture', 50), (' investments accounted for using the equity method', 50)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 8706.0, 'line_item_label': ['Investments in associates'], 'note_numbers': ['17'], 'line_item_value': [8706.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method', 54), ('joint ventures and associates', 46), ('derivative financial instruments', 46), (' investment in associate', 40), (' investment in joint venture', 38), ('investment', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [('derivative financial instruments', 50), (' investment in associate', 46), (' investments accounted for using the equity method', 43), (' investment in joint venture', 42), ('joint ventures and associates', 39), ('investment', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [('investment', 100), (' investment in associate', 100), (' investment in joint venture', 69), (' investments accounted for using the equity method', 69), ('joint ventures and associates', 62), ('derivative financial instruments', 38)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), ('joint ventures and associates', 40), (' investments accounted for using the equity method', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('derivative financial instruments', 58), (' investment in associate', 58), ('investment', 50), ('joint ventures and associates', 50), (' investment in joint venture', 50), (' investments accounted for using the equity method', 50)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 2930.0, 'line_item_label': ['Investments in associates'], 'note_numbers': ['17'], 'line_item_value': [2930.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['investment in joint venture', ' investment in associate'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [('deferred tax assets', 44), ('deferred tax', 27), ('deferred charges', 22)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [('deferred tax assets', 43), ('deferred charges', 25), ('deferred tax', 18)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 38), ('deferred charges', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [('deferred tax assets', 44), ('deferred tax', 27), ('deferred charges', 22)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [('deferred tax assets', 43), ('deferred charges', 25), ('deferred tax', 18)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 38), ('deferred charges', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 35), (' loan receivables', 25), (' leases', 24)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [(' financial assets', 54), (' other non-current assets', 52), (' other non-current assets', 52), (' other assets', 43), (' exploration and evaluation expenditure', 32), (' leased assets', 31), (' loan receivables', 26), ('non-current', 19), (' leases', 10)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [(' leased assets', 52), (' financial assets', 46), (' other non-current assets', 44), (' other non-current assets', 44), (' other assets', 42), (' loan receivables', 33), (' exploration and evaluation expenditure', 25), (' leases', 24), ('non-current', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' exploration and evaluation expenditure', 29), (' leases', 21), ('non-current', 18)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets', 80), (' leased assets', 64), (' other assets', 61), (' other non-current assets', 52), (' other non-current assets', 52), (' exploration and evaluation expenditure', 26), (' loan receivables', 26), (' leases', 25), ('non-current', 21)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 5], 'score': 80, 'value': 2549.0, 'line_item_label': ['Non-current assets', 'Intangible assets'], 'note_numbers': [nan, '20'], 'line_item_value': [0.0, 2549.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 35), (' loan receivables', 25), (' leases', 24)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [(' financial assets', 54), (' other non-current assets', 52), (' other non-current assets', 52), (' other assets', 43), (' exploration and evaluation expenditure', 32), (' leased assets', 31), (' loan receivables', 26), ('non-current', 19), (' leases', 10)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [(' leased assets', 52), (' financial assets', 46), (' other non-current assets', 44), (' other non-current assets', 44), (' other assets', 42), (' loan receivables', 33), (' exploration and evaluation expenditure', 25), (' leases', 24), ('non-current', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' exploration and evaluation expenditure', 29), (' leases', 21), ('non-current', 18)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets', 80), (' leased assets', 64), (' other assets', 61), (' other non-current assets', 52), (' other non-current assets', 52), (' exploration and evaluation expenditure', 26), (' loan receivables', 26), (' leases', 25), ('non-current', 21)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 5], 'score': 80, 'value': 1555.0, 'line_item_label': ['Non-current assets', 'Intangible assets'], 'note_numbers': [nan, '20'], 'line_item_value': [0.0, 1555.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none carrying amount at beginning of year , res_fuzz_match = [(' motor vehicles', 50), (' electricity derivatives at fair value', 41), (' defined benefit plans', 39), ('finance receivables', 38), (' warehouse and office equipment', 38), (' exploration and evaluation expenditure', 37), (' total properties', 36), (' allowance for expected credit losses', 33), (' right-of-use-assets', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' allowance for expected credit losses', 50), (' defined benefit plans', 50), ('finance receivables', 40), (' electricity derivatives at fair value', 40), (' right-of-use-assets', 40), (' exploration and evaluation expenditure', 40), (' warehouse and office equipment', 40), (' total properties', 30), (' motor vehicles', 30)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none disposals , res_fuzz_match = [(' allowance for expected credit losses', 45), (' defined benefit plans', 45), ('finance receivables', 36), (' electricity derivatives at fair value', 36), (' right-of-use-assets', 36), (' total properties', 36), (' warehouse and office equipment', 36), (' exploration and evaluation expenditure', 29), (' motor vehicles', 27)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none total intangible assets net book value , res_fuzz_match = [(' total properties', 50), (' right-of-use-assets', 47), ('finance receivables', 46), (' electricity derivatives at fair value', 45), (' motor vehicles', 42), (' allowance for expected credit losses', 39), (' defined benefit plans', 39), (' exploration and evaluation expenditure', 37), (' warehouse and office equipment', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none carrying amount at beginning of year , res_fuzz_match = [(' motor vehicles', 50), (' electricity derivatives at fair value', 41), (' defined benefit plans', 39), ('finance receivables', 38), (' warehouse and office equipment', 38), (' exploration and evaluation expenditure', 37), (' total properties', 36), (' allowance for expected credit losses', 33), (' right-of-use-assets', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' allowance for expected credit losses', 50), (' defined benefit plans', 50), ('finance receivables', 40), (' electricity derivatives at fair value', 40), (' right-of-use-assets', 40), (' exploration and evaluation expenditure', 40), (' warehouse and office equipment', 40), (' total properties', 30), (' motor vehicles', 30)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none disposals , res_fuzz_match = [(' allowance for expected credit losses', 45), (' defined benefit plans', 45), ('finance receivables', 36), (' electricity derivatives at fair value', 36), (' right-of-use-assets', 36), (' total properties', 36), (' warehouse and office equipment', 36), (' exploration and evaluation expenditure', 29), (' motor vehicles', 27)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none total intangible assets net book value , res_fuzz_match = [(' total properties', 50), (' right-of-use-assets', 47), ('finance receivables', 46), (' electricity derivatives at fair value', 45), (' motor vehicles', 42), (' allowance for expected credit losses', 39), (' defined benefit plans', 39), (' exploration and evaluation expenditure', 37), (' warehouse and office equipment', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('finance receivables', 0), (' allowance for expected credit losses', 0), (' electricity derivatives at fair value', 0), (' defined benefit plans', 0), (' right-of-use-assets', 0), (' exploration and evaluation expenditure', 0), (' total properties', 0), (' warehouse and office equipment', 0), (' motor vehicles', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft ']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [(' lease liabilities ', 64), (' interest bearing liabilites ', 61), (' loans and borrowings ', 34), (' cash and cash equivalents ', 29), (' cash overdraft ', 29), ('  leases ', 22), ('short term debt ', 21), (' short-term debt ', 21), (' shortterm debt ', 21), (' bank overdraft ', 21), (' borrowings ', 20), (' shortterm borrowings ', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [(' interest bearing liabilites ', 39), (' short-term debt ', 37), (' shortterm debt ', 37), ('short term debt ', 36), (' shortterm borrowings ', 30), (' lease liabilities ', 29), (' cash and cash equivalents ', 27), (' loans and borrowings ', 26), (' bank overdraft ', 26), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 13)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [(' interest bearing liabilites ', 60), (' lease liabilities ', 55), (' cash overdraft ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' borrowings ', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 65351.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['19'], 'line_item_value': [65351.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [(' lease liabilities ', 64), (' interest bearing liabilites ', 61), (' loans and borrowings ', 34), (' cash and cash equivalents ', 29), (' cash overdraft ', 29), ('  leases ', 22), ('short term debt ', 21), (' short-term debt ', 21), (' shortterm debt ', 21), (' bank overdraft ', 21), (' borrowings ', 20), (' shortterm borrowings ', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [(' interest bearing liabilites ', 39), (' short-term debt ', 37), (' shortterm debt ', 37), ('short term debt ', 36), (' shortterm borrowings ', 30), (' lease liabilities ', 29), (' cash and cash equivalents ', 27), (' loans and borrowings ', 26), (' bank overdraft ', 26), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 13)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [(' interest bearing liabilites ', 60), (' lease liabilities ', 55), (' cash overdraft ', 31), ('short term debt ', 30), (' loans and borrowings ', 30), (' cash and cash equivalents ', 26), (' short-term debt ', 25), (' shortterm debt ', 25), (' bank overdraft ', 25), (' shortterm borrowings ', 24), ('  leases ', 18), (' borrowings ', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 65571.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['19'], 'line_item_value': [65571.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'trade payable', 'other trade payables']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33), ('other trade payables', 31), ('trade payable', 23)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('trade and other payables', 39), ('other trade payables', 38), ('trade payable', 28)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45), ('other trade payables', 44), ('trade payable', 40)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 820000.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['23'], 'line_item_value': [820000.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33), ('other trade payables', 31), ('trade payable', 23)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('trade and other payables', 39), ('other trade payables', 38), ('trade payable', 28)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45), ('other trade payables', 44), ('trade payable', 40)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 828802.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['23'], 'line_item_value': [828802.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current employee benefits , res_fuzz_match = [(' amounts payable to controlling entity ', 48), ('  accounts payable - trade ', 45), (' trade payables ', 42), (' trade payables - other parties ', 39), (' other trade payables ', 39), (' Related party payables ', 39), ('trade creditors ', 38), (' trade and other payables ', 37), (' trade payables - related parties', 35), (' payables to related parties ', 28)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current (a) (b) , res_fuzz_match = [('trade creditors ', 57), (' amounts payable to controlling entity ', 57), ('  accounts payable - trade ', 57), (' trade payables - other parties ', 43), (' other trade payables ', 43), (' payables to related parties ', 43), (' trade payables - related parties', 43), (' trade and other payables ', 29), (' trade payables ', 29), (' Related party payables ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current for litigation , res_fuzz_match = [(' amounts payable to controlling entity ', 47), (' payables to related parties ', 47), ('trade creditors ', 43), (' trade and other payables ', 41), ('  accounts payable - trade ', 41), (' Related party payables ', 41), (' trade payables - related parties', 41), (' trade payables - other parties ', 36), (' trade payables ', 33), (' other trade payables ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current other provisions , res_fuzz_match = [(' trade and other payables ', 55), (' trade payables - other parties ', 55), ('trade creditors ', 43), (' amounts payable to controlling entity ', 40), (' other trade payables ', 39), (' payables to related parties ', 39), (' Related party payables ', 39), (' trade payables - related parties', 36), ('  accounts payable - trade ', 35), (' trade payables ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' trade and other payables ', 46), (' amounts payable to controlling entity ', 46), ('  accounts payable - trade ', 46), (' trade payables ', 43), ('trade creditors ', 38), (' trade payables - other parties ', 38), (' other trade payables ', 38), (' payables to related parties ', 38), (' Related party payables ', 38), (' trade payables - related parties', 38)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = non-current rehabilitation (a) (b) , res_fuzz_match = [(' trade and other payables ', 44), ('trade creditors ', 43), (' trade payables ', 42), (' amounts payable to controlling entity ', 41), (' other trade payables ', 41), ('  accounts payable - trade ', 41), (' Related party payables ', 32), (' trade payables - other parties ', 29), (' payables to related parties ', 29), (' trade payables - related parties', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = non-current total , res_fuzz_match = [(' amounts payable to controlling entity ', 46), (' trade and other payables ', 38), (' other trade payables ', 38), ('  accounts payable - trade ', 38), (' trade payables ', 35), ('trade creditors ', 31), (' trade payables - other parties ', 31), (' Related party payables ', 31), (' payables to related parties ', 23), (' trade payables - related parties', 23)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current employee benefits , res_fuzz_match = [(' amounts payable to controlling entity ', 48), ('  accounts payable - trade ', 45), (' trade payables ', 42), (' trade payables - other parties ', 39), (' other trade payables ', 39), (' Related party payables ', 39), ('trade creditors ', 38), (' trade and other payables ', 37), (' trade payables - related parties', 35), (' payables to related parties ', 28)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current (a) (b) , res_fuzz_match = [('trade creditors ', 57), (' amounts payable to controlling entity ', 57), ('  accounts payable - trade ', 57), (' trade payables - other parties ', 43), (' other trade payables ', 43), (' payables to related parties ', 43), (' trade payables - related parties', 43), (' trade and other payables ', 29), (' trade payables ', 29), (' Related party payables ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current for litigation , res_fuzz_match = [(' amounts payable to controlling entity ', 47), (' payables to related parties ', 47), ('trade creditors ', 43), (' trade and other payables ', 41), ('  accounts payable - trade ', 41), (' Related party payables ', 41), (' trade payables - related parties', 41), (' trade payables - other parties ', 36), (' trade payables ', 33), (' other trade payables ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current other provisions , res_fuzz_match = [(' trade and other payables ', 55), (' trade payables - other parties ', 55), ('trade creditors ', 43), (' amounts payable to controlling entity ', 40), (' other trade payables ', 39), (' payables to related parties ', 39), (' Related party payables ', 39), (' trade payables - related parties', 36), ('  accounts payable - trade ', 35), (' trade payables ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' trade and other payables ', 46), (' amounts payable to controlling entity ', 46), ('  accounts payable - trade ', 46), (' trade payables ', 43), ('trade creditors ', 38), (' trade payables - other parties ', 38), (' other trade payables ', 38), (' payables to related parties ', 38), (' Related party payables ', 38), (' trade payables - related parties', 38)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = non-current rehabilitation (a) (b) , res_fuzz_match = [(' trade and other payables ', 44), ('trade creditors ', 43), (' trade payables ', 42), (' amounts payable to controlling entity ', 41), (' other trade payables ', 41), ('  accounts payable - trade ', 41), (' Related party payables ', 32), (' trade payables - other parties ', 29), (' payables to related parties ', 29), (' trade payables - related parties', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = non-current total , res_fuzz_match = [(' amounts payable to controlling entity ', 46), (' trade and other payables ', 38), (' other trade payables ', 38), ('  accounts payable - trade ', 38), (' trade payables ', 35), ('trade creditors ', 31), (' trade payables - other parties ', 31), (' Related party payables ', 31), (' payables to related parties ', 23), (' trade payables - related parties', 23)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade creditors ', 0), (' trade and other payables ', 0), (' trade payables ', 0), (' trade payables - other parties ', 0), (' amounts payable to controlling entity ', 0), (' other trade payables ', 0), (' payables to related parties ', 0), ('  accounts payable - trade ', 0), (' Related party payables ', 0), (' trade payables - related parties', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses ', ' interest accrued']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('trade and other payables', 39)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 820000.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['23'], 'line_item_value': [820000.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('trade and other payables', 39)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('trade and other payables', 45)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 828802.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['23'], 'line_item_value': [828802.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['accrued expenses ', ' interest accrued'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['accrued expenses ', ' interest accrued'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current employee benefits , res_fuzz_match = [('accrued expenses ', 42), (' interest accrued', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current (a) (b) , res_fuzz_match = [('accrued expenses ', 43), (' interest accrued', 43)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current for litigation , res_fuzz_match = [(' interest accrued', 36), ('accrued expenses ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current other provisions , res_fuzz_match = [(' interest accrued', 36), ('accrued expenses ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' interest accrued', 38), ('accrued expenses ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = non-current rehabilitation (a) (b) , res_fuzz_match = [('accrued expenses ', 33), (' interest accrued', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = non-current total , res_fuzz_match = [(' interest accrued', 31), ('accrued expenses ', 26)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current employee benefits , res_fuzz_match = [('accrued expenses ', 42), (' interest accrued', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current (a) (b) , res_fuzz_match = [('accrued expenses ', 43), (' interest accrued', 43)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current for litigation , res_fuzz_match = [(' interest accrued', 36), ('accrued expenses ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current other provisions , res_fuzz_match = [(' interest accrued', 36), ('accrued expenses ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' interest accrued', 38), ('accrued expenses ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = non-current rehabilitation (a) (b) , res_fuzz_match = [('accrued expenses ', 33), (' interest accrued', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = non-current total , res_fuzz_match = [(' interest accrued', 31), ('accrued expenses ', 26)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('accrued expenses ', 0), (' interest accrued', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['accrued expenses ', ' interest accrued'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['accrued expenses ', ' interest accrued'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities ', 71), (' income tax payable ', 43), (' tax ', 33), (' provision', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [(' tax ', 33), (' provision', 33), (' income tax payable ', 31), ('current tax liabilities ', 28)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' tax ', 100), (' income tax payable ', 56), (' provision', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 5], 'score': 100, 'value': 1091452.0, 'line_item_label': ['Provisions', 'Current tax liabilities'], 'note_numbers': ['24', nan], 'line_item_value': [76700.0, 1014752.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities ', 71), (' income tax payable ', 43), (' tax ', 33), (' provision', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [(' tax ', 33), (' provision', 33), (' income tax payable ', 31), ('current tax liabilities ', 28)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' tax ', 100), (' income tax payable ', 56), (' provision', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 5], 'score': 100, 'value': 1193498.0, 'line_item_label': ['Provisions', 'Current tax liabilities'], 'note_numbers': ['24', nan], 'line_item_value': [68213.0, 1125285.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' foreign exchange contract liability', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), ('provisions', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [(' other financial liabilities', 50), (' financial liabilities', 47), (' trade and other payables', 39), (' deferred revenue', 39), ('other current liabilities', 36), (' other current liabilities', 36), (' customer deposits', 32), (' employee benefits', 31), (' foreign exchange contract liability', 29), ('provisions', 27)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84), (' other current liabilities', 84), (' other financial liabilities', 53), (' financial liabilities', 50), (' foreign exchange contract liability', 49), (' trade and other payables', 45), (' customer deposits', 38), (' employee benefits', 30), (' deferred revenue', 27), ('provisions', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 4, 5], 'score': 84, 'value': 1911452.0, 'line_item_label': ['Current liabilities', 'Trade and other payables', 'Provisions', 'Current tax liabilities'], 'note_numbers': [nan, '23', '24', nan], 'line_item_value': [0.0, 820000.0, 76700.0, 1014752.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' foreign exchange contract liability', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), ('provisions', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [(' other financial liabilities', 50), (' financial liabilities', 47), (' trade and other payables', 39), (' deferred revenue', 39), ('other current liabilities', 36), (' other current liabilities', 36), (' customer deposits', 32), (' employee benefits', 31), (' foreign exchange contract liability', 29), ('provisions', 27)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current tax liabilities , res_fuzz_match = [('other current liabilities', 84), (' other current liabilities', 84), (' other financial liabilities', 53), (' financial liabilities', 50), (' foreign exchange contract liability', 49), (' trade and other payables', 45), (' customer deposits', 38), (' employee benefits', 30), (' deferred revenue', 27), ('provisions', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 4, 5], 'score': 84, 'value': 2022300.0, 'line_item_label': ['Current liabilities', 'Trade and other payables', 'Provisions', 'Current tax liabilities'], 'note_numbers': [nan, '23', '24', nan], 'line_item_value': [0.0, 828802.0, 68213.0, 1125285.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current employee benefits , res_fuzz_match = [(' total current employee benefits', 100), (' employee benefits - payroll', 81), (' employee benefits - current', 79), (' rebates', 60), (' current - liability for annual and long service leave', 52), (' warranty', 50), (' ultimate parent entity', 49), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' secured long-term bank loans', 44), (' provisions - current', 43), (' share of joint venture payables', 40), (' gst payables', 40), (' other', 40), (' other related parties', 35), (' loan payable to relayed party under tax funding agreement', 35), (' contract liabilites - current', 35), (' forward exchange contracts', 35), (' loans from related party', 33), (' gst', 33), ('other creditors and accruals', 31), (' abandonment and decommissioning costs', 30), (' arising from service contracts', 30), (' gst liabilities', 30), (' restructuring', 30), (' gst payable and accruals', 27), (' provision for associate funding', 27), (' derivative contracts - at fair value', 26), (' make good provisions', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current (a) (b) , res_fuzz_match = [(' employee benefits - current', 100), (' current - liability for annual and long service leave', 100), (' provisions - current', 100), (' contract liabilites - current', 100), (' total current employee benefits', 100), (' rebates', 60), (' ultimate parent entity', 57), (' other related parties', 57), (' other creditors', 57), (' loan payable to relayed party under tax funding agreement', 57), (' secured long-term bank loans', 57), (' other creditors', 57), (' other creditors', 57), (' warranty', 57), ('other creditors and accruals', 43), (' derivative contracts - at fair value', 43), (' loans from related party', 43), (' share of joint venture payables', 43), (' employee benefits - payroll', 43), (' provision for associate funding', 43), (' arising from service contracts', 43), (' forward exchange contracts', 43), (' restructuring', 43), (' gst', 33), (' gst payable and accruals', 29), (' abandonment and decommissioning costs', 29), (' other', 20), (' make good provisions', 14), (' gst payables', 0), (' gst liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current for litigation , res_fuzz_match = [(' current - liability for annual and long service leave', 65), (' rebates', 60), (' total current employee benefits', 59), (' ultimate parent entity', 52), (' warranty', 50), (' other related parties', 47), (' derivative contracts - at fair value', 47), (' loans from related party', 47), (' contract liabilites - current', 47), (' employee benefits - current', 44), (' other creditors', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), (' gst liabilities', 42), ('other creditors and accruals', 41), (' loan payable to relayed party under tax funding agreement', 41), (' secured long-term bank loans', 41), (' provision for associate funding', 41), (' restructuring', 40), (' other', 40), (' forward exchange contracts', 36), (' share of joint venture payables', 35), (' employee benefits - payroll', 35), (' gst', 33), (' make good provisions', 32), (' gst payables', 30), (' abandonment and decommissioning costs', 29), (' arising from service contracts', 29), (' gst payable and accruals', 24)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current other provisions , res_fuzz_match = [(' other', 100), (' other creditors', 62), (' other creditors', 62), (' make good provisions', 62), (' other creditors', 62), (' rebates', 60), (' current - liability for annual and long service leave', 55), (' total current employee benefits', 55), (' other related parties', 53), (' secured long-term bank loans', 50), (' restructuring', 50), (' warranty', 50), (' share of joint venture payables', 45), (' provisions - current', 43), (' ultimate parent entity', 42), (' loans from related party', 41), ('other creditors and accruals', 40), (' forward exchange contracts', 40), (' derivative contracts - at fair value', 35), (' employee benefits - current', 35), (' contract liabilites - current', 35), (' employee benefits - payroll', 35), (' provision for associate funding', 35), (' arising from service contracts', 35), (' gst', 33), (' abandonment and decommissioning costs', 31), (' loan payable to relayed party under tax funding agreement', 30), (' gst payable and accruals', 20), (' gst payables', 20), (' gst liabilities', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current - liability for annual and long service leave', 69), (' total current employee benefits', 69), (' rebates', 60), (' ultimate parent entity', 54), (' employee benefits - current', 54), (' provisions - current', 54), (' contract liabilites - current', 54), (' warranty', 50), ('other creditors and accruals', 46), (' other related parties', 46), (' secured long-term bank loans', 46), (' share of joint venture payables', 46), (' employee benefits - payroll', 46), (' forward exchange contracts', 46), (' gst payables', 42), (' gst liabilities', 42), (' restructuring', 40), (' other', 40), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' arising from service contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payable and accruals', 31), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' make good provisions', 23)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = non-current rehabilitation (a) (b) , res_fuzz_match = [(' rebates', 60), (' contract liabilites - current', 59), (' gst liabilities', 50), (' loans from related party', 47), (' share of joint venture payables', 47), (' other creditors', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), (' other related parties', 42), ('other creditors and accruals', 41), (' derivative contracts - at fair value', 41), (' employee benefits - current', 41), (' current - liability for annual and long service leave', 41), (' forward exchange contracts', 41), (' total current employee benefits', 41), (' gst payables', 40), (' other', 40), (' warranty', 38), (' loan payable to relayed party under tax funding agreement', 35), (' secured long-term bank loans', 35), (' abandonment and decommissioning costs', 35), (' gst', 33), (' restructuring', 30), (' ultimate parent entity', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' provision for associate funding', 29), (' arising from service contracts', 29), (' make good provisions', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = non-current total , res_fuzz_match = [(' secured long-term bank loans', 46), (' employee benefits - current', 46), (' current - liability for annual and long service leave', 46), (' provisions - current', 46), (' share of joint venture payables', 46), (' total current employee benefits', 46), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' warranty', 38), (' gst', 33), (' gst payables', 32), (' ultimate parent entity', 31), (' other related parties', 31), (' employee benefits - payroll', 31), (' provision for associate funding', 31), (' gst liabilities', 30), (' restructuring', 30), (' make good provisions', 23)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current employee benefits , res_fuzz_match = [(' total current employee benefits', 100), (' employee benefits - payroll', 81), (' employee benefits - current', 79), (' rebates', 60), (' current - liability for annual and long service leave', 52), (' warranty', 50), (' ultimate parent entity', 49), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' secured long-term bank loans', 44), (' provisions - current', 43), (' share of joint venture payables', 40), (' gst payables', 40), (' other', 40), (' other related parties', 35), (' loan payable to relayed party under tax funding agreement', 35), (' contract liabilites - current', 35), (' forward exchange contracts', 35), (' loans from related party', 33), (' gst', 33), ('other creditors and accruals', 31), (' abandonment and decommissioning costs', 30), (' arising from service contracts', 30), (' gst liabilities', 30), (' restructuring', 30), (' gst payable and accruals', 27), (' provision for associate funding', 27), (' derivative contracts - at fair value', 26), (' make good provisions', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current (a) (b) , res_fuzz_match = [(' employee benefits - current', 100), (' current - liability for annual and long service leave', 100), (' provisions - current', 100), (' contract liabilites - current', 100), (' total current employee benefits', 100), (' rebates', 60), (' ultimate parent entity', 57), (' other related parties', 57), (' other creditors', 57), (' loan payable to relayed party under tax funding agreement', 57), (' secured long-term bank loans', 57), (' other creditors', 57), (' other creditors', 57), (' warranty', 57), ('other creditors and accruals', 43), (' derivative contracts - at fair value', 43), (' loans from related party', 43), (' share of joint venture payables', 43), (' employee benefits - payroll', 43), (' provision for associate funding', 43), (' arising from service contracts', 43), (' forward exchange contracts', 43), (' restructuring', 43), (' gst', 33), (' gst payable and accruals', 29), (' abandonment and decommissioning costs', 29), (' other', 20), (' make good provisions', 14), (' gst payables', 0), (' gst liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current for litigation , res_fuzz_match = [(' current - liability for annual and long service leave', 65), (' rebates', 60), (' total current employee benefits', 59), (' ultimate parent entity', 52), (' warranty', 50), (' other related parties', 47), (' derivative contracts - at fair value', 47), (' loans from related party', 47), (' contract liabilites - current', 47), (' employee benefits - current', 44), (' other creditors', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), (' gst liabilities', 42), ('other creditors and accruals', 41), (' loan payable to relayed party under tax funding agreement', 41), (' secured long-term bank loans', 41), (' provision for associate funding', 41), (' restructuring', 40), (' other', 40), (' forward exchange contracts', 36), (' share of joint venture payables', 35), (' employee benefits - payroll', 35), (' gst', 33), (' make good provisions', 32), (' gst payables', 30), (' abandonment and decommissioning costs', 29), (' arising from service contracts', 29), (' gst payable and accruals', 24)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current other provisions , res_fuzz_match = [(' other', 100), (' other creditors', 62), (' other creditors', 62), (' make good provisions', 62), (' other creditors', 62), (' rebates', 60), (' current - liability for annual and long service leave', 55), (' total current employee benefits', 55), (' other related parties', 53), (' secured long-term bank loans', 50), (' restructuring', 50), (' warranty', 50), (' share of joint venture payables', 45), (' provisions - current', 43), (' ultimate parent entity', 42), (' loans from related party', 41), ('other creditors and accruals', 40), (' forward exchange contracts', 40), (' derivative contracts - at fair value', 35), (' employee benefits - current', 35), (' contract liabilites - current', 35), (' employee benefits - payroll', 35), (' provision for associate funding', 35), (' arising from service contracts', 35), (' gst', 33), (' abandonment and decommissioning costs', 31), (' loan payable to relayed party under tax funding agreement', 30), (' gst payable and accruals', 20), (' gst payables', 20), (' gst liabilities', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current - liability for annual and long service leave', 69), (' total current employee benefits', 69), (' rebates', 60), (' ultimate parent entity', 54), (' employee benefits - current', 54), (' provisions - current', 54), (' contract liabilites - current', 54), (' warranty', 50), ('other creditors and accruals', 46), (' other related parties', 46), (' secured long-term bank loans', 46), (' share of joint venture payables', 46), (' employee benefits - payroll', 46), (' forward exchange contracts', 46), (' gst payables', 42), (' gst liabilities', 42), (' restructuring', 40), (' other', 40), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' arising from service contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payable and accruals', 31), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' make good provisions', 23)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = non-current rehabilitation (a) (b) , res_fuzz_match = [(' rebates', 60), (' contract liabilites - current', 59), (' gst liabilities', 50), (' loans from related party', 47), (' share of joint venture payables', 47), (' other creditors', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), (' other related parties', 42), ('other creditors and accruals', 41), (' derivative contracts - at fair value', 41), (' employee benefits - current', 41), (' current - liability for annual and long service leave', 41), (' forward exchange contracts', 41), (' total current employee benefits', 41), (' gst payables', 40), (' other', 40), (' warranty', 38), (' loan payable to relayed party under tax funding agreement', 35), (' secured long-term bank loans', 35), (' abandonment and decommissioning costs', 35), (' gst', 33), (' restructuring', 30), (' ultimate parent entity', 29), (' gst payable and accruals', 29), (' employee benefits - payroll', 29), (' provision for associate funding', 29), (' arising from service contracts', 29), (' make good provisions', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = non-current total , res_fuzz_match = [(' secured long-term bank loans', 46), (' employee benefits - current', 46), (' current - liability for annual and long service leave', 46), (' provisions - current', 46), (' share of joint venture payables', 46), (' total current employee benefits', 46), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' warranty', 38), (' gst', 33), (' gst payables', 32), (' ultimate parent entity', 31), (' other related parties', 31), (' employee benefits - payroll', 31), (' provision for associate funding', 31), (' gst liabilities', 30), (' restructuring', 30), (' make good provisions', 23)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 3, 7, 8, 10], 'score': [100, 100, 100, 100, 100, 100], 'value': [818.0, 48935.0, 10760.0, 696.0, 62566.0, 5738.0], 'label': ['Current Employee benefits', 'Current (a) (b)', 'Current Other provisions', 'Current Employee benefits', 'Current (a) (b)', 'Current Other provisions'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: can only concatenate str (not "int") to str
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: calculate_other_current_liabilities
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: 2022
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities, net , res_fuzz_match = [('long term debt', 41)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('long term debt', 39)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities, net , res_fuzz_match = [('long term debt', 41)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['leases ', ' secured finance debt ', ' bank loan ', ' lease liabilities ', ' lease liability ', ' lease liabilities - non-current ', ' later than 1 year ', ' not later than 5 years']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities ', 64), (' lease liability', 64), ('interest bearing loans and borrowings ', 36), (' loans and borrowings', 36), (' borrowings ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 53), ('interest bearing loans and borrowings ', 45), (' lease liabilities ', 45), (' lease liability', 45), (' borrowings ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' lease liability', 100), ('interest bearing loans and borrowings ', 45), (' loans and borrowings', 45), (' borrowings ', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings ', 33), (' borrowings ', 33), (' loans and borrowings', 33), (' lease liabilities ', 17), (' lease liability', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities, net , res_fuzz_match = [(' lease liabilities ', 73), (' lease liability', 73), ('interest bearing loans and borrowings ', 45), (' loans and borrowings', 27), (' borrowings ', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 163801.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['19'], 'line_item_value': [163801.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities ', 64), (' lease liability', 64), ('interest bearing loans and borrowings ', 36), (' loans and borrowings', 36), (' borrowings ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 53), ('interest bearing loans and borrowings ', 45), (' lease liabilities ', 45), (' lease liability', 45), (' borrowings ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' lease liability', 100), ('interest bearing loans and borrowings ', 45), (' loans and borrowings', 45), (' borrowings ', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings ', 33), (' borrowings ', 33), (' loans and borrowings', 33), (' lease liabilities ', 17), (' lease liability', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities, net , res_fuzz_match = [(' lease liabilities ', 73), (' lease liability', 73), ('interest bearing loans and borrowings ', 45), (' loans and borrowings', 27), (' borrowings ', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 159343.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['19'], 'line_item_value': [159343.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('interest bearing loans and borrowings', 47), ('(bond)', 15)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('(bond)', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities, net , res_fuzz_match = [('interest bearing loans and borrowings', 45), ('(bond)', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('interest bearing loans and borrowings', 47), ('(bond)', 15)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('(bond)', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities, net , res_fuzz_match = [('interest bearing loans and borrowings', 45), ('(bond)', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities, net , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities, net , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes ', ' deferred tax liabilities']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities ', ' total deferred tax (assets) / liabilities']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' deferred tax liabilities', 57), ('deferred taxes ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' deferred tax liabilities', 52), ('deferred taxes ', 44)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' deferred tax liabilities', 73), ('deferred taxes ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes ', 17), (' deferred tax liabilities', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities, net , res_fuzz_match = [('deferred taxes ', 100), (' deferred tax liabilities', 100)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 891542.0, 'line_item_label': ['Deferred tax liabilities, net'], 'note_numbers': ['21'], 'line_item_value': [891542.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' deferred tax liabilities', 57), ('deferred taxes ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' deferred tax liabilities', 52), ('deferred taxes ', 44)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' deferred tax liabilities', 73), ('deferred taxes ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes ', 17), (' deferred tax liabilities', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities, net , res_fuzz_match = [('deferred taxes ', 100), (' deferred tax liabilities', 100)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 879522.0, 'line_item_label': ['Deferred tax liabilities, net'], 'note_numbers': ['21'], 'line_item_value': [879522.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['deferred tax liabilities ', ' total deferred tax (assets) / liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none at1april 2021 , res_fuzz_match = [('deferred tax liabilities ', 42), (' total deferred tax (assets) / liabilities', 42)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = rehabilitation provision 299,360 , res_fuzz_match = [('deferred tax liabilities ', 31), (' total deferred tax (assets) / liabilities', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged)/credited -to profit or loss , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = rehabilitation provision 299,360 , res_fuzz_match = [('deferred tax liabilities ', 31), (' total deferred tax (assets) / liabilities', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged)/credited at31 march 2022 , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities ', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = rehabilitation provision 299,360 , res_fuzz_match = [('deferred tax liabilities ', 31), (' total deferred tax (assets) / liabilities', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged) / credited to profit or loss , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = rehabilitation provision 299,360 , res_fuzz_match = [('deferred tax liabilities ', 31), (' total deferred tax (assets) / liabilities', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged) / credited at 31 march 2023 , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = rehabilitation provision 299,360 , res_fuzz_match = [('deferred tax liabilities ', 31), (' total deferred tax (assets) / liabilities', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none at1april 2021 , res_fuzz_match = [('deferred tax liabilities ', 42), (' total deferred tax (assets) / liabilities', 42)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment , res_fuzz_match = [('deferred tax liabilities ', 38), (' total deferred tax (assets) / liabilities', 38)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged)/credited -to profit or loss , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment , res_fuzz_match = [('deferred tax liabilities ', 38), (' total deferred tax (assets) / liabilities', 38)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged)/credited at31 march 2022 , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities ', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment , res_fuzz_match = [('deferred tax liabilities ', 38), (' total deferred tax (assets) / liabilities', 38)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged) / credited to profit or loss , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment , res_fuzz_match = [('deferred tax liabilities ', 38), (' total deferred tax (assets) / liabilities', 38)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged) / credited at 31 march 2023 , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment , res_fuzz_match = [('deferred tax liabilities ', 38), (' total deferred tax (assets) / liabilities', 38)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none at1april 2021 , res_fuzz_match = [('deferred tax liabilities ', 42), (' total deferred tax (assets) / liabilities', 42)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = tax losses , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 75), ('deferred tax liabilities ', 62)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged)/credited -to profit or loss , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = tax losses , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 75), ('deferred tax liabilities ', 62)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged)/credited at31 march 2022 , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities ', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = tax losses , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 75), ('deferred tax liabilities ', 62)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged) / credited to profit or loss , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = tax losses , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 75), ('deferred tax liabilities ', 62)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged) / credited at 31 march 2023 , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = tax losses , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 75), ('deferred tax liabilities ', 62)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none at1april 2021 , res_fuzz_match = [('deferred tax liabilities ', 42), (' total deferred tax (assets) / liabilities', 42)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = provision & accruals , res_fuzz_match = [('deferred tax liabilities ', 36), (' total deferred tax (assets) / liabilities', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged)/credited -to profit or loss , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = provision & accruals , res_fuzz_match = [('deferred tax liabilities ', 36), (' total deferred tax (assets) / liabilities', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged)/credited at31 march 2022 , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities ', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = provision & accruals , res_fuzz_match = [('deferred tax liabilities ', 36), (' total deferred tax (assets) / liabilities', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged) / credited to profit or loss , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = provision & accruals , res_fuzz_match = [('deferred tax liabilities ', 36), (' total deferred tax (assets) / liabilities', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged) / credited at 31 march 2023 , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = provision & accruals , res_fuzz_match = [('deferred tax liabilities ', 36), (' total deferred tax (assets) / liabilities', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none at1april 2021 , res_fuzz_match = [('deferred tax liabilities ', 42), (' total deferred tax (assets) / liabilities', 42)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = leases liabilities , res_fuzz_match = [('deferred tax liabilities ', 73), (' total deferred tax (assets) / liabilities', 73)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged)/credited -to profit or loss , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = leases liabilities , res_fuzz_match = [('deferred tax liabilities ', 73), (' total deferred tax (assets) / liabilities', 73)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged)/credited at31 march 2022 , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities ', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = leases liabilities , res_fuzz_match = [('deferred tax liabilities ', 73), (' total deferred tax (assets) / liabilities', 73)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged) / credited to profit or loss , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = leases liabilities , res_fuzz_match = [('deferred tax liabilities ', 73), (' total deferred tax (assets) / liabilities', 73)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged) / credited at 31 march 2023 , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = leases liabilities , res_fuzz_match = [('deferred tax liabilities ', 73), (' total deferred tax (assets) / liabilities', 73)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none at1april 2021 , res_fuzz_match = [('deferred tax liabilities ', 42), (' total deferred tax (assets) / liabilities', 42)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 100), ('deferred tax liabilities ', 40)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged)/credited -to profit or loss , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 100), ('deferred tax liabilities ', 40)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged)/credited at31 march 2022 , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities ', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 100), ('deferred tax liabilities ', 40)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged) / credited to profit or loss , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 100), ('deferred tax liabilities ', 40)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = (charged) / credited at 31 march 2023 , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 100), ('deferred tax liabilities ', 40)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [25, 26, 27, 28, 29], 'score': [100, 100, 100, 100, 100], 'value': [398575.0, 201911.0, 600486.0, 60477.0, 660963.0], 'label': ['Total', 'Total', 'Total', 'Total', 'Total'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['deferred tax liabilities ', ' total deferred tax (assets) / liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['deferred tax liabilities ', ' total deferred tax (assets) / liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary to: property, plant & equipment nan nan nan , res_fuzz_match = [('deferred tax liabilities ', 44), (' total deferred tax (assets) / liabilities', 39)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary to: inventories and consumables nan nan nan , res_fuzz_match = [('deferred tax liabilities ', 38), (' total deferred tax (assets) / liabilities', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary to: trade and other receivables nan nan nan , res_fuzz_match = [('deferred tax liabilities ', 44), (' total deferred tax (assets) / liabilities', 39)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary to: others nan nan nan , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 43), ('deferred tax liabilities ', 38)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary to: total nan nan nan , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 39), ('deferred tax liabilities ', 38)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary to: movements property, plant & equipment* inventories & consumables receivables , res_fuzz_match = [('deferred tax liabilities ', 44), (' total deferred tax (assets) / liabilities', 43)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary to: at1 april 2021 (1,202,830) (39,033) (6,562) , res_fuzz_match = [('deferred tax liabilities ', 44), (' total deferred tax (assets) / liabilities', 44)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = charged (credited) -to profit or loss (195,142) (45,591) (105) , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = charged (credited) -to oci nan nan nan , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = charged (credited) at31 march 2022 (1,397,972) (84,624) (6,667) , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities ', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = charged (credited) to profit or loss (30,401) (13,132) (2,319) , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = charged (credited) to oci nan nan nan , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = charged (credited) at31 march 2023 (1,428,373) (97,756) (8,986) , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities ', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary to: property, plant & equipment nan nan nan , res_fuzz_match = [('deferred tax liabilities ', 44), (' total deferred tax (assets) / liabilities', 39)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary to: inventories and consumables nan nan nan , res_fuzz_match = [('deferred tax liabilities ', 38), (' total deferred tax (assets) / liabilities', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary to: trade and other receivables nan nan nan , res_fuzz_match = [('deferred tax liabilities ', 44), (' total deferred tax (assets) / liabilities', 39)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary to: others nan nan nan , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 43), ('deferred tax liabilities ', 38)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary to: total nan nan nan , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 39), ('deferred tax liabilities ', 38)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary to: movements property, plant & equipment* inventories & consumables receivables , res_fuzz_match = [('deferred tax liabilities ', 44), (' total deferred tax (assets) / liabilities', 43)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = the balance comprises temporary to: at1 april 2021 (1,202,830) (39,033) (6,562) , res_fuzz_match = [('deferred tax liabilities ', 44), (' total deferred tax (assets) / liabilities', 44)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = charged (credited) -to profit or loss (195,142) (45,591) (105) , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = charged (credited) -to oci nan nan nan , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = charged (credited) at31 march 2022 (1,397,972) (84,624) (6,667) , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities ', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = charged (credited) to profit or loss (30,401) (13,132) (2,319) , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = charged (credited) to oci nan nan nan , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 33), ('deferred tax liabilities ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = charged (credited) at31 march 2023 (1,428,373) (97,756) (8,986) , res_fuzz_match = [(' total deferred tax (assets) / liabilities', 38), ('deferred tax liabilities ', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('deferred tax liabilities ', 0), (' total deferred tax (assets) / liabilities', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities, net , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities, net , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities ', 82), ('other long term liabilities ', 61), (' other financial liabilities ', 53), (' financial liabilities ', 43), (' provision for associate funding ', 33), (' trade and other payables ', 28), (' employee benefits ', 28), (' deferred revenue', 23), (' provisions ', 10)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables ', 100), ('other long term liabilities ', 50), (' other financial liabilities ', 43), (' other non-current liabilities ', 38), (' deferred revenue', 35), (' financial liabilities ', 33), (' employee benefits ', 32), (' provision for associate funding ', 32), (' provisions ', 14)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities ', 64), (' other financial liabilities ', 52), (' other non-current liabilities ', 39), ('other long term liabilities ', 36), (' trade and other payables ', 30), (' provision for associate funding ', 24), (' employee benefits ', 23), (' deferred revenue', 17), (' provisions ', 12)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provisions ', 100), (' provision for associate funding ', 43), (' deferred revenue', 22), (' employee benefits ', 19), (' other non-current liabilities ', 15), (' trade and other payables ', 14), (' financial liabilities ', 10), (' other financial liabilities ', 8), ('other long term liabilities ', 7)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities, net , res_fuzz_match = [('other long term liabilities ', 52), (' other financial liabilities ', 50), (' other non-current liabilities ', 50), (' trade and other payables ', 48), (' financial liabilities ', 47), (' deferred revenue', 44), (' employee benefits ', 29), (' provision for associate funding ', 24), (' provisions ', 15)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 3], 'score': 100, 'value': 1824700.0, 'line_item_label': ['Non-current liabilities', 'Trade and other payables', 'Provisions'], 'note_numbers': [nan, '23', '24'], 'line_item_value': [0.0, 49617.0, 1775083.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities ', 82), ('other long term liabilities ', 61), (' other financial liabilities ', 53), (' financial liabilities ', 43), (' provision for associate funding ', 33), (' trade and other payables ', 28), (' employee benefits ', 28), (' deferred revenue', 23), (' provisions ', 10)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables ', 100), ('other long term liabilities ', 50), (' other financial liabilities ', 43), (' other non-current liabilities ', 38), (' deferred revenue', 35), (' financial liabilities ', 33), (' employee benefits ', 32), (' provision for associate funding ', 32), (' provisions ', 14)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities ', 64), (' other financial liabilities ', 52), (' other non-current liabilities ', 39), ('other long term liabilities ', 36), (' trade and other payables ', 30), (' provision for associate funding ', 24), (' employee benefits ', 23), (' deferred revenue', 17), (' provisions ', 12)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provisions ', 100), (' provision for associate funding ', 43), (' deferred revenue', 22), (' employee benefits ', 19), (' other non-current liabilities ', 15), (' trade and other payables ', 14), (' financial liabilities ', 10), (' other financial liabilities ', 8), ('other long term liabilities ', 7)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities, net , res_fuzz_match = [('other long term liabilities ', 52), (' other financial liabilities ', 50), (' other non-current liabilities ', 50), (' trade and other payables ', 48), (' financial liabilities ', 47), (' deferred revenue', 44), (' employee benefits ', 29), (' provision for associate funding ', 24), (' provisions ', 15)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 3], 'score': 100, 'value': 1912072.0, 'line_item_label': ['Non-current liabilities', 'Trade and other payables', 'Provisions'], 'note_numbers': [nan, '23', '24'], 'line_item_value': [0.0, 51473.0, 1860599.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current employee benefits , res_fuzz_match = [(' total non-current employee benefits', 87), (' employee benefits - payroll ', 81), (' employee benefits - non current ', 65), ('non-current trade and other payables ', 43), (' non-current - liability for long-service leave ', 43), (' electricity derivatives at fair value through oci ', 35), (' contract liabilites - non-current ', 35), (' trade payables - related parties ', 35), (' abandonment and decommissioning costs ', 30), (' provisions - non-current ', 29), (' provision for associate funding ', 27), (' derivative contracts - at fair value ', 26), (' make good provisions ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current (a) (b) , res_fuzz_match = [(' employee benefits - non current ', 100), ('non-current trade and other payables ', 71), (' total non-current employee benefits', 71), (' non-current - liability for long-service leave ', 57), (' provisions - non-current ', 57), (' contract liabilites - non-current ', 57), (' electricity derivatives at fair value through oci ', 43), (' derivative contracts - at fair value ', 43), (' employee benefits - payroll ', 43), (' provision for associate funding ', 43), (' trade payables - related parties ', 43), (' abandonment and decommissioning costs ', 29), (' make good provisions ', 14)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current for litigation , res_fuzz_match = [(' non-current - liability for long-service leave ', 59), ('non-current trade and other payables ', 53), (' derivative contracts - at fair value ', 47), (' contract liabilites - non-current ', 47), (' electricity derivatives at fair value through oci ', 41), (' employee benefits - non current ', 41), (' provision for associate funding ', 41), (' trade payables - related parties ', 41), (' total non-current employee benefits', 41), (' employee benefits - payroll ', 35), (' make good provisions ', 32), (' provisions - non-current ', 29), (' abandonment and decommissioning costs ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current other provisions , res_fuzz_match = [(' make good provisions ', 62), ('non-current trade and other payables ', 60), (' non-current - liability for long-service leave ', 45), (' total non-current employee benefits', 45), (' provisions - non-current ', 43), (' electricity derivatives at fair value through oci ', 40), (' trade payables - related parties ', 36), (' derivative contracts - at fair value ', 35), (' employee benefits - non current ', 35), (' contract liabilites - non-current ', 35), (' employee benefits - payroll ', 35), (' provision for associate funding ', 35), (' abandonment and decommissioning costs ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [('non-current trade and other payables ', 54), (' employee benefits - non current ', 54), (' non-current - liability for long-service leave ', 54), (' employee benefits - payroll ', 46), (' total non-current employee benefits', 46), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' contract liabilites - non-current ', 38), (' trade payables - related parties ', 38), (' provisions - non-current ', 31), (' abandonment and decommissioning costs ', 31), (' provision for associate funding ', 31), (' make good provisions ', 23)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = non-current rehabilitation (a) (b) , res_fuzz_match = [(' non-current - liability for long-service leave ', 71), ('non-current trade and other payables ', 65), (' contract liabilites - non-current ', 59), (' total non-current employee benefits', 59), (' employee benefits - non current ', 53), (' provisions - non-current ', 43), (' derivative contracts - at fair value ', 41), (' electricity derivatives at fair value through oci ', 35), (' abandonment and decommissioning costs ', 35), (' employee benefits - payroll ', 29), (' provision for associate funding ', 29), (' trade payables - related parties ', 29), (' make good provisions ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = non-current total , res_fuzz_match = [('non-current trade and other payables ', 77), (' non-current - liability for long-service leave ', 69), (' total non-current employee benefits', 69), (' employee benefits - non current ', 67), (' provisions - non-current ', 54), (' contract liabilites - non-current ', 54), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' abandonment and decommissioning costs ', 38), (' employee benefits - payroll ', 31), (' provision for associate funding ', 31), (' make good provisions ', 23), (' trade payables - related parties ', 23)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current employee benefits , res_fuzz_match = [(' total non-current employee benefits', 87), (' employee benefits - payroll ', 81), (' employee benefits - non current ', 65), ('non-current trade and other payables ', 43), (' non-current - liability for long-service leave ', 43), (' electricity derivatives at fair value through oci ', 35), (' contract liabilites - non-current ', 35), (' trade payables - related parties ', 35), (' abandonment and decommissioning costs ', 30), (' provisions - non-current ', 29), (' provision for associate funding ', 27), (' derivative contracts - at fair value ', 26), (' make good provisions ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current (a) (b) , res_fuzz_match = [(' employee benefits - non current ', 100), ('non-current trade and other payables ', 71), (' total non-current employee benefits', 71), (' non-current - liability for long-service leave ', 57), (' provisions - non-current ', 57), (' contract liabilites - non-current ', 57), (' electricity derivatives at fair value through oci ', 43), (' derivative contracts - at fair value ', 43), (' employee benefits - payroll ', 43), (' provision for associate funding ', 43), (' trade payables - related parties ', 43), (' abandonment and decommissioning costs ', 29), (' make good provisions ', 14)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current for litigation , res_fuzz_match = [(' non-current - liability for long-service leave ', 59), ('non-current trade and other payables ', 53), (' derivative contracts - at fair value ', 47), (' contract liabilites - non-current ', 47), (' electricity derivatives at fair value through oci ', 41), (' employee benefits - non current ', 41), (' provision for associate funding ', 41), (' trade payables - related parties ', 41), (' total non-current employee benefits', 41), (' employee benefits - payroll ', 35), (' make good provisions ', 32), (' provisions - non-current ', 29), (' abandonment and decommissioning costs ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current other provisions , res_fuzz_match = [(' make good provisions ', 62), ('non-current trade and other payables ', 60), (' non-current - liability for long-service leave ', 45), (' total non-current employee benefits', 45), (' provisions - non-current ', 43), (' electricity derivatives at fair value through oci ', 40), (' trade payables - related parties ', 36), (' derivative contracts - at fair value ', 35), (' employee benefits - non current ', 35), (' contract liabilites - non-current ', 35), (' employee benefits - payroll ', 35), (' provision for associate funding ', 35), (' abandonment and decommissioning costs ', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [('non-current trade and other payables ', 54), (' employee benefits - non current ', 54), (' non-current - liability for long-service leave ', 54), (' employee benefits - payroll ', 46), (' total non-current employee benefits', 46), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' contract liabilites - non-current ', 38), (' trade payables - related parties ', 38), (' provisions - non-current ', 31), (' abandonment and decommissioning costs ', 31), (' provision for associate funding ', 31), (' make good provisions ', 23)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = non-current rehabilitation (a) (b) , res_fuzz_match = [(' non-current - liability for long-service leave ', 71), ('non-current trade and other payables ', 65), (' contract liabilites - non-current ', 59), (' total non-current employee benefits', 59), (' employee benefits - non current ', 53), (' provisions - non-current ', 43), (' derivative contracts - at fair value ', 41), (' electricity derivatives at fair value through oci ', 35), (' abandonment and decommissioning costs ', 35), (' employee benefits - payroll ', 29), (' provision for associate funding ', 29), (' trade payables - related parties ', 29), (' make good provisions ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = non-current total , res_fuzz_match = [('non-current trade and other payables ', 77), (' non-current - liability for long-service leave ', 69), (' total non-current employee benefits', 69), (' employee benefits - non current ', 67), (' provisions - non-current ', 54), (' contract liabilites - non-current ', 54), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' abandonment and decommissioning costs ', 38), (' employee benefits - payroll ', 31), (' provision for associate funding ', 31), (' make good provisions ', 23), (' trade payables - related parties ', 23)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 7, 8], 'score': [87, 100, 87, 100], 'value': [818.0, 48935.0, 696.0, 62566.0], 'label': ['Current Employee benefits', 'Current (a) (b)', 'Current Employee benefits', 'Current (a) (b)'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: calculate_other_non_current_liabilities
2023-08-24 10:23:02+0530 - sLogger - ERROR - error occured: 2022
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities, net , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities, net , res_fuzz_match = [('', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares ', ' fully paid ordinary shares ', ' issued and paid-up share capital ', ' retained profits ', ' ordinary shares fully paid ', ' total issued capital ', ' on issue, fully paid ', ' Fully paid Preference shares ', ' Profits captialised on redemption of preference shares']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' share capital ', 40), (' share capital ', 40), (' equity share capital ', 37), (' perpetual equity instrument ', 35), (' contributed equity ', 32), (' issued capital ', 32), (' contributed equity', 32), ('common stock ', 19)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' issued capital ', 100), (' share capital ', 67), (' share capital ', 67), (' equity share capital ', 57), (' contributed equity ', 38), (' contributed equity', 38), (' perpetual equity instrument ', 34), ('common stock ', 27)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' perpetual equity instrument ', 26), (' equity share capital ', 25), (' share capital ', 24), (' share capital ', 24), (' contributed equity ', 18), (' contributed equity', 18), (' issued capital ', 12), ('common stock ', 11)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 450586.0, 'line_item_label': ['Issued capital'], 'note_numbers': ['26'], 'line_item_value': [450586.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' share capital ', 40), (' share capital ', 40), (' equity share capital ', 37), (' perpetual equity instrument ', 35), (' contributed equity ', 32), (' issued capital ', 32), (' contributed equity', 32), ('common stock ', 19)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' issued capital ', 100), (' share capital ', 67), (' share capital ', 67), (' equity share capital ', 57), (' contributed equity ', 38), (' contributed equity', 38), (' perpetual equity instrument ', 34), ('common stock ', 27)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' perpetual equity instrument ', 26), (' equity share capital ', 25), (' share capital ', 24), (' share capital ', 24), (' contributed equity ', 18), (' contributed equity', 18), (' issued capital ', 12), ('common stock ', 11)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 450586.0, 'line_item_label': ['Issued capital'], 'note_numbers': ['26'], 'line_item_value': [450586.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['ordinary shares ', ' fully paid ordinary shares ', ' issued and paid-up share capital ', ' retained profits ', ' ordinary shares fully paid ', ' total issued capital ', ' on issue, fully paid ', ' Fully paid Preference shares ', ' Profits captialised on redemption of preference shares'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('Share premium', 27)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('Share premium', 35)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('Share premium', 42)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('Share premium', 27)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('Share premium', 35)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('Share premium', 42)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings ', ' general reserves ', ' accumulated losses ', ' retained earnings and dividends on equity instruments']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' retained earnings ', 40), ('other equity ', 38), (' retained profits', 36), (' accumulated losses ', 29), (' reserves surplus ', 27)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' retained profits', 43), (' accumulated losses ', 36), (' retained earnings ', 29), ('other equity ', 27), (' reserves surplus ', 26)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves surplus ', 63), ('other equity ', 33), (' retained earnings ', 24), (' retained profits', 21), (' accumulated losses ', 11)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 12897476.0, 'line_item_label': ['Retained earnings'], 'note_numbers': ['25'], 'line_item_value': [12897476.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' retained earnings ', 40), ('other equity ', 38), (' retained profits', 36), (' accumulated losses ', 29), (' reserves surplus ', 27)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' retained profits', 43), (' accumulated losses ', 36), (' retained earnings ', 29), ('other equity ', 27), (' reserves surplus ', 26)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves surplus ', 63), ('other equity ', 33), (' retained earnings ', 24), (' retained profits', 21), (' accumulated losses ', 11)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 10506199.0, 'line_item_label': ['Retained earnings'], 'note_numbers': ['25'], 'line_item_value': [10506199.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['retained earnings ', ' general reserves ', ' accumulated losses ', ' retained earnings and dividends on equity instruments'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' noncontrolling interest ', 36), (' non-controlling interest', 36), ('minority interest ', 35), (' minority interest ', 35), (' non controlling interest ', 34)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest ', 33), (' non controlling interest ', 33), (' minority interest ', 33), (' noncontrolling interest ', 21), (' non-controlling interest', 21)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest ', 40), (' minority interest ', 40), (' noncontrolling interest ', 32), (' non-controlling interest', 32), (' non controlling interest ', 23)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' noncontrolling interest ', 36), (' non-controlling interest', 36), ('minority interest ', 35), (' minority interest ', 35), (' non controlling interest ', 34)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest ', 33), (' non controlling interest ', 33), (' minority interest ', 33), (' noncontrolling interest ', 21), (' non-controlling interest', 21)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest ', 40), (' minority interest ', 40), (' noncontrolling interest ', 32), (' non-controlling interest', 32), (' non controlling interest ', 23)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('shareholders equity(a)', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('shareholders equity(a)', 31)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve ', ' cash flow hedge reserve ', ' reserve in joint venture ', ' other reserve ', ' total other reserves ', ' tax reserve ', ' other  components of equity']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other reserves ', 29), (' reserves ', 27), (' foreign currency translation reserve', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves ', 27), (' foreign currency translation reserve', 24), (' reserves ', 12)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves ', 100), ('other reserves ', 67), (' foreign currency translation reserve', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 3093.0, 'line_item_label': ['Reserves'], 'note_numbers': ['25'], 'line_item_value': [3093.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other reserves ', 29), (' reserves ', 27), (' foreign currency translation reserve', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves ', 27), (' foreign currency translation reserve', 24), (' reserves ', 12)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves ', 100), ('other reserves ', 67), (' foreign currency translation reserve', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 8916.0, 'line_item_label': ['Reserves'], 'note_numbers': ['25'], 'line_item_value': [8916.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['foreign currency translation reserve ', ' cash flow hedge reserve ', ' reserve in joint venture ', ' other reserve ', ' total other reserves ', ' tax reserve ', ' other  components of equity'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['cost ', ' gross ', ' investment property ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction ', ' Mine infrastructure ', ' Assets under construction ', ' Capitalised pre stripping costs ', ' Other assets in progress ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Freehold land ', ' Buildings ', ' Subsea ', ' Marine  Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings ', '']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' Exploration and evaluation assets', 46), (' investment property ', 36), (' oil and gas properties ', 31), ('plant property equipment ', 30), (' property plant equipment ', 30), (' plant and equipment ', 29), (' property ', 19)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [(' Exploration and evaluation assets', 35), (' oil and gas properties ', 33), ('plant property equipment ', 29), (' property plant equipment ', 29), (' plant and equipment ', 28), (' investment property ', 24), (' property ', 14)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [(' investment property ', 43), (' oil and gas properties ', 38), (' plant and equipment ', 36), (' Exploration and evaluation assets', 34), ('plant property equipment ', 30), (' property plant equipment ', 30), (' property ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment ', 91), (' property plant equipment ', 91), (' plant and equipment ', 77), (' oil and gas properties ', 70), (' investment property ', 62), (' property ', 50), (' Exploration and evaluation assets', 48)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' Exploration and evaluation assets', 38), (' investment property ', 33), ('plant property equipment ', 29), (' property plant equipment ', 29), (' plant and equipment ', 27), (' property ', 26), (' oil and gas properties ', 24)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' Exploration and evaluation assets', 41), (' plant and equipment ', 37), (' investment property ', 30), (' property ', 30), (' oil and gas properties ', 26), ('plant property equipment ', 25), (' property plant equipment ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 91, 'value': 10900622.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['18'], 'line_item_value': [10900622.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' Exploration and evaluation assets', 46), (' investment property ', 36), (' oil and gas properties ', 31), ('plant property equipment ', 30), (' property plant equipment ', 30), (' plant and equipment ', 29), (' property ', 19)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = financial assets at fair value through oci , res_fuzz_match = [(' Exploration and evaluation assets', 35), (' oil and gas properties ', 33), ('plant property equipment ', 29), (' property plant equipment ', 29), (' plant and equipment ', 28), (' investment property ', 24), (' property ', 14)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = investments in associates , res_fuzz_match = [(' investment property ', 43), (' oil and gas properties ', 38), (' plant and equipment ', 36), (' Exploration and evaluation assets', 34), ('plant property equipment ', 30), (' property plant equipment ', 30), (' property ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment ', 91), (' property plant equipment ', 91), (' plant and equipment ', 77), (' oil and gas properties ', 70), (' investment property ', 62), (' property ', 50), (' Exploration and evaluation assets', 48)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' Exploration and evaluation assets', 38), (' investment property ', 33), ('plant property equipment ', 29), (' property plant equipment ', 29), (' plant and equipment ', 27), (' property ', 26), (' oil and gas properties ', 24)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' Exploration and evaluation assets', 41), (' plant and equipment ', 37), (' investment property ', 30), (' property ', 30), (' oil and gas properties ', 26), ('plant property equipment ', 25), (' property plant equipment ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 91, 'value': 11089359.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['18'], 'line_item_value': [11089359.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['cost ', ' gross ', ' investment property ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction ', ' Mine infrastructure ', ' Assets under construction ', ' Capitalised pre stripping costs ', ' Other assets in progress ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Freehold land ', ' Buildings ', ' Subsea ', ' Marine  Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings ', ''] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-24 10:23:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables ', 46), (' unbilled ', 40), (' government subsidies receivable ', 38), (' trade and other receivables', 38), (' trade receivables ', 35), (' receivable ', 33), (' billed ', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [(' receivable ', 50), ('account receivables ', 43), (' unbilled ', 40), (' trade and other receivables', 36), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' billed ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = loan receivable , res_fuzz_match = [(' receivable ', 100), ('account receivables ', 82), (' trade receivables ', 73), (' government subsidies receivable ', 64), (' trade and other receivables', 64), (' billed ', 25), (' unbilled ', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' trade and other receivables', 64), (' government subsidies receivable ', 55), ('account receivables ', 36), (' trade receivables ', 36), (' receivable ', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 5], 'score': 100, 'value': 5964804.0, 'line_item_label': ['Trade and other receivables', 'Loan receivable'], 'note_numbers': ['12', '16'], 'line_item_value': [2212804.0, 3752000.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables ', 46), (' unbilled ', 40), (' government subsidies receivable ', 38), (' trade and other receivables', 38), (' trade receivables ', 35), (' receivable ', 33), (' billed ', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [(' receivable ', 50), ('account receivables ', 43), (' unbilled ', 40), (' trade and other receivables', 36), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' billed ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = loan receivable , res_fuzz_match = [(' receivable ', 100), ('account receivables ', 82), (' trade receivables ', 73), (' government subsidies receivable ', 64), (' trade and other receivables', 64), (' billed ', 25), (' unbilled ', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_particular = other assets , res_fuzz_match = [(' trade and other receivables', 64), (' government subsidies receivable ', 55), ('account receivables ', 36), (' trade receivables ', 36), (' receivable ', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 5], 'score': 100, 'value': 3479917.0, 'line_item_label': ['Trade and other receivables', 'Loan receivable'], 'note_numbers': ['12', '16'], 'line_item_value': [1231917.0, 2248000.0]}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2021 , res_fuzz_match = [('charges paid in advance ', 47), (' trade debtors from contracts with customers', 43), (' related party receivables ', 39), (' share of joint venture receivables ', 39), (' receivables from related parties ', 39), (' net trade debtors ', 38), (' provision for impairment losses ', 36), (' allowance for expected credit loss ', 36), ('trade receivables ', 33), (' other debtors ', 33), (' trade debtors ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [('charges paid in advance ', 40), (' provision for impairment losses ', 40), (' allowance for expected credit loss ', 40), ('trade receivables ', 20), (' related party receivables ', 20), (' trade debtors ', 20), (' other debtors ', 20), (' share of joint venture receivables ', 20), (' net trade debtors ', 20), (' receivables from related parties ', 20), (' trade debtors from contracts with customers', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' other debtors ', 50), (' net trade debtors ', 50), (' allowance for expected credit loss ', 50), (' related party receivables ', 40), (' trade debtors ', 40), (' share of joint venture receivables ', 40), ('charges paid in advance ', 40), (' receivables from related parties ', 40), (' trade debtors from contracts with customers', 40), ('trade receivables ', 30), (' provision for impairment losses ', 30)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [('charges paid in advance ', 40), (' provision for impairment losses ', 40), (' allowance for expected credit loss ', 40), ('trade receivables ', 20), (' related party receivables ', 20), (' trade debtors ', 20), (' other debtors ', 20), (' share of joint venture receivables ', 20), (' net trade debtors ', 20), (' receivables from related parties ', 20), (' trade debtors from contracts with customers', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' other debtors ', 45), (' provision for impairment losses ', 45), (' allowance for expected credit loss ', 45), (' trade debtors ', 36), (' net trade debtors ', 36), (' receivables from related parties ', 36), (' trade debtors from contracts with customers', 36), ('trade receivables ', 27), (' related party receivables ', 27), (' share of joint venture receivables ', 27), ('charges paid in advance ', 18)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [('charges paid in advance ', 40), (' provision for impairment losses ', 40), (' allowance for expected credit loss ', 40), ('trade receivables ', 20), (' related party receivables ', 20), (' trade debtors ', 20), (' other debtors ', 20), (' share of joint venture receivables ', 20), (' net trade debtors ', 20), (' receivables from related parties ', 20), (' trade debtors from contracts with customers', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [('trade receivables ', 55), (' related party receivables ', 50), (' other debtors ', 50), (' share of joint venture receivables ', 50), (' net trade debtors ', 50), (' allowance for expected credit loss ', 50), (' trade debtors ', 42), (' receivables from related parties ', 42), (' trade debtors from contracts with customers', 42), (' provision for impairment losses ', 33), ('charges paid in advance ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [('charges paid in advance ', 40), (' provision for impairment losses ', 40), (' allowance for expected credit loss ', 40), ('trade receivables ', 20), (' related party receivables ', 20), (' trade debtors ', 20), (' other debtors ', 20), (' share of joint venture receivables ', 20), (' net trade debtors ', 20), (' receivables from related parties ', 20), (' trade debtors from contracts with customers', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2022 , res_fuzz_match = [('charges paid in advance ', 47), (' trade debtors from contracts with customers', 43), (' related party receivables ', 39), (' share of joint venture receivables ', 39), (' receivables from related parties ', 39), (' net trade debtors ', 38), (' provision for impairment losses ', 36), (' allowance for expected credit loss ', 36), ('trade receivables ', 33), (' other debtors ', 33), (' trade debtors ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [('charges paid in advance ', 40), (' provision for impairment losses ', 40), (' allowance for expected credit loss ', 40), ('trade receivables ', 20), (' related party receivables ', 20), (' trade debtors ', 20), (' other debtors ', 20), (' share of joint venture receivables ', 20), (' net trade debtors ', 20), (' receivables from related parties ', 20), (' trade debtors from contracts with customers', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' other debtors ', 50), (' net trade debtors ', 50), (' allowance for expected credit loss ', 50), (' related party receivables ', 40), (' trade debtors ', 40), (' share of joint venture receivables ', 40), ('charges paid in advance ', 40), (' receivables from related parties ', 40), (' trade debtors from contracts with customers', 40), ('trade receivables ', 30), (' provision for impairment losses ', 30)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [('charges paid in advance ', 40), (' provision for impairment losses ', 40), (' allowance for expected credit loss ', 40), ('trade receivables ', 20), (' related party receivables ', 20), (' trade debtors ', 20), (' other debtors ', 20), (' share of joint venture receivables ', 20), (' net trade debtors ', 20), (' receivables from related parties ', 20), (' trade debtors from contracts with customers', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' other debtors ', 45), (' provision for impairment losses ', 45), (' allowance for expected credit loss ', 45), (' trade debtors ', 36), (' net trade debtors ', 36), (' receivables from related parties ', 36), (' trade debtors from contracts with customers', 36), ('trade receivables ', 27), (' related party receivables ', 27), (' share of joint venture receivables ', 27), ('charges paid in advance ', 18)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [('charges paid in advance ', 40), (' provision for impairment losses ', 40), (' allowance for expected credit loss ', 40), ('trade receivables ', 20), (' related party receivables ', 20), (' trade debtors ', 20), (' other debtors ', 20), (' share of joint venture receivables ', 20), (' net trade debtors ', 20), (' receivables from related parties ', 20), (' trade debtors from contracts with customers', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [('trade receivables ', 55), (' related party receivables ', 50), (' other debtors ', 50), (' share of joint venture receivables ', 50), (' net trade debtors ', 50), (' allowance for expected credit loss ', 50), (' trade debtors ', 42), (' receivables from related parties ', 42), (' trade debtors from contracts with customers', 42), (' provision for impairment losses ', 33), ('charges paid in advance ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [('charges paid in advance ', 40), (' provision for impairment losses ', 40), (' allowance for expected credit loss ', 40), ('trade receivables ', 20), (' related party receivables ', 20), (' trade debtors ', 20), (' other debtors ', 20), (' share of joint venture receivables ', 20), (' net trade debtors ', 20), (' receivables from related parties ', 20), (' trade debtors from contracts with customers', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2023 , res_fuzz_match = [('charges paid in advance ', 47), (' trade debtors from contracts with customers', 43), (' related party receivables ', 39), (' share of joint venture receivables ', 39), (' receivables from related parties ', 39), (' net trade debtors ', 38), (' provision for impairment losses ', 36), (' allowance for expected credit loss ', 36), ('trade receivables ', 33), (' other debtors ', 33), (' trade debtors ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = buildings , res_fuzz_match = [('charges paid in advance ', 40), (' provision for impairment losses ', 40), (' allowance for expected credit loss ', 40), ('trade receivables ', 20), (' related party receivables ', 20), (' trade debtors ', 20), (' other debtors ', 20), (' share of joint venture receivables ', 20), (' net trade debtors ', 20), (' receivables from related parties ', 20), (' trade debtors from contracts with customers', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2021 , res_fuzz_match = [('charges paid in advance ', 47), (' trade debtors from contracts with customers', 43), (' related party receivables ', 39), (' share of joint venture receivables ', 39), (' receivables from related parties ', 39), (' net trade debtors ', 38), (' provision for impairment losses ', 36), (' allowance for expected credit loss ', 36), ('trade receivables ', 33), (' other debtors ', 33), (' trade debtors ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' related party receivables ', 53), ('trade receivables ', 50), (' share of joint venture receivables ', 47), (' net trade debtors ', 47), (' trade debtors ', 42), (' receivables from related parties ', 40), (' other debtors ', 33), ('charges paid in advance ', 33), (' provision for impairment losses ', 33), (' allowance for expected credit loss ', 33), (' trade debtors from contracts with customers', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' other debtors ', 50), (' net trade debtors ', 50), (' allowance for expected credit loss ', 50), (' related party receivables ', 40), (' trade debtors ', 40), (' share of joint venture receivables ', 40), ('charges paid in advance ', 40), (' receivables from related parties ', 40), (' trade debtors from contracts with customers', 40), ('trade receivables ', 30), (' provision for impairment losses ', 30)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' related party receivables ', 53), ('trade receivables ', 50), (' share of joint venture receivables ', 47), (' net trade debtors ', 47), (' trade debtors ', 42), (' receivables from related parties ', 40), (' other debtors ', 33), ('charges paid in advance ', 33), (' provision for impairment losses ', 33), (' allowance for expected credit loss ', 33), (' trade debtors from contracts with customers', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' other debtors ', 45), (' provision for impairment losses ', 45), (' allowance for expected credit loss ', 45), (' trade debtors ', 36), (' net trade debtors ', 36), (' receivables from related parties ', 36), (' trade debtors from contracts with customers', 36), ('trade receivables ', 27), (' related party receivables ', 27), (' share of joint venture receivables ', 27), ('charges paid in advance ', 18)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' related party receivables ', 53), ('trade receivables ', 50), (' share of joint venture receivables ', 47), (' net trade debtors ', 47), (' trade debtors ', 42), (' receivables from related parties ', 40), (' other debtors ', 33), ('charges paid in advance ', 33), (' provision for impairment losses ', 33), (' allowance for expected credit loss ', 33), (' trade debtors from contracts with customers', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [('trade receivables ', 55), (' related party receivables ', 50), (' other debtors ', 50), (' share of joint venture receivables ', 50), (' net trade debtors ', 50), (' allowance for expected credit loss ', 50), (' trade debtors ', 42), (' receivables from related parties ', 42), (' trade debtors from contracts with customers', 42), (' provision for impairment losses ', 33), ('charges paid in advance ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' related party receivables ', 53), ('trade receivables ', 50), (' share of joint venture receivables ', 47), (' net trade debtors ', 47), (' trade debtors ', 42), (' receivables from related parties ', 40), (' other debtors ', 33), ('charges paid in advance ', 33), (' provision for impairment losses ', 33), (' allowance for expected credit loss ', 33), (' trade debtors from contracts with customers', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2022 , res_fuzz_match = [('charges paid in advance ', 47), (' trade debtors from contracts with customers', 43), (' related party receivables ', 39), (' share of joint venture receivables ', 39), (' receivables from related parties ', 39), (' net trade debtors ', 38), (' provision for impairment losses ', 36), (' allowance for expected credit loss ', 36), ('trade receivables ', 33), (' other debtors ', 33), (' trade debtors ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' related party receivables ', 53), ('trade receivables ', 50), (' share of joint venture receivables ', 47), (' net trade debtors ', 47), (' trade debtors ', 42), (' receivables from related parties ', 40), (' other debtors ', 33), ('charges paid in advance ', 33), (' provision for impairment losses ', 33), (' allowance for expected credit loss ', 33), (' trade debtors from contracts with customers', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' other debtors ', 50), (' net trade debtors ', 50), (' allowance for expected credit loss ', 50), (' related party receivables ', 40), (' trade debtors ', 40), (' share of joint venture receivables ', 40), ('charges paid in advance ', 40), (' receivables from related parties ', 40), (' trade debtors from contracts with customers', 40), ('trade receivables ', 30), (' provision for impairment losses ', 30)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' related party receivables ', 53), ('trade receivables ', 50), (' share of joint venture receivables ', 47), (' net trade debtors ', 47), (' trade debtors ', 42), (' receivables from related parties ', 40), (' other debtors ', 33), ('charges paid in advance ', 33), (' provision for impairment losses ', 33), (' allowance for expected credit loss ', 33), (' trade debtors from contracts with customers', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' other debtors ', 45), (' provision for impairment losses ', 45), (' allowance for expected credit loss ', 45), (' trade debtors ', 36), (' net trade debtors ', 36), (' receivables from related parties ', 36), (' trade debtors from contracts with customers', 36), ('trade receivables ', 27), (' related party receivables ', 27), (' share of joint venture receivables ', 27), ('charges paid in advance ', 18)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' related party receivables ', 53), ('trade receivables ', 50), (' share of joint venture receivables ', 47), (' net trade debtors ', 47), (' trade debtors ', 42), (' receivables from related parties ', 40), (' other debtors ', 33), ('charges paid in advance ', 33), (' provision for impairment losses ', 33), (' allowance for expected credit loss ', 33), (' trade debtors from contracts with customers', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [('trade receivables ', 55), (' related party receivables ', 50), (' other debtors ', 50), (' share of joint venture receivables ', 50), (' net trade debtors ', 50), (' allowance for expected credit loss ', 50), (' trade debtors ', 42), (' receivables from related parties ', 42), (' trade debtors from contracts with customers', 42), (' provision for impairment losses ', 33), ('charges paid in advance ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' related party receivables ', 53), ('trade receivables ', 50), (' share of joint venture receivables ', 47), (' net trade debtors ', 47), (' trade debtors ', 42), (' receivables from related parties ', 40), (' other debtors ', 33), ('charges paid in advance ', 33), (' provision for impairment losses ', 33), (' allowance for expected credit loss ', 33), (' trade debtors from contracts with customers', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2023 , res_fuzz_match = [('charges paid in advance ', 47), (' trade debtors from contracts with customers', 43), (' related party receivables ', 39), (' share of joint venture receivables ', 39), (' receivables from related parties ', 39), (' net trade debtors ', 38), (' provision for impairment losses ', 36), (' allowance for expected credit loss ', 36), ('trade receivables ', 33), (' other debtors ', 33), (' trade debtors ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' related party receivables ', 53), ('trade receivables ', 50), (' share of joint venture receivables ', 47), (' net trade debtors ', 47), (' trade debtors ', 42), (' receivables from related parties ', 40), (' other debtors ', 33), ('charges paid in advance ', 33), (' provision for impairment losses ', 33), (' allowance for expected credit loss ', 33), (' trade debtors from contracts with customers', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2021 , res_fuzz_match = [('charges paid in advance ', 47), (' trade debtors from contracts with customers', 43), (' related party receivables ', 39), (' share of joint venture receivables ', 39), (' receivables from related parties ', 39), (' net trade debtors ', 38), (' provision for impairment losses ', 36), (' allowance for expected credit loss ', 36), ('trade receivables ', 33), (' other debtors ', 33), (' trade debtors ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' net trade debtors ', 60), (' trade debtors from contracts with customers', 60), ('trade receivables ', 40), (' related party receivables ', 40), (' trade debtors ', 40), (' other debtors ', 40), (' share of joint venture receivables ', 40), (' provision for impairment losses ', 40), (' receivables from related parties ', 40), (' allowance for expected credit loss ', 40), ('charges paid in advance ', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' other debtors ', 50), (' net trade debtors ', 50), (' allowance for expected credit loss ', 50), (' related party receivables ', 40), (' trade debtors ', 40), (' share of joint venture receivables ', 40), ('charges paid in advance ', 40), (' receivables from related parties ', 40), (' trade debtors from contracts with customers', 40), ('trade receivables ', 30), (' provision for impairment losses ', 30)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' net trade debtors ', 60), (' trade debtors from contracts with customers', 60), ('trade receivables ', 40), (' related party receivables ', 40), (' trade debtors ', 40), (' other debtors ', 40), (' share of joint venture receivables ', 40), (' provision for impairment losses ', 40), (' receivables from related parties ', 40), (' allowance for expected credit loss ', 40), ('charges paid in advance ', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' other debtors ', 45), (' provision for impairment losses ', 45), (' allowance for expected credit loss ', 45), (' trade debtors ', 36), (' net trade debtors ', 36), (' receivables from related parties ', 36), (' trade debtors from contracts with customers', 36), ('trade receivables ', 27), (' related party receivables ', 27), (' share of joint venture receivables ', 27), ('charges paid in advance ', 18)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' net trade debtors ', 60), (' trade debtors from contracts with customers', 60), ('trade receivables ', 40), (' related party receivables ', 40), (' trade debtors ', 40), (' other debtors ', 40), (' share of joint venture receivables ', 40), (' provision for impairment losses ', 40), (' receivables from related parties ', 40), (' allowance for expected credit loss ', 40), ('charges paid in advance ', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [('trade receivables ', 55), (' related party receivables ', 50), (' other debtors ', 50), (' share of joint venture receivables ', 50), (' net trade debtors ', 50), (' allowance for expected credit loss ', 50), (' trade debtors ', 42), (' receivables from related parties ', 42), (' trade debtors from contracts with customers', 42), (' provision for impairment losses ', 33), ('charges paid in advance ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' net trade debtors ', 60), (' trade debtors from contracts with customers', 60), ('trade receivables ', 40), (' related party receivables ', 40), (' trade debtors ', 40), (' other debtors ', 40), (' share of joint venture receivables ', 40), (' provision for impairment losses ', 40), (' receivables from related parties ', 40), (' allowance for expected credit loss ', 40), ('charges paid in advance ', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2022 , res_fuzz_match = [('charges paid in advance ', 47), (' trade debtors from contracts with customers', 43), (' related party receivables ', 39), (' share of joint venture receivables ', 39), (' receivables from related parties ', 39), (' net trade debtors ', 38), (' provision for impairment losses ', 36), (' allowance for expected credit loss ', 36), ('trade receivables ', 33), (' other debtors ', 33), (' trade debtors ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' net trade debtors ', 60), (' trade debtors from contracts with customers', 60), ('trade receivables ', 40), (' related party receivables ', 40), (' trade debtors ', 40), (' other debtors ', 40), (' share of joint venture receivables ', 40), (' provision for impairment losses ', 40), (' receivables from related parties ', 40), (' allowance for expected credit loss ', 40), ('charges paid in advance ', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none additions , res_fuzz_match = [(' other debtors ', 50), (' net trade debtors ', 50), (' allowance for expected credit loss ', 50), (' related party receivables ', 40), (' trade debtors ', 40), (' share of joint venture receivables ', 40), ('charges paid in advance ', 40), (' receivables from related parties ', 40), (' trade debtors from contracts with customers', 40), ('trade receivables ', 30), (' provision for impairment losses ', 30)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' net trade debtors ', 60), (' trade debtors from contracts with customers', 60), ('trade receivables ', 40), (' related party receivables ', 40), (' trade debtors ', 40), (' other debtors ', 40), (' share of joint venture receivables ', 40), (' provision for impairment losses ', 40), (' receivables from related parties ', 40), (' allowance for expected credit loss ', 40), ('charges paid in advance ', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none disposal , res_fuzz_match = [(' other debtors ', 45), (' provision for impairment losses ', 45), (' allowance for expected credit loss ', 45), (' trade debtors ', 36), (' net trade debtors ', 36), (' receivables from related parties ', 36), (' trade debtors from contracts with customers', 36), ('trade receivables ', 27), (' related party receivables ', 27), (' share of joint venture receivables ', 27), ('charges paid in advance ', 18)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' net trade debtors ', 60), (' trade debtors from contracts with customers', 60), ('trade receivables ', 40), (' related party receivables ', 40), (' trade debtors ', 40), (' other debtors ', 40), (' share of joint venture receivables ', 40), (' provision for impairment losses ', 40), (' receivables from related parties ', 40), (' allowance for expected credit loss ', 40), ('charges paid in advance ', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none depreciation , res_fuzz_match = [('trade receivables ', 55), (' related party receivables ', 50), (' other debtors ', 50), (' share of joint venture receivables ', 50), (' net trade debtors ', 50), (' allowance for expected credit loss ', 50), (' trade debtors ', 42), (' receivables from related parties ', 42), (' trade debtors from contracts with customers', 42), (' provision for impairment losses ', 33), ('charges paid in advance ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' net trade debtors ', 60), (' trade debtors from contracts with customers', 60), ('trade receivables ', 40), (' related party receivables ', 40), (' trade debtors ', 40), (' other debtors ', 40), (' share of joint venture receivables ', 40), (' provision for impairment losses ', 40), (' receivables from related parties ', 40), (' allowance for expected credit loss ', 40), ('charges paid in advance ', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = none carrying amount at 31 march 2023 , res_fuzz_match = [('charges paid in advance ', 47), (' trade debtors from contracts with customers', 43), (' related party receivables ', 39), (' share of joint venture receivables ', 39), (' receivables from related parties ', 39), (' net trade debtors ', 38), (' provision for impairment losses ', 36), (' allowance for expected credit loss ', 36), ('trade receivables ', 33), (' other debtors ', 33), (' trade debtors ', 25)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' net trade debtors ', 60), (' trade debtors from contracts with customers', 60), ('trade receivables ', 40), (' related party receivables ', 40), (' trade debtors ', 40), (' other debtors ', 40), (' share of joint venture receivables ', 40), (' provision for impairment losses ', 40), (' receivables from related parties ', 40), (' allowance for expected credit loss ', 40), ('charges paid in advance ', 20)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:02+0530 - sLogger - DEBUG - keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and plant and equipment, at cost nan nan nan nan , res_fuzz_match = [('trade receivables ', 50), (' receivables from related parties ', 48), ('charges paid in advance ', 47), (' related party receivables ', 44), (' net trade debtors ', 44), (' trade debtors ', 42), (' provision for impairment losses ', 41), (' allowance for expected credit loss ', 39), (' trade debtors from contracts with customers', 37), (' share of joint venture receivables ', 36), (' other debtors ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and less: depreciation and amortisation nan nan nan nan , res_fuzz_match = [(' net trade debtors ', 62), ('trade receivables ', 50), (' trade debtors ', 50), (' receivables from related parties ', 48), (' provision for impairment losses ', 45), (' related party receivables ', 44), (' allowance for expected credit loss ', 43), (' other debtors ', 42), ('charges paid in advance ', 41), (' share of joint venture receivables ', 40), (' trade debtors from contracts with customers', 39)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [(' trade debtors ', 50), (' net trade debtors ', 50), (' related party receivables ', 44), (' receivables from related parties ', 43), (' other debtors ', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), ('trade receivables ', 33), (' share of joint venture receivables ', 32), (' trade debtors from contracts with customers', 32), (' allowance for expected credit loss ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and mining rights at cost nan nan nan nan , res_fuzz_match = [('trade receivables ', 50), (' related party receivables ', 50), (' net trade debtors ', 50), ('charges paid in advance ', 47), (' receivables from related parties ', 43), (' trade debtors ', 42), (' allowance for expected credit loss ', 39), (' trade debtors from contracts with customers', 37), (' share of joint venture receivables ', 36), (' provision for impairment losses ', 36), (' other debtors ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and less: accumulated nan nan nan nan , res_fuzz_match = [(' provision for impairment losses ', 45), (' related party receivables ', 44), (' net trade debtors ', 44), ('trade receivables ', 42), (' trade debtors ', 42), ('charges paid in advance ', 41), (' receivables from related parties ', 39), (' share of joint venture receivables ', 36), (' other debtors ', 33), (' trade debtors from contracts with customers', 32), (' allowance for expected credit loss ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [(' trade debtors ', 50), (' net trade debtors ', 50), (' related party receivables ', 44), (' receivables from related parties ', 43), (' other debtors ', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), ('trade receivables ', 33), (' share of joint venture receivables ', 32), (' trade debtors from contracts with customers', 32), (' allowance for expected credit loss ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and deferred mining at cost nan nan nan nan , res_fuzz_match = [(' net trade debtors ', 56), (' trade debtors ', 50), (' related party receivables ', 44), (' receivables from related parties ', 43), ('trade receivables ', 42), (' other debtors ', 42), (' trade debtors from contracts with customers', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), (' share of joint venture receivables ', 40), (' allowance for expected credit loss ', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and less: accumulated amortisation nan nan nan nan , res_fuzz_match = [(' provision for impairment losses ', 45), (' related party receivables ', 44), (' net trade debtors ', 44), ('trade receivables ', 42), (' trade debtors ', 42), ('charges paid in advance ', 41), (' receivables from related parties ', 39), (' share of joint venture receivables ', 36), (' trade debtors from contracts with customers', 34), (' other debtors ', 33), (' allowance for expected credit loss ', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [(' trade debtors ', 50), (' net trade debtors ', 50), (' related party receivables ', 44), (' receivables from related parties ', 43), (' other debtors ', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), ('trade receivables ', 33), (' share of joint venture receivables ', 32), (' trade debtors from contracts with customers', 32), (' allowance for expected credit loss ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and capital work in progress at cost nan nan nan nan , res_fuzz_match = [(' provision for impairment losses ', 50), ('charges paid in advance ', 47), (' related party receivables ', 44), (' net trade debtors ', 44), (' receivables from related parties ', 43), ('trade receivables ', 42), (' trade debtors ', 42), (' trade debtors from contracts with customers', 42), (' share of joint venture receivables ', 40), (' allowance for expected credit loss ', 39), (' other debtors ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and exploration and assets nan nan nan nan , res_fuzz_match = [(' net trade debtors ', 56), (' trade debtors ', 50), (' related party receivables ', 44), ('trade receivables ', 42), (' other debtors ', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), (' receivables from related parties ', 39), (' allowance for expected credit loss ', 39), (' trade debtors from contracts with customers', 37), (' share of joint venture receivables ', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and total property, plant and equipment net book value nan nan nan nan , res_fuzz_match = [('trade receivables ', 50), (' trade debtors ', 50), (' net trade debtors ', 50), (' related party receivables ', 44), (' receivables from related parties ', 43), (' other debtors ', 42), (' trade debtors from contracts with customers', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), (' share of joint venture receivables ', 40), (' allowance for expected credit loss ', 39)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and nan plant and equipment mining rights capital work in progress exploration & evaluation assets , res_fuzz_match = [('charges paid in advance ', 47), (' provision for impairment losses ', 45), (' related party receivables ', 44), (' net trade debtors ', 44), (' receivables from related parties ', 43), (' allowance for expected credit loss ', 43), ('trade receivables ', 42), (' trade debtors ', 42), (' other debtors ', 42), (' trade debtors from contracts with customers', 42), (' share of joint venture receivables ', 40)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and nan $000 $000 $000 $000 , res_fuzz_match = [('charges paid in advance ', 53), (' related party receivables ', 44), (' net trade debtors ', 44), (' receivables from related parties ', 41), (' share of joint venture receivables ', 36), (' provision for impairment losses ', 36), (' allowance for expected credit loss ', 36), ('trade receivables ', 33), (' trade debtors ', 33), (' other debtors ', 33), (' trade debtors from contracts with customers', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and carrying amount at 1 april 2021 6732948 613929 950738 1225000 , res_fuzz_match = [(' receivables from related parties ', 48), ('charges paid in advance ', 47), (' related party receivables ', 44), (' net trade debtors ', 44), ('trade receivables ', 42), (' other debtors ', 42), (' share of joint venture receivables ', 36), (' provision for impairment losses ', 36), (' allowance for expected credit loss ', 36), (' trade debtors ', 33), (' trade debtors from contracts with customers', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and additions 234125 nan 376897 52906 , res_fuzz_match = [('charges paid in advance ', 53), (' net trade debtors ', 50), (' related party receivables ', 44), (' receivables from related parties ', 43), ('trade receivables ', 42), (' trade debtors ', 42), (' provision for impairment losses ', 36), (' allowance for expected credit loss ', 36), (' trade debtors from contracts with customers', 36), (' other debtors ', 33), (' share of joint venture receivables ', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and disposals / write downs (1,223) nan nan nan , res_fuzz_match = [(' other debtors ', 50), (' net trade debtors ', 50), (' related party receivables ', 44), (' receivables from related parties ', 43), ('trade receivables ', 42), (' trade debtors ', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), (' trade debtors from contracts with customers', 37), (' share of joint venture receivables ', 36), (' allowance for expected credit loss ', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and remeasurement (note 24) 796530 nan nan nan , res_fuzz_match = [('trade receivables ', 50), (' related party receivables ', 50), (' net trade debtors ', 50), (' receivables from related parties ', 43), (' trade debtors ', 42), (' other debtors ', 42), ('charges paid in advance ', 41), (' share of joint venture receivables ', 40), (' provision for impairment losses ', 36), (' trade debtors from contracts with customers', 34), (' allowance for expected credit loss ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and impairment charge (10,023) nan nan nan , res_fuzz_match = [('charges paid in advance ', 65), (' related party receivables ', 50), (' provision for impairment losses ', 50), (' receivables from related parties ', 48), (' net trade debtors ', 44), ('trade receivables ', 42), (' trade debtors ', 42), (' other debtors ', 42), (' share of joint venture receivables ', 36), (' trade debtors from contracts with customers', 32), (' allowance for expected credit loss ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and depreciation expense (515,672) (25,874) nan nan , res_fuzz_match = [(' related party receivables ', 56), (' net trade debtors ', 56), ('trade receivables ', 50), (' trade debtors ', 50), (' share of joint venture receivables ', 44), (' receivables from related parties ', 43), (' other debtors ', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 36), (' allowance for expected credit loss ', 36), (' trade debtors from contracts with customers', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = transfers adjustments carrying amount at 31 march 2022 7789141 588055 775179 1277906 , res_fuzz_match = [(' trade debtors ', 50), ('charges paid in advance ', 47), (' trade debtors from contracts with customers', 47), (' related party receivables ', 44), (' net trade debtors ', 44), (' receivables from related parties ', 43), ('trade receivables ', 42), (' other debtors ', 42), (' share of joint venture receivables ', 40), (' allowance for expected credit loss ', 39), (' provision for impairment losses ', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = transfers adjustments additions 158611 nan 532955 nan , res_fuzz_match = [(' trade debtors ', 50), (' net trade debtors ', 44), ('trade receivables ', 42), (' other debtors ', 42), ('charges paid in advance ', 41), (' trade debtors from contracts with customers', 41), (' related party receivables ', 39), (' receivables from related parties ', 39), (' share of joint venture receivables ', 36), (' provision for impairment losses ', 36), (' allowance for expected credit loss ', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = transfers adjustments disposals / write downs (8,580) nan (9,427) nan , res_fuzz_match = [(' trade debtors ', 50), (' net trade debtors ', 44), ('trade receivables ', 42), (' other debtors ', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), (' related party receivables ', 39), (' receivables from related parties ', 39), (' trade debtors from contracts with customers', 39), (' share of joint venture receivables ', 36), (' allowance for expected credit loss ', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = transfers adjustments remeasurement (note 24) 32778 nan nan nan , res_fuzz_match = [('trade receivables ', 50), (' trade debtors ', 50), (' related party receivables ', 44), (' share of joint venture receivables ', 44), (' net trade debtors ', 44), (' other debtors ', 42), (' trade debtors from contracts with customers', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), (' receivables from related parties ', 39), (' allowance for expected credit loss ', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = transfers adjustments impairment charge (1,913) nan nan nan , res_fuzz_match = [('charges paid in advance ', 65), (' related party receivables ', 50), (' trade debtors ', 50), (' provision for impairment losses ', 50), (' receivables from related parties ', 43), ('trade receivables ', 42), (' other debtors ', 42), (' trade debtors from contracts with customers', 39), (' net trade debtors ', 38), (' share of joint venture receivables ', 36), (' allowance for expected credit loss ', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = transfers adjustments depreciation expense (555,368) (23,790) nan nan , res_fuzz_match = [('trade receivables ', 58), (' related party receivables ', 50), (' trade debtors ', 50), (' net trade debtors ', 50), (' share of joint venture receivables ', 44), (' receivables from related parties ', 43), (' other debtors ', 42), ('charges paid in advance ', 41), (' allowance for expected credit loss ', 39), (' trade debtors from contracts with customers', 34), (' provision for impairment losses ', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = transfers adjustments transfer from right-of-use assets 94838 nan nan nan , res_fuzz_match = [(' trade debtors ', 50), (' net trade debtors ', 50), (' trade debtors from contracts with customers', 50), (' receivables from related parties ', 48), ('trade receivables ', 42), (' other debtors ', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), (' share of joint venture receivables ', 40), (' related party receivables ', 39), (' allowance for expected credit loss ', 39)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = transfers 1a adjustments carrying amount at 31 march 2023 7775980 564265 1032233 1277907 , res_fuzz_match = [('charges paid in advance ', 47), (' related party receivables ', 44), (' net trade debtors ', 44), (' trade debtors from contracts with customers', 44), (' receivables from related parties ', 43), ('trade receivables ', 42), (' trade debtors ', 42), (' other debtors ', 42), (' share of joint venture receivables ', 40), (' allowance for expected credit loss ', 39), (' provision for impairment losses ', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and plant and equipment, at cost nan nan nan nan , res_fuzz_match = [('trade receivables ', 50), (' receivables from related parties ', 48), ('charges paid in advance ', 47), (' related party receivables ', 44), (' net trade debtors ', 44), (' trade debtors ', 42), (' provision for impairment losses ', 41), (' allowance for expected credit loss ', 39), (' trade debtors from contracts with customers', 37), (' share of joint venture receivables ', 36), (' other debtors ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and less: depreciation and amortisation nan nan nan nan , res_fuzz_match = [(' net trade debtors ', 62), ('trade receivables ', 50), (' trade debtors ', 50), (' receivables from related parties ', 48), (' provision for impairment losses ', 45), (' related party receivables ', 44), (' allowance for expected credit loss ', 43), (' other debtors ', 42), ('charges paid in advance ', 41), (' share of joint venture receivables ', 40), (' trade debtors from contracts with customers', 39)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [(' trade debtors ', 50), (' net trade debtors ', 50), (' related party receivables ', 44), (' receivables from related parties ', 43), (' other debtors ', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), ('trade receivables ', 33), (' share of joint venture receivables ', 32), (' trade debtors from contracts with customers', 32), (' allowance for expected credit loss ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and mining rights at cost nan nan nan nan , res_fuzz_match = [('trade receivables ', 50), (' related party receivables ', 50), (' net trade debtors ', 50), ('charges paid in advance ', 47), (' receivables from related parties ', 43), (' trade debtors ', 42), (' allowance for expected credit loss ', 39), (' trade debtors from contracts with customers', 37), (' share of joint venture receivables ', 36), (' provision for impairment losses ', 36), (' other debtors ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and less: accumulated nan nan nan nan , res_fuzz_match = [(' provision for impairment losses ', 45), (' related party receivables ', 44), (' net trade debtors ', 44), ('trade receivables ', 42), (' trade debtors ', 42), ('charges paid in advance ', 41), (' receivables from related parties ', 39), (' share of joint venture receivables ', 36), (' other debtors ', 33), (' trade debtors from contracts with customers', 32), (' allowance for expected credit loss ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [(' trade debtors ', 50), (' net trade debtors ', 50), (' related party receivables ', 44), (' receivables from related parties ', 43), (' other debtors ', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), ('trade receivables ', 33), (' share of joint venture receivables ', 32), (' trade debtors from contracts with customers', 32), (' allowance for expected credit loss ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and deferred mining at cost nan nan nan nan , res_fuzz_match = [(' net trade debtors ', 56), (' trade debtors ', 50), (' related party receivables ', 44), (' receivables from related parties ', 43), ('trade receivables ', 42), (' other debtors ', 42), (' trade debtors from contracts with customers', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), (' share of joint venture receivables ', 40), (' allowance for expected credit loss ', 36)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and less: accumulated amortisation nan nan nan nan , res_fuzz_match = [(' provision for impairment losses ', 45), (' related party receivables ', 44), (' net trade debtors ', 44), ('trade receivables ', 42), (' trade debtors ', 42), ('charges paid in advance ', 41), (' receivables from related parties ', 39), (' share of joint venture receivables ', 36), (' trade debtors from contracts with customers', 34), (' other debtors ', 33), (' allowance for expected credit loss ', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and total nan nan nan nan , res_fuzz_match = [(' trade debtors ', 50), (' net trade debtors ', 50), (' related party receivables ', 44), (' receivables from related parties ', 43), (' other debtors ', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), ('trade receivables ', 33), (' share of joint venture receivables ', 32), (' trade debtors from contracts with customers', 32), (' allowance for expected credit loss ', 29)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and capital work in progress at cost nan nan nan nan , res_fuzz_match = [(' provision for impairment losses ', 50), ('charges paid in advance ', 47), (' related party receivables ', 44), (' net trade debtors ', 44), (' receivables from related parties ', 43), ('trade receivables ', 42), (' trade debtors ', 42), (' trade debtors from contracts with customers', 42), (' share of joint venture receivables ', 40), (' allowance for expected credit loss ', 39), (' other debtors ', 33)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = property, plant and exploration and assets nan nan nan nan , res_fuzz_match = [(' net trade debtors ', 56), (' trade debtors ', 50), (' related party receivables ', 44), ('trade receivables ', 42), (' other debtors ', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), (' receivables from related parties ', 39), (' allowance for expected credit loss ', 39), (' trade debtors from contracts with customers', 37), (' share of joint venture receivables ', 32)]
2023-08-24 10:23:02+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = property, plant and total property, plant and equipment net book value nan nan nan nan , res_fuzz_match = [('trade receivables ', 50), (' trade debtors ', 50), (' net trade debtors ', 50), (' related party receivables ', 44), (' receivables from related parties ', 43), (' other debtors ', 42), (' trade debtors from contracts with customers', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), (' share of joint venture receivables ', 40), (' allowance for expected credit loss ', 39)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = property, plant and nan plant and equipment mining rights capital work in progress exploration & evaluation assets , res_fuzz_match = [('charges paid in advance ', 47), (' provision for impairment losses ', 45), (' related party receivables ', 44), (' net trade debtors ', 44), (' receivables from related parties ', 43), (' allowance for expected credit loss ', 43), ('trade receivables ', 42), (' trade debtors ', 42), (' other debtors ', 42), (' trade debtors from contracts with customers', 42), (' share of joint venture receivables ', 40)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = property, plant and nan $000 $000 $000 $000 , res_fuzz_match = [('charges paid in advance ', 53), (' related party receivables ', 44), (' net trade debtors ', 44), (' receivables from related parties ', 41), (' share of joint venture receivables ', 36), (' provision for impairment losses ', 36), (' allowance for expected credit loss ', 36), ('trade receivables ', 33), (' trade debtors ', 33), (' other debtors ', 33), (' trade debtors from contracts with customers', 32)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = property, plant and carrying amount at 1 april 2021 6732948 613929 950738 1225000 , res_fuzz_match = [(' receivables from related parties ', 48), ('charges paid in advance ', 47), (' related party receivables ', 44), (' net trade debtors ', 44), ('trade receivables ', 42), (' other debtors ', 42), (' share of joint venture receivables ', 36), (' provision for impairment losses ', 36), (' allowance for expected credit loss ', 36), (' trade debtors ', 33), (' trade debtors from contracts with customers', 32)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = property, plant and additions 234125 nan 376897 52906 , res_fuzz_match = [('charges paid in advance ', 53), (' net trade debtors ', 50), (' related party receivables ', 44), (' receivables from related parties ', 43), ('trade receivables ', 42), (' trade debtors ', 42), (' provision for impairment losses ', 36), (' allowance for expected credit loss ', 36), (' trade debtors from contracts with customers', 36), (' other debtors ', 33), (' share of joint venture receivables ', 32)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = property, plant and disposals / write downs (1,223) nan nan nan , res_fuzz_match = [(' other debtors ', 50), (' net trade debtors ', 50), (' related party receivables ', 44), (' receivables from related parties ', 43), ('trade receivables ', 42), (' trade debtors ', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), (' trade debtors from contracts with customers', 37), (' share of joint venture receivables ', 36), (' allowance for expected credit loss ', 36)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = property, plant and remeasurement (note 24) 796530 nan nan nan , res_fuzz_match = [('trade receivables ', 50), (' related party receivables ', 50), (' net trade debtors ', 50), (' receivables from related parties ', 43), (' trade debtors ', 42), (' other debtors ', 42), ('charges paid in advance ', 41), (' share of joint venture receivables ', 40), (' provision for impairment losses ', 36), (' trade debtors from contracts with customers', 34), (' allowance for expected credit loss ', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = property, plant and impairment charge (10,023) nan nan nan , res_fuzz_match = [('charges paid in advance ', 65), (' related party receivables ', 50), (' provision for impairment losses ', 50), (' receivables from related parties ', 48), (' net trade debtors ', 44), ('trade receivables ', 42), (' trade debtors ', 42), (' other debtors ', 42), (' share of joint venture receivables ', 36), (' trade debtors from contracts with customers', 32), (' allowance for expected credit loss ', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = property, plant and depreciation expense (515,672) (25,874) nan nan , res_fuzz_match = [(' related party receivables ', 56), (' net trade debtors ', 56), ('trade receivables ', 50), (' trade debtors ', 50), (' share of joint venture receivables ', 44), (' receivables from related parties ', 43), (' other debtors ', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 36), (' allowance for expected credit loss ', 36), (' trade debtors from contracts with customers', 32)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = transfers adjustments carrying amount at 31 march 2022 7789141 588055 775179 1277906 , res_fuzz_match = [(' trade debtors ', 50), ('charges paid in advance ', 47), (' trade debtors from contracts with customers', 47), (' related party receivables ', 44), (' net trade debtors ', 44), (' receivables from related parties ', 43), ('trade receivables ', 42), (' other debtors ', 42), (' share of joint venture receivables ', 40), (' allowance for expected credit loss ', 39), (' provision for impairment losses ', 36)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = transfers adjustments additions 158611 nan 532955 nan , res_fuzz_match = [(' trade debtors ', 50), (' net trade debtors ', 44), ('trade receivables ', 42), (' other debtors ', 42), ('charges paid in advance ', 41), (' trade debtors from contracts with customers', 41), (' related party receivables ', 39), (' receivables from related parties ', 39), (' share of joint venture receivables ', 36), (' provision for impairment losses ', 36), (' allowance for expected credit loss ', 36)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = transfers adjustments disposals / write downs (8,580) nan (9,427) nan , res_fuzz_match = [(' trade debtors ', 50), (' net trade debtors ', 44), ('trade receivables ', 42), (' other debtors ', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), (' related party receivables ', 39), (' receivables from related parties ', 39), (' trade debtors from contracts with customers', 39), (' share of joint venture receivables ', 36), (' allowance for expected credit loss ', 36)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = transfers adjustments remeasurement (note 24) 32778 nan nan nan , res_fuzz_match = [('trade receivables ', 50), (' trade debtors ', 50), (' related party receivables ', 44), (' share of joint venture receivables ', 44), (' net trade debtors ', 44), (' other debtors ', 42), (' trade debtors from contracts with customers', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), (' receivables from related parties ', 39), (' allowance for expected credit loss ', 36)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = transfers adjustments impairment charge (1,913) nan nan nan , res_fuzz_match = [('charges paid in advance ', 65), (' related party receivables ', 50), (' trade debtors ', 50), (' provision for impairment losses ', 50), (' receivables from related parties ', 43), ('trade receivables ', 42), (' other debtors ', 42), (' trade debtors from contracts with customers', 39), (' net trade debtors ', 38), (' share of joint venture receivables ', 36), (' allowance for expected credit loss ', 32)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = transfers adjustments depreciation expense (555,368) (23,790) nan nan , res_fuzz_match = [('trade receivables ', 58), (' related party receivables ', 50), (' trade debtors ', 50), (' net trade debtors ', 50), (' share of joint venture receivables ', 44), (' receivables from related parties ', 43), (' other debtors ', 42), ('charges paid in advance ', 41), (' allowance for expected credit loss ', 39), (' trade debtors from contracts with customers', 34), (' provision for impairment losses ', 32)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = transfers adjustments transfer from right-of-use assets 94838 nan nan nan , res_fuzz_match = [(' trade debtors ', 50), (' net trade debtors ', 50), (' trade debtors from contracts with customers', 50), (' receivables from related parties ', 48), ('trade receivables ', 42), (' other debtors ', 42), ('charges paid in advance ', 41), (' provision for impairment losses ', 41), (' share of joint venture receivables ', 40), (' related party receivables ', 39), (' allowance for expected credit loss ', 39)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = transfers 1a adjustments carrying amount at 31 march 2023 7775980 564265 1032233 1277907 , res_fuzz_match = [('charges paid in advance ', 47), (' related party receivables ', 44), (' net trade debtors ', 44), (' trade debtors from contracts with customers', 44), (' receivables from related parties ', 43), ('trade receivables ', 42), (' trade debtors ', 42), (' other debtors ', 42), (' share of joint venture receivables ', 40), (' allowance for expected credit loss ', 39), (' provision for impairment losses ', 36)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = $000 , res_fuzz_match = [('trade receivables ', 0), (' related party receivables ', 0), (' trade debtors ', 0), (' other debtors ', 0), (' share of joint venture receivables ', 0), (' net trade debtors ', 0), ('charges paid in advance ', 0), (' provision for impairment losses ', 0), (' receivables from related parties ', 0), (' allowance for expected credit loss ', 0), (' trade debtors from contracts with customers', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 10:23:03+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 10:23:03+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' revenue from continuing activities', 54), ('revenue from operations ', 43), (' net sales ', 40), (' Sale of coal ', 38), (' revenue from contracts with customers ', 36), (' Sales revenue ', 35), (' sale of products ', 33), (' transmission and distribution business ', 30), (' from trading business ', 30), (' Revenue ', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue ', 100), (' Sales revenue ', 71), ('revenue from operations ', 55), (' revenue from continuing activities', 39), (' revenue from contracts with customers ', 32), (' net sales ', 29), (' sale of products ', 22), (' from trading business ', 19), (' Sale of coal ', 13), (' transmission and distribution business ', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal ', 78), (' net sales ', 71), (' sale of products ', 67), (' Sales revenue ', 50), (' from trading business ', 33), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), ('revenue from operations ', 24), (' transmission and distribution business ', 22), (' Revenue ', 13)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' from trading business ', 37), ('revenue from operations ', 36), (' sale of products ', 33), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19), (' Sales revenue ', 17), (' Revenue ', 11), (' net sales ', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [(' Sale of coal ', 38), (' revenue from continuing activities', 38), (' from trading business ', 37), ('revenue from operations ', 36), (' revenue from contracts with customers ', 36), (' net sales ', 30), (' Sales revenue ', 26), (' sale of products ', 25), (' transmission and distribution business ', 25), (' Revenue ', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' transmission and distribution business ', 45), (' revenue from continuing activities', 44), ('revenue from operations ', 38), (' Sales revenue ', 37), (' Revenue ', 36), (' net sales ', 33), (' revenue from contracts with customers ', 33), (' sale of products ', 29), (' from trading business ', 26), (' Sale of coal ', 24)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue ', 43), (' from trading business ', 37), (' sale of products ', 33), (' Revenue ', 33), (' net sales ', 30), ('revenue from operations ', 29), (' revenue from contracts with customers ', 27), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Sale of coal ', 40), (' sale of products ', 35), (' revenue from contracts with customers ', 33), (' revenue from continuing activities', 33), (' net sales ', 32), (' from trading business ', 31), (' transmission and distribution business ', 26), ('revenue from operations ', 22), (' Sales revenue ', 18), (' Revenue ', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [(' revenue from continuing activities', 56), (' transmission and distribution business ', 47), ('revenue from operations ', 46), (' revenue from contracts with customers ', 44), (' sale of products ', 33), (' from trading business ', 31), (' Revenue ', 29), (' net sales ', 27), (' Sale of coal ', 27), (' Sales revenue ', 26)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' from trading business ', 41), ('revenue from operations ', 36), (' revenue from contracts with customers ', 36), (' transmission and distribution business ', 35), (' Sales revenue ', 30), (' revenue from continuing activities', 30), (' sale of products ', 29), (' Revenue ', 23), (' net sales ', 22), (' Sale of coal ', 21)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' from trading business ', 45), (' Sales revenue ', 37), (' transmission and distribution business ', 32), (' Sale of coal ', 32), (' sale of products ', 29), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), (' Revenue ', 27), ('revenue from operations ', 25), (' net sales ', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations ', 46), (' sale of products ', 39), (' from trading business ', 35), (' revenue from continuing activities', 32), (' revenue from contracts with customers ', 31), (' transmission and distribution business ', 30), (' Sales revenue ', 27), (' Revenue ', 24), (' net sales ', 22), (' Sale of coal ', 21)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' revenue from continuing activities', 35), (' from trading business ', 34), ('revenue from operations ', 33), (' sale of products ', 32), (' Sales revenue ', 32), (' transmission and distribution business ', 30), (' Revenue ', 25), (' Sale of coal ', 23), (' net sales ', 18)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [(' revenue from contracts with customers ', 40), (' transmission and distribution business ', 37), (' revenue from continuing activities', 33), ('revenue from operations ', 29), (' from trading business ', 26), (' Sales revenue ', 22), (' sale of products ', 21), (' Sale of coal ', 19), (' Revenue ', 17), (' net sales ', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [(' revenue from continuing activities', 41), (' revenue from contracts with customers ', 35), (' transmission and distribution business ', 31), ('revenue from operations ', 28), (' from trading business ', 28), (' sale of products ', 23), (' net sales ', 21), (' Sale of coal ', 21), (' Sales revenue ', 20), (' Revenue ', 15)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [(' revenue from contracts with customers ', 43), (' transmission and distribution business ', 36), (' revenue from continuing activities', 34), ('revenue from operations ', 33), (' from trading business ', 29), (' sale of products ', 27), (' net sales ', 24), (' Sale of coal ', 24), (' Sales revenue ', 23), (' Revenue ', 15)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' revenue from contracts with customers ', 40), (' from trading business ', 38), ('revenue from operations ', 37), (' revenue from continuing activities', 35), (' sale of products ', 29), (' transmission and distribution business ', 28), (' Sales revenue ', 26), (' net sales ', 24), (' Sale of coal ', 19), (' Revenue ', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' from trading business ', 40), (' revenue from contracts with customers ', 39), (' sale of products ', 38), (' revenue from continuing activities', 37), (' Sales revenue ', 35), ('revenue from operations ', 31), (' transmission and distribution business ', 29), (' net sales ', 28), (' Sale of coal ', 27), (' Revenue ', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 10458216.0, 'line_item_label': ['Revenue'], 'note_numbers': ['3'], 'line_item_value': [10458216.0]}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' revenue from continuing activities', 54), ('revenue from operations ', 43), (' net sales ', 40), (' Sale of coal ', 38), (' revenue from contracts with customers ', 36), (' Sales revenue ', 35), (' sale of products ', 33), (' transmission and distribution business ', 30), (' from trading business ', 30), (' Revenue ', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue ', 100), (' Sales revenue ', 71), ('revenue from operations ', 55), (' revenue from continuing activities', 39), (' revenue from contracts with customers ', 32), (' net sales ', 29), (' sale of products ', 22), (' from trading business ', 19), (' Sale of coal ', 13), (' transmission and distribution business ', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal ', 78), (' net sales ', 71), (' sale of products ', 67), (' Sales revenue ', 50), (' from trading business ', 33), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), ('revenue from operations ', 24), (' transmission and distribution business ', 22), (' Revenue ', 13)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' from trading business ', 37), ('revenue from operations ', 36), (' sale of products ', 33), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19), (' Sales revenue ', 17), (' Revenue ', 11), (' net sales ', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [(' Sale of coal ', 38), (' revenue from continuing activities', 38), (' from trading business ', 37), ('revenue from operations ', 36), (' revenue from contracts with customers ', 36), (' net sales ', 30), (' Sales revenue ', 26), (' sale of products ', 25), (' transmission and distribution business ', 25), (' Revenue ', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' transmission and distribution business ', 45), (' revenue from continuing activities', 44), ('revenue from operations ', 38), (' Sales revenue ', 37), (' Revenue ', 36), (' net sales ', 33), (' revenue from contracts with customers ', 33), (' sale of products ', 29), (' from trading business ', 26), (' Sale of coal ', 24)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue ', 43), (' from trading business ', 37), (' sale of products ', 33), (' Revenue ', 33), (' net sales ', 30), ('revenue from operations ', 29), (' revenue from contracts with customers ', 27), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Sale of coal ', 40), (' sale of products ', 35), (' revenue from contracts with customers ', 33), (' revenue from continuing activities', 33), (' net sales ', 32), (' from trading business ', 31), (' transmission and distribution business ', 26), ('revenue from operations ', 22), (' Sales revenue ', 18), (' Revenue ', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [(' revenue from continuing activities', 56), (' transmission and distribution business ', 47), ('revenue from operations ', 46), (' revenue from contracts with customers ', 44), (' sale of products ', 33), (' from trading business ', 31), (' Revenue ', 29), (' net sales ', 27), (' Sale of coal ', 27), (' Sales revenue ', 26)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' from trading business ', 41), ('revenue from operations ', 36), (' revenue from contracts with customers ', 36), (' transmission and distribution business ', 35), (' Sales revenue ', 30), (' revenue from continuing activities', 30), (' sale of products ', 29), (' Revenue ', 23), (' net sales ', 22), (' Sale of coal ', 21)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' from trading business ', 45), (' Sales revenue ', 37), (' transmission and distribution business ', 32), (' Sale of coal ', 32), (' sale of products ', 29), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), (' Revenue ', 27), ('revenue from operations ', 25), (' net sales ', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations ', 46), (' sale of products ', 39), (' from trading business ', 35), (' revenue from continuing activities', 32), (' revenue from contracts with customers ', 31), (' transmission and distribution business ', 30), (' Sales revenue ', 27), (' Revenue ', 24), (' net sales ', 22), (' Sale of coal ', 21)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' revenue from continuing activities', 35), (' from trading business ', 34), ('revenue from operations ', 33), (' sale of products ', 32), (' Sales revenue ', 32), (' transmission and distribution business ', 30), (' Revenue ', 25), (' Sale of coal ', 23), (' net sales ', 18)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [(' revenue from contracts with customers ', 40), (' transmission and distribution business ', 37), (' revenue from continuing activities', 33), ('revenue from operations ', 29), (' from trading business ', 26), (' Sales revenue ', 22), (' sale of products ', 21), (' Sale of coal ', 19), (' Revenue ', 17), (' net sales ', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [(' revenue from continuing activities', 41), (' revenue from contracts with customers ', 35), (' transmission and distribution business ', 31), ('revenue from operations ', 28), (' from trading business ', 28), (' sale of products ', 23), (' net sales ', 21), (' Sale of coal ', 21), (' Sales revenue ', 20), (' Revenue ', 15)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [(' revenue from contracts with customers ', 43), (' transmission and distribution business ', 36), (' revenue from continuing activities', 34), ('revenue from operations ', 33), (' from trading business ', 29), (' sale of products ', 27), (' net sales ', 24), (' Sale of coal ', 24), (' Sales revenue ', 23), (' Revenue ', 15)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' revenue from contracts with customers ', 40), (' from trading business ', 38), ('revenue from operations ', 37), (' revenue from continuing activities', 35), (' sale of products ', 29), (' transmission and distribution business ', 28), (' Sales revenue ', 26), (' net sales ', 24), (' Sale of coal ', 19), (' Revenue ', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' from trading business ', 40), (' revenue from contracts with customers ', 39), (' sale of products ', 38), (' revenue from continuing activities', 37), (' Sales revenue ', 35), ('revenue from operations ', 31), (' transmission and distribution business ', 29), (' net sales ', 28), (' Sale of coal ', 27), (' Revenue ', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 13389594.0, 'line_item_label': ['Revenue'], 'note_numbers': ['3'], 'line_item_value': [13389594.0]}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = revenue sale of goods , res_fuzz_match = [('Sale of goods ', 100), (' Sale of goods - Cars ', 82), (' Sale of goods - Marine ', 75), (' Sale of goods - Motorcycles ', 56), (' revenue from continuing activities ', 56), (' revenue form contracts with customers ', 56), (' Feed gas income ', 46), (' Sale of goods - Spareparts ', 44), (' Condensate ', 43), (' Total Revenue ', 42), (' hedge loss / gain ', 36), (' LNG ', 33), (' Gas transportation income ', 31), (' Goods sold to customer from warehouse ', 31), (' Goods sold to customer direct from supplier ', 31), (' contribution from joint venture', 31), (' Domgas ', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Sale of goods ', 0), (' LNG ', 0), (' Condensate ', 0), (' Domgas ', 0), (' Feed gas income ', 0), (' Gas transportation income ', 0), (' Sale of goods - Cars ', 0), (' Sale of goods - Motorcycles ', 0), (' Sale of goods - Marine ', 0), (' Sale of goods - Spareparts ', 0), (' Total Revenue ', 0), (' Goods sold to customer from warehouse ', 0), (' Goods sold to customer direct from supplier ', 0), (' revenue from continuing activities ', 0), (' revenue form contracts with customers ', 0), (' hedge loss / gain ', 0), (' contribution from joint venture', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = revenue freight income , res_fuzz_match = [(' Feed gas income ', 69), (' revenue from continuing activities ', 60), (' revenue form contracts with customers ', 60), (' Gas transportation income ', 50), (' Total Revenue ', 42), (' Domgas ', 40), (' Sale of goods - Marine ', 40), (' Goods sold to customer direct from supplier ', 40), (' contribution from joint venture', 40), (' hedge loss / gain ', 36), (' Goods sold to customer from warehouse ', 35), (' LNG ', 33), (' Sale of goods - Cars ', 31), (' Condensate ', 29), (' Sale of goods - Motorcycles ', 26), (' Sale of goods - Spareparts ', 26), ('Sale of goods ', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Sale of goods ', 0), (' LNG ', 0), (' Condensate ', 0), (' Domgas ', 0), (' Feed gas income ', 0), (' Gas transportation income ', 0), (' Sale of goods - Cars ', 0), (' Sale of goods - Motorcycles ', 0), (' Sale of goods - Marine ', 0), (' Sale of goods - Spareparts ', 0), (' Total Revenue ', 0), (' Goods sold to customer from warehouse ', 0), (' Goods sold to customer direct from supplier ', 0), (' revenue from continuing activities ', 0), (' revenue form contracts with customers ', 0), (' hedge loss / gain ', 0), (' contribution from joint venture', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = revenue other revenue , res_fuzz_match = [(' Total Revenue ', 75), (' revenue from continuing activities ', 58), (' revenue form contracts with customers ', 58), (' contribution from joint venture', 47), (' Sale of goods - Marine ', 40), (' Sale of goods - Cars ', 38), (' Goods sold to customer from warehouse ', 37), ('Sale of goods ', 33), (' LNG ', 33), (' Sale of goods - Spareparts ', 32), (' Goods sold to customer direct from supplier ', 32), (' Feed gas income ', 31), (' Condensate ', 29), (' hedge loss / gain ', 29), (' Gas transportation income ', 28), (' Sale of goods - Motorcycles ', 26), (' Domgas ', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Sale of goods ', 0), (' LNG ', 0), (' Condensate ', 0), (' Domgas ', 0), (' Feed gas income ', 0), (' Gas transportation income ', 0), (' Sale of goods - Cars ', 0), (' Sale of goods - Motorcycles ', 0), (' Sale of goods - Marine ', 0), (' Sale of goods - Spareparts ', 0), (' Total Revenue ', 0), (' Goods sold to customer from warehouse ', 0), (' Goods sold to customer direct from supplier ', 0), (' revenue from continuing activities ', 0), (' revenue form contracts with customers ', 0), (' hedge loss / gain ', 0), (' contribution from joint venture', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = revenue total , res_fuzz_match = [(' revenue from continuing activities ', 67), (' revenue form contracts with customers ', 67), (' Total Revenue ', 50), (' Domgas ', 40), ('Sale of goods ', 33), (' LNG ', 33), (' Feed gas income ', 33), (' Gas transportation income ', 33), (' Sale of goods - Cars ', 33), (' Sale of goods - Motorcycles ', 33), (' Sale of goods - Marine ', 33), (' Sale of goods - Spareparts ', 33), (' Goods sold to customer direct from supplier ', 33), (' hedge loss / gain ', 33), (' contribution from joint venture', 33), (' Condensate ', 29), (' Goods sold to customer from warehouse ', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Sale of goods ', 0), (' LNG ', 0), (' Condensate ', 0), (' Domgas ', 0), (' Feed gas income ', 0), (' Gas transportation income ', 0), (' Sale of goods - Cars ', 0), (' Sale of goods - Motorcycles ', 0), (' Sale of goods - Marine ', 0), (' Sale of goods - Spareparts ', 0), (' Total Revenue ', 0), (' Goods sold to customer from warehouse ', 0), (' Goods sold to customer direct from supplier ', 0), (' revenue from continuing activities ', 0), (' revenue form contracts with customers ', 0), (' hedge loss / gain ', 0), (' contribution from joint venture', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = revenue sale of goods , res_fuzz_match = [('Sale of goods ', 100), (' Sale of goods - Cars ', 82), (' Sale of goods - Marine ', 75), (' Sale of goods - Motorcycles ', 56), (' revenue from continuing activities ', 56), (' revenue form contracts with customers ', 56), (' Feed gas income ', 46), (' Sale of goods - Spareparts ', 44), (' Condensate ', 43), (' Total Revenue ', 42), (' hedge loss / gain ', 36), (' LNG ', 33), (' Gas transportation income ', 31), (' Goods sold to customer from warehouse ', 31), (' Goods sold to customer direct from supplier ', 31), (' contribution from joint venture', 31), (' Domgas ', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Sale of goods ', 0), (' LNG ', 0), (' Condensate ', 0), (' Domgas ', 0), (' Feed gas income ', 0), (' Gas transportation income ', 0), (' Sale of goods - Cars ', 0), (' Sale of goods - Motorcycles ', 0), (' Sale of goods - Marine ', 0), (' Sale of goods - Spareparts ', 0), (' Total Revenue ', 0), (' Goods sold to customer from warehouse ', 0), (' Goods sold to customer direct from supplier ', 0), (' revenue from continuing activities ', 0), (' revenue form contracts with customers ', 0), (' hedge loss / gain ', 0), (' contribution from joint venture', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = revenue freight income , res_fuzz_match = [(' Feed gas income ', 69), (' revenue from continuing activities ', 60), (' revenue form contracts with customers ', 60), (' Gas transportation income ', 50), (' Total Revenue ', 42), (' Domgas ', 40), (' Sale of goods - Marine ', 40), (' Goods sold to customer direct from supplier ', 40), (' contribution from joint venture', 40), (' hedge loss / gain ', 36), (' Goods sold to customer from warehouse ', 35), (' LNG ', 33), (' Sale of goods - Cars ', 31), (' Condensate ', 29), (' Sale of goods - Motorcycles ', 26), (' Sale of goods - Spareparts ', 26), ('Sale of goods ', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Sale of goods ', 0), (' LNG ', 0), (' Condensate ', 0), (' Domgas ', 0), (' Feed gas income ', 0), (' Gas transportation income ', 0), (' Sale of goods - Cars ', 0), (' Sale of goods - Motorcycles ', 0), (' Sale of goods - Marine ', 0), (' Sale of goods - Spareparts ', 0), (' Total Revenue ', 0), (' Goods sold to customer from warehouse ', 0), (' Goods sold to customer direct from supplier ', 0), (' revenue from continuing activities ', 0), (' revenue form contracts with customers ', 0), (' hedge loss / gain ', 0), (' contribution from joint venture', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = revenue other revenue , res_fuzz_match = [(' Total Revenue ', 75), (' revenue from continuing activities ', 58), (' revenue form contracts with customers ', 58), (' contribution from joint venture', 47), (' Sale of goods - Marine ', 40), (' Sale of goods - Cars ', 38), (' Goods sold to customer from warehouse ', 37), ('Sale of goods ', 33), (' LNG ', 33), (' Sale of goods - Spareparts ', 32), (' Goods sold to customer direct from supplier ', 32), (' Feed gas income ', 31), (' Condensate ', 29), (' hedge loss / gain ', 29), (' Gas transportation income ', 28), (' Sale of goods - Motorcycles ', 26), (' Domgas ', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Sale of goods ', 0), (' LNG ', 0), (' Condensate ', 0), (' Domgas ', 0), (' Feed gas income ', 0), (' Gas transportation income ', 0), (' Sale of goods - Cars ', 0), (' Sale of goods - Motorcycles ', 0), (' Sale of goods - Marine ', 0), (' Sale of goods - Spareparts ', 0), (' Total Revenue ', 0), (' Goods sold to customer from warehouse ', 0), (' Goods sold to customer direct from supplier ', 0), (' revenue from continuing activities ', 0), (' revenue form contracts with customers ', 0), (' hedge loss / gain ', 0), (' contribution from joint venture', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows = revenue total , res_fuzz_match = [(' revenue from continuing activities ', 67), (' revenue form contracts with customers ', 67), (' Total Revenue ', 50), (' Domgas ', 40), ('Sale of goods ', 33), (' LNG ', 33), (' Feed gas income ', 33), (' Gas transportation income ', 33), (' Sale of goods - Cars ', 33), (' Sale of goods - Motorcycles ', 33), (' Sale of goods - Marine ', 33), (' Sale of goods - Spareparts ', 33), (' Goods sold to customer direct from supplier ', 33), (' hedge loss / gain ', 33), (' contribution from joint venture', 33), (' Condensate ', 29), (' Goods sold to customer from warehouse ', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('Sale of goods ', 0), (' LNG ', 0), (' Condensate ', 0), (' Domgas ', 0), (' Feed gas income ', 0), (' Gas transportation income ', 0), (' Sale of goods - Cars ', 0), (' Sale of goods - Motorcycles ', 0), (' Sale of goods - Marine ', 0), (' Sale of goods - Spareparts ', 0), (' Total Revenue ', 0), (' Goods sold to customer from warehouse ', 0), (' Goods sold to customer direct from supplier ', 0), (' revenue from continuing activities ', 0), (' revenue form contracts with customers ', 0), (' hedge loss / gain ', 0), (' contribution from joint venture', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4], 'score': [100, 100], 'value': [13300269.0, 10353407.0], 'label': ['REVENUE Sale of goods', 'REVENUE Sale of goods'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 10:23:03+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['Included in cost of sales ', ' cost of goods']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Personnel costs', 54), ('cost of sales', 48), ('Cost of sales', 48), (' Cost of inventory sold', 45), (' change in inventory', 44), (' Cost of product sold', 41), (' cost of coal sold', 38), (' Cost of goods and services sold', 38), (' cost of goods sold ', 38), ('expenditure', 36), ('total expenditure', 36), ('purchase of stock-in-trade', 32), ('total expenses', 25), ('expense', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' change in inventory', 29), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0), (' cost of goods sold ', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' cost of goods sold ', 61), (' Cost of product sold', 54), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), (' change in inventory', 25), ('expense', 13), ('expenditure', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' cost of goods sold ', 31), (' change in inventory', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [(' Cost of inventory sold', 52), (' change in inventory', 52), ('cost of sales', 38), ('Cost of sales', 38), (' cost of coal sold', 38), (' Personnel costs', 38), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of goods sold ', 31), (' Cost of product sold', 28), ('expenditure', 27), ('total expenses', 25), ('expense', 22), ('total expenditure', 21)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), (' Personnel costs', 40), ('expenditure', 38), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), ('total expenditure', 31), (' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' cost of goods sold ', 27)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), (' Personnel costs', 38), (' Cost of goods and services sold', 32), (' change in inventory', 30), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of product sold', 28), (' Cost of inventory sold', 26), (' cost of coal sold', 23), (' cost of goods sold ', 23)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Cost of inventory sold', 53), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), (' change in inventory', 38), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [(' Cost of goods and services sold', 43), (' change in inventory', 39), (' Cost of product sold', 38), ('purchase of stock-in-trade', 36), (' Cost of inventory sold', 36), (' Personnel costs', 32), ('total expenditure', 31), ('cost of sales', 31), ('Cost of sales', 31), ('total expenses', 29), (' cost of coal sold', 28), (' cost of goods sold ', 28), ('expenditure', 26), ('expense', 14)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('total expenses', 49), ('total expenditure', 44), (' Cost of inventory sold', 38), ('expenditure', 36), (' Cost of product sold', 35), ('expense', 34), (' change in inventory', 32), (' Cost of goods and services sold', 30), ('purchase of stock-in-trade', 29), (' cost of coal sold', 28), (' Personnel costs', 28), (' cost of goods sold ', 28), ('cost of sales', 26), ('Cost of sales', 26)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), (' Cost of goods and services sold', 29), (' cost of coal sold', 27), (' Personnel costs', 27), (' cost of goods sold ', 27), (' Cost of product sold', 24)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), (' cost of goods sold ', 24), (' change in inventory', 24), ('expense', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' cost of goods sold ', 40), (' change in inventory', 39), ('total expenses', 37), (' Cost of product sold', 37), (' cost of coal sold', 35), (' Cost of goods and services sold', 35), (' Personnel costs', 35), ('expenditure', 33), ('total expenditure', 33), ('cost of sales', 29), ('Cost of sales', 29), ('expense', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [(' change in inventory', 35), (' Cost of inventory sold', 33), ('total expenditure', 31), (' Cost of goods and services sold', 30), (' cost of goods sold ', 29), (' Cost of product sold', 28), ('purchase of stock-in-trade', 27), (' cost of coal sold', 26), (' Personnel costs', 26), ('total expenses', 24), ('expenditure', 22), ('cost of sales', 19), ('Cost of sales', 19), ('expense', 13)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [('purchase of stock-in-trade', 35), (' Cost of inventory sold', 35), (' Cost of goods and services sold', 32), ('total expenses', 30), (' Cost of product sold', 30), (' cost of coal sold', 29), (' cost of goods sold ', 29), ('total expenditure', 28), (' change in inventory', 28), (' Personnel costs', 25), ('cost of sales', 24), ('Cost of sales', 24), ('expenditure', 17), ('expense', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [('total expenses', 44), ('total expenditure', 41), (' Cost of inventory sold', 38), (' Personnel costs', 38), (' cost of coal sold', 34), (' Cost of goods and services sold', 34), (' cost of goods sold ', 34), ('expenditure', 33), (' Cost of product sold', 32), ('purchase of stock-in-trade', 31), ('expense', 31), ('cost of sales', 29), ('Cost of sales', 29), (' change in inventory', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 35), (' Cost of inventory sold', 35), ('total expenditure', 34), (' change in inventory', 34), ('total expenses', 33), (' Personnel costs', 32), (' Cost of product sold', 30), (' Cost of goods and services sold', 29), (' cost of coal sold', 28), (' cost of goods sold ', 28), ('cost of sales', 27), ('Cost of sales', 27), ('expenditure', 23), ('expense', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('total expenses', 43), ('total expenditure', 43), (' change in inventory', 40), (' Cost of product sold', 38), ('purchase of stock-in-trade', 37), (' cost of coal sold', 37), (' Cost of goods and services sold', 37), (' Cost of inventory sold', 37), (' Personnel costs', 37), (' cost of goods sold ', 37), ('cost of sales', 36), ('Cost of sales', 36), ('expenditure', 27), ('expense', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': -5274236.0, 'line_item_label': ['Cost of sales'], 'note_numbers': ['4'], 'line_item_value': [-5274236.0]}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Personnel costs', 54), ('cost of sales', 48), ('Cost of sales', 48), (' Cost of inventory sold', 45), (' change in inventory', 44), (' Cost of product sold', 41), (' cost of coal sold', 38), (' Cost of goods and services sold', 38), (' cost of goods sold ', 38), ('expenditure', 36), ('total expenditure', 36), ('purchase of stock-in-trade', 32), ('total expenses', 25), ('expense', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' change in inventory', 29), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0), (' cost of goods sold ', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' cost of goods sold ', 61), (' Cost of product sold', 54), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), (' change in inventory', 25), ('expense', 13), ('expenditure', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' cost of goods sold ', 31), (' change in inventory', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [(' Cost of inventory sold', 52), (' change in inventory', 52), ('cost of sales', 38), ('Cost of sales', 38), (' cost of coal sold', 38), (' Personnel costs', 38), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of goods sold ', 31), (' Cost of product sold', 28), ('expenditure', 27), ('total expenses', 25), ('expense', 22), ('total expenditure', 21)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('expense', 55), ('total expenses', 43), (' Personnel costs', 40), ('expenditure', 38), (' Cost of goods and services sold', 34), (' Cost of inventory sold', 34), (' cost of coal sold', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), ('total expenditure', 31), (' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' cost of goods sold ', 27)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), (' Personnel costs', 38), (' Cost of goods and services sold', 32), (' change in inventory', 30), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of product sold', 28), (' Cost of inventory sold', 26), (' cost of coal sold', 23), (' cost of goods sold ', 23)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Cost of inventory sold', 53), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), (' change in inventory', 38), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [(' Cost of goods and services sold', 43), (' change in inventory', 39), (' Cost of product sold', 38), ('purchase of stock-in-trade', 36), (' Cost of inventory sold', 36), (' Personnel costs', 32), ('total expenditure', 31), ('cost of sales', 31), ('Cost of sales', 31), ('total expenses', 29), (' cost of coal sold', 28), (' cost of goods sold ', 28), ('expenditure', 26), ('expense', 14)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('total expenses', 49), ('total expenditure', 44), (' Cost of inventory sold', 38), ('expenditure', 36), (' Cost of product sold', 35), ('expense', 34), (' change in inventory', 32), (' Cost of goods and services sold', 30), ('purchase of stock-in-trade', 29), (' cost of coal sold', 28), (' Personnel costs', 28), (' cost of goods sold ', 28), ('cost of sales', 26), ('Cost of sales', 26)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 32), (' Cost of goods and services sold', 29), (' cost of coal sold', 27), (' Personnel costs', 27), (' cost of goods sold ', 27), (' Cost of product sold', 24)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), (' cost of goods sold ', 24), (' change in inventory', 24), ('expense', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' cost of goods sold ', 40), (' change in inventory', 39), ('total expenses', 37), (' Cost of product sold', 37), (' cost of coal sold', 35), (' Cost of goods and services sold', 35), (' Personnel costs', 35), ('expenditure', 33), ('total expenditure', 33), ('cost of sales', 29), ('Cost of sales', 29), ('expense', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [(' change in inventory', 35), (' Cost of inventory sold', 33), ('total expenditure', 31), (' Cost of goods and services sold', 30), (' cost of goods sold ', 29), (' Cost of product sold', 28), ('purchase of stock-in-trade', 27), (' cost of coal sold', 26), (' Personnel costs', 26), ('total expenses', 24), ('expenditure', 22), ('cost of sales', 19), ('Cost of sales', 19), ('expense', 13)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [('purchase of stock-in-trade', 35), (' Cost of inventory sold', 35), (' Cost of goods and services sold', 32), ('total expenses', 30), (' Cost of product sold', 30), (' cost of coal sold', 29), (' cost of goods sold ', 29), ('total expenditure', 28), (' change in inventory', 28), (' Personnel costs', 25), ('cost of sales', 24), ('Cost of sales', 24), ('expenditure', 17), ('expense', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [('total expenses', 44), ('total expenditure', 41), (' Cost of inventory sold', 38), (' Personnel costs', 38), (' cost of coal sold', 34), (' Cost of goods and services sold', 34), (' cost of goods sold ', 34), ('expenditure', 33), (' Cost of product sold', 32), ('purchase of stock-in-trade', 31), ('expense', 31), ('cost of sales', 29), ('Cost of sales', 29), (' change in inventory', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 35), (' Cost of inventory sold', 35), ('total expenditure', 34), (' change in inventory', 34), ('total expenses', 33), (' Personnel costs', 32), (' Cost of product sold', 30), (' Cost of goods and services sold', 29), (' cost of coal sold', 28), (' cost of goods sold ', 28), ('cost of sales', 27), ('Cost of sales', 27), ('expenditure', 23), ('expense', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('total expenses', 43), ('total expenditure', 43), (' change in inventory', 40), (' Cost of product sold', 38), ('purchase of stock-in-trade', 37), (' cost of coal sold', 37), (' Cost of goods and services sold', 37), (' Cost of inventory sold', 37), (' Personnel costs', 37), (' cost of goods sold ', 37), ('cost of sales', 36), ('Cost of sales', 36), ('expenditure', 27), ('expense', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': -7046802.0, 'line_item_label': ['Cost of sales'], 'note_numbers': ['4'], 'line_item_value': [-7046802.0]}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 10:23:03+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['consum ', ' power ', ' machinery ', ' charges ', ' research ', ' analytical ', ' equipment ', ' exchange ', ' loss on ', ' donation ', ' csr ', ' social ', ' miscellaneous ', ' loss allowance ', ' Included in administrative expenses ', ' Depreciation property ', ' plant and equipment ', ' Depreciation right-of-use assets ', ' Administrative expenses ', ' Wages and salaries ', ' Compulsory superannuation contributions ', ' Payroll on-costs (excluding employee benefit provision) ', ' Staff welfare ', ' Contractors, subcontractors and employee related expenses ', ' Facilities Expense ', ' Rental equipment expenses ', ' Depreciation expense right-of-use asset ', ' Depreciation expense ', ' Amortisation expense ', ' Other expenses ', ' Research and development expenses ', ' employee benefits expenses ', ' depreciation and amortisation expenses ', ' Employee expenses ', ' Distribution Expenses ', ' Depreciation and Amortisation Expenses ', ' Other Expenses from Ordinary Activities ', '  ', ' Defined contribution plans ', ' Other employement costs']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Amortisation expenses ', 46), (' property espense ', 44), (' Distribution expenses ', 43), (' other expenses ', 42), (' Other expenses ', 42), (' Other expenses ', 42), (' Depreciation expenses ', 38), (' Logistics and distribution ', 38), (' Administrative and other expenses ', 37), (' Advertising expenses ', 37), (' Depreciation and amortisation expenses ', 37), (' Administrative expenses ', 36), (' Selling & distribution expenses ', 36), (' Administration expenses ', 36), (' Occupancy ', 35), (' employee benefits expense ', 35), (' employee benefit espense ', 35), (' Occupancy expenses ', 33), (' Royalties ', 32), (' Sales and marketing ', 30), (' Administration ', 29), (' Lease expenses ', 26), (' Selling Expenses ', 26), (' Marketing expenses ', 24), ('expenses ', 22), (' depreciation ', 21), (' Management expenses ', 17), (' levies', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expenses ', 50), (' Occupancy expenses ', 44), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' levies', 40), (' Advertising expenses ', 38), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Selling Expenses ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' depreciation ', 31), (' Selling & distribution expenses ', 30), (' Sales and marketing ', 29), (' property espense ', 29), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' employee benefits expense ', 21), (' employee benefit espense ', 21), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 15), (' Administration ', 13)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing ', 50), (' Lease expenses ', 40), (' Selling Expenses ', 40), (' Royalties ', 38), (' Marketing expenses ', 36), (' Amortisation expenses ', 35), (' Selling & distribution expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' levies', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Logistics and distribution ', 28), (' Depreciation expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Advertising expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' Occupancy expenses ', 19), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' depreciation ', 32), (' Marketing expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Royalties ', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Advertising expenses ', 30), (' Distribution expenses ', 29), (' Administrative and other expenses ', 26), (' Occupancy expenses ', 25), (' Selling & distribution expenses ', 24), (' Occupancy ', 24), (' Depreciation expenses ', 23), (' Sales and marketing ', 22), (' Administrative expenses ', 21), (' Administration expenses ', 21), (' Administration ', 19), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' Management expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [(' Administration ', 48), (' Administrative and other expenses ', 37), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Marketing expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Depreciation expenses ', 31), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Advertising expenses ', 30), (' Sales and marketing ', 30), (' property espense ', 30), (' Distribution expenses ', 29), (' employee benefits expense ', 29), (' employee benefit espense ', 29), (' Selling Expenses ', 26), (' other expenses ', 25), (' Other expenses ', 25), (' Management expenses ', 25), (' Other expenses ', 25), (' Selling & distribution expenses ', 24), ('expenses ', 22), (' depreciation ', 21), (' Royalties ', 21), (' Occupancy expenses ', 17), (' Occupancy ', 12), (' levies', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Administrative expenses ', 100), (' Administration expenses ', 100), (' Administrative and other expenses ', 76), (' Distribution expenses ', 75), (' Amortisation expenses ', 73), (' Administration ', 72), (' Advertising expenses ', 71), (' Selling & distribution expenses ', 65), (' Depreciation expenses ', 60), (' Depreciation and amortisation expenses ', 57), ('expenses ', 55), (' employee benefits expense ', 53), (' employee benefit espense ', 47), (' Lease expenses ', 44), (' Selling Expenses ', 44), (' Logistics and distribution ', 44), (' other expenses ', 43), (' Occupancy expenses ', 43), (' Other expenses ', 43), (' Management expenses ', 43), (' Other expenses ', 43), (' Marketing expenses ', 41), (' Sales and marketing ', 39), (' depreciation ', 35), (' property espense ', 32), (' Royalties ', 17), (' Occupancy ', 10), (' levies', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' other expenses ', 100), (' Other expenses ', 100), (' Other expenses ', 100), (' Lease expenses ', 70), (' Selling Expenses ', 70), ('expenses ', 67), (' Occupancy expenses ', 67), (' property espense ', 67), (' Marketing expenses ', 64), (' Administrative and other expenses ', 63), (' Management expenses ', 58), (' Selling & distribution expenses ', 48), (' Depreciation expenses ', 46), (' Amortisation expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Administrative expenses ', 43), (' Administration expenses ', 43), (' Administration ', 38), (' employee benefits expense ', 35), (' depreciation ', 32), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' employee benefit espense ', 29), (' Royalties ', 21), (' Occupancy ', 12), (' levies', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Management expenses ', 35), (' Royalties ', 33), (' Depreciation and amortisation expenses ', 32), (' Amortisation expenses ', 32), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Administrative and other expenses ', 27), (' Lease expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Occupancy ', 25), (' Depreciation expenses ', 24), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' property espense ', 23), (' depreciation ', 22), (' Administration ', 20), (' Selling Expenses ', 18), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' other expenses ', 17), (' Other expenses ', 17), (' Other expenses ', 17), (' levies', 13), ('expenses ', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [(' Logistics and distribution ', 43), (' Sales and marketing ', 43), (' Administrative and other expenses ', 42), (' Depreciation and amortisation expenses ', 42), (' Distribution expenses ', 38), (' Administrative expenses ', 38), (' Administration expenses ', 38), (' Administration ', 36), (' Selling & distribution expenses ', 35), (' employee benefits expense ', 34), (' employee benefit espense ', 34), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' Depreciation expenses ', 32), (' Amortisation expenses ', 32), (' Advertising expenses ', 31), (' property espense ', 31), (' Marketing expenses ', 29), (' Occupancy expenses ', 21), (' Selling Expenses ', 21), (' Management expenses ', 21), (' depreciation ', 19), (' Royalties ', 19), (' Lease expenses ', 17), (' Occupancy ', 15), ('expenses ', 14), (' levies', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Marketing expenses ', 48), (' property espense ', 45), (' other expenses ', 44), (' Occupancy expenses ', 44), (' Other expenses ', 44), (' Management expenses ', 44), (' Other expenses ', 44), (' employee benefits expense ', 43), (' Depreciation expenses ', 42), (' Amortisation expenses ', 42), (' Advertising expenses ', 41), (' Administrative and other expenses ', 40), (' Lease expenses ', 40), (' Depreciation and amortisation expenses ', 40), (' employee benefit espense ', 39), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Selling & distribution expenses ', 36), (' Administration expenses ', 36), (' Selling Expenses ', 35), ('expenses ', 34), (' Logistics and distribution ', 33), (' Sales and marketing ', 32), (' depreciation ', 28), (' Administration ', 21), (' Occupancy ', 18), (' Royalties ', 17), (' levies', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' other expenses ', 64), (' Other expenses ', 64), (' Management expenses ', 64), (' Other expenses ', 64), (' Marketing expenses ', 62), (' Lease expenses ', 59), (' Occupancy expenses ', 57), ('expenses ', 55), (' Selling Expenses ', 52), (' property espense ', 52), (' Administrative and other expenses ', 43), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' Advertising expenses ', 39), (' Distribution expenses ', 38), (' Administrative expenses ', 38), (' Selling & distribution expenses ', 38), (' Administration expenses ', 38), (' depreciation ', 35), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' Depreciation and amortisation expenses ', 29), (' Logistics and distribution ', 28), (' employee benefit espense ', 26), (' Administration ', 24), (' levies', 20), (' Royalties ', 17), (' Occupancy ', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Depreciation expenses ', 36), (' Administrative and other expenses ', 36), (' Amortisation expenses ', 36), (' Selling & distribution expenses ', 35), (' property espense ', 35), (' Distribution expenses ', 34), (' employee benefits expense ', 34), (' employee benefit espense ', 34), (' Lease expenses ', 33), (' Marketing expenses ', 31), (' Logistics and distribution ', 31), (' Royalties ', 31), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Advertising expenses ', 29), (' Sales and marketing ', 29), (' Selling Expenses ', 27), (' Management expenses ', 26), (' depreciation ', 23), (' Administration ', 21), (' Occupancy expenses ', 19), (' Occupancy ', 17), ('expenses ', 16), (' levies', 9)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [(' other expenses ', 53), (' Other expenses ', 53), (' Other expenses ', 53), (' Administrative and other expenses ', 46), (' property espense ', 39), (' Depreciation and amortisation expenses ', 38), (' Occupancy expenses ', 37), (' Marketing expenses ', 36), (' Depreciation expenses ', 35), (' Administration ', 34), (' Lease expenses ', 32), (' Selling Expenses ', 32), (' Management expenses ', 32), (' depreciation ', 30), (' Selling & distribution expenses ', 30), (' Amortisation expenses ', 30), (' Logistics and distribution ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' employee benefits expense ', 29), (' employee benefit espense ', 29), ('expenses ', 25), (' Distribution expenses ', 24), (' Advertising expenses ', 24), (' Sales and marketing ', 24), (' Occupancy ', 19), (' Royalties ', 18), (' levies', 13)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [(' Administrative and other expenses ', 38), (' Logistics and distribution ', 38), (' Depreciation and amortisation expenses ', 35), (' employee benefit espense ', 32), (' Selling & distribution expenses ', 29), (' employee benefits expense ', 29), (' Distribution expenses ', 26), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' Advertising expenses ', 26), (' Amortisation expenses ', 26), (' Sales and marketing ', 26), (' property espense ', 26), (' Depreciation expenses ', 24), (' Administration ', 22), (' other expenses ', 21), (' Marketing expenses ', 21), (' Other expenses ', 21), (' Other expenses ', 21), (' Occupancy expenses ', 18), (' Lease expenses ', 18), (' Selling Expenses ', 18), (' Management expenses ', 18), (' depreciation ', 16), (' Royalties ', 16), ('expenses ', 13), (' levies', 10), (' Occupancy ', 7)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [(' Administrative and other expenses ', 40), (' Selling & distribution expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Sales and marketing ', 28), (' other expenses ', 26), (' Other expenses ', 26), (' Other expenses ', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' property espense ', 25), (' Administration ', 24), (' Occupancy expenses ', 23), (' employee benefits expense ', 23), (' employee benefit espense ', 23), (' Distribution expenses ', 22), (' Depreciation expenses ', 22), (' Advertising expenses ', 22), (' Lease expenses ', 20), (' Selling Expenses ', 20), (' Management expenses ', 20), (' Marketing expenses ', 19), (' Amortisation expenses ', 19), (' depreciation ', 18), (' Royalties ', 18), ('expenses ', 11), (' Occupancy ', 11), (' levies', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [(' Marketing expenses ', 48), (' Management expenses ', 44), (' Administrative and other expenses ', 41), (' Lease expenses ', 41), (' Selling Expenses ', 41), (' Depreciation and amortisation expenses ', 41), (' other expenses ', 40), (' Occupancy expenses ', 40), (' Other expenses ', 40), (' Other expenses ', 40), (' Amortisation expenses ', 38), (' property espense ', 38), (' Administrative expenses ', 37), (' Selling & distribution expenses ', 37), (' Administration expenses ', 37), (' employee benefits expense ', 36), (' Depreciation expenses ', 34), (' Sales and marketing ', 33), (' employee benefit espense ', 33), ('expenses ', 31), (' Logistics and distribution ', 30), (' Distribution expenses ', 29), (' Advertising expenses ', 29), (' depreciation ', 25), (' Administration ', 24), (' Occupancy ', 16), (' Royalties ', 15), (' levies', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' Administrative and other expenses ', 41), (' other expenses ', 36), (' Other expenses ', 36), (' Other expenses ', 36), (' Depreciation and amortisation expenses ', 35), (' employee benefits expense ', 34), (' property espense ', 34), (' employee benefit espense ', 34), (' Selling & distribution expenses ', 31), (' Marketing expenses ', 29), (' Management expenses ', 29), (' Depreciation expenses ', 28), (' Amortisation expenses ', 28), (' Sales and marketing ', 28), (' Distribution expenses ', 27), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Lease expenses ', 26), (' Occupancy expenses ', 25), (' Logistics and distribution ', 25), (' Advertising expenses ', 24), (' Selling Expenses ', 22), (' Administration ', 19), ('expenses ', 16), (' depreciation ', 16), (' Royalties ', 16), (' levies', 9), (' Occupancy ', 8)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' other expenses ', 43), (' Other expenses ', 43), (' Administrative and other expenses ', 43), (' Other expenses ', 43), (' property espense ', 36), (' Lease expenses ', 35), (' Management expenses ', 34), (' Marketing expenses ', 33), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' employee benefit espense ', 32), (' Occupancy expenses ', 30), (' Selling Expenses ', 30), (' Depreciation and amortisation expenses ', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Distribution expenses ', 24), (' Advertising expenses ', 24), (' Administration ', 23), ('expenses ', 20), (' depreciation ', 19), (' Royalties ', 19), (' Occupancy ', 10), (' levies', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6], 'score': 100, 'value': -478469.0, 'line_item_label': ['Administration expenses', 'Other expenses'], 'note_numbers': ['6', '7'], 'line_item_value': [-320945.0, -157524.0]}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Amortisation expenses ', 46), (' property espense ', 44), (' Distribution expenses ', 43), (' other expenses ', 42), (' Other expenses ', 42), (' Other expenses ', 42), (' Depreciation expenses ', 38), (' Logistics and distribution ', 38), (' Administrative and other expenses ', 37), (' Advertising expenses ', 37), (' Depreciation and amortisation expenses ', 37), (' Administrative expenses ', 36), (' Selling & distribution expenses ', 36), (' Administration expenses ', 36), (' Occupancy ', 35), (' employee benefits expense ', 35), (' employee benefit espense ', 35), (' Occupancy expenses ', 33), (' Royalties ', 32), (' Sales and marketing ', 30), (' Administration ', 29), (' Lease expenses ', 26), (' Selling Expenses ', 26), (' Marketing expenses ', 24), ('expenses ', 22), (' depreciation ', 21), (' Management expenses ', 17), (' levies', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expenses ', 50), (' Occupancy expenses ', 44), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' levies', 40), (' Advertising expenses ', 38), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Selling Expenses ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' depreciation ', 31), (' Selling & distribution expenses ', 30), (' Sales and marketing ', 29), (' property espense ', 29), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' employee benefits expense ', 21), (' employee benefit espense ', 21), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 15), (' Administration ', 13)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing ', 50), (' Lease expenses ', 40), (' Selling Expenses ', 40), (' Royalties ', 38), (' Marketing expenses ', 36), (' Amortisation expenses ', 35), (' Selling & distribution expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' levies', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Logistics and distribution ', 28), (' Depreciation expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Advertising expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' Occupancy expenses ', 19), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' depreciation ', 32), (' Marketing expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Royalties ', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Advertising expenses ', 30), (' Distribution expenses ', 29), (' Administrative and other expenses ', 26), (' Occupancy expenses ', 25), (' Selling & distribution expenses ', 24), (' Occupancy ', 24), (' Depreciation expenses ', 23), (' Sales and marketing ', 22), (' Administrative expenses ', 21), (' Administration expenses ', 21), (' Administration ', 19), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' Management expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [(' Administration ', 48), (' Administrative and other expenses ', 37), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Marketing expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Depreciation expenses ', 31), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Advertising expenses ', 30), (' Sales and marketing ', 30), (' property espense ', 30), (' Distribution expenses ', 29), (' employee benefits expense ', 29), (' employee benefit espense ', 29), (' Selling Expenses ', 26), (' other expenses ', 25), (' Other expenses ', 25), (' Management expenses ', 25), (' Other expenses ', 25), (' Selling & distribution expenses ', 24), ('expenses ', 22), (' depreciation ', 21), (' Royalties ', 21), (' Occupancy expenses ', 17), (' Occupancy ', 12), (' levies', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Administrative expenses ', 100), (' Administration expenses ', 100), (' Administrative and other expenses ', 76), (' Distribution expenses ', 75), (' Amortisation expenses ', 73), (' Administration ', 72), (' Advertising expenses ', 71), (' Selling & distribution expenses ', 65), (' Depreciation expenses ', 60), (' Depreciation and amortisation expenses ', 57), ('expenses ', 55), (' employee benefits expense ', 53), (' employee benefit espense ', 47), (' Lease expenses ', 44), (' Selling Expenses ', 44), (' Logistics and distribution ', 44), (' other expenses ', 43), (' Occupancy expenses ', 43), (' Other expenses ', 43), (' Management expenses ', 43), (' Other expenses ', 43), (' Marketing expenses ', 41), (' Sales and marketing ', 39), (' depreciation ', 35), (' property espense ', 32), (' Royalties ', 17), (' Occupancy ', 10), (' levies', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' other expenses ', 100), (' Other expenses ', 100), (' Other expenses ', 100), (' Lease expenses ', 70), (' Selling Expenses ', 70), ('expenses ', 67), (' Occupancy expenses ', 67), (' property espense ', 67), (' Marketing expenses ', 64), (' Administrative and other expenses ', 63), (' Management expenses ', 58), (' Selling & distribution expenses ', 48), (' Depreciation expenses ', 46), (' Amortisation expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Administrative expenses ', 43), (' Administration expenses ', 43), (' Administration ', 38), (' employee benefits expense ', 35), (' depreciation ', 32), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' employee benefit espense ', 29), (' Royalties ', 21), (' Occupancy ', 12), (' levies', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Management expenses ', 35), (' Royalties ', 33), (' Depreciation and amortisation expenses ', 32), (' Amortisation expenses ', 32), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Administrative and other expenses ', 27), (' Lease expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Occupancy ', 25), (' Depreciation expenses ', 24), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' property espense ', 23), (' depreciation ', 22), (' Administration ', 20), (' Selling Expenses ', 18), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' other expenses ', 17), (' Other expenses ', 17), (' Other expenses ', 17), (' levies', 13), ('expenses ', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [(' Logistics and distribution ', 43), (' Sales and marketing ', 43), (' Administrative and other expenses ', 42), (' Depreciation and amortisation expenses ', 42), (' Distribution expenses ', 38), (' Administrative expenses ', 38), (' Administration expenses ', 38), (' Administration ', 36), (' Selling & distribution expenses ', 35), (' employee benefits expense ', 34), (' employee benefit espense ', 34), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' Depreciation expenses ', 32), (' Amortisation expenses ', 32), (' Advertising expenses ', 31), (' property espense ', 31), (' Marketing expenses ', 29), (' Occupancy expenses ', 21), (' Selling Expenses ', 21), (' Management expenses ', 21), (' depreciation ', 19), (' Royalties ', 19), (' Lease expenses ', 17), (' Occupancy ', 15), ('expenses ', 14), (' levies', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Marketing expenses ', 48), (' property espense ', 45), (' other expenses ', 44), (' Occupancy expenses ', 44), (' Other expenses ', 44), (' Management expenses ', 44), (' Other expenses ', 44), (' employee benefits expense ', 43), (' Depreciation expenses ', 42), (' Amortisation expenses ', 42), (' Advertising expenses ', 41), (' Administrative and other expenses ', 40), (' Lease expenses ', 40), (' Depreciation and amortisation expenses ', 40), (' employee benefit espense ', 39), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Selling & distribution expenses ', 36), (' Administration expenses ', 36), (' Selling Expenses ', 35), ('expenses ', 34), (' Logistics and distribution ', 33), (' Sales and marketing ', 32), (' depreciation ', 28), (' Administration ', 21), (' Occupancy ', 18), (' Royalties ', 17), (' levies', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' other expenses ', 64), (' Other expenses ', 64), (' Management expenses ', 64), (' Other expenses ', 64), (' Marketing expenses ', 62), (' Lease expenses ', 59), (' Occupancy expenses ', 57), ('expenses ', 55), (' Selling Expenses ', 52), (' property espense ', 52), (' Administrative and other expenses ', 43), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' Advertising expenses ', 39), (' Distribution expenses ', 38), (' Administrative expenses ', 38), (' Selling & distribution expenses ', 38), (' Administration expenses ', 38), (' depreciation ', 35), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' Depreciation and amortisation expenses ', 29), (' Logistics and distribution ', 28), (' employee benefit espense ', 26), (' Administration ', 24), (' levies', 20), (' Royalties ', 17), (' Occupancy ', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Depreciation expenses ', 36), (' Administrative and other expenses ', 36), (' Amortisation expenses ', 36), (' Selling & distribution expenses ', 35), (' property espense ', 35), (' Distribution expenses ', 34), (' employee benefits expense ', 34), (' employee benefit espense ', 34), (' Lease expenses ', 33), (' Marketing expenses ', 31), (' Logistics and distribution ', 31), (' Royalties ', 31), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Advertising expenses ', 29), (' Sales and marketing ', 29), (' Selling Expenses ', 27), (' Management expenses ', 26), (' depreciation ', 23), (' Administration ', 21), (' Occupancy expenses ', 19), (' Occupancy ', 17), ('expenses ', 16), (' levies', 9)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [(' other expenses ', 53), (' Other expenses ', 53), (' Other expenses ', 53), (' Administrative and other expenses ', 46), (' property espense ', 39), (' Depreciation and amortisation expenses ', 38), (' Occupancy expenses ', 37), (' Marketing expenses ', 36), (' Depreciation expenses ', 35), (' Administration ', 34), (' Lease expenses ', 32), (' Selling Expenses ', 32), (' Management expenses ', 32), (' depreciation ', 30), (' Selling & distribution expenses ', 30), (' Amortisation expenses ', 30), (' Logistics and distribution ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' employee benefits expense ', 29), (' employee benefit espense ', 29), ('expenses ', 25), (' Distribution expenses ', 24), (' Advertising expenses ', 24), (' Sales and marketing ', 24), (' Occupancy ', 19), (' Royalties ', 18), (' levies', 13)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [(' Administrative and other expenses ', 38), (' Logistics and distribution ', 38), (' Depreciation and amortisation expenses ', 35), (' employee benefit espense ', 32), (' Selling & distribution expenses ', 29), (' employee benefits expense ', 29), (' Distribution expenses ', 26), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' Advertising expenses ', 26), (' Amortisation expenses ', 26), (' Sales and marketing ', 26), (' property espense ', 26), (' Depreciation expenses ', 24), (' Administration ', 22), (' other expenses ', 21), (' Marketing expenses ', 21), (' Other expenses ', 21), (' Other expenses ', 21), (' Occupancy expenses ', 18), (' Lease expenses ', 18), (' Selling Expenses ', 18), (' Management expenses ', 18), (' depreciation ', 16), (' Royalties ', 16), ('expenses ', 13), (' levies', 10), (' Occupancy ', 7)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [(' Administrative and other expenses ', 40), (' Selling & distribution expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Sales and marketing ', 28), (' other expenses ', 26), (' Other expenses ', 26), (' Other expenses ', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' property espense ', 25), (' Administration ', 24), (' Occupancy expenses ', 23), (' employee benefits expense ', 23), (' employee benefit espense ', 23), (' Distribution expenses ', 22), (' Depreciation expenses ', 22), (' Advertising expenses ', 22), (' Lease expenses ', 20), (' Selling Expenses ', 20), (' Management expenses ', 20), (' Marketing expenses ', 19), (' Amortisation expenses ', 19), (' depreciation ', 18), (' Royalties ', 18), ('expenses ', 11), (' Occupancy ', 11), (' levies', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [(' Marketing expenses ', 48), (' Management expenses ', 44), (' Administrative and other expenses ', 41), (' Lease expenses ', 41), (' Selling Expenses ', 41), (' Depreciation and amortisation expenses ', 41), (' other expenses ', 40), (' Occupancy expenses ', 40), (' Other expenses ', 40), (' Other expenses ', 40), (' Amortisation expenses ', 38), (' property espense ', 38), (' Administrative expenses ', 37), (' Selling & distribution expenses ', 37), (' Administration expenses ', 37), (' employee benefits expense ', 36), (' Depreciation expenses ', 34), (' Sales and marketing ', 33), (' employee benefit espense ', 33), ('expenses ', 31), (' Logistics and distribution ', 30), (' Distribution expenses ', 29), (' Advertising expenses ', 29), (' depreciation ', 25), (' Administration ', 24), (' Occupancy ', 16), (' Royalties ', 15), (' levies', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' Administrative and other expenses ', 41), (' other expenses ', 36), (' Other expenses ', 36), (' Other expenses ', 36), (' Depreciation and amortisation expenses ', 35), (' employee benefits expense ', 34), (' property espense ', 34), (' employee benefit espense ', 34), (' Selling & distribution expenses ', 31), (' Marketing expenses ', 29), (' Management expenses ', 29), (' Depreciation expenses ', 28), (' Amortisation expenses ', 28), (' Sales and marketing ', 28), (' Distribution expenses ', 27), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Lease expenses ', 26), (' Occupancy expenses ', 25), (' Logistics and distribution ', 25), (' Advertising expenses ', 24), (' Selling Expenses ', 22), (' Administration ', 19), ('expenses ', 16), (' depreciation ', 16), (' Royalties ', 16), (' levies', 9), (' Occupancy ', 8)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' other expenses ', 43), (' Other expenses ', 43), (' Administrative and other expenses ', 43), (' Other expenses ', 43), (' property espense ', 36), (' Lease expenses ', 35), (' Management expenses ', 34), (' Marketing expenses ', 33), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' employee benefit espense ', 32), (' Occupancy expenses ', 30), (' Selling Expenses ', 30), (' Depreciation and amortisation expenses ', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Distribution expenses ', 24), (' Advertising expenses ', 24), (' Administration ', 23), ('expenses ', 20), (' depreciation ', 19), (' Royalties ', 19), (' Occupancy ', 10), (' levies', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6], 'score': 100, 'value': -620611.0, 'line_item_label': ['Administration expenses', 'Other expenses'], 'note_numbers': ['6', '7'], 'line_item_value': [-322031.0, -298580.0]}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['consum ', ' power ', ' machinery ', ' charges ', ' research ', ' analytical ', ' equipment ', ' exchange ', ' loss on ', ' donation ', ' csr ', ' social ', ' miscellaneous ', ' loss allowance ', ' Included in administrative expenses ', ' Depreciation property ', ' plant and equipment ', ' Depreciation right-of-use assets ', ' Administrative expenses ', ' Wages and salaries ', ' Compulsory superannuation contributions ', ' Payroll on-costs (excluding employee benefit provision) ', ' Staff welfare ', ' Contractors, subcontractors and employee related expenses ', ' Facilities Expense ', ' Rental equipment expenses ', ' Depreciation expense right-of-use asset ', ' Depreciation expense ', ' Amortisation expense ', ' Other expenses ', ' Research and development expenses ', ' employee benefits expenses ', ' depreciation and amortisation expenses ', ' Employee expenses ', ' Distribution Expenses ', ' Depreciation and Amortisation Expenses ', ' Other Expenses from Ordinary Activities ', '  ', ' Defined contribution plans ', ' Other employement costs'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['consum ', ' power ', ' machinery ', ' charges ', ' research ', ' analytical ', ' equipment ', ' exchange ', ' loss on ', ' donation ', ' csr ', ' social ', ' miscellaneous ', ' loss allowance ', ' Included in administrative expenses ', ' Depreciation property ', ' plant and equipment ', ' Depreciation right-of-use assets ', ' Administrative expenses ', ' Wages and salaries ', ' Compulsory superannuation contributions ', ' Payroll on-costs (excluding employee benefit provision) ', ' Staff welfare ', ' Contractors, subcontractors and employee related expenses ', ' Facilities Expense ', ' Rental equipment expenses ', ' Depreciation expense right-of-use asset ', ' Depreciation expense ', ' Amortisation expense ', ' Other expenses ', ' Research and development expenses ', ' employee benefits expenses ', ' depreciation and amortisation expenses ', ' Employee expenses ', ' Distribution Expenses ', ' Depreciation and Amortisation Expenses ', ' Other Expenses from Ordinary Activities ', '  ', ' Defined contribution plans ', ' Other employement costs'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses', ' Occupancy', ' Occupancy expenses']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Administration expenses ', 36), (' Occupancy ', 35), (' Occupancy expenses', 33), ('Rent ', 25), (' Rental expenses ', 24)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent ', 60), (' Occupancy expenses', 44), (' Administration expenses ', 36), (' Rental expenses ', 32), (' Occupancy ', 18)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 32), (' Occupancy expenses', 19), ('Rent ', 15), (' Occupancy ', 14)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 24), (' Administration expenses ', 21)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [(' Administration expenses ', 36), (' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 17), (' Occupancy ', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Administration expenses ', 100), (' Occupancy expenses', 43), (' Rental expenses ', 41), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses ', 64), (' Administration expenses ', 43), ('Rent ', 38), (' Occupancy ', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Rental expenses ', 33), (' Administration expenses ', 30), (' Occupancy expenses', 26), (' Occupancy ', 25), ('Rent ', 13)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [(' Administration expenses ', 38), (' Rental expenses ', 29), (' Occupancy expenses', 21), ('Rent ', 20), (' Occupancy ', 15)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Rental expenses ', 48), (' Occupancy expenses', 44), (' Administration expenses ', 36), ('Rent ', 24), (' Occupancy ', 18)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Rental expenses ', 69), (' Occupancy expenses', 57), (' Administration expenses ', 38), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses ', 31), (' Administration expenses ', 29), (' Occupancy expenses', 19), ('Rent ', 17), (' Occupancy ', 17)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [(' Occupancy expenses', 37), (' Rental expenses ', 36), (' Administration expenses ', 29), ('Rent ', 27), (' Occupancy ', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [(' Administration expenses ', 26), (' Rental expenses ', 24), (' Occupancy expenses', 18), ('Rent ', 14), (' Occupancy ', 7)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [(' Rental expenses ', 26), (' Administration expenses ', 25), (' Occupancy expenses', 23), ('Rent ', 11), (' Occupancy ', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [(' Rental expenses ', 48), (' Occupancy expenses', 40), (' Administration expenses ', 37), ('Rent ', 16), (' Occupancy ', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' Rental expenses ', 32), (' Administration expenses ', 27), (' Occupancy expenses', 25), ('Rent ', 17), (' Occupancy ', 8)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Rental expenses ', 42), (' Occupancy expenses', 30), (' Administration expenses ', 27), ('Rent ', 21), (' Occupancy ', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': -320945.0, 'line_item_label': ['Administration expenses'], 'note_numbers': ['6'], 'line_item_value': [-320945.0]}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Administration expenses ', 36), (' Occupancy ', 35), (' Occupancy expenses', 33), ('Rent ', 25), (' Rental expenses ', 24)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent ', 60), (' Occupancy expenses', 44), (' Administration expenses ', 36), (' Rental expenses ', 32), (' Occupancy ', 18)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 32), (' Occupancy expenses', 19), ('Rent ', 15), (' Occupancy ', 14)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 24), (' Administration expenses ', 21)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [(' Administration expenses ', 36), (' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 17), (' Occupancy ', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Administration expenses ', 100), (' Occupancy expenses', 43), (' Rental expenses ', 41), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses ', 64), (' Administration expenses ', 43), ('Rent ', 38), (' Occupancy ', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Rental expenses ', 33), (' Administration expenses ', 30), (' Occupancy expenses', 26), (' Occupancy ', 25), ('Rent ', 13)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [(' Administration expenses ', 38), (' Rental expenses ', 29), (' Occupancy expenses', 21), ('Rent ', 20), (' Occupancy ', 15)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Rental expenses ', 48), (' Occupancy expenses', 44), (' Administration expenses ', 36), ('Rent ', 24), (' Occupancy ', 18)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Rental expenses ', 69), (' Occupancy expenses', 57), (' Administration expenses ', 38), ('Rent ', 30), (' Occupancy ', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses ', 31), (' Administration expenses ', 29), (' Occupancy expenses', 19), ('Rent ', 17), (' Occupancy ', 17)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [(' Occupancy expenses', 37), (' Rental expenses ', 36), (' Administration expenses ', 29), ('Rent ', 27), (' Occupancy ', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [(' Administration expenses ', 26), (' Rental expenses ', 24), (' Occupancy expenses', 18), ('Rent ', 14), (' Occupancy ', 7)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [(' Rental expenses ', 26), (' Administration expenses ', 25), (' Occupancy expenses', 23), ('Rent ', 11), (' Occupancy ', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [(' Rental expenses ', 48), (' Occupancy expenses', 40), (' Administration expenses ', 37), ('Rent ', 16), (' Occupancy ', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' Rental expenses ', 32), (' Administration expenses ', 27), (' Occupancy expenses', 25), ('Rent ', 17), (' Occupancy ', 8)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Rental expenses ', 42), (' Occupancy expenses', 30), (' Administration expenses ', 27), ('Rent ', 21), (' Occupancy ', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': -322031.0, 'line_item_label': ['Administration expenses'], 'note_numbers': ['6'], 'line_item_value': [-322031.0]}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses', ' Occupancy', ' Occupancy expenses'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['other operating', 'Other revenue', ' Other income']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['Other income ', ' Commission revenue ', ' Rent ', ' rental revenue']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Other income', 52), ('other operating', 45), ('Other revenue', 33)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 38), ('other operating', 32)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [(' Other income', 61), ('Other revenue', 33), ('other operating', 27)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('Other revenue', 43), (' Other income', 30), ('other operating', 23)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue', 42)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue', 35), (' Other income', 27), ('other operating', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [('Other revenue', 42), (' Other income', 38), ('other operating', 35)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Other income', 40), ('other operating', 31), ('Other revenue', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Other income', 52), ('other operating', 38), ('Other revenue', 21)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [(' Other income', 59), ('other operating', 50), ('Other revenue', 26)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [('Other revenue', 27), ('other operating', 22), (' Other income', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [(' Other income', 30), ('other operating', 24), ('Other revenue', 23)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [(' Other income', 36), ('other operating', 28), ('Other revenue', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' Other income', 41), ('other operating', 38), ('Other revenue', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('other operating', 44), (' Other income', 43), ('Other revenue', 30)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Other income', 52), ('other operating', 45), ('Other revenue', 33)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 38), ('other operating', 32)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [(' Other income', 61), ('Other revenue', 33), ('other operating', 27)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('Other revenue', 43), (' Other income', 30), ('other operating', 23)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue', 42)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue', 35), (' Other income', 27), ('other operating', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [('Other revenue', 42), (' Other income', 38), ('other operating', 35)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Other income', 40), ('other operating', 31), ('Other revenue', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Other income', 52), ('other operating', 38), ('Other revenue', 21)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [(' Other income', 59), ('other operating', 50), ('Other revenue', 26)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [('Other revenue', 27), ('other operating', 22), (' Other income', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [(' Other income', 30), ('other operating', 24), ('Other revenue', 23)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [(' Other income', 36), ('other operating', 28), ('Other revenue', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' Other income', 41), ('other operating', 38), ('Other revenue', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('other operating', 44), (' Other income', 43), ('Other revenue', 30)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['Interest expense', 'interest expense']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other income', 52), (' Net finance costs', 52), ('Finance income and costs', 42), (' Finance income and finance costs', 35), ('finance income', 33), (' Interest revenue', 30)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), (' Net finance costs', 10), ('Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), ('Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), ('Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [('other income', 61), (' Net finance costs', 52), ('finance income', 50), (' Interest revenue', 37), ('Finance income and costs', 36), (' Finance income and finance costs', 30)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Interest revenue', 52), ('Finance income and costs', 32), (' Finance income and finance costs', 32), ('other income', 30), ('finance income', 29), (' Net finance costs', 26)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Interest revenue', 37), ('finance income', 25), ('Finance income and costs', 24), (' Net finance costs', 22), (' Finance income and finance costs', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs', 85), ('Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), (' Interest revenue', 31), ('other income', 27)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [(' Interest revenue', 47), ('Finance income and costs', 46), (' Finance income and finance costs', 44), (' Net finance costs', 39), ('other income', 38), ('finance income', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other income', 40), ('finance income', 39), ('Finance income and costs', 36), (' Net finance costs', 36), (' Finance income and finance costs', 35), (' Interest revenue', 27)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50), (' Net finance costs', 45), ('Finance income and costs', 43), (' Finance income and finance costs', 36), (' Interest revenue', 32)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), ('Finance income and costs', 25), ('finance income', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [('other income', 59), (' Net finance costs', 44), ('Finance income and costs', 43), (' Finance income and finance costs', 41), ('finance income', 37), (' Interest revenue', 24)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [(' Finance income and finance costs', 39), ('Finance income and costs', 35), (' Net finance costs', 35), (' Interest revenue', 29), ('finance income', 24), ('other income', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [(' Finance income and finance costs', 47), ('Finance income and costs', 43), (' Net finance costs', 41), ('finance income', 36), ('other income', 30), (' Interest revenue', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [(' Net finance costs', 42), ('Finance income and costs', 37), ('other income', 36), ('finance income', 36), (' Finance income and finance costs', 36), (' Interest revenue', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other income', 41), (' Net finance costs', 41), ('Finance income and costs', 34), (' Finance income and finance costs', 34), (' Interest revenue', 31), ('finance income', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Net finance costs', 44), ('other income', 43), ('Finance income and costs', 39), (' Finance income and finance costs', 35), ('finance income', 30), (' Interest revenue', 28)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 85, 'value': -56749.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['8'], 'line_item_value': [-56749.0]}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other income', 52), (' Net finance costs', 52), ('Finance income and costs', 42), (' Finance income and finance costs', 35), ('finance income', 33), (' Interest revenue', 30)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), (' Net finance costs', 10), ('Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), ('Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), ('Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [('other income', 61), (' Net finance costs', 52), ('finance income', 50), (' Interest revenue', 37), ('Finance income and costs', 36), (' Finance income and finance costs', 30)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Interest revenue', 52), ('Finance income and costs', 32), (' Finance income and finance costs', 32), ('other income', 30), ('finance income', 29), (' Net finance costs', 26)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Interest revenue', 37), ('finance income', 25), ('Finance income and costs', 24), (' Net finance costs', 22), (' Finance income and finance costs', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs', 85), ('Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), (' Interest revenue', 31), ('other income', 27)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [(' Interest revenue', 47), ('Finance income and costs', 46), (' Finance income and finance costs', 44), (' Net finance costs', 39), ('other income', 38), ('finance income', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other income', 40), ('finance income', 39), ('Finance income and costs', 36), (' Net finance costs', 36), (' Finance income and finance costs', 35), (' Interest revenue', 27)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50), (' Net finance costs', 45), ('Finance income and costs', 43), (' Finance income and finance costs', 36), (' Interest revenue', 32)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), ('Finance income and costs', 25), ('finance income', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [('other income', 59), (' Net finance costs', 44), ('Finance income and costs', 43), (' Finance income and finance costs', 41), ('finance income', 37), (' Interest revenue', 24)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [(' Finance income and finance costs', 39), ('Finance income and costs', 35), (' Net finance costs', 35), (' Interest revenue', 29), ('finance income', 24), ('other income', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [(' Finance income and finance costs', 47), ('Finance income and costs', 43), (' Net finance costs', 41), ('finance income', 36), ('other income', 30), (' Interest revenue', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [(' Net finance costs', 42), ('Finance income and costs', 37), ('other income', 36), ('finance income', 36), (' Finance income and finance costs', 36), (' Interest revenue', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other income', 41), (' Net finance costs', 41), ('Finance income and costs', 34), (' Finance income and finance costs', 34), (' Interest revenue', 31), ('finance income', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Net finance costs', 44), ('other income', 43), ('Finance income and costs', 39), (' Finance income and finance costs', 35), ('finance income', 30), (' Interest revenue', 28)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 85, 'value': -94980.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['8'], 'line_item_value': [-94980.0]}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['Interest expense', 'interest expense'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['interest income']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' net finance costs ', 52), ('finance cost ', 43), (' interest expense', 37), (' finance expenses ', 24)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses ', 32), (' interest expense', 29), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' finance expenses ', 27), (' interest expense', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost ', 43), (' finance expenses ', 32), (' interest expense', 30)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [(' net finance costs ', 52), (' interest expense', 52), ('finance cost ', 43), (' finance expenses ', 32)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' finance expenses ', 41), (' interest expense', 39), ('finance cost ', 30), (' net finance costs ', 26)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' interest expense', 74), (' finance expenses ', 56), (' net finance costs ', 22), ('finance cost ', 17)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance expenses ', 67), (' interest expense', 31)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [(' net finance costs ', 39), (' interest expense', 35), ('finance cost ', 34), (' finance expenses ', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' interest expense', 50), (' finance expenses ', 48), (' net finance costs ', 36), ('finance cost ', 30)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses ', 69), (' interest expense', 65), (' net finance costs ', 45), ('finance cost ', 37)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost ', 33), (' interest expense', 29), (' finance expenses ', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [(' interest expense', 49), (' net finance costs ', 44), (' finance expenses ', 41), ('finance cost ', 38)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [(' net finance costs ', 35), (' interest expense', 29), ('finance cost ', 25), (' finance expenses ', 24)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [(' net finance costs ', 41), ('finance cost ', 30), (' finance expenses ', 26), (' interest expense', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [(' interest expense', 50), (' finance expenses ', 43), (' net finance costs ', 42), ('finance cost ', 32)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 41), (' interest expense', 38), (' finance expenses ', 32), ('finance cost ', 30)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' net finance costs ', 44), (' interest expense', 40), (' finance expenses ', 38), ('finance cost ', 35)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 100, 'value': -56749.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['8'], 'line_item_value': [-56749.0]}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' net finance costs ', 52), ('finance cost ', 43), (' interest expense', 37), (' finance expenses ', 24)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses ', 32), (' interest expense', 29), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' finance expenses ', 27), (' interest expense', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost ', 43), (' finance expenses ', 32), (' interest expense', 30)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [(' net finance costs ', 52), (' interest expense', 52), ('finance cost ', 43), (' finance expenses ', 32)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' finance expenses ', 41), (' interest expense', 39), ('finance cost ', 30), (' net finance costs ', 26)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' interest expense', 74), (' finance expenses ', 56), (' net finance costs ', 22), ('finance cost ', 17)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance expenses ', 67), (' interest expense', 31)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [(' net finance costs ', 39), (' interest expense', 35), ('finance cost ', 34), (' finance expenses ', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' interest expense', 50), (' finance expenses ', 48), (' net finance costs ', 36), ('finance cost ', 30)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses ', 69), (' interest expense', 65), (' net finance costs ', 45), ('finance cost ', 37)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost ', 33), (' interest expense', 29), (' finance expenses ', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [(' interest expense', 49), (' net finance costs ', 44), (' finance expenses ', 41), ('finance cost ', 38)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [(' net finance costs ', 35), (' interest expense', 29), ('finance cost ', 25), (' finance expenses ', 24)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [(' net finance costs ', 41), ('finance cost ', 30), (' finance expenses ', 26), (' interest expense', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [(' interest expense', 50), (' finance expenses ', 43), (' net finance costs ', 42), ('finance cost ', 32)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 41), (' interest expense', 38), (' finance expenses ', 32), ('finance cost ', 30)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' net finance costs ', 44), (' interest expense', 40), (' finance expenses ', 38), ('finance cost ', 35)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 100, 'value': -94980.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['8'], 'line_item_value': [-94980.0]}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['interest income'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['Accretion expense ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Asset impairment ', ' commission revenue ', ' dividend from other parties ', ' effective portion of changes in fair value of cash flow ', ' foreign exchange gain ', ' government grants ', ' Impairment loss ', ' insurance proceeds ', ' Interest on unwinding of discount in provisions ', ' Investment in joint venture ', ' japan recoveries ', ' Loss on loan refinancing ', ' Loss on sale of disposal of assets ', ' margin charge income ', ' net (loss)/profit on disposal of non-current assets ', ' net foreign exchange (loss)/gain ', ' net foreign exchange gain ', ' net foreign exchange gains/(losses) ', ' net gain / loss on disposal of property plant and equipment ', ' Net loss on disposal of property ', ' net of tax ', ' Net other foreign exchange (losses)/gains ', ' net ppe disposal (loss)/gain ', ' other ', ' other income ', ' other miscellaneous - net (loss)/gain ', ' paid by customers - at amortised cost ', ' plant and equipment ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' profit from discontinued operation ', ' Profit on sale of assets ', ' quota lease income ', ' Remuneration from services linked to newly acquired entities ', ' secondment income (tw recovery) ', ' Share of gain/(loss) of joint venture ', ' share of jv income ', ' Sub-lease rental income ', ' sundry income ', ' other revenue']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Profit from discontinued operation ', 62), (' net finance costs ', 52), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' other gains/losses ', 44), ('finance cost ', 43), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' other income and revenue ', 41), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' finance income and finance cost ', 35), (' interest gains and losses ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Finance income and finance costs ', 35), (' net of tax ', 32), (' net of tax ', 32), (' Impairement (expenses)/reversal ', 31), (' interest revenue ', 30), (' Impairment loss ', 26), (' finance expenses', 24), (' expenses ', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' interest revenue ', 57), (' expenses ', 50), (' other income and revenue ', 43), (' Share of gain/(loss) of joint venture ', 35), (' finance expenses', 32), (' Impairement (expenses)/reversal ', 31), (' Loss on revaluation of inventories', 30), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' net of tax ', 15), (' net of tax ', 15), (' interest gains and losses ', 14), ('finance cost ', 12), (' other income ', 12), (' Other income ', 12), (' Impairment loss ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10), (' other gains/losses ', 10), (' finance income and costs ', 7), (' Finance income and costs ', 7), (' finance income and finance cost ', 6), (' Finance income and finance costs ', 6)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' net of tax ', 38), (' net of tax ', 38), (' other opertaing income ', 37), (' share of profit of equity accounted investees ', 36), (' other gains/losses ', 33), (' interest revenue ', 33), (' Loss on revaluation of inventories', 33), (' finance income and finance cost ', 32), (' other income and revenue ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Finance income and finance costs ', 32), (' Impairment loss ', 30), (' Impairement (expenses)/reversal ', 28), (' Profit from discontinued operation ', 28), (' finance expenses', 27), (' interest gains and losses ', 26), (' expenses ', 13)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' other gains/losses ', 52), (' Profit from discontinued operation ', 46), (' net finance costs ', 44), ('finance cost ', 43), (' other opertaing income ', 40), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' other income ', 35), (' Other income ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Impairment loss ', 35), (' finance expenses', 32), (' finance income and costs ', 30), (' interest revenue ', 30), (' Finance income and costs ', 30), (' interest gains and losses ', 29), (' finance income and finance cost ', 25), (' Impairement (expenses)/reversal ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [(' other income ', 61), (' Other income ', 61), (' other opertaing income ', 53), (' net finance costs ', 52), (' interest gains and losses ', 47), (' other income and revenue ', 47), ('finance cost ', 43), (' Share of gain/(loss) of joint venture ', 40), (' share of profit of equity accounted investees ', 38), (' Impairement (expenses)/reversal ', 38), (' other gains/losses ', 37), (' interest revenue ', 37), (' finance income and costs ', 36), (' Profit from discontinued operation ', 36), (' Finance income and costs ', 36), (' Impairment loss ', 35), (' finance expenses', 32), (' net of tax ', 32), (' net of tax ', 32), (' finance income and finance cost ', 30), (' Finance income and finance costs ', 30), (' Loss on revaluation of inventories', 30), (' expenses ', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' expenses ', 55), (' other income and revenue ', 53), (' interest revenue ', 52), (' interest gains and losses ', 47), (' finance expenses', 41), (' Share of gain/(loss) of joint venture ', 41), (' other gains/losses ', 39), (' Impairement (expenses)/reversal ', 39), (' Impairment loss ', 37), (' Profit from discontinued operation ', 37), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 32), (' finance income and costs ', 32), (' Finance income and finance costs ', 32), (' Finance income and costs ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 31), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' other opertaing income ', 29), (' net finance costs ', 26)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' expenses ', 67), (' other income ', 61), (' Other income ', 61), (' other gains/losses ', 59), (' finance expenses', 56), (' Impairement (expenses)/reversal ', 56), (' other opertaing income ', 53), (' other income and revenue ', 41), (' interest revenue ', 37), (' Share of gain/(loss) of joint venture ', 35), (' share of profit of equity accounted investees ', 34), (' net of tax ', 32), (' net of tax ', 32), (' Loss on revaluation of inventories', 30), (' interest gains and losses ', 29), (' Impairment loss ', 26), (' Profit from discontinued operation ', 26), (' finance income and costs ', 24), (' Finance income and costs ', 24), (' net finance costs ', 22), (' finance income and finance cost ', 20), (' Finance income and finance costs ', 20), ('finance cost ', 17)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance income and costs ', 69), (' Finance income and costs ', 69), (' finance expenses', 67), (' finance income and finance cost ', 56), (' Finance income and finance costs ', 56), (' share of profit of equity accounted investees ', 35), (' net of tax ', 33), (' net of tax ', 33), (' Profit from discontinued operation ', 32), (' interest revenue ', 31), (' other income and revenue ', 30), (' other opertaing income ', 28), (' other income ', 27), (' Other income ', 27), (' Share of gain/(loss) of joint venture ', 26), (' Impairement (expenses)/reversal ', 26), (' Loss on revaluation of inventories', 25), (' interest gains and losses ', 24), (' other gains/losses ', 23), (' Impairment loss ', 18), (' expenses ', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [(' Share of gain/(loss) of joint venture ', 72), (' share of profit of equity accounted investees ', 59), (' other income and revenue ', 55), (' interest gains and losses ', 48), (' interest revenue ', 47), (' finance income and costs ', 46), (' Finance income and costs ', 46), (' finance income and finance cost ', 44), (' Finance income and finance costs ', 44), (' other gains/losses ', 43), (' Impairement (expenses)/reversal ', 43), (' other opertaing income ', 41), (' Profit from discontinued operation ', 41), (' net finance costs ', 39), (' Loss on revaluation of inventories', 39), (' other income ', 38), (' Other income ', 38), ('finance cost ', 34), (' finance expenses', 29), (' net of tax ', 23), (' net of tax ', 23), (' Impairment loss ', 21), (' expenses ', 14)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Impairement (expenses)/reversal ', 49), (' finance expenses', 48), (' other opertaing income ', 47), (' share of profit of equity accounted investees ', 47), (' Profit from discontinued operation ', 46), (' other income and revenue ', 43), (' other income ', 40), (' Other income ', 40), (' net finance costs ', 36), (' finance income and costs ', 36), (' Finance income and costs ', 36), (' finance income and finance cost ', 35), (' Finance income and finance costs ', 35), (' expenses ', 34), (' net of tax ', 33), (' net of tax ', 33), (' Share of gain/(loss) of joint venture ', 32), (' Loss on revaluation of inventories', 32), (' interest gains and losses ', 31), ('finance cost ', 30), (' other gains/losses ', 27), (' interest revenue ', 27), (' Impairment loss ', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' Impairement (expenses)/reversal ', 56), (' expenses ', 55), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' other income and revenue ', 47), (' net finance costs ', 45), (' finance income and costs ', 43), (' net of tax ', 43), (' net of tax ', 43), (' Finance income and costs ', 43), ('finance cost ', 37), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' Profit from discontinued operation ', 33), (' other gains/losses ', 32), (' interest revenue ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 27), (' Impairment loss ', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' other opertaing income ', 54), (' other income ', 47), (' Other income ', 47), (' share of profit of equity accounted investees ', 44), (' Share of gain/(loss) of joint venture ', 43), (' Profit from discontinued operation ', 43), (' other gains/losses ', 41), (' other income and revenue ', 39), (' Impairement (expenses)/reversal ', 36), (' net finance costs ', 35), (' Loss on revaluation of inventories', 35), ('finance cost ', 33), (' net of tax ', 31), (' net of tax ', 31), (' interest revenue ', 29), (' interest gains and losses ', 29), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' finance income and costs ', 25), (' Finance income and costs ', 25), (' Impairment loss ', 20), (' expenses ', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [(' other opertaing income ', 59), (' other income ', 59), (' Other income ', 59), (' other income and revenue ', 54), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' Profit from discontinued operation ', 45), (' net finance costs ', 44), (' finance income and costs ', 43), (' Finance income and costs ', 43), (' finance expenses', 41), (' finance income and finance cost ', 41), (' Finance income and finance costs ', 41), (' share of profit of equity accounted investees ', 39), ('finance cost ', 38), (' interest gains and losses ', 38), (' Share of gain/(loss) of joint venture ', 37), (' Loss on revaluation of inventories', 30), (' Impairment loss ', 27), (' expenses ', 25), (' interest revenue ', 24), (' net of tax ', 18), (' net of tax ', 18)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [(' interest gains and losses ', 42), (' finance income and finance cost ', 39), (' Finance income and finance costs ', 39), (' Share of gain/(loss) of joint venture ', 37), (' share of profit of equity accounted investees ', 36), (' net finance costs ', 35), (' finance income and costs ', 35), (' Finance income and costs ', 35), (' other income and revenue ', 32), (' Profit from discontinued operation ', 32), (' other gains/losses ', 29), (' interest revenue ', 29), (' Loss on revaluation of inventories', 29), (' other opertaing income ', 28), ('finance cost ', 25), (' finance expenses', 24), (' Impairement (expenses)/reversal ', 24), (' other income ', 22), (' Other income ', 22), (' Impairment loss ', 18), (' net of tax ', 16), (' net of tax ', 16), (' expenses ', 13)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [(' finance income and finance cost ', 47), (' Finance income and finance costs ', 47), (' other gains/losses ', 44), (' Share of gain/(loss) of joint venture ', 44), (' finance income and costs ', 43), (' Finance income and costs ', 43), (' Loss on revaluation of inventories', 43), (' net finance costs ', 41), (' other income and revenue ', 39), (' share of profit of equity accounted investees ', 38), (' interest gains and losses ', 37), (' other opertaing income ', 36), (' Profit from discontinued operation ', 32), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' Impairment loss ', 27), (' finance expenses', 26), (' interest revenue ', 25), (' Impairement (expenses)/reversal ', 23), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [(' Impairement (expenses)/reversal ', 49), (' other income and revenue ', 44), (' finance expenses', 43), (' other opertaing income ', 43), (' net finance costs ', 42), (' share of profit of equity accounted investees ', 41), (' Profit from discontinued operation ', 40), (' finance income and costs ', 37), (' Finance income and costs ', 37), (' Loss on revaluation of inventories', 37), (' other income ', 36), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Other income ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' net of tax ', 35), (' net of tax ', 35), ('finance cost ', 32), (' expenses ', 31), (' interest revenue ', 29), (' other gains/losses ', 25), (' Impairment loss ', 23)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' other opertaing income ', 52), (' other income and revenue ', 49), (' net finance costs ', 41), (' other income ', 41), (' share of profit of equity accounted investees ', 41), (' Other income ', 41), (' Profit from discontinued operation ', 40), (' Share of gain/(loss) of joint venture ', 39), (' Impairement (expenses)/reversal ', 38), (' finance income and finance cost ', 34), (' finance income and costs ', 34), (' interest gains and losses ', 34), (' Finance income and finance costs ', 34), (' Finance income and costs ', 34), (' finance expenses', 32), (' other gains/losses ', 31), (' interest revenue ', 31), (' Loss on revaluation of inventories', 31), ('finance cost ', 30), (' net of tax ', 28), (' net of tax ', 28), (' Impairment loss ', 19), (' expenses ', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' other income and revenue ', 46), (' other opertaing income ', 45), (' net finance costs ', 44), (' other income ', 43), (' share of profit of equity accounted investees ', 43), (' Other income ', 43), (' Profit from discontinued operation ', 42), (' Impairement (expenses)/reversal ', 40), (' finance income and costs ', 39), (' Finance income and costs ', 39), (' finance expenses', 38), (' Share of gain/(loss) of joint venture ', 38), (' other gains/losses ', 36), (' Loss on revaluation of inventories', 36), ('finance cost ', 35), (' finance income and finance cost ', 35), (' Finance income and finance costs ', 35), (' interest gains and losses ', 32), (' interest revenue ', 28), (' net of tax ', 24), (' net of tax ', 24), (' Impairment loss ', 22), (' expenses ', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 100, 'value': -56749.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['8'], 'line_item_value': [-56749.0]}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Profit from discontinued operation ', 62), (' net finance costs ', 52), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' other gains/losses ', 44), ('finance cost ', 43), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' other income and revenue ', 41), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' finance income and finance cost ', 35), (' interest gains and losses ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Finance income and finance costs ', 35), (' net of tax ', 32), (' net of tax ', 32), (' Impairement (expenses)/reversal ', 31), (' interest revenue ', 30), (' Impairment loss ', 26), (' finance expenses', 24), (' expenses ', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' interest revenue ', 57), (' expenses ', 50), (' other income and revenue ', 43), (' Share of gain/(loss) of joint venture ', 35), (' finance expenses', 32), (' Impairement (expenses)/reversal ', 31), (' Loss on revaluation of inventories', 30), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' net of tax ', 15), (' net of tax ', 15), (' interest gains and losses ', 14), ('finance cost ', 12), (' other income ', 12), (' Other income ', 12), (' Impairment loss ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10), (' other gains/losses ', 10), (' finance income and costs ', 7), (' Finance income and costs ', 7), (' finance income and finance cost ', 6), (' Finance income and finance costs ', 6)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' net of tax ', 38), (' net of tax ', 38), (' other opertaing income ', 37), (' share of profit of equity accounted investees ', 36), (' other gains/losses ', 33), (' interest revenue ', 33), (' Loss on revaluation of inventories', 33), (' finance income and finance cost ', 32), (' other income and revenue ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Finance income and finance costs ', 32), (' Impairment loss ', 30), (' Impairement (expenses)/reversal ', 28), (' Profit from discontinued operation ', 28), (' finance expenses', 27), (' interest gains and losses ', 26), (' expenses ', 13)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' other gains/losses ', 52), (' Profit from discontinued operation ', 46), (' net finance costs ', 44), ('finance cost ', 43), (' other opertaing income ', 40), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' other income ', 35), (' Other income ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Impairment loss ', 35), (' finance expenses', 32), (' finance income and costs ', 30), (' interest revenue ', 30), (' Finance income and costs ', 30), (' interest gains and losses ', 29), (' finance income and finance cost ', 25), (' Impairement (expenses)/reversal ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [(' other income ', 61), (' Other income ', 61), (' other opertaing income ', 53), (' net finance costs ', 52), (' interest gains and losses ', 47), (' other income and revenue ', 47), ('finance cost ', 43), (' Share of gain/(loss) of joint venture ', 40), (' share of profit of equity accounted investees ', 38), (' Impairement (expenses)/reversal ', 38), (' other gains/losses ', 37), (' interest revenue ', 37), (' finance income and costs ', 36), (' Profit from discontinued operation ', 36), (' Finance income and costs ', 36), (' Impairment loss ', 35), (' finance expenses', 32), (' net of tax ', 32), (' net of tax ', 32), (' finance income and finance cost ', 30), (' Finance income and finance costs ', 30), (' Loss on revaluation of inventories', 30), (' expenses ', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' expenses ', 55), (' other income and revenue ', 53), (' interest revenue ', 52), (' interest gains and losses ', 47), (' finance expenses', 41), (' Share of gain/(loss) of joint venture ', 41), (' other gains/losses ', 39), (' Impairement (expenses)/reversal ', 39), (' Impairment loss ', 37), (' Profit from discontinued operation ', 37), (' net of tax ', 35), (' net of tax ', 35), (' finance income and finance cost ', 32), (' finance income and costs ', 32), (' Finance income and finance costs ', 32), (' Finance income and costs ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 31), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' other opertaing income ', 29), (' net finance costs ', 26)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' expenses ', 67), (' other income ', 61), (' Other income ', 61), (' other gains/losses ', 59), (' finance expenses', 56), (' Impairement (expenses)/reversal ', 56), (' other opertaing income ', 53), (' other income and revenue ', 41), (' interest revenue ', 37), (' Share of gain/(loss) of joint venture ', 35), (' share of profit of equity accounted investees ', 34), (' net of tax ', 32), (' net of tax ', 32), (' Loss on revaluation of inventories', 30), (' interest gains and losses ', 29), (' Impairment loss ', 26), (' Profit from discontinued operation ', 26), (' finance income and costs ', 24), (' Finance income and costs ', 24), (' net finance costs ', 22), (' finance income and finance cost ', 20), (' Finance income and finance costs ', 20), ('finance cost ', 17)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance income and costs ', 69), (' Finance income and costs ', 69), (' finance expenses', 67), (' finance income and finance cost ', 56), (' Finance income and finance costs ', 56), (' share of profit of equity accounted investees ', 35), (' net of tax ', 33), (' net of tax ', 33), (' Profit from discontinued operation ', 32), (' interest revenue ', 31), (' other income and revenue ', 30), (' other opertaing income ', 28), (' other income ', 27), (' Other income ', 27), (' Share of gain/(loss) of joint venture ', 26), (' Impairement (expenses)/reversal ', 26), (' Loss on revaluation of inventories', 25), (' interest gains and losses ', 24), (' other gains/losses ', 23), (' Impairment loss ', 18), (' expenses ', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [(' Share of gain/(loss) of joint venture ', 72), (' share of profit of equity accounted investees ', 59), (' other income and revenue ', 55), (' interest gains and losses ', 48), (' interest revenue ', 47), (' finance income and costs ', 46), (' Finance income and costs ', 46), (' finance income and finance cost ', 44), (' Finance income and finance costs ', 44), (' other gains/losses ', 43), (' Impairement (expenses)/reversal ', 43), (' other opertaing income ', 41), (' Profit from discontinued operation ', 41), (' net finance costs ', 39), (' Loss on revaluation of inventories', 39), (' other income ', 38), (' Other income ', 38), ('finance cost ', 34), (' finance expenses', 29), (' net of tax ', 23), (' net of tax ', 23), (' Impairment loss ', 21), (' expenses ', 14)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' Impairement (expenses)/reversal ', 49), (' finance expenses', 48), (' other opertaing income ', 47), (' share of profit of equity accounted investees ', 47), (' Profit from discontinued operation ', 46), (' other income and revenue ', 43), (' other income ', 40), (' Other income ', 40), (' net finance costs ', 36), (' finance income and costs ', 36), (' Finance income and costs ', 36), (' finance income and finance cost ', 35), (' Finance income and finance costs ', 35), (' expenses ', 34), (' net of tax ', 33), (' net of tax ', 33), (' Share of gain/(loss) of joint venture ', 32), (' Loss on revaluation of inventories', 32), (' interest gains and losses ', 31), ('finance cost ', 30), (' other gains/losses ', 27), (' interest revenue ', 27), (' Impairment loss ', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' Impairement (expenses)/reversal ', 56), (' expenses ', 55), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' other income and revenue ', 47), (' net finance costs ', 45), (' finance income and costs ', 43), (' net of tax ', 43), (' net of tax ', 43), (' Finance income and costs ', 43), ('finance cost ', 37), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' Profit from discontinued operation ', 33), (' other gains/losses ', 32), (' interest revenue ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Loss on revaluation of inventories', 32), (' share of profit of equity accounted investees ', 27), (' Impairment loss ', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' other opertaing income ', 54), (' other income ', 47), (' Other income ', 47), (' share of profit of equity accounted investees ', 44), (' Share of gain/(loss) of joint venture ', 43), (' Profit from discontinued operation ', 43), (' other gains/losses ', 41), (' other income and revenue ', 39), (' Impairement (expenses)/reversal ', 36), (' net finance costs ', 35), (' Loss on revaluation of inventories', 35), ('finance cost ', 33), (' net of tax ', 31), (' net of tax ', 31), (' interest revenue ', 29), (' interest gains and losses ', 29), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' finance income and costs ', 25), (' Finance income and costs ', 25), (' Impairment loss ', 20), (' expenses ', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [(' other opertaing income ', 59), (' other income ', 59), (' Other income ', 59), (' other income and revenue ', 54), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' Profit from discontinued operation ', 45), (' net finance costs ', 44), (' finance income and costs ', 43), (' Finance income and costs ', 43), (' finance expenses', 41), (' finance income and finance cost ', 41), (' Finance income and finance costs ', 41), (' share of profit of equity accounted investees ', 39), ('finance cost ', 38), (' interest gains and losses ', 38), (' Share of gain/(loss) of joint venture ', 37), (' Loss on revaluation of inventories', 30), (' Impairment loss ', 27), (' expenses ', 25), (' interest revenue ', 24), (' net of tax ', 18), (' net of tax ', 18)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [(' interest gains and losses ', 42), (' finance income and finance cost ', 39), (' Finance income and finance costs ', 39), (' Share of gain/(loss) of joint venture ', 37), (' share of profit of equity accounted investees ', 36), (' net finance costs ', 35), (' finance income and costs ', 35), (' Finance income and costs ', 35), (' other income and revenue ', 32), (' Profit from discontinued operation ', 32), (' other gains/losses ', 29), (' interest revenue ', 29), (' Loss on revaluation of inventories', 29), (' other opertaing income ', 28), ('finance cost ', 25), (' finance expenses', 24), (' Impairement (expenses)/reversal ', 24), (' other income ', 22), (' Other income ', 22), (' Impairment loss ', 18), (' net of tax ', 16), (' net of tax ', 16), (' expenses ', 13)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [(' finance income and finance cost ', 47), (' Finance income and finance costs ', 47), (' other gains/losses ', 44), (' Share of gain/(loss) of joint venture ', 44), (' finance income and costs ', 43), (' Finance income and costs ', 43), (' Loss on revaluation of inventories', 43), (' net finance costs ', 41), (' other income and revenue ', 39), (' share of profit of equity accounted investees ', 38), (' interest gains and losses ', 37), (' other opertaing income ', 36), (' Profit from discontinued operation ', 32), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' Impairment loss ', 27), (' finance expenses', 26), (' interest revenue ', 25), (' Impairement (expenses)/reversal ', 23), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [(' Impairement (expenses)/reversal ', 49), (' other income and revenue ', 44), (' finance expenses', 43), (' other opertaing income ', 43), (' net finance costs ', 42), (' share of profit of equity accounted investees ', 41), (' Profit from discontinued operation ', 40), (' finance income and costs ', 37), (' Finance income and costs ', 37), (' Loss on revaluation of inventories', 37), (' other income ', 36), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Other income ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' net of tax ', 35), (' net of tax ', 35), ('finance cost ', 32), (' expenses ', 31), (' interest revenue ', 29), (' other gains/losses ', 25), (' Impairment loss ', 23)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' other opertaing income ', 52), (' other income and revenue ', 49), (' net finance costs ', 41), (' other income ', 41), (' share of profit of equity accounted investees ', 41), (' Other income ', 41), (' Profit from discontinued operation ', 40), (' Share of gain/(loss) of joint venture ', 39), (' Impairement (expenses)/reversal ', 38), (' finance income and finance cost ', 34), (' finance income and costs ', 34), (' interest gains and losses ', 34), (' Finance income and finance costs ', 34), (' Finance income and costs ', 34), (' finance expenses', 32), (' other gains/losses ', 31), (' interest revenue ', 31), (' Loss on revaluation of inventories', 31), ('finance cost ', 30), (' net of tax ', 28), (' net of tax ', 28), (' Impairment loss ', 19), (' expenses ', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' other income and revenue ', 46), (' other opertaing income ', 45), (' net finance costs ', 44), (' other income ', 43), (' share of profit of equity accounted investees ', 43), (' Other income ', 43), (' Profit from discontinued operation ', 42), (' Impairement (expenses)/reversal ', 40), (' finance income and costs ', 39), (' Finance income and costs ', 39), (' finance expenses', 38), (' Share of gain/(loss) of joint venture ', 38), (' other gains/losses ', 36), (' Loss on revaluation of inventories', 36), ('finance cost ', 35), (' finance income and finance cost ', 35), (' Finance income and finance costs ', 35), (' interest gains and losses ', 32), (' interest revenue ', 28), (' net of tax ', 24), (' net of tax ', 24), (' Impairment loss ', 22), (' expenses ', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 100, 'value': -94980.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['8'], 'line_item_value': [-94980.0]}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['Accretion expense ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Asset impairment ', ' commission revenue ', ' dividend from other parties ', ' effective portion of changes in fair value of cash flow ', ' foreign exchange gain ', ' government grants ', ' Impairment loss ', ' insurance proceeds ', ' Interest on unwinding of discount in provisions ', ' Investment in joint venture ', ' japan recoveries ', ' Loss on loan refinancing ', ' Loss on sale of disposal of assets ', ' margin charge income ', ' net (loss)/profit on disposal of non-current assets ', ' net foreign exchange (loss)/gain ', ' net foreign exchange gain ', ' net foreign exchange gains/(losses) ', ' net gain / loss on disposal of property plant and equipment ', ' Net loss on disposal of property ', ' net of tax ', ' Net other foreign exchange (losses)/gains ', ' net ppe disposal (loss)/gain ', ' other ', ' other income ', ' other miscellaneous - net (loss)/gain ', ' paid by customers - at amortised cost ', ' plant and equipment ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' profit from discontinued operation ', ' Profit on sale of assets ', ' quota lease income ', ' Remuneration from services linked to newly acquired entities ', ' secondment income (tw recovery) ', ' Share of gain/(loss) of joint venture ', ' share of jv income ', ' Sub-lease rental income ', ' sundry income ', ' other revenue'] , match_type = partial , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [('NULL', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [('NULL', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [('NULL', 7)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [('NULL', 7)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [('NULL', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [('NULL', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [('NULL', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [('NULL', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [('NULL', 7)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [('NULL', 7)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [('NULL', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [('NULL', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('amount transferred to retained earnings', 41), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax expense', 29), (' income tax', 29), (' income tax benefit/(expense)', 28), ('deferred tax', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [(' income tax', 67), (' income tax expense', 50), (' income tax benefit', 48), (' income tax benefit/(expense)', 39), ('prior year ', 36), (' tax (expense)/benefit', 33), ('provision for taxation previous year', 29), ('minimum alternate tax credit entitlement', 27), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('deferred tax', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' tax (expense)/benefit', 59), (' income tax benefit/(expense)', 50), ('amount transferred to retained earnings', 42), (' income tax expense', 38), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), ('current tax', 30), (' income tax benefit', 30), ('provision for taxation previous year', 27)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), (' income tax', 29), ('minimum alternate tax credit entitlement', 23)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' income tax', 40), ('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax benefit', 36), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [('provision for taxation previous year', 40), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 38), (' tax (expense)/benefit', 33), (' income tax expense', 31), ('prior year ', 30), (' income tax benefit', 30), (' income tax benefit/(expense)', 30), ('earlier year', 29), (' income tax', 27), ('current tax', 26), ('deferred tax', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' income tax benefit/(expense)', 75), (' income tax expense', 71), (' tax (expense)/benefit', 60), ('provision for taxation previous year', 59), (' income tax benefit', 57), (' income tax', 47), ('minimum alternate tax credit entitlement', 46), ('deferred tax', 42), ('current tax', 40), ('amount transferred to retained earnings', 36), ('prior year ', 31), ('earlier year', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' income tax expense', 100), (' income tax benefit/(expense)', 80), (' income tax benefit', 73), (' income tax', 72), (' tax (expense)/benefit', 59), ('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [(' income tax expense', 57), (' income tax benefit/(expense)', 48), ('provision for taxation previous year', 47), (' income tax benefit', 47), (' income tax', 40), ('prior year ', 39), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 38), ('current tax', 32), (' tax (expense)/benefit', 27), ('earlier year', 26), ('deferred tax', 23)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [('minimum alternate tax credit entitlement', 42), (' income tax benefit/(expense)', 41), ('amount transferred to retained earnings', 37), (' income tax benefit', 34), (' tax (expense)/benefit', 33), ('provision for taxation previous year', 29), (' income tax expense', 29), ('current tax', 25), ('earlier year', 24), ('deferred tax', 19), ('prior year ', 19), (' income tax', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [('minimum alternate tax credit entitlement', 37), ('amount transferred to retained earnings', 37), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), ('provision for taxation previous year', 31), (' income tax expense', 28), (' tax (expense)/benefit', 27), ('earlier year', 26), (' income tax', 24), ('deferred tax', 21), ('current tax', 20), ('prior year ', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [(' income tax expense', 65), (' income tax benefit/(expense)', 63), (' income tax benefit', 48), (' tax (expense)/benefit', 47), ('provision for taxation previous year', 45), ('amount transferred to retained earnings', 43), (' income tax', 43), ('minimum alternate tax credit entitlement', 40), ('current tax', 36), ('deferred tax', 33), ('prior year ', 28), ('earlier year', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 50), (' income tax expense', 47), (' income tax benefit', 43), (' income tax benefit/(expense)', 42), ('amount transferred to retained earnings', 40), ('prior year ', 38), ('earlier year', 36), (' tax (expense)/benefit', 36), ('minimum alternate tax credit entitlement', 35), (' income tax', 35), ('current tax', 33), ('deferred tax', 31)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' income tax expense', 51), ('provision for taxation previous year', 47), (' income tax benefit', 46), (' income tax benefit/(expense)', 44), ('prior year ', 40), ('amount transferred to retained earnings', 39), ('earlier year', 38), ('minimum alternate tax credit entitlement', 36), (' income tax', 36), ('current tax', 35), (' tax (expense)/benefit', 34), ('deferred tax', 27)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': -1396426.0, 'line_item_label': ['Income tax expense'], 'note_numbers': ['9 (1,679,786)'], 'line_item_value': [-1396426.0]}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('amount transferred to retained earnings', 41), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax expense', 29), (' income tax', 29), (' income tax benefit/(expense)', 28), ('deferred tax', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [(' income tax', 67), (' income tax expense', 50), (' income tax benefit', 48), (' income tax benefit/(expense)', 39), ('prior year ', 36), (' tax (expense)/benefit', 33), ('provision for taxation previous year', 29), ('minimum alternate tax credit entitlement', 27), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('deferred tax', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' tax (expense)/benefit', 59), (' income tax benefit/(expense)', 50), ('amount transferred to retained earnings', 42), (' income tax expense', 38), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), ('current tax', 30), (' income tax benefit', 30), ('provision for taxation previous year', 27)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), (' income tax', 29), ('minimum alternate tax credit entitlement', 23)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' income tax', 40), ('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax benefit', 36), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [('provision for taxation previous year', 40), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 38), (' tax (expense)/benefit', 33), (' income tax expense', 31), ('prior year ', 30), (' income tax benefit', 30), (' income tax benefit/(expense)', 30), ('earlier year', 29), (' income tax', 27), ('current tax', 26), ('deferred tax', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' income tax benefit/(expense)', 75), (' income tax expense', 71), (' tax (expense)/benefit', 60), ('provision for taxation previous year', 59), (' income tax benefit', 57), (' income tax', 47), ('minimum alternate tax credit entitlement', 46), ('deferred tax', 42), ('current tax', 40), ('amount transferred to retained earnings', 36), ('prior year ', 31), ('earlier year', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' income tax expense', 100), (' income tax benefit/(expense)', 80), (' income tax benefit', 73), (' income tax', 72), (' tax (expense)/benefit', 59), ('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [(' income tax expense', 57), (' income tax benefit/(expense)', 48), ('provision for taxation previous year', 47), (' income tax benefit', 47), (' income tax', 40), ('prior year ', 39), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 38), ('current tax', 32), (' tax (expense)/benefit', 27), ('earlier year', 26), ('deferred tax', 23)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [('minimum alternate tax credit entitlement', 42), (' income tax benefit/(expense)', 41), ('amount transferred to retained earnings', 37), (' income tax benefit', 34), (' tax (expense)/benefit', 33), ('provision for taxation previous year', 29), (' income tax expense', 29), ('current tax', 25), ('earlier year', 24), ('deferred tax', 19), ('prior year ', 19), (' income tax', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [('minimum alternate tax credit entitlement', 37), ('amount transferred to retained earnings', 37), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), ('provision for taxation previous year', 31), (' income tax expense', 28), (' tax (expense)/benefit', 27), ('earlier year', 26), (' income tax', 24), ('deferred tax', 21), ('current tax', 20), ('prior year ', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [(' income tax expense', 65), (' income tax benefit/(expense)', 63), (' income tax benefit', 48), (' tax (expense)/benefit', 47), ('provision for taxation previous year', 45), ('amount transferred to retained earnings', 43), (' income tax', 43), ('minimum alternate tax credit entitlement', 40), ('current tax', 36), ('deferred tax', 33), ('prior year ', 28), ('earlier year', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 50), (' income tax expense', 47), (' income tax benefit', 43), (' income tax benefit/(expense)', 42), ('amount transferred to retained earnings', 40), ('prior year ', 38), ('earlier year', 36), (' tax (expense)/benefit', 36), ('minimum alternate tax credit entitlement', 35), (' income tax', 35), ('current tax', 33), ('deferred tax', 31)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' income tax expense', 51), ('provision for taxation previous year', 47), (' income tax benefit', 46), (' income tax benefit/(expense)', 44), ('prior year ', 40), ('amount transferred to retained earnings', 39), ('earlier year', 38), ('minimum alternate tax credit entitlement', 36), (' income tax', 36), ('current tax', 35), (' tax (expense)/benefit', 34), ('deferred tax', 27)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 0.0, 'line_item_label': ['Income tax expense'], 'note_numbers': ['9 (1,679,786)'], 'line_item_value': [0.0]}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 10:23:03+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 37), (' prior period ', 33), ('exceptional ', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 19), (' prior period ', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional ', 27), (' Actuarial gains / (losses) on retirement benefit obligation', 26), (' prior period ', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 33), ('exceptional ', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [('exceptional ', 33), (' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 27), (' prior period ', 21)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional ', 44), (' prior period ', 42), (' Actuarial gains / (losses) on retirement benefit obligation', 33)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 29), (' prior period ', 26), ('exceptional ', 24)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 41), (' prior period ', 29), ('exceptional ', 14)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 39), ('exceptional ', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional ', 36), (' prior period ', 36), (' Actuarial gains / (losses) on retirement benefit obligation', 30)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 32), ('exceptional ', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 42), ('exceptional ', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 24), ('exceptional ', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 53), (' prior period ', 23), ('exceptional ', 15)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 43), (' prior period ', 31), ('exceptional ', 26)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 35), (' prior period ', 29), ('exceptional ', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 34), ('exceptional ', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 37), (' prior period ', 33), ('exceptional ', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 19), (' prior period ', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional ', 27), (' Actuarial gains / (losses) on retirement benefit obligation', 26), (' prior period ', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 33), ('exceptional ', 22)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [('exceptional ', 33), (' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 27), (' prior period ', 21)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional ', 44), (' prior period ', 42), (' Actuarial gains / (losses) on retirement benefit obligation', 33)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 29), (' prior period ', 26), ('exceptional ', 24)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 41), (' prior period ', 29), ('exceptional ', 14)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 39), ('exceptional ', 29)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional ', 36), (' prior period ', 36), (' Actuarial gains / (losses) on retirement benefit obligation', 30)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 32), ('exceptional ', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 42), ('exceptional ', 19)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 24), ('exceptional ', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 53), (' prior period ', 23), ('exceptional ', 15)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 43), (' prior period ', 31), ('exceptional ', 26)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 35), (' prior period ', 29), ('exceptional ', 16)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 34), ('exceptional ', 20)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 10:23:03+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-24 10:23:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [('NULL', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [('NULL', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [('NULL', 7)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [('NULL', 7)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [('NULL', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [('NULL', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 10:23:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 10:23:03+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = investment income , res_fuzz_match = [('NULL', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = administration expenses , res_fuzz_match = [('NULL', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = share of profits of associates and joint ventures , res_fuzz_match = [('NULL', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income ("oci")* , res_fuzz_match = [('NULL', 7)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net gain on hedging instruments entered into for cash flow hedges , res_fuzz_match = [('NULL', 7)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = net (loss) i gain on financial assets at fair value through oci , res_fuzz_match = [('NULL', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = income tax expense relating to components of oci , res_fuzz_match = [('NULL', 11)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-24 10:23:03+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
